"""
Django settings for customchain project.

Generated by 'django-admin startproject' using Django 4.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import django_heroku
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/



# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-@za&+f-urzmiv#$*x2m&v2=2zo%xgeo2*+nxbj3b81&o=u(&_z'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'lucidapp',
    'rest_framework',
    'corsheaders',
    'django_filters',
    'drf_spectacular',
    'cloudinary',
    'notifications',
    ]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'customchain.urls'

CORS_ALLOW_ALL_ORIGINS = True

CORS_ORIGIN_WHITELIST = [
    'https://localhost:3000',
    'http://localhost:3000',
]

#AUTH_USER_MODEL = 'lucidapp.CompanyAccount' # Verwaltung der Autorisierung Ã¼ber Firmen Accounts

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'customchain.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases


#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
#       'NAME': 'sqlite3.db',                      # Or path to database file if using sqlite3.
#       'USER': '',                      # Not used with sqlite3.
#       'PASSWORD': '',                  # Not used with sqlite3.
#       'HOST': '',                      # Set to empty string for localhost. Not used with sqlite3.
#       'PORT': '',                      # Set to empty string for default. Not used with sqlite3.
#   }
#}

DATABASES = {
    #Schema wird nur lokal verwendet, in der Produktion bei Heroku wird andere Datenbank verwendet
    'default': {

        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        
        #Option zur Auswahl eines Datenbank Schemas 
        'OPTIONS': {
            'options': '-c search_path=django'
        },

        'NAME': 'dbSystem',

        'USER': 'admin',

        'PASSWORD': 'aXWuVIAT',

        'HOST': '141.5.102.173',

        'PORT': '5432',

    }

}

""" DATABASES = {

    'default': {

        'ENGINE': 'django.db.backends.postgresql_psycopg2',

        'NAME': 'stephan',

        'USER': '',

        'PASSWORD': '',

        'HOST': 'localhost',

        'PORT': '5432',

    }

} """

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'de-DE'

TIME_ZONE = 'CET'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'


MEDIA_URL = "/media/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CLOUDINARY_STORAGE = {'CLOUD_NAME': 'liebichmedien','API_KEY': '769795532648351','API_SECRET': 'Q-9oV9XpGlFIB4AYF-NT_GRSiTg',}
# Activate Django-Heroku -> Hiermit wird auch die Heroku Datenbank eingespielt etc

django_heroku.settings(locals())
DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    #Choice which filter to use
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend'
        ],
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema' 

}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),
}