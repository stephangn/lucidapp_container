{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/DocumentsNew.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axiosInstance from \"../axiosApi\";\nimport { MDBContainer, MDBBtn, MDBRow, MDBCol } from \"mdb-react-ui-kit\";\nimport Divider from \"@mui/material/Divider\";\nimport Chip from \"@mui/material/Chip\";\nimport DocumentsModal from \"../components/Documents/DocumentsModal\";\nimport DocumentTransaction from \"../components/Documents/DocumentTransaction\";\nimport DocumentCard from \"../components/Documents/DocumentCard\";\nimport DocumentBreadcrump from \"../components/Documents/DocumentBreadcrumb\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DocumentsNew(props) {\n  _s();\n\n  // Allgemeine Auftragsinformationen\n  const [transactionData, setTransactionData] = useState([]); // Informationen der hochgeladenen Dokumente\n\n  const [documentsData, setDocumentsData] = useState([]); // Anzahl Dokumente\n\n  const [numberInvoiceDocumentes, setNumberInvoiceDocuments] = useState(0);\n  const [numberOtherDocumentes, setNumberOtherDocuments] = useState(0); // State für \"Dokument hinzufügen\" Modal\n\n  const [addDocumentModal, setAddDocumentModal] = useState(false); // Funktion für Manipulation von Modal (als props weitergereicht)\n\n  function toggleAddDocumentModal() {\n    setAddDocumentModal(!addDocumentModal);\n  } // Speichern der Transaktions-ID aus URL\n\n\n  const {\n    transactionId\n  } = useParams();\n  useEffect(() => {\n    axiosInstance.get(`transactions/` + transactionId).then(res => {\n      console.log(res.data);\n      setTransactionData(res.data);\n    });\n    console.log(transactionData);\n    axiosInstance.get(`documents/?transaction=` + transactionId).then(res => {\n      console.log(res.data);\n      setDocumentsData(res.data);\n      console.log(documentsData);\n    }); //leere Array am Ende von UseEffect zum einmaligen Rendern - https://www.digitalocean.com/community/tutorials/how-to-call-web-apis-with-the-useeffect-hook-in-react\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MDBContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Dokumente (neu)\", /*#__PURE__*/_jsxDEV(MDBBtn, {\n        outline: true,\n        className: \"float-end\",\n        color: \"success\",\n        onClick: toggleAddDocumentModal,\n        children: \"Dokument hinzuf\\xFCgen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DocumentsModal, {\n      basicModal: addDocumentModal,\n      setBasicModal: setAddDocumentModal,\n      toggleShow: toggleAddDocumentModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DocumentBreadcrump, {\n      transactionId: transactionId\n    }, transactionId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DocumentTransaction, {\n      description: transactionData.description,\n      dateAdded: transactionData.date_added,\n      dateProcessed: transactionData.date_processed\n      /* \n      MACHT PROBLEME - Genauer untersuchen!\n      name={transactionData.partnership.partner.name}\n      street={transactionData.partnership.partner.street}\n      cityCode={transactionData.partnership.partner.city_code}\n      city={transactionData.partnership.partner.city}\n      countryCode={transactionData.partnership.partner.country_code} */\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      textAlign: \"left\",\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Rechnungsdokumente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n      className: \"row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\",\n      children: documentsData.map(documentData => documentData.type == \"Rechnung\" && /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(MDBCol, {\n          children: /*#__PURE__*/_jsxDEV(DocumentCard, {\n            id: documentData.documentID,\n            author: documentData.author,\n            type: documentData.type,\n            description: documentData.description,\n            documentDate: documentData.issue_date,\n            uploadDate: documentData.uploadDate,\n            file: documentData.file\n          }, documentData.documentID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      textAlign: \"left\",\n      className: \"mt-5 mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Sonstige Dokumente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n      className: \"row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\",\n      children: documentsData.map(documentData => documentData.type !== \"Rechnung\" && /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(MDBCol, {\n          children: /*#__PURE__*/_jsxDEV(DocumentCard, {\n            id: documentData.documentID,\n            author: documentData.author,\n            type: documentData.type,\n            description: documentData.description,\n            documentDate: documentData.issue_date,\n            uploadDate: documentData.uploadDate,\n            file: documentData.file\n          }, documentData.documentID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DocumentsNew, \"THBtAw5jLbNVIMa8TjnHSBJfvCg=\", false, function () {\n  return [useParams];\n});\n\n_c = DocumentsNew;\nexport default DocumentsNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"DocumentsNew\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/DocumentsNew.jsx"],"names":["React","useEffect","useState","useParams","axiosInstance","MDBContainer","MDBBtn","MDBRow","MDBCol","Divider","Chip","DocumentsModal","DocumentTransaction","DocumentCard","DocumentBreadcrump","DocumentsNew","props","transactionData","setTransactionData","documentsData","setDocumentsData","numberInvoiceDocumentes","setNumberInvoiceDocuments","numberOtherDocumentes","setNumberOtherDocuments","addDocumentModal","setAddDocumentModal","toggleAddDocumentModal","transactionId","get","then","res","console","log","data","description","date_added","date_processed","map","documentData","type","documentID","author","issue_date","uploadDate","file"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axiosInstance from \"../axiosApi\";\nimport { MDBContainer, MDBBtn, MDBRow, MDBCol } from \"mdb-react-ui-kit\";\nimport Divider from \"@mui/material/Divider\";\nimport Chip from \"@mui/material/Chip\";\n\nimport DocumentsModal from \"../components/Documents/DocumentsModal\";\nimport DocumentTransaction from \"../components/Documents/DocumentTransaction\";\nimport DocumentCard from \"../components/Documents/DocumentCard\";\nimport DocumentBreadcrump from \"../components/Documents/DocumentBreadcrumb\";\n\nfunction DocumentsNew(props) {\n  // Allgemeine Auftragsinformationen\n  const [transactionData, setTransactionData] = useState([]);\n\n  // Informationen der hochgeladenen Dokumente\n  const [documentsData, setDocumentsData] = useState([]);\n\n  // Anzahl Dokumente\n  const [numberInvoiceDocumentes, setNumberInvoiceDocuments] = useState(0);\n  const [numberOtherDocumentes, setNumberOtherDocuments] = useState(0);\n\n  // State für \"Dokument hinzufügen\" Modal\n  const [addDocumentModal, setAddDocumentModal] = useState(false);\n  // Funktion für Manipulation von Modal (als props weitergereicht)\n  function toggleAddDocumentModal() {\n    setAddDocumentModal(!addDocumentModal);\n  }\n\n  // Speichern der Transaktions-ID aus URL\n  const { transactionId } = useParams();\n\n  useEffect(() => {\n    axiosInstance.get(`transactions/` + transactionId).then((res) => {\n      console.log(res.data);\n      setTransactionData(res.data);\n    });\n    console.log(transactionData);\n    axiosInstance.get(`documents/?transaction=` + transactionId).then((res) => {\n      console.log(res.data);\n      setDocumentsData(res.data);\n      console.log(documentsData);\n    });\n    //leere Array am Ende von UseEffect zum einmaligen Rendern - https://www.digitalocean.com/community/tutorials/how-to-call-web-apis-with-the-useeffect-hook-in-react\n  }, []);\n\n  return (\n    <MDBContainer>\n      <h3>\n        Dokumente (neu)\n        <MDBBtn\n          outline\n          className=\"float-end\"\n          color=\"success\"\n          onClick={toggleAddDocumentModal}\n        >\n          Dokument hinzufügen\n        </MDBBtn>\n      </h3>\n      <DocumentsModal\n        basicModal={addDocumentModal}\n        setBasicModal={setAddDocumentModal}\n        toggleShow={toggleAddDocumentModal}\n      />\n      <DocumentBreadcrump key={transactionId} transactionId={transactionId} />\n      <DocumentTransaction\n        description={transactionData.description}\n        dateAdded={transactionData.date_added}\n        dateProcessed={transactionData.date_processed}\n\n        /* \n        MACHT PROBLEME - Genauer untersuchen!\n        name={transactionData.partnership.partner.name}\n        street={transactionData.partnership.partner.street}\n        cityCode={transactionData.partnership.partner.city_code}\n        city={transactionData.partnership.partner.city}\n        countryCode={transactionData.partnership.partner.country_code} */\n      />\n      <br />\n      <br />\n\n      {/* Auflistung der Rechnungsdokumente */}\n\n      <Divider textAlign=\"left\" className=\"mb-4\">\n        <h5>Rechnungsdokumente</h5>\n      </Divider>\n      <MDBRow className=\"row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\">\n        {documentsData.map(\n          (documentData) =>\n            documentData.type == \"Rechnung\" && (\n              <React.Fragment>\n                <MDBCol>\n                  <DocumentCard\n                    key={documentData.documentID}\n                    id={documentData.documentID}\n                    author={documentData.author}\n                    type={documentData.type}\n                    description={documentData.description}\n                    documentDate={documentData.issue_date}\n                    uploadDate={documentData.uploadDate}\n                    file={documentData.file}\n                  />\n                </MDBCol>\n              </React.Fragment>\n            )\n        )}\n      </MDBRow>\n\n      {/* Auflistung der sontigen Dokumente */}\n\n      <Divider textAlign=\"left\" className=\"mt-5 mb-4\">\n        <h5>Sonstige Dokumente</h5>\n      </Divider>\n      <MDBRow className=\"row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\">\n        {documentsData.map(\n          (documentData) =>\n            documentData.type !== \"Rechnung\" && (\n              <React.Fragment>\n                <MDBCol>\n                  <DocumentCard\n                    key={documentData.documentID}\n                    id={documentData.documentID}\n                    author={documentData.author}\n                    type={documentData.type}\n                    description={documentData.description}\n                    documentDate={documentData.issue_date}\n                    uploadDate={documentData.uploadDate}\n                    file={documentData.file}\n                  />\n                </MDBCol>\n              </React.Fragment>\n            )\n        )}\n      </MDBRow>\n    </MDBContainer>\n  );\n}\n\nexport default DocumentsNew;\n"]},"metadata":{},"sourceType":"module"}