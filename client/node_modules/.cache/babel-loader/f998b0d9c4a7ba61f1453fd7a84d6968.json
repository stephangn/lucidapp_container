{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { MDBContainer, MDBRow, MDBBtn, MDBCol, MDBBadge } from \"mdb-react-ui-kit\";\nimport { TextField } from \"@mui/material\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport Partner from \"../components/Partners/Partner\";\nimport Transaction from \"../components/Transactions/Transaction\";\nimport { Divider } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Search(props) {\n  _s();\n\n  const axiosInstance = useAxiosPrivate();\n  const [query, setQuery] = useState(\"\");\n  const [resultsTransaction, setResultsTransactions] = useState([]);\n  const [resultsPartnerships, setResultsPartnerships] = useState([]);\n  const [documentsData, setDocumentsData] = useState([]);\n  const [declarationData, setDeclarationData] = useState([]);\n  const [activeSearch, setActiveSearch] = useState(false);\n  useEffect(() => {\n    console.log(query);\n  }, [query]); //Bisher Suche nur nach Transaktionen\n\n  function handleSearch(queryset) {\n    axiosInstance.get('transactions/?search=' + queryset).then(res => {\n      console.log(res);\n      setResultsTransactions(res.data);\n    });\n    axiosInstance.get('partnership/?search=' + queryset).then(res => {\n      console.log(res);\n      setResultsPartnerships(res.data);\n    });\n    console.log(\"hier steht eine suche mit dem suchwort\" + queryset); // Dokumente abrufen\n\n    axiosInstance.get(\"documents/\").then(res => {\n      setDocumentsData(res.data);\n    }); // Zollanmeldungen abrufen\n\n    axiosInstance.get(\"declaration/\").then(res => {\n      setDeclarationData(res.data);\n      console.log(res.data);\n    });\n    setActiveSearch(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n      children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Suche\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n        children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"mb-3\",\n            sx: {\n              minWidth: 550,\n              maxWidth: 550\n            },\n            id: \"suchbegriff\",\n            name: \"suchbegriff\",\n            label: \"Suchbegriff\",\n            variant: \"outlined\",\n            onChange: event => setQuery(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n          children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n            onClick: () => handleSearch(query),\n            children: \" Abschicken\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), activeSearch && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Suche nach Auftr\\xE4gen/Partnern, die folgenden Begriff enthalten: \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: query\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 79\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          textAlign: \"left\",\n          className: \"mt-5 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"\\xDCberblick \\xFCber die Ergebnisse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(MDBBadge, {\n          pill: true,\n          className: \"ms-3\",\n          children: resultsPartnerships.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"  Partnerschaften\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(MDBBadge, {\n          pill: true,\n          className: \"ms-3\",\n          children: resultsTransaction.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 48\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"  Auftr\\xE4ge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          textAlign: \"left\",\n          className: \"mt-5 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Ergebnisse f\\xFCr Auftr\\xE4ge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n          children: [resultsTransaction.map(transactionData => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Transaction, {\n              id: transactionData.id,\n              title: transactionData.description,\n              added: transactionData.date_added,\n              exportAddress: transactionData.partnership.partner.name,\n              exportStreet: transactionData.partnership.partner.street,\n              exportCity: transactionData.partnership.partner.city,\n              exportCountry: transactionData.partnership.partner.country_code,\n              importAddress: transactionData.importAddress,\n              importStreet: transactionData.importStreet,\n              importCity: transactionData.importCity,\n              importCountry: transactionData.importCountry,\n              stakeholderCount: transactionData.stakeholderCount,\n              lastChange: transactionData.date_processed,\n              status: transactionData.status,\n              timestamp_added: transactionData.timestamp_added,\n              timestamp_processed: transactionData.timestamp_processed,\n              documentsData: documentsData,\n              declarationData: declarationData\n            }, transactionData.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(Divider, {\n            textAlign: \"left\",\n            className: \"mt-5 mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Ergebnisse f\\xFCr Partnerschaften\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), resultsPartnerships.map(partner => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Partner, {\n              id: partner.partner.eori_nr,\n              id_relation: partner.id,\n              title: partner.partner.name,\n              added: partner.date_added,\n              addressStreet: partner.partner.street,\n              addressCity: partner.partner.city,\n              addressCountry: partner.partner.country_code,\n              email: partner.partner.email,\n              phone: partner.partner.phone,\n              eori: partner.partner.eori_nr\n            }, partner.partner.eori_nr, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this)), \";\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"oWJz9yEx0/H7orqlHpGXdPfkp0E=\", false, function () {\n  return [useAxiosPrivate];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Search.jsx"],"names":["React","useEffect","useState","MDBContainer","MDBRow","MDBBtn","MDBCol","MDBBadge","TextField","useAxiosPrivate","Partner","Transaction","Divider","Search","props","axiosInstance","query","setQuery","resultsTransaction","setResultsTransactions","resultsPartnerships","setResultsPartnerships","documentsData","setDocumentsData","declarationData","setDeclarationData","activeSearch","setActiveSearch","console","log","handleSearch","queryset","get","then","res","data","minWidth","maxWidth","event","target","value","length","map","transactionData","id","description","date_added","partnership","partner","name","street","city","country_code","importAddress","importStreet","importCity","importCountry","stakeholderCount","date_processed","status","timestamp_added","timestamp_processed","eori_nr","email","phone"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { MDBContainer, MDBRow, MDBBtn, MDBCol, MDBBadge} from \"mdb-react-ui-kit\";\nimport { TextField } from \"@mui/material\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport Partner from \"../components/Partners/Partner\";\nimport Transaction from \"../components/Transactions/Transaction\";\nimport { Divider } from \"@mui/material\";\n\nfunction Search(props) {\n\n  const axiosInstance = useAxiosPrivate()\n\n  const [query, setQuery] = useState(\"\")\n\n  const [resultsTransaction, setResultsTransactions] = useState([])\n\n  const [resultsPartnerships, setResultsPartnerships] = useState([])\n  const [documentsData, setDocumentsData] = useState([]);\n  const [declarationData, setDeclarationData] = useState([]);\n   \n  const [activeSearch, setActiveSearch] = useState(false)\n\n  useEffect(()=> {\n    console.log(query)\n  }, [query])\n\n\n  //Bisher Suche nur nach Transaktionen\n  function handleSearch(queryset) {\n    axiosInstance.get('transactions/?search=' + queryset).then((res) => {\n      console.log(res)\n     setResultsTransactions(res.data)\n    })\n    axiosInstance.get('partnership/?search=' + queryset).then((res) => {\n      console.log(res)\n     setResultsPartnerships(res.data)\n    })\n    console.log(\"hier steht eine suche mit dem suchwort\" + queryset)\n      // Dokumente abrufen\n\n    axiosInstance.get(\"documents/\").then((res) => {\n      setDocumentsData(res.data);\n\n    })\n  // Zollanmeldungen abrufen\n\n    axiosInstance.get(\"declaration/\").then((res) => {\n      setDeclarationData(res.data);\n      console.log(res.data);\n    });\n\n    setActiveSearch(true)\n  }\n  \n  return (\n    <div>\n      <MDBContainer>\n      <MDBRow>\n        <h3>Suche</h3>\n      </MDBRow>\n      <MDBRow>\n        <MDBCol>\n        <TextField\n            className=\"mb-3\"\n            sx={{ minWidth: 550, maxWidth: 550 }}\n            id=\"suchbegriff\"\n            name=\"suchbegriff\"\n            label=\"Suchbegriff\"\n            variant=\"outlined\"\n            onChange={(event) => setQuery(event.target.value)}\n          />\n        </MDBCol>\n        <MDBCol>\n          <MDBBtn\n                onClick={() => handleSearch(query)}\n          > Abschicken</MDBBtn>\n        </MDBCol>\n      </MDBRow>\n\n      {activeSearch && (\n      <><MDBRow>\n            <h5>\n              Suche nach Aufträgen/Partnern, die folgenden Begriff enthalten: <i>{query}</i>\n            </h5>\n\n          </MDBRow><Divider textAlign=\"left\" className=\"mt-5 mb-4\">\n              <h5>Überblick über die Ergebnisse</h5>\n            </Divider><MDBBadge pill className=\"ms-3\">\n              {resultsPartnerships.length}\n            </MDBBadge><b>  Partnerschaften</b><MDBBadge pill className=\"ms-3\">\n              {resultsTransaction.length}\n            </MDBBadge><b>  Aufträge</b><Divider textAlign=\"left\" className=\"mt-5 mb-4\">\n              <h5>Ergebnisse für Aufträge</h5>\n            </Divider><MDBRow>\n              {resultsTransaction.map((transactionData) => (\n                <React.Fragment>\n                  <Transaction\n                    key={transactionData.id}\n                    id={transactionData.id}\n                    title={transactionData.description}\n                    added={transactionData.date_added}\n                    exportAddress={transactionData.partnership.partner.name}\n                    exportStreet={transactionData.partnership.partner.street}\n                    exportCity={transactionData.partnership.partner.city}\n                    exportCountry={transactionData.partnership.partner.country_code}\n                    importAddress={transactionData.importAddress}\n                    importStreet={transactionData.importStreet}\n                    importCity={transactionData.importCity}\n                    importCountry={transactionData.importCountry}\n                    stakeholderCount={transactionData.stakeholderCount}\n                    lastChange={transactionData.date_processed}\n                    status={transactionData.status}\n                    timestamp_added={transactionData.timestamp_added}\n                    timestamp_processed={transactionData.timestamp_processed}\n                    documentsData={documentsData}\n                    declarationData={declarationData} />\n                  <br />\n                </React.Fragment>\n              ))}\n\n              <Divider textAlign=\"left\" className=\"mt-5 mb-4\">\n                <h5>Ergebnisse für Partnerschaften</h5>\n              </Divider>\n              {resultsPartnerships.map((partner) => (\n                <React.Fragment>\n                  <Partner\n                    key={partner.partner.eori_nr}\n                    id={partner.partner.eori_nr}\n                    id_relation={partner.id}\n                    title={partner.partner.name}\n                    added={partner.date_added}\n                    addressStreet={partner.partner.street}\n                    addressCity={partner.partner.city}\n                    addressCountry={partner.partner.country_code}\n                    email={partner.partner.email}\n                    phone={partner.partner.phone}\n                    eori={partner.partner.eori_nr} />\n                  <br />\n                </React.Fragment>\n              ))};\n\n            </MDBRow>\n            </>\n      )}</MDBContainer>\n          </div>\n    \n  );\n\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}