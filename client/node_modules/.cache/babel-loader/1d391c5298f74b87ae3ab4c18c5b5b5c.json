{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/DocumentsNew.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport { MDBContainer, MDBBtn, MDBRow, MDBCol, MDBSpinner } from \"mdb-react-ui-kit\";\nimport Divider from \"@mui/material/Divider\";\nimport Chip from \"@mui/material/Chip\";\nimport DocumentsModal from \"../components/Documents/DocumentsModal\";\nimport DocumentTransaction from \"../components/Documents/DocumentTransaction\";\nimport DocumentCard from \"../components/Documents/DocumentCard\";\nimport DocumentBreadcrump from \"../components/Documents/DocumentBreadcrumb\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DocumentsNew(props) {\n  _s();\n\n  // Allgemeine Auftragsinformationen\n  const [transactionData, setTransactionData] = useState([]); // Informationen der hochgeladenen Dokumente\n\n  const [documentsData, setDocumentsData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const axiosInstance = useAxiosPrivate(); // Anzahl Dokumente\n\n  const [numberInvoiceDocumentes, setNumberInvoiceDocuments] = useState(0);\n  const [numberOtherDocumentes, setNumberOtherDocuments] = useState(0); // State für \"Dokument hinzufügen\" Modal\n\n  const [addDocumentModal, setAddDocumentModal] = useState(false); // Funktion für Manipulation von Modal (als props weitergereicht)\n\n  function toggleAddDocumentModal() {\n    setAddDocumentModal(!addDocumentModal);\n  } // Speichern der Transaktions-ID aus URL\n\n\n  const {\n    transactionId\n  } = useParams();\n  useEffect(() => {\n    axiosInstance.get(`transactions/` + transactionId).then(res => {\n      //console.log(res.data);\n      setTransactionData(res.data);\n      setIsLoading(false);\n    });\n    console.log(transactionData);\n    axiosInstance.get(`documents/?transaction=` + transactionId).then(res => {\n      //console.log(res.data);\n      setDocumentsData(res.data); //console.log(documentsData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(MDBSpinner, {\n      grow: true,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"visually-hidden\",\n        children: \"L\\xE4dt..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(MDBContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Dokumente (neu)\", /*#__PURE__*/_jsxDEV(MDBBtn, {\n          outline: true,\n          className: \"float-end\",\n          color: \"success\",\n          onClick: toggleAddDocumentModal,\n          children: \"Dokument hinzuf\\xFCgen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DocumentsModal, {\n        basicModal: addDocumentModal,\n        setBasicModal: setAddDocumentModal,\n        toggleShow: toggleAddDocumentModal,\n        transactionData: transactionData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DocumentBreadcrump, {\n        transactionId: transactionId\n      }, transactionId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DocumentTransaction, {\n        description: transactionData.description,\n        dateAdded: transactionData.date_added,\n        dateProcessed: transactionData.date_processed,\n        status: transactionData.status,\n        street: transactionData.partnership.partner.street,\n        cityCode: transactionData.partnership.partner.city_code,\n        countryCode: transactionData.partnership.partner.country_code,\n        city: transactionData.partnership.partner.city,\n        name: transactionData.partnership.partner.name,\n        id: transactionData.id,\n        blockchain_rid: transactionData.blockchain_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        textAlign: \"left\",\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Rechnungsdokumente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n        className: \"row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\",\n        children: documentsData.map(documentData => documentData.type == \"Rechnung\" && /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(MDBCol, {\n            children: /*#__PURE__*/_jsxDEV(DocumentCard, {\n              id: documentData.id,\n              author_company: documentData.owner.employee.company.name,\n              author: documentData.owner.username,\n              type: documentData.type,\n              description: documentData.description,\n              documentDate: documentData.issue_date,\n              uploadDate: documentData.upload_date,\n              file: documentData.file,\n              confirmed: documentData.confirmed\n            }, documentData.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        textAlign: \"left\",\n        className: \"mt-5 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Sonstige Dokumente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n        className: \"row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\",\n        children: documentsData.map(documentData => documentData.type !== \"Rechnung\" && /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(MDBCol, {\n            children: /*#__PURE__*/_jsxDEV(DocumentCard, {\n              id: documentData.id,\n              author: documentData.author,\n              type: documentData.type,\n              description: documentData.description,\n              documentDate: documentData.issue_date,\n              uploadDate: documentData.upload_date,\n              file: documentData.file,\n              confirmed: documentData.confirmed\n            }, documentData.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_s(DocumentsNew, \"y6vjYoARjaLIiIrmg4q3XYMcARI=\", false, function () {\n  return [useAxiosPrivate, useParams];\n});\n\n_c = DocumentsNew;\nexport default DocumentsNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"DocumentsNew\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/DocumentsNew.jsx"],"names":["React","useEffect","useState","useParams","useAxiosPrivate","MDBContainer","MDBBtn","MDBRow","MDBCol","MDBSpinner","Divider","Chip","DocumentsModal","DocumentTransaction","DocumentCard","DocumentBreadcrump","DocumentsNew","props","transactionData","setTransactionData","documentsData","setDocumentsData","isLoading","setIsLoading","axiosInstance","numberInvoiceDocumentes","setNumberInvoiceDocuments","numberOtherDocumentes","setNumberOtherDocuments","addDocumentModal","setAddDocumentModal","toggleAddDocumentModal","transactionId","get","then","res","data","console","log","description","date_added","date_processed","status","partnership","partner","street","city_code","country_code","city","name","id","blockchain_id","map","documentData","type","owner","employee","company","username","issue_date","upload_date","file","confirmed","author"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,MAAvC,EAA+CC,UAA/C,QAAiE,kBAAjE;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,mBAAP,MAAgC,6CAAhC;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,kBAAP,MAA+B,4CAA/B;;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCjB,QAAQ,CAAC,EAAD,CAAtD,CAF2B,CAI3B;;AACA,QAAM,CAACkB,aAAD,EAAgBC,gBAAhB,IAAoCnB,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAM,CAACoB,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAMsB,aAAa,GAAGpB,eAAe,EAArC,CAT2B,CAW3B;;AACA,QAAM,CAACqB,uBAAD,EAA0BC,yBAA1B,IAAuDxB,QAAQ,CAAC,CAAD,CAArE;AACA,QAAM,CAACyB,qBAAD,EAAwBC,uBAAxB,IAAmD1B,QAAQ,CAAC,CAAD,CAAjE,CAb2B,CAe3B;;AACA,QAAM,CAAC2B,gBAAD,EAAmBC,mBAAnB,IAA0C5B,QAAQ,CAAC,KAAD,CAAxD,CAhB2B,CAiB3B;;AACA,WAAS6B,sBAAT,GAAkC;AAChCD,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACD,GApB0B,CAsB3B;;;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAoB7B,SAAS,EAAnC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,aAAa,CAACS,GAAd,CAAmB,eAAD,GAAkBD,aAApC,EAAmDE,IAAnD,CAAyDC,GAAD,IAAS;AAC/D;AACAhB,MAAAA,kBAAkB,CAACgB,GAAG,CAACC,IAAL,CAAlB;AACAb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAJD;AAKAc,IAAAA,OAAO,CAACC,GAAR,CAAYpB,eAAZ;AACAM,IAAAA,aAAa,CAACS,GAAd,CAAmB,yBAAD,GAA4BD,aAA9C,EAA6DE,IAA7D,CAAmEC,GAAD,IAAS;AACzE;AACAd,MAAAA,gBAAgB,CAACc,GAAG,CAACC,IAAL,CAAhB,CAFyE,CAGzE;AACD,KAJD;AAMD,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACE;AAAA,cACGd,SAAS,gBACJ,QAAC,UAAD;AAAY,MAAA,IAAI,MAAhB;AAAA,6BACF;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,YADI,gBAKN,QAAC,YAAD;AAAA,8BACA;AAAA,mDAEE,QAAC,MAAD;AACE,UAAA,OAAO,MADT;AAEE,UAAA,SAAS,EAAC,WAFZ;AAGE,UAAA,KAAK,EAAC,SAHR;AAIE,UAAA,OAAO,EAAES,sBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAYA,QAAC,cAAD;AACE,QAAA,UAAU,EAAEF,gBADd;AAEE,QAAA,aAAa,EAAEC,mBAFjB;AAGE,QAAA,UAAU,EAAEC,sBAHd;AAIE,QAAA,eAAe,EAAIb;AAJrB;AAAA;AAAA;AAAA;AAAA,cAZA,eAkBA,QAAC,kBAAD;AAAwC,QAAA,aAAa,EAAEc;AAAvD,SAAyBA,aAAzB;AAAA;AAAA;AAAA;AAAA,cAlBA,eAmBA,QAAC,mBAAD;AACE,QAAA,WAAW,EAAEd,eAAe,CAACqB,WAD/B;AAEE,QAAA,SAAS,EAAErB,eAAe,CAACsB,UAF7B;AAGE,QAAA,aAAa,EAAEtB,eAAe,CAACuB,cAHjC;AAIE,QAAA,MAAM,EAAEvB,eAAe,CAACwB,MAJ1B;AAKE,QAAA,MAAM,EAAExB,eAAe,CAACyB,WAAhB,CAA4BC,OAA5B,CAAoCC,MAL9C;AAME,QAAA,QAAQ,EAAE3B,eAAe,CAACyB,WAAhB,CAA4BC,OAA5B,CAAoCE,SANhD;AAOE,QAAA,WAAW,EAAE5B,eAAe,CAACyB,WAAhB,CAA4BC,OAA5B,CAAoCG,YAPnD;AAQE,QAAA,IAAI,EAAE7B,eAAe,CAACyB,WAAhB,CAA4BC,OAA5B,CAAoCI,IAR5C;AASE,QAAA,IAAI,EAAE9B,eAAe,CAACyB,WAAhB,CAA4BC,OAA5B,CAAoCK,IAT5C;AAUE,QAAA,EAAE,EAAG/B,eAAe,CAACgC,EAVvB;AAWE,QAAA,cAAc,EAAIhC,eAAe,CAACiC;AAXpC;AAAA;AAAA;AAAA;AAAA,cAnBA,eAoCA;AAAA;AAAA;AAAA;AAAA,cApCA,eAqCA;AAAA;AAAA;AAAA;AAAA,cArCA,eAyCA,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,MAAnB;AAA0B,QAAA,SAAS,EAAC,MAApC;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAzCA,eA4CA,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,4CAAlB;AAAA,kBACG/B,aAAa,CAACgC,GAAd,CACEC,YAAD,IACEA,YAAY,CAACC,IAAb,IAAqB,UAArB,iBACE,QAAC,KAAD,CAAO,QAAP;AAAA,iCACE,QAAC,MAAD;AAAA,mCACE,QAAC,YAAD;AAEE,cAAA,EAAE,EAAED,YAAY,CAACH,EAFnB;AAGE,cAAA,cAAc,EAAEG,YAAY,CAACE,KAAb,CAAmBC,QAAnB,CAA4BC,OAA5B,CAAoCR,IAHtD;AAIE,cAAA,MAAM,EAAEI,YAAY,CAACE,KAAb,CAAmBG,QAJ7B;AAKE,cAAA,IAAI,EAAEL,YAAY,CAACC,IALrB;AAME,cAAA,WAAW,EAAED,YAAY,CAACd,WAN5B;AAOE,cAAA,YAAY,EAAEc,YAAY,CAACM,UAP7B;AAQE,cAAA,UAAU,EAAEN,YAAY,CAACO,WAR3B;AASE,cAAA,IAAI,EAAEP,YAAY,CAACQ,IATrB;AAUE,cAAA,SAAS,EAAER,YAAY,CAACS;AAV1B,eACOT,YAAY,CAACH,EADpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHL;AADH;AAAA;AAAA;AAAA;AAAA,cA5CA,eAsEA,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,MAAnB;AAA0B,QAAA,SAAS,EAAC,WAApC;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAtEA,eAyEA,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,4CAAlB;AAAA,kBACG9B,aAAa,CAACgC,GAAd,CACEC,YAAD,IACEA,YAAY,CAACC,IAAb,KAAsB,UAAtB,iBACE,QAAC,KAAD,CAAO,QAAP;AAAA,iCACE,QAAC,MAAD;AAAA,mCACE,QAAC,YAAD;AAEE,cAAA,EAAE,EAAED,YAAY,CAACH,EAFnB;AAGE,cAAA,MAAM,EAAEG,YAAY,CAACU,MAHvB;AAIE,cAAA,IAAI,EAAEV,YAAY,CAACC,IAJrB;AAKE,cAAA,WAAW,EAAED,YAAY,CAACd,WAL5B;AAME,cAAA,YAAY,EAAEc,YAAY,CAACM,UAN7B;AAOE,cAAA,UAAU,EAAEN,YAAY,CAACO,WAP3B;AAQE,cAAA,IAAI,EAAEP,YAAY,CAACQ,IARrB;AASE,cAAA,SAAS,EAAER,YAAY,CAACS;AAT1B,eACOT,YAAY,CAACH,EADpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHL;AADH;AAAA;AAAA;AAAA;AAAA,cAzEA;AAAA;AAAA;AAAA;AAAA;AAAA;AANN,mBADF;AAiHD;;GAzJQlC,Y;UASeZ,e,EAcID,S;;;KAvBnBa,Y;AA2JT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport { MDBContainer, MDBBtn, MDBRow, MDBCol, MDBSpinner } from \"mdb-react-ui-kit\";\nimport Divider from \"@mui/material/Divider\";\nimport Chip from \"@mui/material/Chip\";\n\nimport DocumentsModal from \"../components/Documents/DocumentsModal\";\nimport DocumentTransaction from \"../components/Documents/DocumentTransaction\";\nimport DocumentCard from \"../components/Documents/DocumentCard\";\nimport DocumentBreadcrump from \"../components/Documents/DocumentBreadcrumb\";\n\nfunction DocumentsNew(props) {\n  // Allgemeine Auftragsinformationen\n  const [transactionData, setTransactionData] = useState([]);\n\n  // Informationen der hochgeladenen Dokumente\n  const [documentsData, setDocumentsData] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const axiosInstance = useAxiosPrivate();\n\n  // Anzahl Dokumente\n  const [numberInvoiceDocumentes, setNumberInvoiceDocuments] = useState(0);\n  const [numberOtherDocumentes, setNumberOtherDocuments] = useState(0);\n\n  // State für \"Dokument hinzufügen\" Modal\n  const [addDocumentModal, setAddDocumentModal] = useState(false);\n  // Funktion für Manipulation von Modal (als props weitergereicht)\n  function toggleAddDocumentModal() {\n    setAddDocumentModal(!addDocumentModal);\n  }\n\n  // Speichern der Transaktions-ID aus URL\n  const { transactionId } = useParams();\n\n  useEffect(() => {\n    axiosInstance.get(`transactions/` + transactionId).then((res) => {\n      //console.log(res.data);\n      setTransactionData(res.data);\n      setIsLoading(false)\n    });\n    console.log(transactionData);\n    axiosInstance.get(`documents/?transaction=` + transactionId).then((res) => {\n      //console.log(res.data);\n      setDocumentsData(res.data);\n      //console.log(documentsData);\n    });\n    \n  }, []);\n\n  return (\n    <>\n      {isLoading\n          ? <MDBSpinner grow>\n          <span className='visually-hidden'>Lädt..</span>\n           </MDBSpinner>\n          :     \n          <MDBContainer>\n          <h3>\n            Dokumente (neu)\n            <MDBBtn\n              outline\n              className=\"float-end\"\n              color=\"success\"\n              onClick={toggleAddDocumentModal}\n            >\n              Dokument hinzufügen\n            </MDBBtn>\n          </h3>\n          <DocumentsModal\n            basicModal={addDocumentModal}\n            setBasicModal={setAddDocumentModal}\n            toggleShow={toggleAddDocumentModal}\n            transactionData = {transactionData}\n          />\n          <DocumentBreadcrump key={transactionId} transactionId={transactionId} />\n          <DocumentTransaction\n            description={transactionData.description}\n            dateAdded={transactionData.date_added}\n            dateProcessed={transactionData.date_processed}\n            status={transactionData.status}\n            street={transactionData.partnership.partner.street}\n            cityCode={transactionData.partnership.partner.city_code}\n            countryCode={transactionData.partnership.partner.country_code}\n            city={transactionData.partnership.partner.city}\n            name={transactionData.partnership.partner.name}\n            id= {transactionData.id}\n            blockchain_rid = {transactionData.blockchain_id}\n    \n    \n    \n    \n          />\n          <br />\n          <br />\n    \n          {/* Auflistung der Rechnungsdokumente */}\n    \n          <Divider textAlign=\"left\" className=\"mb-4\">\n            <h5>Rechnungsdokumente</h5>\n          </Divider>\n          <MDBRow className=\"row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\">\n            {documentsData.map(\n              (documentData) =>\n                documentData.type == \"Rechnung\" && (\n                  <React.Fragment>\n                    <MDBCol>\n                      <DocumentCard\n                        key={documentData.id}\n                        id={documentData.id}\n                        author_company={documentData.owner.employee.company.name}\n                        author={documentData.owner.username}\n                        type={documentData.type}\n                        description={documentData.description}\n                        documentDate={documentData.issue_date}\n                        uploadDate={documentData.upload_date}\n                        file={documentData.file}\n                        confirmed={documentData.confirmed}\n                      />\n                    </MDBCol>\n                  </React.Fragment>\n                )\n            )}\n          </MDBRow>\n    \n          {/* Auflistung der sontigen Dokumente */}\n    \n          <Divider textAlign=\"left\" className=\"mt-5 mb-4\">\n            <h5>Sonstige Dokumente</h5>\n          </Divider>\n          <MDBRow className=\"row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\">\n            {documentsData.map(\n              (documentData) =>\n                documentData.type !== \"Rechnung\" && (\n                  <React.Fragment>\n                    <MDBCol>\n                      <DocumentCard\n                        key={documentData.id}\n                        id={documentData.id}\n                        author={documentData.author}\n                        type={documentData.type}\n                        description={documentData.description}\n                        documentDate={documentData.issue_date}\n                        uploadDate={documentData.upload_date}\n                        file={documentData.file}\n                        confirmed={documentData.confirmed}\n\n                      />\n                    </MDBCol>\n                  </React.Fragment>\n                )\n            )}\n          </MDBRow>\n        </MDBContainer>\n      \n      \n      \n      }\n    \n    \n    </>\n\n  );\n}\n\nexport default DocumentsNew;\n"]},"metadata":{},"sourceType":"module"}