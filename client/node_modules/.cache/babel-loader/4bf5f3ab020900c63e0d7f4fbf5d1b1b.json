{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Documents/InvoiceForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBBadge } from \"mdb-react-ui-kit\";\nimport { init, createRechnung } from \"../../Web3Client\";\nimport { useParams } from \"react-router-dom\";\nimport axiosInstance from \"../../axiosApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar crypto = require('crypto');\n\nfunction InvoiceForm() {\n  _s();\n\n  const [invoiceFields, setInvoiceFields] = useState({\n    invoiceDate: \"\",\n    invoiceCurrency: \"\",\n    invoiceDescription: \"\"\n  });\n  const [invoiceItemFields, setInvoiceItemFields] = useState([{\n    invoiceItemName: \"\",\n    invoiceItemQuantity: \"\",\n    invoiceItemUnit: \"\",\n    invoiceItemValue: \"\"\n  }]);\n\n  function handleInvoiceChange(event) {\n    const currentInvoiceFields = {\n      invoiceDate: invoiceFields.invoiceDate,\n      invoiceCurrency: invoiceFields.invoiceCurrency,\n      invoiceDescription: invoiceFields.invoiceDescription\n    };\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    currentInvoiceFields[name] = value;\n    setInvoiceFields(currentInvoiceFields);\n  }\n\n  function handleItemChange(index, event) {\n    const values = [...invoiceItemFields];\n    values[index][event.target.name] = event.target.value;\n    setInvoiceItemFields(values);\n  }\n\n  const {\n    transactionId\n  } = useParams();\n\n  function handleSubmit(e) {\n    e.preventDefault(); //console.log(\"invoiceFields\", invoiceFields);\n    //console.log(\"invoiceItemFields\", invoiceItemFields);\n\n    console.log(JSON.stringify(invoiceFields));\n    console.log(JSON.stringify(invoiceItemFields)); //Blockchain Transaktion\n\n    createRechnung(\"2 Mark 50!\", \"0x8d242e4bc081e2eeD5eb9d6BF734DdF5d2F435e0\", invoiceFields.invoiceCurrency, invoiceFields.invoiceDate, crypto.createHash('sha256').update(JSON.stringify(invoiceItemFields)).digest('hex')).then(tx => {\n      console.log(\"Transaktion erfolgreich: \" + tx + \"  \" + crypto.createHash('sha256').update(JSON.stringify(invoiceItemFields)).digest('hex'));\n    }).catch(err => {\n      console.log(\"Transaktion fehlgeschlagen: \" + \"  \" + err + crypto.createHash('sha256').update(JSON.stringify(invoiceItemFields)).digest('hex'));\n    }); //Id of transaction to add to right transaction \n\n    const invoice = {\n      type: \"Rechnung\",\n      description: invoiceFields.invoiceDescription,\n      blockchainID: \"232323\",\n      issue_date: invoiceFields.invoiceDate,\n      invoice_text: invoiceFields.invoiceDescription,\n      currency: invoiceFields.invoiceCurrency,\n      transaction: transactionId,\n      owner: 2\n    };\n    console.log(invoice); //Ãœbermittel und anlegen der Rechnung\n\n    axiosInstance.post('/invoice/', {\n      invoice,\n      invoiceItemField\n    }).then(res => {\n      console.log(res.data);\n    }).catch(error => {\n      console.error('There was an error!', error);\n    });\n  }\n\n  function handleAddFields() {\n    setInvoiceItemFields([...invoiceItemFields, {\n      invoiceItemName: \"\",\n      invoiceItemQuantity: \"\",\n      invoiceItemUnit: \"\",\n      invoiceItemValue: \"\"\n    }]);\n  }\n\n  function handleRemoveFields(index) {\n    const values = [...invoiceItemFields]; // values.splice(index, 1);\n\n    values.splice(values.findIndex(value => value.index === index), 1);\n    setInvoiceItemFields(values);\n  }\n\n  return /*#__PURE__*/_jsxDEV(MDBContainer, {\n    children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n      children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n        children: /*#__PURE__*/_jsxDEV(MDBInput, {\n          className: \"mb-4\",\n          name: \"invoiceDate\",\n          id: \"invoiceDate\",\n          label: \"Rechnungsdatum\",\n          type: \"date\",\n          onChange: event => handleInvoiceChange(event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n        children: /*#__PURE__*/_jsxDEV(MDBInput, {\n          className: \"mb-4\",\n          name: \"invoiceCurrency\",\n          id: \"invoiceCurrency\",\n          label: \"W\\xE4hrung\",\n          type: \"text\",\n          onChange: event => handleInvoiceChange(event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n      wrapperClass: \"mb-4\",\n      textarea: true,\n      name: \"invoiceDescription\",\n      id: \"invoiceDescription\",\n      rows: 3,\n      label: \"Beschreibung (optional)\",\n      onChange: event => handleInvoiceChange(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [invoiceItemFields.map((inputField, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"Rechnungsposten \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n          className: \"mb-4\",\n          name: \"invoiceItemName\",\n          label: \"Produktname\",\n          type: \"text\",\n          value: inputField.invoiceItemName,\n          onChange: event => handleItemChange(index, event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n          children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n            children: /*#__PURE__*/_jsxDEV(MDBInput, {\n              className: \"mb-4\",\n              name: \"invoiceItemQuantity\",\n              label: \"Anzahl\",\n              type: \"number\",\n              value: inputField.invoiceItemQuantity,\n              onChange: event => handleItemChange(index, event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n            children: /*#__PURE__*/_jsxDEV(MDBInput, {\n              className: \"mb-4\",\n              name: \"invoiceItemUnit\",\n              label: \"Einheit\",\n              type: \"text\",\n              value: inputField.invoiceItemUnit,\n              onChange: event => handleItemChange(index, event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n            children: /*#__PURE__*/_jsxDEV(MDBInput, {\n              className: \"mb-4\",\n              name: \"invoiceItemValue\",\n              label: \"Preis pro Enheit\",\n              type: \"number\",\n              value: inputField.invoiceItemValue,\n              onChange: event => handleItemChange(index, event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n            children: /*#__PURE__*/_jsxDEV(MDBBadge, {\n              className: \"mt-2 me-4 float-end\",\n              color: \"primary\",\n              children: [\"Betrag :\", \" \", inputField.invoiceItemQuantity * inputField.invoiceItemValue, \" \", invoiceFields.invoiceCurrency]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n        className: \"me-3 mb-3\",\n        color: \"success\",\n        onClick: handleAddFields,\n        children: \"Rechnungsposten hinzuf\\xFCgen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), invoiceItemFields.length > 1 && /*#__PURE__*/_jsxDEV(MDBBtn, {\n        className: \"me-3 mb-3\",\n        color: \"danger\",\n        onClick: handleRemoveFields,\n        children: \"Rechnungsposten entfernen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n        className: \"float-end\",\n        color: \"primary\",\n        onClick: handleSubmit,\n        children: \"Abschicken\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InvoiceForm, \"pgL5bIvTr7oYcAt4c6FK4Yzdd44=\", false, function () {\n  return [useParams];\n});\n\n_c = InvoiceForm;\nexport default InvoiceForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoiceForm\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Documents/InvoiceForm.jsx"],"names":["React","useState","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","MDBBadge","init","createRechnung","useParams","axiosInstance","crypto","require","InvoiceForm","invoiceFields","setInvoiceFields","invoiceDate","invoiceCurrency","invoiceDescription","invoiceItemFields","setInvoiceItemFields","invoiceItemName","invoiceItemQuantity","invoiceItemUnit","invoiceItemValue","handleInvoiceChange","event","currentInvoiceFields","target","value","name","handleItemChange","index","values","transactionId","handleSubmit","e","preventDefault","console","log","JSON","stringify","createHash","update","digest","then","tx","catch","err","invoice","type","description","blockchainID","issue_date","invoice_text","currency","transaction","owner","post","invoiceItemField","res","data","error","handleAddFields","handleRemoveFields","splice","findIndex","map","inputField","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBBadge,\n} from \"mdb-react-ui-kit\";\nimport { init, createRechnung } from \"../../Web3Client\";\nimport { useParams } from \"react-router-dom\";\n\n\nimport axiosInstance from \"../../axiosApi\";\n\nvar crypto = require ('crypto');\n\nfunction InvoiceForm() {\n  const [invoiceFields, setInvoiceFields] = useState({\n    invoiceDate: \"\",\n    invoiceCurrency: \"\",\n    invoiceDescription: \"\",\n  });\n\n  const [invoiceItemFields, setInvoiceItemFields] = useState([\n    {\n      invoiceItemName: \"\",\n      invoiceItemQuantity: \"\",\n      invoiceItemUnit: \"\",\n      invoiceItemValue: \"\",\n    },\n  ]);\n\n  function handleInvoiceChange(event) {\n    const currentInvoiceFields = {\n      invoiceDate: invoiceFields.invoiceDate,\n      invoiceCurrency: invoiceFields.invoiceCurrency,\n      invoiceDescription: invoiceFields.invoiceDescription,\n    };\n\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    currentInvoiceFields[name] = value;\n\n    setInvoiceFields(currentInvoiceFields);\n  }\n\n  function handleItemChange(index, event) {\n    const values = [...invoiceItemFields];\n    values[index][event.target.name] = event.target.value;\n    setInvoiceItemFields(values);\n  }\n  const { transactionId } = useParams();\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n\n    //console.log(\"invoiceFields\", invoiceFields);\n    //console.log(\"invoiceItemFields\", invoiceItemFields);\n    console.log(JSON.stringify(invoiceFields));\n    console.log(JSON.stringify(invoiceItemFields));\n    //Blockchain Transaktion\n    createRechnung(\"2 Mark 50!\", \"0x8d242e4bc081e2eeD5eb9d6BF734DdF5d2F435e0\", invoiceFields.invoiceCurrency, invoiceFields.invoiceDate, crypto.createHash('sha256').update(JSON.stringify(invoiceItemFields)).digest('hex'))\n      .then((tx) => {\n        console.log(\"Transaktion erfolgreich: \" + tx + \"  \" + crypto.createHash('sha256').update(JSON.stringify(invoiceItemFields)).digest('hex'));\n      })\n      .catch((err) => {\n        console.log(\"Transaktion fehlgeschlagen: \"+ \"  \" + err +crypto.createHash('sha256').update(JSON.stringify(invoiceItemFields)).digest('hex'));\n      });\n    //Id of transaction to add to right transaction \n\n    const invoice = {\n      type:\"Rechnung\",\n      description:invoiceFields.invoiceDescription,\n      blockchainID:\"232323\",\n      issue_date:invoiceFields.invoiceDate,\n      invoice_text:invoiceFields.invoiceDescription,\n      currency:invoiceFields.invoiceCurrency,\n      transaction:transactionId,\n      owner:2      \n    }\n    console.log(invoice)\n    //Ãœbermittel und anlegen der Rechnung\n    axiosInstance\n      .post('/invoice/', {\n        invoice,\n        invoiceItemField, \n      })\n      .then((res) => {\n        console.log(res.data)\n      })\n      .catch(error => {\n          console.error('There was an error!', error);\n      });\n  }\n\n  function handleAddFields() {\n    setInvoiceItemFields([\n      ...invoiceItemFields,\n      {\n        invoiceItemName: \"\",\n        invoiceItemQuantity: \"\",\n        invoiceItemUnit: \"\",\n        invoiceItemValue: \"\",\n      },\n    ]);\n  }\n\n  function handleRemoveFields(index) {\n    const values = [...invoiceItemFields];\n    // values.splice(index, 1);\n    values.splice(\n      values.findIndex((value) => value.index === index),\n      1\n    );\n    setInvoiceItemFields(values);\n  }\n\n  return (\n    <MDBContainer>\n      <MDBRow>\n        <MDBCol>\n          <MDBInput\n            className=\"mb-4\"\n            name=\"invoiceDate\"\n            id=\"invoiceDate\"\n            label=\"Rechnungsdatum\"\n            type=\"date\"\n            onChange={(event) => handleInvoiceChange(event)}\n          />\n        </MDBCol>\n        <MDBCol>\n          <MDBInput\n            className=\"mb-4\"\n            name=\"invoiceCurrency\"\n            id=\"invoiceCurrency\"\n            label=\"WÃ¤hrung\"\n            type=\"text\"\n            onChange={(event) => handleInvoiceChange(event)}\n          />\n        </MDBCol>\n      </MDBRow>\n      <MDBInput\n        wrapperClass=\"mb-4\"\n        textarea\n        name=\"invoiceDescription\"\n        id=\"invoiceDescription\"\n        rows={3}\n        label=\"Beschreibung (optional)\"\n        onChange={(event) => handleInvoiceChange(event)}\n      />\n      <hr />\n\n      <form onSubmit={handleSubmit}>\n        {invoiceItemFields.map((inputField, index) => (\n          <div key={index}>\n            <h6>Rechnungsposten {index + 1}</h6>\n            <MDBInput\n              className=\"mb-4\"\n              name=\"invoiceItemName\"\n              label=\"Produktname\"\n              type=\"text\"\n              value={inputField.invoiceItemName}\n              onChange={(event) => handleItemChange(index, event)}\n            />\n            <MDBRow>\n              <MDBCol>\n                <MDBInput\n                  className=\"mb-4\"\n                  name=\"invoiceItemQuantity\"\n                  label=\"Anzahl\"\n                  type=\"number\"\n                  value={inputField.invoiceItemQuantity}\n                  onChange={(event) => handleItemChange(index, event)}\n                />\n              </MDBCol>\n              <MDBCol>\n                <MDBInput\n                  className=\"mb-4\"\n                  name=\"invoiceItemUnit\"\n                  label=\"Einheit\"\n                  type=\"text\"\n                  value={inputField.invoiceItemUnit}\n                  onChange={(event) => handleItemChange(index, event)}\n                />\n              </MDBCol>\n              <MDBCol>\n                <MDBInput\n                  className=\"mb-4\"\n                  name=\"invoiceItemValue\"\n                  label=\"Preis pro Enheit\"\n                  type=\"number\"\n                  value={inputField.invoiceItemValue}\n                  onChange={(event) => handleItemChange(index, event)}\n                />\n              </MDBCol>\n              <MDBCol>\n                <MDBBadge className=\"mt-2 me-4 float-end\" color=\"primary\">\n                  Betrag :{\" \"}\n                  {inputField.invoiceItemQuantity * inputField.invoiceItemValue}{\" \"}\n                  {invoiceFields.invoiceCurrency}\n                </MDBBadge>\n              </MDBCol>\n            </MDBRow>\n          </div>\n        ))}\n        <br />\n\n        <MDBBtn className=\"me-3 mb-3\" color=\"success\" onClick={handleAddFields}>\n          Rechnungsposten hinzufÃ¼gen\n        </MDBBtn>\n        {invoiceItemFields.length > 1 && (\n          <MDBBtn\n            className=\"me-3 mb-3\"\n            color=\"danger\"\n            onClick={handleRemoveFields}\n          >\n            Rechnungsposten entfernen\n          </MDBBtn>\n        )}\n\n        <MDBBtn className=\"float-end\" color=\"primary\" onClick={handleSubmit}>\n          Abschicken\n        </MDBBtn>\n      </form>\n    </MDBContainer>\n  );\n}\n\nexport default InvoiceForm;\n"]},"metadata":{},"sourceType":"module"}