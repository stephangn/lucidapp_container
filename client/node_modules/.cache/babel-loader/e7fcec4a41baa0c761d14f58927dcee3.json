{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Declaration/AnmeldungDokumente.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { MDBRow, MDBCol } from \"mdb-react-ui-kit\";\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport { FormGroup } from \"@mui/material\";\nimport { Checkbox } from \"@mui/material\";\nimport Select from '@mui/material/Select';\nimport { FormControlLabel } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AnmeldungDokumente(props) {\n  /*   const handleChangeMultiple = (event) => {\n      const { options } = event.target;\n      const value = [];\n  \n      for (let i = 0, l = options.length; i < l; i += 1) {\n          if (options[i].selected) {\n              value.push(options[i].value.id);\n          }\n          }\n          props.setUsedDocuments(value);\n      }; */\n  const handleChange = documentID => {\n    console.log(documentID);\n\n    if (props.usedDocuments.includes(documentID)) {\n      console.log(`${documentID} bereits enthalten - wird entfernt`);\n      const index = props.usedDocuments.indexOf(documentID);\n\n      if (index > -1) {\n        props.usedDocuments.splice(index, 1); // 2nd parameter means remove one item only\n      }\n\n      return;\n    }\n\n    props.usedDocument.push(documentID);\n    /*       for (let i = 0, l = options.length; i < l; i += 1) {\n              if (options[i].checked) {\n                  value.push(options[i].value.id);\n              }\n              }\n              props.setUsedDocuments(value); */\n\n    console.log(props.usedDocument);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mb-4\",\n      children: \"Weitere Dokumente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n      children: /*#__PURE__*/_jsxDEV(MDBCol, {\n        children: \"Dokumente ausw\\xE4hlen:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: props.documents.map(document => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            onChange: () => handleChange(document.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this),\n          label: document.representation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = AnmeldungDokumente;\nexport default AnmeldungDokumente;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnmeldungDokumente\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Declaration/AnmeldungDokumente.jsx"],"names":["React","useEffect","useState","MDBRow","MDBCol","InputLabel","FormControl","FormGroup","Checkbox","Select","FormControlLabel","AnmeldungDokumente","props","handleChange","documentID","console","log","usedDocuments","includes","index","indexOf","splice","usedDocument","push","documents","map","document","id","representation"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,kBAA/B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,gBAAT,QAAiC,eAAjC;;;;AAGA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGI,QAAMC,YAAY,GAAIC,UAAD,IAAgB;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;;AACA,QAAIF,KAAK,CAACK,aAAN,CAAoBC,QAApB,CAA6BJ,UAA7B,CAAJ,EAA8C;AAC5CC,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAEF,UAAW,oCAA1B;AACA,YAAMK,KAAK,GAAGP,KAAK,CAACK,aAAN,CAAoBG,OAApB,CAA4BN,UAA5B,CAAd;;AACA,UAAIK,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdP,QAAAA,KAAK,CAACK,aAAN,CAAoBI,MAApB,CAA2BF,KAA3B,EAAkC,CAAlC,EADc,CACwB;AACvC;;AACD;AACD;;AACDP,IAAAA,KAAK,CAACU,YAAN,CAAmBC,IAAnB,CAAwBT,UAAxB;AAKN;AACA;AACA;AACA;AACA;AACA;;AAEMC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACU,YAAlB;AACC,GAvBH;;AAyBF,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eA8BE,QAAC,MAAD;AAAA,6BACA,QAAC,SAAD;AAAA,kBACKV,KAAK,CAACY,SAAN,CAAgBC,GAAhB,CAAqBC,QAAD,iBACf,QAAC,gBAAD;AAAkB,UAAA,OAAO,eACvB,QAAC,QAAD;AACE,YAAA,QAAQ,EAAE,MAAMb,YAAY,CAAEa,QAAQ,CAACC,EAAX;AAD9B;AAAA;AAAA;AAAA;AAAA,kBADF;AAMA,UAAA,KAAK,EAAED,QAAQ,CAACE;AANhB;AAAA;AAAA;AAAA;AAAA,gBADL;AADL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YA9BF;AAAA,kBADF;AAiDD;;KAzFQjB,kB;AA2FT,eAAeA,kBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { MDBRow, MDBCol } from \"mdb-react-ui-kit\";\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport { FormGroup } from \"@mui/material\";\nimport { Checkbox } from \"@mui/material\";\nimport Select from '@mui/material/Select';\nimport { FormControlLabel } from \"@mui/material\";\n\n\nfunction AnmeldungDokumente(props) {\n\n/*   const handleChangeMultiple = (event) => {\n    const { options } = event.target;\n    const value = [];\n\n    for (let i = 0, l = options.length; i < l; i += 1) {\n        if (options[i].selected) {\n            value.push(options[i].value.id);\n        }\n        }\n        props.setUsedDocuments(value);\n    }; */\n\n\n    const handleChange = (documentID) => {\n      console.log(documentID)\n      if (props.usedDocuments.includes(documentID)) {\n        console.log(`${documentID} bereits enthalten - wird entfernt`)\n        const index = props.usedDocuments.indexOf(documentID);\n        if (index > -1) {\n          props.usedDocuments.splice(index, 1); // 2nd parameter means remove one item only\n        }\n        return\n      }\n      props.usedDocument.push(documentID)\n\n \n\n  \n/*       for (let i = 0, l = options.length; i < l; i += 1) {\n          if (options[i].checked) {\n              value.push(options[i].value.id);\n          }\n          }\n          props.setUsedDocuments(value); */\n\n      console.log(props.usedDocument)\n      };\n\n  return (\n    <>\n      <h5 className=\"mb-4\">Weitere Dokumente</h5>\n      <MDBRow>\n        <MDBCol>Dokumente ausw√§hlen:</MDBCol>\n      </MDBRow>\n{/*       <MDBRow>\n      \n            <FormControl sx={{ m: 2, minWidth: 200, maxWidth: 500 }}>\n                <InputLabel shrink htmlFor=\"select-multiple-native\">\n                Verwendete Dokumente\n                </InputLabel>\n                <Select\n                multiple\n                native\n                value={props.documents}\n                // @ts-ignore Typings are not considering `native`\n                onChange={handleChangeMultiple}\n                label=\"Native\"\n                inputProps={{\n                    id: 'select-multiple-native',\n                }}\n                >\n                {props.documents.map((document) => (\n                    <option key={document.id} value={document}>\n                      {document.representation}\n                    </option>\n                ))}\n                </Select>\n            </FormControl>\n      </MDBRow> */}\n      <MDBRow>\n      <FormGroup>\n          {props.documents.map((document) => (\n                <FormControlLabel control={\n                  <Checkbox \n                    onChange={() => handleChange (document.id)}\n                  \n                  />\n                } \n                label={document.representation} \n                  \n                  />\n          ))}\n\n      </FormGroup>\n      </MDBRow>\n    </>\n  );\n}\n\nexport default AnmeldungDokumente;\n"]},"metadata":{},"sourceType":"module"}