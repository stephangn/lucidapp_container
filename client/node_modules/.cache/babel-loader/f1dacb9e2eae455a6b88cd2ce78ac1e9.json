{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Zoll/ZollTransactions.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { MDBContainer, MDBSpinner } from \"mdb-react-ui-kit\";\nimport \"../css/LoadingSpinner.css\";\nimport ZollTransaction from \"../../components/ZollTransactions/ZollTransaction\";\nimport Form from \"react-bootstrap/Form\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ZollTransactions() {\n  _s();\n\n  const [transactionsData, setTransactionsData] = useState([]);\n  const [reload, setreload] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const {\n    auth\n  } = useAuth();\n  const axiosInstance = useAxiosPrivate(); // DB Call\n\n  useEffect(async () => {\n    await axiosInstance.get(\"declaration_auth/?customs_office=\" + auth.eori_nr).then(res => {\n      setTransactionsData(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n    setIsLoading(false);\n  }, [reload]); // Sortieralgorithmen\n\n  function sortDescriptionAsc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.description > b.description ? -1 : 1);\n    setTransactionsData(myData);\n  }\n\n  function sortDescriptionDesc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.description > b.description ? 1 : -1);\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedAsc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.date_added > b.date_added ? 1 : -1);\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedDesc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.date_added > b.date_added ? -1 : 1);\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedAsc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.date_processed > b.date_processed ? 1 : -1);\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedDesc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.date_processed > b.date_processed ? -1 : 1);\n    setTransactionsData(myData);\n  }\n\n  function sortTransactions(event) {\n    if (event.target.value === \"DescriptionAsc\") {\n      sortDescriptionAsc();\n      return;\n    }\n\n    if (event.target.value === \"DescriptionDesc\") {\n      sortDescriptionDesc();\n      return;\n    }\n\n    if (event.target.value === \"UpdatedAsc\") {\n      sortDateUpdatedAsc();\n      return;\n    }\n\n    if (event.target.value === \"UpdatedDesc\") {\n      sortDateUpdatedDesc();\n      return;\n    }\n\n    if (event.target.value === \"AddedAsc\") {\n      sortDateAddedAsc();\n      return;\n    }\n\n    if (event.target.value === \"AddedDesc\") {\n      sortDateAddedDesc();\n      return;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loadingSpinner\",\n      children: /*#__PURE__*/_jsxDEV(MDBSpinner, {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"L\\xE4dt..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Zollanmeldungen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"my-3 navbar navbar-expand-lg navbar-light bg-light\",\n          children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n              style: {\n                minWidth: 250,\n                maxWidth: 250\n              },\n              onChange: event => sortTransactions(event),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"UpdatedDesc\",\n                children: \"Zuletzt ge\\xE4ndert \\uD83E\\uDC17\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"UpdatedAsc\",\n                children: \"Zuletzt ge\\xE4ndert aufsteigend \\uD83E\\uDC15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"DescriptionDesc\",\n                children: \"Beschreibung absteigend \\uD83E\\uDC17\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"DescriptionAsc\",\n                children: \"Beschreibung aufsteigend \\uD83E\\uDC15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"AddedDesc\",\n                children: \"Hinzugef\\xFCgt am absteigend \\uD83E\\uDC17\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"AddedAsc\",\n                children: \"Hinzugef\\xFCgt am aufsteigend \\uD83E\\uDC15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"me-3\",\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [transactionsData.length, \" Anmeldungen\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), transactionsData.map(transactionData => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ZollTransaction, {\n            id: transactionData.id,\n            title: transactionData === null || transactionData === void 0 ? void 0 : transactionData.transaction.description,\n            added: transactionData === null || transactionData === void 0 ? void 0 : transactionData.transaction.date_added,\n            exportAddress: transactionData === null || transactionData === void 0 ? void 0 : transactionData.exporteur.name,\n            exportStreet: transactionData === null || transactionData === void 0 ? void 0 : transactionData.exporteur.street,\n            exportCity: transactionData === null || transactionData === void 0 ? void 0 : transactionData.exporteur.city,\n            exportCountry: transactionData === null || transactionData === void 0 ? void 0 : transactionData.exporteur.country_code,\n            importName: transactionData === null || transactionData === void 0 ? void 0 : transactionData.importeur.name,\n            importStreet: transactionData === null || transactionData === void 0 ? void 0 : transactionData.importeur.street,\n            importCity: transactionData === null || transactionData === void 0 ? void 0 : transactionData.importeur.city,\n            importCountry: transactionData === null || transactionData === void 0 ? void 0 : transactionData.importeur.country_code,\n            declarationData: transactionData,\n            stakeholderCount: transactionData === null || transactionData === void 0 ? void 0 : transactionData.stakeholderCount,\n            lastChange: transactionData === null || transactionData === void 0 ? void 0 : transactionData.transaction.date_processed\n          }, transactionData.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(ZollTransactions, \"P/DVXDeQWO11WlTx4U9QHHgIQfw=\", false, function () {\n  return [useAuth, useAxiosPrivate];\n});\n\n_c = ZollTransactions;\nexport default ZollTransactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"ZollTransactions\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Zoll/ZollTransactions.jsx"],"names":["React","useState","useEffect","MDBContainer","MDBSpinner","ZollTransaction","Form","useAxiosPrivate","useAuth","ZollTransactions","transactionsData","setTransactionsData","reload","setreload","isLoading","setIsLoading","auth","axiosInstance","get","eori_nr","then","res","data","catch","err","console","log","sortDescriptionAsc","myData","concat","sort","a","b","description","sortDescriptionDesc","sortDateAddedAsc","date_added","sortDateAddedDesc","sortDateUpdatedAsc","date_processed","sortDateUpdatedDesc","sortTransactions","event","target","value","minWidth","maxWidth","length","map","transactionData","id","transaction","exporteur","name","street","city","country_code","importeur","stakeholderCount"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { MDBContainer, MDBSpinner } from \"mdb-react-ui-kit\";\nimport \"../css/LoadingSpinner.css\";\n\nimport ZollTransaction from \"../../components/ZollTransactions/ZollTransaction\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\n\nimport useAuth from \"../../hooks/useAuth\";\n\nfunction ZollTransactions() {\n  const [transactionsData, setTransactionsData] = useState([]);\n  const [reload, setreload] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { auth } = useAuth();\n\n  const axiosInstance = useAxiosPrivate();\n\n  // DB Call\n  useEffect(async () => {\n    await axiosInstance\n      .get(\"declaration_auth/?customs_office=\" + auth.eori_nr)\n      .then((res) => {\n        setTransactionsData(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    setIsLoading(false);\n  }, [reload]);\n\n  // Sortieralgorithmen\n  function sortDescriptionAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.description > b.description ? -1 : 1));\n\n    setTransactionsData(myData);\n  }\n\n  function sortDescriptionDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.description > b.description ? 1 : -1));\n\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.date_added > b.date_added ? 1 : -1));\n\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.date_added > b.date_added ? -1 : 1));\n\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.date_processed > b.date_processed ? 1 : -1));\n\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.date_processed > b.date_processed ? -1 : 1));\n\n    setTransactionsData(myData);\n  }\n\n  function sortTransactions(event) {\n    if (event.target.value === \"DescriptionAsc\") {\n      sortDescriptionAsc();\n      return;\n    }\n    if (event.target.value === \"DescriptionDesc\") {\n      sortDescriptionDesc();\n      return;\n    }\n    if (event.target.value === \"UpdatedAsc\") {\n      sortDateUpdatedAsc();\n      return;\n    }\n    if (event.target.value === \"UpdatedDesc\") {\n      sortDateUpdatedDesc();\n      return;\n    }\n    if (event.target.value === \"AddedAsc\") {\n      sortDateAddedAsc();\n      return;\n    }\n    if (event.target.value === \"AddedDesc\") {\n      sortDateAddedDesc();\n      return;\n    }\n  }\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"loadingSpinner\">\n          <MDBSpinner>\n            <span className=\"visually-hidden\">Lädt..</span>\n          </MDBSpinner>\n        </div>\n      ) : (\n        <div>\n          <MDBContainer>\n            <h3>Zollanmeldungen</h3>\n\n            <nav className=\"my-3 navbar navbar-expand-lg navbar-light bg-light\">\n              <MDBContainer>\n                <Form.Select\n                  style={{\n                    minWidth: 250,\n                    maxWidth: 250,\n                  }}\n                  onChange={(event) => sortTransactions(event)}\n                >\n                  <option value={\"UpdatedDesc\"}>Zuletzt geändert 🠗</option>\n                  <option value={\"UpdatedAsc\"}>\n                    Zuletzt geändert aufsteigend 🠕\n                  </option>\n                  <option value={\"DescriptionDesc\"}>\n                    Beschreibung absteigend 🠗\n                  </option>\n                  <option value={\"DescriptionAsc\"}>\n                    Beschreibung aufsteigend 🠕\n                  </option>\n                  <option value={\"AddedDesc\"}>\n                    Hinzugefügt am absteigend 🠗\n                  </option>\n                  <option value={\"AddedAsc\"}>\n                    Hinzugefügt am aufsteigend 🠕\n                  </option>\n                </Form.Select>{\" \"}\n                <div className=\"me-3\">\n                  <b>{transactionsData.length} Anmeldungen</b>\n                </div>\n              </MDBContainer>\n            </nav>\n            {transactionsData.map((transactionData) => (\n              <React.Fragment>\n                <ZollTransaction\n                  key={transactionData.id}\n                  id={transactionData.id}\n                  title={transactionData?.transaction.description}\n                  added={transactionData?.transaction.date_added}\n                  exportAddress={transactionData?.exporteur.name}\n                  exportStreet={transactionData?.exporteur.street}\n                  exportCity={transactionData?.exporteur.city}\n                  exportCountry={transactionData?.exporteur.country_code}\n                  importName={transactionData?.importeur.name}\n                  importStreet={transactionData?.importeur.street}\n                  importCity={transactionData?.importeur.city}\n                  importCountry={transactionData?.importeur.country_code}\n                  declarationData={transactionData}\n                  stakeholderCount={transactionData?.stakeholderCount}\n                  lastChange={transactionData?.transaction.date_processed}\n                />\n                <br />\n              </React.Fragment>\n            ))}\n          </MDBContainer>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default ZollTransactions;\n"]},"metadata":{},"sourceType":"module"}