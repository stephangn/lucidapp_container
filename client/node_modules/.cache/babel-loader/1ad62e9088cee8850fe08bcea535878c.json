{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Documents/DocumentTransaction.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardTitle, MDBCardFooter, MDBCardSubTitle, MDBCardText, MDBCol, MDBContainer, MDBRow, MDBPopover, MDBPopoverBody } from \"mdb-react-ui-kit\";\nimport { Link } from \"react-router-dom\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DocumentTransaction(props) {\n  _s();\n\n  const axiosInstance = useAxiosPrivate();\n  const [declarationData, setDeclarationData] = useState(); // State: Zollanmeldung vorhanden\n\n  const [declarationExists, setDeclarationExists] = useState(false); // State: Status Zollanmeldung\n\n  const [confirmation, setConfirmation] = useState(\"ausstehend\"); // Zollanmeldungen abrufen\n\n  useEffect(() => {\n    axiosInstance.get(\"declaration/\").then(res => {\n      setDeclarationData(res.data);\n      let declaration = res.data;\n      let anmeldungVorhanden = false;\n      console.log(res.data);\n\n      if (declaration.length !== 0) {\n        for (let i in declaration) {\n          if (declaration[i].transaction == props.id) {\n            // Wenn Anmeldung Transaktion angehört setze auf true\n            setDeclarationExists(true); // Status Zollanmeldung abfragen\n\n            setConfirmation(declaration[i].status_confirmation);\n          }\n        }\n      }\n    });\n  }, []); // // Prüfen ob Zollanmeldung vorliegt\n  // useEffect(() => {\n  //   let declaration = props.declarationData;\n  //   let anmeldungVorhanden = false;\n  //   if (declaration.length !== 0) {\n  //     for (let i in declaration) {\n  //       if (declaration[i].transaction == props.id) {\n  //         // Wenn Anmeldung Transaktion angehört setze auf true\n  //         anmeldungVorhanden = true;\n  //         // Status Zollanmeldung abfragen\n  //         setConfirmation(declaration[i].status_confirmation);\n  //       }\n  //     }\n  //     setDeclarationExists(anmeldungVorhanden);\n  //   }\n  // }, [props.declarationData]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MDBCard, {\n      children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n        children: [/*#__PURE__*/_jsxDEV(MDBContainer, {\n          children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n            children: /*#__PURE__*/_jsxDEV(MDBCol, {\n              children: /*#__PURE__*/_jsxDEV(MDBCardTitle, {\n                children: [props.isImporteur ? \"Import: \" : \"Export: \", props.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBContainer, {\n          children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n            children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n              children: /*#__PURE__*/_jsxDEV(MDBCardText, {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: [\"Handelspartner\", \" \", props.isImporteur ? \"(Exporteur)\" : \"(Importeur)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, this), props.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this), props.street, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this), props.cityCode, \" \", props.city, \", \", props.countryCode]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n              children: /*#__PURE__*/_jsxDEV(MDBCardText, {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Dokumente insgesamt: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 19\n                }, this), props.numberInvoiceDocuments + props.numberOtherDocuments, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Rechnungsdokumente: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, this), props.numberInvoiceDocuments, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Zollanmeldung: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this), declarationExists ? \"liegt vor\" : \"ausstehend\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Zollbescheid: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this), confirmation]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n            children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n              md: \"8\",\n              lg: \"9\",\n              children: props.numberInvoiceDocuments == 0 ? /*#__PURE__*/_jsxDEV(MuiAlert, {\n                severity: \"info\",\n                sx: {\n                  my: 1\n                },\n                children: \"Transaktion angelegt. Rechnung hochladen um Zollanmeldung durchf\\xFChren zu k\\xF6nnen.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this) : props.numberInvoiceDocuments !== 0 && declarationExists == false ? /*#__PURE__*/_jsxDEV(MuiAlert, {\n                severity: \"warning\",\n                sx: {\n                  my: 1\n                },\n                children: \"Rechnung liegt vor. Zollanmeldung ausf\\xFChren.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this) : declarationExists == true && confirmation == \"ausstehend\" ? /*#__PURE__*/_jsxDEV(MuiAlert, {\n                severity: \"info\",\n                sx: {\n                  my: 1\n                },\n                children: \"Zollanmeldung abgeschickt. Warte auf Zollbescheid.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this) : confirmation == \"bestätigt\" ? /*#__PURE__*/_jsxDEV(MuiAlert, {\n                severity: \"success\",\n                sx: {\n                  my: 1\n                },\n                children: \"Zollanmeldung angenommen.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this) : confirmation == \"abgelehnt\" ? /*#__PURE__*/_jsxDEV(MuiAlert, {\n                severity: \"error\",\n                sx: {\n                  my: 1\n                },\n                children: \"Zollanmeldung angenommen.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n              md: \"4\",\n              lg: \"3\",\n              children: props.isImporteur == true && props.numberInvoiceDocuments !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"float-end\",\n                children: declarationExists == true ? /*#__PURE__*/_jsxDEV(MDBBtn, {\n                  style: {\n                    display: \"block\",\n                    margin: \"1rem 0\"\n                  },\n                  disabled: true,\n                  className: \"\",\n                  children: \"Zollanmeldung\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(Link, {\n                  style: {\n                    display: \"block\",\n                    margin: \"1rem 0\"\n                  },\n                  to: `declaration`,\n                  params: {\n                    title: \"Hello\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n                    className: \"\",\n                    children: \"Zollanmeldung\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBCardFooter, {\n          children: /*#__PURE__*/_jsxDEV(MDBRow, {\n            children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n              md: \"4\",\n              children: [\"Hinzugef\\xFCgt: \", props.dateAdded]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n              md: \"4\",\n              children: [\"Zuletzt aktualisiert: \", props.dateProcessed]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DocumentTransaction, \"UOrUppypM96gDZ4MpCayhMuVvaU=\", false, function () {\n  return [useAxiosPrivate];\n});\n\n_c = DocumentTransaction;\nexport default DocumentTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"DocumentTransaction\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Documents/DocumentTransaction.jsx"],"names":["React","useState","useEffect","MDBBtn","MDBCard","MDBCardBody","MDBCardTitle","MDBCardFooter","MDBCardSubTitle","MDBCardText","MDBCol","MDBContainer","MDBRow","MDBPopover","MDBPopoverBody","Link","useAxiosPrivate","MuiAlert","DocumentTransaction","props","axiosInstance","declarationData","setDeclarationData","declarationExists","setDeclarationExists","confirmation","setConfirmation","get","then","res","data","declaration","anmeldungVorhanden","console","log","length","i","transaction","id","status_confirmation","isImporteur","description","name","street","cityCode","city","countryCode","numberInvoiceDocuments","numberOtherDocuments","my","display","margin","title","dateAdded","dateProcessed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardFooter,\n  MDBCardSubTitle,\n  MDBCardText,\n  MDBCol,\n  MDBContainer,\n  MDBRow,\n  MDBPopover,\n  MDBPopoverBody,\n} from \"mdb-react-ui-kit\";\nimport { Link } from \"react-router-dom\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\n\nimport MuiAlert from \"@mui/material/Alert\";\n\nfunction DocumentTransaction(props) {\n  const axiosInstance = useAxiosPrivate();\n\n  const [declarationData, setDeclarationData] = useState();\n\n  // State: Zollanmeldung vorhanden\n  const [declarationExists, setDeclarationExists] = useState(false);\n  // State: Status Zollanmeldung\n  const [confirmation, setConfirmation] = useState(\"ausstehend\");\n\n  // Zollanmeldungen abrufen\n  useEffect(() => {\n    axiosInstance.get(\"declaration/\").then((res) => {\n      setDeclarationData(res.data);\n      let declaration = res.data;\n      let anmeldungVorhanden = false;\n      console.log(res.data);\n      if (declaration.length !== 0) {\n        for (let i in declaration) {\n          if (declaration[i].transaction == props.id) {\n            // Wenn Anmeldung Transaktion angehört setze auf true\n            setDeclarationExists(true);\n            // Status Zollanmeldung abfragen\n            setConfirmation(declaration[i].status_confirmation);\n          }\n        }\n      }\n    });\n  }, []);\n\n  // // Prüfen ob Zollanmeldung vorliegt\n  // useEffect(() => {\n  //   let declaration = props.declarationData;\n  //   let anmeldungVorhanden = false;\n  //   if (declaration.length !== 0) {\n  //     for (let i in declaration) {\n  //       if (declaration[i].transaction == props.id) {\n  //         // Wenn Anmeldung Transaktion angehört setze auf true\n  //         anmeldungVorhanden = true;\n  //         // Status Zollanmeldung abfragen\n  //         setConfirmation(declaration[i].status_confirmation);\n  //       }\n  //     }\n  //     setDeclarationExists(anmeldungVorhanden);\n  //   }\n  // }, [props.declarationData]);\n\n  return (\n    <div>\n      <MDBCard>\n        <MDBCardBody>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol>\n                <MDBCardTitle>\n                  {props.isImporteur ? \"Import: \" : \"Export: \"}\n                  {props.description}\n                </MDBCardTitle>\n              </MDBCol>\n            </MDBRow>\n\n            <br />\n          </MDBContainer>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol>\n                <MDBCardText>\n                  <b>\n                    Handelspartner{\" \"}\n                    {props.isImporteur ? \"(Exporteur)\" : \"(Importeur)\"}\n                  </b>\n                  <br />\n                  {props.name}\n                  <br />\n                  {props.street}\n                  <br />\n                  {props.cityCode} {props.city}, {props.countryCode}\n                </MDBCardText>\n              </MDBCol>\n              <MDBCol>\n                <MDBCardText>\n                  <b>Dokumente insgesamt: </b>\n                  {props.numberInvoiceDocuments + props.numberOtherDocuments}\n                  <br />\n                  <b>Rechnungsdokumente: </b>\n                  {props.numberInvoiceDocuments}\n                  <br />\n                  <b>Zollanmeldung: </b>\n                  {declarationExists ? \"liegt vor\" : \"ausstehend\"}\n                  <br />\n                  <b>Zollbescheid: </b>\n                  {confirmation}\n                </MDBCardText>\n              </MDBCol>\n            </MDBRow>\n            <br />\n            <MDBRow>\n              <MDBCol md=\"8\" lg=\"9\">\n                {props.numberInvoiceDocuments == 0 ? (\n                  <MuiAlert severity=\"info\" sx={{ my: 1 }}>\n                    Transaktion angelegt. Rechnung hochladen um Zollanmeldung\n                    durchführen zu können.\n                  </MuiAlert>\n                ) : props.numberInvoiceDocuments !== 0 &&\n                  declarationExists == false ? (\n                  <MuiAlert severity=\"warning\" sx={{ my: 1 }}>\n                    Rechnung liegt vor. Zollanmeldung ausführen.\n                  </MuiAlert>\n                ) : declarationExists == true &&\n                  confirmation == \"ausstehend\" ? (\n                  <MuiAlert severity=\"info\" sx={{ my: 1 }}>\n                    Zollanmeldung abgeschickt. Warte auf Zollbescheid.\n                  </MuiAlert>\n                ) : confirmation == \"bestätigt\" ? (\n                  <MuiAlert severity=\"success\" sx={{ my: 1 }}>\n                    Zollanmeldung angenommen.\n                  </MuiAlert>\n                ) : confirmation == \"abgelehnt\" ? (\n                  <MuiAlert severity=\"error\" sx={{ my: 1 }}>\n                    Zollanmeldung angenommen.\n                  </MuiAlert>\n                ) : null}\n              </MDBCol>\n              <MDBCol md=\"4\" lg=\"3\">\n                {props.isImporteur == true &&\n                props.numberInvoiceDocuments !== 0 ? (\n                  <div className=\"float-end\">\n                    {declarationExists == true ? (\n                      <MDBBtn\n                        style={{ display: \"block\", margin: \"1rem 0\" }}\n                        disabled\n                        className=\"\"\n                      >\n                        Zollanmeldung\n                      </MDBBtn>\n                    ) : (\n                      <Link\n                        style={{ display: \"block\", margin: \"1rem 0\" }}\n                        to={`declaration`}\n                        params={{ title: \"Hello\" }}\n                      >\n                        <MDBBtn className=\"\">Zollanmeldung</MDBBtn>\n                      </Link>\n                    )}\n                  </div>\n                ) : null}\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n          <MDBCardFooter>\n            <MDBRow>\n              <MDBCol md=\"4\">Hinzugefügt: {props.dateAdded}</MDBCol>\n              <MDBCol md=\"4\">\n                Zuletzt aktualisiert: {props.dateProcessed}\n              </MDBCol>\n            </MDBRow>\n          </MDBCardFooter>\n        </MDBCardBody>\n      </MDBCard>\n    </div>\n  );\n}\n\nexport default DocumentTransaction;\n"]},"metadata":{},"sourceType":"module"}