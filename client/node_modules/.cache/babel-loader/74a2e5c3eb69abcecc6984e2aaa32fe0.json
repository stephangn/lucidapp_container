{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Declaration.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport \"./css/LoadingSpinner.css\"; // Unterformulare\n\nimport AllgemeineAngaben from \"../components/Declaration/AllgemeineAngaben\";\nimport Adressdaten from \"../components/Declaration/Adressdaten\";\nimport Lieferdaten from \"../components/Declaration/Lieferdaten\";\nimport Rechnungsdaten from \"../components/Declaration/Rechnungsdaten\";\nimport AnmeldungDokumente from \"../components/Declaration/AnmeldungDokumente\";\nimport { MDBContainer, MDBSpinner, MDBBreadcrumb, MDBBreadcrumbItem } from \"mdb-react-ui-kit\"; //Smart Contract\n\nimport { createZollanmeldung } from \"../Web3Client\"; // Stepper\n\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\"; // Loading Backdrop\n\nimport Backdrop from \"@mui/material/Backdrop\"; //Nutzerdaten Abruf\n\nimport useAuth from \"../hooks/useAuth\";\nimport { CircularProgress } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Declaration(props) {\n  _s();\n\n  const [usedInvoice, setUsedInvoice] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const [pubkeyCO, setPubkeyCO] = useState();\n  const [transactionInvoices, setTransactionInvoices] = useState(); //state für dokumente\n\n  const usedDocuments = [];\n  const [documents, setDocuments] = useState(); //auswahl für Zollämter\n\n  const [customOffices, setCustomOffices] = useState({}); //funktion für Nutzerdaten\n\n  const {\n    auth\n  } = useAuth(); //Abfrage der TransaktionsID\n\n  const {\n    transactionId\n  } = useParams(); // Stepper-Logik\n\n  const steps = [\"Allgemeine Angaben\", \"Adressdaten\", \"Lieferdaten\", \"Rechnungsdaten\", \"Dokumente\"];\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set()); // (Kein Step ist optional)\n\n  const isStepOptional = step => {\n    return;\n  }; //Abfrage der voreingestellten Daten\n\n\n  const axiosInstance = useAxiosPrivate();\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleNext = e => {\n    let newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    } // Check Validierung\n\n\n    if (activeStep === 0 && allgemeineAngabenValidity == false) {\n      return;\n    }\n\n    if (activeStep === 2 && lieferdatenValidity == false) {\n      return;\n    }\n\n    if (activeStep === 3 && rechnungsdatenValidity == false) {\n      return;\n    }\n\n    e.preventDefault();\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  }; //Übertragen der Daten\n\n\n  async function handleSubmit() {\n    // Backdrop Ladeanimation öffnen\n    handleToggleBackdrop();\n    const zollwert = (await fieldValue.gesamtbetrag) + fieldValue.lieferkosten;\n    await blockchainZollanmeldungTransaction(pubkeyCO, fieldValue.blockchainRID, zollwert.toString(), fieldValue.lieferbedingung);\n    return;\n  } // -- DATENFELDER --\n  // State des Inhalts der Felder\n\n\n  const [fieldValue, setFieldValue] = React.useState({\n    // Allgemeine Angaben\n    auftragsnummer: \"\",\n    bearbeitendeDienststelle: \"\",\n    anmeldungArt: \"\",\n    geschaeftArt: \"\",\n    zahlungArt: \"\",\n    // Adressdaten Versender\n    eoriVersender: \"\",\n    nameVersender: \"\",\n    vornameVersender: \"\",\n    firmaVersender: \"\",\n    strasseVersender: \"\",\n    plzVersender: \"\",\n    ortVersender: \"\",\n    staatVersender: \"\",\n    telefonVersender: \"\",\n    emailVersender: \"\",\n    // Adressdaten Anmelder\n    eoriAnmelder: \"\",\n    nameAnmelder: \"\",\n    vornameAnmelder: \"\",\n    firmaAnmelder: \"\",\n    strasseAnmelder: \"\",\n    plzAnmelder: \"\",\n    ortAnmelder: \"\",\n    staatAnmelder: \"\",\n    telefonAnmelder: \"\",\n    emailAnmelder: \"\",\n    // Lieferdaten\n    ausfuhrland: \"\",\n    bestimmungsland: \"\",\n    bestimmungsbundesland: \"\",\n    befoerderungsmittel: \"\",\n    lieferbedingung: \"\",\n    lieferort: \"\",\n    warenort: \"\",\n    lieferkosten: \"\",\n    //Rechnungsdaten\n    datumRechnung: \"\",\n    gesamtbetrag: \"\",\n    waehrung: \"\"\n  });\n  const [rechnungsposten, setRechnungsposten] = React.useState([{}]); // Legacy State über fehlende Eingaben\n  // -> Keine manuelle Validierung mehr, sondern HTML5 Required-Validierung\n\n  const [inputMissingError, setInputMissingError] = React.useState({\n    // Allgemeine Angaben\n    auftragsnummer: false,\n    bearbeitendeDienststelle: false,\n    anmeldungArt: false,\n    geschaeftArt: false,\n    zahlungArt: false,\n    // Adressdaten Versender\n    eoriVersender: false,\n    nameVersender: false,\n    vornameVersender: false,\n    firmaVersender: false,\n    strasseVersender: false,\n    plzVersender: false,\n    ortVersender: false,\n    staatVersender: false,\n    telefonVersender: false,\n    emailVersender: false,\n    // Adressdaten Anmelder\n    eoriAnmelder: false,\n    nameAnmelder: false,\n    vornameAnmelder: false,\n    firmaAnmelder: false,\n    strasseAnmelder: false,\n    plzAnmelder: false,\n    ortAnmelder: false,\n    staatAnmelder: false,\n    telefonAnmelder: false,\n    emailAnmelder: false,\n    // Lieferdaten\n    ausfuhrland: false,\n    bestimmungsland: false,\n    bestimmungsbundesland: false,\n    befoerderungsmittel: false,\n    lieferbedingung: false,\n    lieferort: false,\n    warenort: false,\n    lieferkosten: false,\n    //Rechnungsdaten\n    datumRechnung: false,\n    gesamtbetrag: false,\n    waehrung: false\n  }); // Legacy State über falsche Inputs (müssen Zahlen sein)\n  // -> Keine manuelle Validierung mehr, sondern HTML5 Required-Validierung\n\n  const [inputWrongError, setInputWrongError] = React.useState({\n    auftragsnummer: false,\n    eoriVersender: false,\n    plzVersender: false,\n    eoriAnmelder: false,\n    plsAnmelder: false,\n    lieferkosten: false\n  }); // Neue Validierung-States\n\n  const [allgemeineAngabenValidity, setAllgemeineAngabenValidity] = useState(false);\n  const [lieferdatenValidity, setLieferdatenValidity] = useState(false);\n  const [rechnungsdatenValidity, setRechnungsdatenValidity] = useState(false); // FieldChange für Select und String-Felder\n\n  function handleFieldChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    setFieldValue({ ...fieldValue,\n      [name]: value\n    });\n    setInputMissingError({ ...inputMissingError,\n      [name]: false\n    });\n  } // FieldChange für Zahlen-Inputfelder\n\n\n  function handleNumberFieldChange(event) {\n    const name = event.target.name;\n    const value = event.target.value; // Validierung: nur Zahlen\n\n    if (isNaN(value)) {\n      setInputWrongError({ ...inputWrongError,\n        [name]: true\n      });\n    } else {\n      setInputWrongError({ ...inputWrongError,\n        [name]: false\n      });\n    }\n\n    setFieldValue({ ...fieldValue,\n      [name]: value\n    });\n    setInputMissingError({ ...inputMissingError,\n      [name]: false\n    });\n  } // Abfragen der Bestandsdaten\n\n\n  useEffect(async () => {\n    await axiosInstance.get(`transactions/` + transactionId).then(res => {\n      setFieldValue(prev => {\n        return { ...prev,\n          auftragsnummer: res.data.id,\n          eoriVersender: res.data.partnership.partner.eori_nr,\n          //nameVersender: .partnership.partner.name,\n          firmaVersender: res.data.partnership.partner.name,\n          strasseVersender: res.data.partnership.partner.street,\n          plzVersender: res.data.partnership.partner.city_code,\n          ortVersender: res.data.partnership.partner.city,\n          staatVersender: res.data.partnership.partner.country_code,\n          telefonVersender: res.data.partnership.partner.phone,\n          emailVersender: res.data.partnership.partner.email,\n          exporteur_pubkey: res.data.partnership.partner.publickey\n        };\n      });\n      setIsLoading(false);\n    }); //Abfrage der eigenen Nutzerdaten\n\n    await axiosInstance.get(`user/`).then(response => {\n      setFieldValue(prev => {\n        var _response$data$0$empl;\n\n        return { ...prev,\n          eoriAnmelder: (_response$data$0$empl = response.data[0].employee) === null || _response$data$0$empl === void 0 ? void 0 : _response$data$0$empl.company.eori_nr,\n          //nameVersender: .partnership.partner.name,\n          firmaAnmelder: response.data[0].employee.company.name,\n          strasseAnmelder: response.data[0].employee.company.street,\n          plzAnmelder: response.data[0].employee.company.city_code,\n          ortAnmelder: response.data[0].employee.company.city,\n          staatAnmelder: response.data[0].employee.company.country_code,\n          telefonAnmelder: response.data[0].employee.company.phone,\n          emailAnmelder: response.data[0].employee.company.email\n        };\n      });\n    }); //Abfrage der Rechnungen für Auswahl\n\n    await axiosInstance.get(`invoice/?transaction=${transactionId}`).then(response => {\n      setTransactionInvoices(response.data);\n    }); //Abfrage der Zollstationen\n\n    await axiosInstance.get(\"customoffices/\").then(res => {\n      setCustomOffices(res.data); //setCompanies(res.data);\n    }); //Abfrage der Documente\n\n    await axiosInstance.get(\"documents/?transaction=\" + transactionId).then(res => {\n      setDocuments(res.data); //setCompanies(res.data);\n    });\n  }, [transactionId]); //Abfrage der Rechnungsdaten\n\n  useEffect(async () => {\n    if (typeof usedInvoice !== \"undefined\") {\n      await axiosInstance.get(`invoice/${usedInvoice}/`).then(response => {\n        var _response$data8;\n\n        setFieldValue(prev => {\n          var _response$data, _response$data2, _response$data3, _response$data4, _response$data5, _response$data6, _response$data7;\n\n          return { ...prev,\n            waehrung: (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.currency,\n            datumRechnung: (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.issue_date,\n            gesamtbetrag: (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.total_value,\n            lieferkosten: (_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : _response$data4.transport_costs,\n            gesamtbetrag: (_response$data5 = response.data) === null || _response$data5 === void 0 ? void 0 : _response$data5.total_value,\n            blockchainRID: (_response$data6 = response.data) === null || _response$data6 === void 0 ? void 0 : _response$data6.blockchain_id,\n            rechnungID: (_response$data7 = response.data) === null || _response$data7 === void 0 ? void 0 : _response$data7.id\n          };\n        });\n        setRechnungsposten((_response$data8 = response.data) === null || _response$data8 === void 0 ? void 0 : _response$data8.invoiceItem);\n      });\n    }\n  }, [usedInvoice]); // Blockchain Transaktion\n\n  async function blockchainZollanmeldungTransaction(_zoll, _rechnungID, _zollwert, _incoterms) {\n    var erfolgreich = false;\n    await createZollanmeldung(_zoll, _rechnungID, _zollwert, _incoterms).then(tx => {\n      console.log(tx);\n      erfolgreich = true;\n      axiosInstance.post(\"/declaration/\", {\n        anmeldeArt: fieldValue.anmeldungArt,\n        geschaeftArt: fieldValue.geschaeftArt,\n        zahlungsart: fieldValue === null || fieldValue === void 0 ? void 0 : fieldValue.zahlungArt,\n        ausfuhrland: fieldValue.ausfuhrland,\n        bestimmungsland: fieldValue.bestimmungsland,\n        befoerderungsmittel: fieldValue.befoerderungsmittel,\n        lieferbedingung: fieldValue.lieferbedingung,\n        lieferort: fieldValue.lieferort,\n        warenort: fieldValue === null || fieldValue === void 0 ? void 0 : fieldValue.warenort,\n        invoice: usedInvoice,\n        transaction: transactionId,\n        customs_office: fieldValue.bearbeitendeDienststelle,\n        blockchain_zid: tx - 1,\n        document: usedDocuments\n      }).then(res => {\n        // Backdrop Ladeanimation schließen\n        handleCloseBackdrop();\n        handleNavigate(true, \"Zollanmeldung angelegt und übermittelt.\");\n      }).catch(function (error) {\n        if (error.response) {\n          // The request was made and the server responded with a status code\n          // that falls out of the range of 2xx\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers); // Backdrop Ladeanimation schließen\n\n          handleCloseBackdrop();\n          handleNavigate(false, \"Fehler bei Erstellung der Zollanmeldung.\");\n        } else if (error.request) {\n          // The request was made but no response was received\n          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n          // http.ClientRequest in node.js\n          console.log(error.request);\n          handleNavigate(false, \"Fehler bei Erstellung der Zollanmeldung.\");\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.message);\n          handleNavigate(false, \"Fehler bei Erstellung der Zollanmeldung.\");\n        }\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    return erfolgreich;\n  } // Navigation an DocumentsNew\n  //+ State: Informationen für Snackbar Alert\n\n\n  let navigate = useNavigate();\n\n  function handleNavigate(snackSuccess, snackMessage) {\n    let urladdress = \"/transactions/\" + fieldValue.auftragsnummer;\n    navigate(urladdress, {\n      replace: true,\n      state: {\n        success: snackSuccess,\n        message: snackMessage\n      }\n    });\n  } // -- Loading Backdrop --\n\n\n  const [openBackdrop, setOpenBackdrop] = React.useState(false);\n\n  const handleCloseBackdrop = () => {\n    setOpenBackdrop(false);\n  };\n\n  const handleToggleBackdrop = () => {\n    setOpenBackdrop(!openBackdrop);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loadingSpinner\",\n      children: /*#__PURE__*/_jsxDEV(MDBSpinner, {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"L\\xE4dt..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Zollanmeldung erstellen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MDBBreadcrumb, {\n        children: [/*#__PURE__*/_jsxDEV(MDBBreadcrumbItem, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/transactions\",\n            children: \"Auftr\\xE4ge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MDBBreadcrumbItem, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/transactions/\" + transactionId,\n            children: [\"Auftrags-ID \", transactionId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MDBBreadcrumbItem, {\n          active: true,\n          children: \"Formular Zollanmeldung\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Stepper, {\n            className: \"mb-3\",\n            activeStep: activeStep,\n            children: steps.map((label, index) => {\n              const stepProps = {};\n              const labelProps = {};\n\n              if (isStepOptional(index)) {\n                labelProps.optional = /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  children: \"Optional\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 23\n                }, this);\n              }\n\n              if (isStepSkipped(index)) {\n                stepProps.completed = false;\n              }\n\n              return /*#__PURE__*/_jsxDEV(Step, { ...stepProps,\n                children: /*#__PURE__*/_jsxDEV(StepLabel, { ...labelProps,\n                  children: label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 23\n                }, this)\n              }, label, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this), activeStep === steps.length ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                mt: 2,\n                mb: 1\n              },\n              children: \"All steps completed - you're finished\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: \"flex\",\n                flexDirection: \"row\",\n                pt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flex: \"1 1 auto\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleReset,\n                children: \"Zur\\xFCcksetzen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: activeStep === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n                children: /*#__PURE__*/_jsxDEV(AllgemeineAngaben, {\n                  fieldValue: fieldValue,\n                  customOffices: customOffices,\n                  setPubkeyCO: setPubkeyCO,\n                  setFieldValue: setFieldValue,\n                  inputMissingError: inputMissingError,\n                  setInputMissingError: setInputMissingError,\n                  inputWrongError: inputWrongError,\n                  setInputWrongError: setInputWrongError,\n                  handleFieldChange: handleFieldChange,\n                  handleNumberFieldChange: handleNumberFieldChange // Validierung State\n                  ,\n                  allgemeineAngabenValidity: allgemeineAngabenValidity,\n                  setAllgemeineAngabenValidity: setAllgemeineAngabenValidity // Stepper Funktionen\n                  ,\n                  handleBack: handleBack,\n                  isStepOptional: isStepOptional,\n                  activeStep: activeStep,\n                  handleSkip: handleSkip,\n                  activeStep: activeStep,\n                  steps: steps,\n                  handleSubmit: handleSubmit,\n                  handleNext: handleNext\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 23\n              }, this)\n            }, void 0, false) : activeStep === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n                children: /*#__PURE__*/_jsxDEV(Adressdaten, {\n                  fieldValue: fieldValue,\n                  setFieldValue: setFieldValue,\n                  inputMissingError: inputMissingError,\n                  setInputMissingError: setInputMissingError,\n                  inputWrongError: inputWrongError,\n                  setInputWrongError: setInputWrongError,\n                  handleFieldChange: handleFieldChange,\n                  handleNumberFieldChange: handleNumberFieldChange // Stepper Funktionen\n                  ,\n                  handleBack: handleBack,\n                  isStepOptional: isStepOptional,\n                  activeStep: activeStep,\n                  handleSkip: handleSkip,\n                  activeStep: activeStep,\n                  steps: steps,\n                  handleSubmit: handleSubmit,\n                  handleNext: handleNext\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 23\n              }, this)\n            }, void 0, false) : activeStep === 2 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n                children: /*#__PURE__*/_jsxDEV(Lieferdaten, {\n                  fieldValue: fieldValue,\n                  setFieldValue: setFieldValue,\n                  inputMissingError: inputMissingError,\n                  setInputMissingError: setInputMissingError,\n                  inputWrongError: inputWrongError,\n                  setInputWrongError: setInputWrongError,\n                  handleFieldChange: handleFieldChange,\n                  handleNumberFieldChange: handleNumberFieldChange // Validierung State\n                  ,\n                  lieferdatenValidity: lieferdatenValidity,\n                  setLieferdatenValidity: setLieferdatenValidity // Stepper Funktionen\n                  ,\n                  handleBack: handleBack,\n                  isStepOptional: isStepOptional,\n                  activeStep: activeStep,\n                  handleSkip: handleSkip,\n                  activeStep: activeStep,\n                  steps: steps,\n                  handleSubmit: handleSubmit,\n                  handleNext: handleNext\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 23\n              }, this)\n            }, void 0, false) : activeStep === 3 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n                children: /*#__PURE__*/_jsxDEV(Rechnungsdaten, {\n                  fieldValue: fieldValue,\n                  setFieldValue: setFieldValue,\n                  inputMissingError: inputMissingError,\n                  setInputMissingError: setInputMissingError,\n                  inputWrongError: inputWrongError,\n                  setInputWrongError: setInputWrongError,\n                  handleFieldChange: handleFieldChange,\n                  handleNumberFieldChange: handleNumberFieldChange,\n                  rechnungsposten: rechnungsposten,\n                  setRechnungsposten: setRechnungsposten,\n                  transactionInvoices: transactionInvoices,\n                  usedInvoice: usedInvoice,\n                  setUsedInvoice: setUsedInvoice // Validierung State\n                  ,\n                  rechnungsdatenValidity: rechnungsdatenValidity,\n                  setRechnungsdatenValidity: setRechnungsdatenValidity // Stepper Funktionen\n                  ,\n                  handleBack: handleBack,\n                  isStepOptional: isStepOptional,\n                  activeStep: activeStep,\n                  handleSkip: handleSkip,\n                  activeStep: activeStep,\n                  steps: steps,\n                  handleSubmit: handleSubmit,\n                  handleNext: handleNext\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 23\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n                children: /*#__PURE__*/_jsxDEV(AnmeldungDokumente, {\n                  usedDocuments: usedDocuments,\n                  documents: documents // Stepper Funktionen\n                  ,\n                  handleBack: handleBack,\n                  isStepOptional: isStepOptional,\n                  activeStep: activeStep,\n                  handleSkip: handleSkip,\n                  activeStep: activeStep,\n                  steps: steps,\n                  handleSubmit: handleSubmit,\n                  handleNext: handleNext\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 23\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n        sx: {\n          color: \"#fff\",\n          zIndex: theme => theme.zIndex.drawer + 1\n        },\n        open: openBackdrop,\n        onClick: handleCloseBackdrop,\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s(Declaration, \"tHTAoLXhEmEitbXMh7jyxkrTNgA=\", false, function () {\n  return [useAuth, useParams, useAxiosPrivate, useNavigate];\n});\n\n_c = Declaration;\nexport default Declaration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Declaration\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Declaration.jsx"],"names":["React","useState","useEffect","useAxiosPrivate","Link","useParams","useNavigate","AllgemeineAngaben","Adressdaten","Lieferdaten","Rechnungsdaten","AnmeldungDokumente","MDBContainer","MDBSpinner","MDBBreadcrumb","MDBBreadcrumbItem","createZollanmeldung","Box","Stepper","Step","StepLabel","Button","Typography","Backdrop","useAuth","CircularProgress","Declaration","props","usedInvoice","setUsedInvoice","isLoading","setIsLoading","pubkeyCO","setPubkeyCO","transactionInvoices","setTransactionInvoices","usedDocuments","documents","setDocuments","customOffices","setCustomOffices","auth","transactionId","steps","activeStep","setActiveStep","skipped","setSkipped","Set","isStepOptional","step","axiosInstance","isStepSkipped","has","handleNext","e","newSkipped","values","delete","allgemeineAngabenValidity","lieferdatenValidity","rechnungsdatenValidity","preventDefault","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","handleReset","handleSubmit","handleToggleBackdrop","zollwert","fieldValue","gesamtbetrag","lieferkosten","blockchainZollanmeldungTransaction","blockchainRID","toString","lieferbedingung","setFieldValue","auftragsnummer","bearbeitendeDienststelle","anmeldungArt","geschaeftArt","zahlungArt","eoriVersender","nameVersender","vornameVersender","firmaVersender","strasseVersender","plzVersender","ortVersender","staatVersender","telefonVersender","emailVersender","eoriAnmelder","nameAnmelder","vornameAnmelder","firmaAnmelder","strasseAnmelder","plzAnmelder","ortAnmelder","staatAnmelder","telefonAnmelder","emailAnmelder","ausfuhrland","bestimmungsland","bestimmungsbundesland","befoerderungsmittel","lieferort","warenort","datumRechnung","waehrung","rechnungsposten","setRechnungsposten","inputMissingError","setInputMissingError","inputWrongError","setInputWrongError","plsAnmelder","setAllgemeineAngabenValidity","setLieferdatenValidity","setRechnungsdatenValidity","handleFieldChange","event","name","target","value","handleNumberFieldChange","isNaN","get","then","res","prev","data","id","partnership","partner","eori_nr","street","city_code","city","country_code","phone","email","exporteur_pubkey","publickey","response","employee","company","currency","issue_date","total_value","transport_costs","blockchain_id","rechnungID","invoiceItem","_zoll","_rechnungID","_zollwert","_incoterms","erfolgreich","tx","console","log","post","anmeldeArt","zahlungsart","invoice","transaction","customs_office","blockchain_zid","document","handleCloseBackdrop","handleNavigate","catch","error","status","headers","request","message","err","navigate","snackSuccess","snackMessage","urladdress","replace","state","success","openBackdrop","setOpenBackdrop","width","map","label","index","stepProps","labelProps","optional","completed","length","mt","mb","display","flexDirection","pt","flex","color","zIndex","theme","drawer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport \"./css/LoadingSpinner.css\";\n\n// Unterformulare\nimport AllgemeineAngaben from \"../components/Declaration/AllgemeineAngaben\";\nimport Adressdaten from \"../components/Declaration/Adressdaten\";\nimport Lieferdaten from \"../components/Declaration/Lieferdaten\";\nimport Rechnungsdaten from \"../components/Declaration/Rechnungsdaten\";\nimport AnmeldungDokumente from \"../components/Declaration/AnmeldungDokumente\";\n\nimport {\n  MDBContainer,\n  MDBSpinner,\n  MDBBreadcrumb,\n  MDBBreadcrumbItem,\n} from \"mdb-react-ui-kit\";\n\n//Smart Contract\nimport { createZollanmeldung } from \"../Web3Client\";\n\n// Stepper\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\n\n// Loading Backdrop\nimport Backdrop from \"@mui/material/Backdrop\";\n\n//Nutzerdaten Abruf\nimport useAuth from \"../hooks/useAuth\";\nimport { CircularProgress } from \"@mui/material\";\n\nfunction Declaration(props) {\n  const [usedInvoice, setUsedInvoice] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const [pubkeyCO, setPubkeyCO] = useState();\n  const [transactionInvoices, setTransactionInvoices] = useState();\n\n  //state für dokumente\n\n  const usedDocuments = [];\n  const [documents, setDocuments] = useState();\n\n  //auswahl für Zollämter\n\n  const [customOffices, setCustomOffices] = useState({});\n\n  //funktion für Nutzerdaten\n  const { auth } = useAuth();\n\n  //Abfrage der TransaktionsID\n\n  const { transactionId } = useParams();\n\n  // Stepper-Logik\n  const steps = [\n    \"Allgemeine Angaben\",\n    \"Adressdaten\",\n    \"Lieferdaten\",\n    \"Rechnungsdaten\",\n    \"Dokumente\",\n  ];\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n\n  // (Kein Step ist optional)\n  const isStepOptional = (step) => {\n    return;\n  };\n\n  //Abfrage der voreingestellten Daten\n  const axiosInstance = useAxiosPrivate();\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = (e) => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n    // Check Validierung\n    if (activeStep === 0 && allgemeineAngabenValidity == false) {\n      return;\n    }\n    if (activeStep === 2 && lieferdatenValidity == false) {\n      return;\n    }\n    if (activeStep === 3 && rechnungsdatenValidity == false) {\n      return;\n    }\n    e.preventDefault();\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  //Übertragen der Daten\n  async function handleSubmit() {\n    // Backdrop Ladeanimation öffnen\n    handleToggleBackdrop();\n    const zollwert = (await fieldValue.gesamtbetrag) + fieldValue.lieferkosten;\n    await blockchainZollanmeldungTransaction(\n      pubkeyCO,\n      fieldValue.blockchainRID,\n      zollwert.toString(),\n      fieldValue.lieferbedingung\n    );\n\n    return;\n  }\n\n  // -- DATENFELDER --\n  // State des Inhalts der Felder\n  const [fieldValue, setFieldValue] = React.useState({\n    // Allgemeine Angaben\n    auftragsnummer: \"\",\n    bearbeitendeDienststelle: \"\",\n    anmeldungArt: \"\",\n    geschaeftArt: \"\",\n    zahlungArt: \"\",\n    // Adressdaten Versender\n    eoriVersender: \"\",\n    nameVersender: \"\",\n    vornameVersender: \"\",\n    firmaVersender: \"\",\n    strasseVersender: \"\",\n    plzVersender: \"\",\n    ortVersender: \"\",\n    staatVersender: \"\",\n    telefonVersender: \"\",\n    emailVersender: \"\",\n    // Adressdaten Anmelder\n    eoriAnmelder: \"\",\n    nameAnmelder: \"\",\n    vornameAnmelder: \"\",\n    firmaAnmelder: \"\",\n    strasseAnmelder: \"\",\n    plzAnmelder: \"\",\n    ortAnmelder: \"\",\n    staatAnmelder: \"\",\n    telefonAnmelder: \"\",\n    emailAnmelder: \"\",\n    // Lieferdaten\n    ausfuhrland: \"\",\n    bestimmungsland: \"\",\n    bestimmungsbundesland: \"\",\n    befoerderungsmittel: \"\",\n    lieferbedingung: \"\",\n    lieferort: \"\",\n    warenort: \"\",\n    lieferkosten: \"\",\n    //Rechnungsdaten\n    datumRechnung: \"\",\n    gesamtbetrag: \"\",\n    waehrung: \"\",\n  });\n\n  const [rechnungsposten, setRechnungsposten] = React.useState([{}]);\n\n  // Legacy State über fehlende Eingaben\n  // -> Keine manuelle Validierung mehr, sondern HTML5 Required-Validierung\n  const [inputMissingError, setInputMissingError] = React.useState({\n    // Allgemeine Angaben\n    auftragsnummer: false,\n    bearbeitendeDienststelle: false,\n    anmeldungArt: false,\n    geschaeftArt: false,\n    zahlungArt: false,\n    // Adressdaten Versender\n    eoriVersender: false,\n    nameVersender: false,\n    vornameVersender: false,\n    firmaVersender: false,\n    strasseVersender: false,\n    plzVersender: false,\n    ortVersender: false,\n    staatVersender: false,\n    telefonVersender: false,\n    emailVersender: false,\n    // Adressdaten Anmelder\n    eoriAnmelder: false,\n    nameAnmelder: false,\n    vornameAnmelder: false,\n    firmaAnmelder: false,\n    strasseAnmelder: false,\n    plzAnmelder: false,\n    ortAnmelder: false,\n    staatAnmelder: false,\n    telefonAnmelder: false,\n    emailAnmelder: false,\n    // Lieferdaten\n    ausfuhrland: false,\n    bestimmungsland: false,\n    bestimmungsbundesland: false,\n    befoerderungsmittel: false,\n    lieferbedingung: false,\n    lieferort: false,\n    warenort: false,\n    lieferkosten: false,\n    //Rechnungsdaten\n    datumRechnung: false,\n    gesamtbetrag: false,\n    waehrung: false,\n  });\n\n  // Legacy State über falsche Inputs (müssen Zahlen sein)\n  // -> Keine manuelle Validierung mehr, sondern HTML5 Required-Validierung\n  const [inputWrongError, setInputWrongError] = React.useState({\n    auftragsnummer: false,\n    eoriVersender: false,\n    plzVersender: false,\n    eoriAnmelder: false,\n    plsAnmelder: false,\n    lieferkosten: false,\n  });\n\n  // Neue Validierung-States\n  const [allgemeineAngabenValidity, setAllgemeineAngabenValidity] =\n    useState(false);\n  const [lieferdatenValidity, setLieferdatenValidity] = useState(false);\n  const [rechnungsdatenValidity, setRechnungsdatenValidity] = useState(false);\n\n  // FieldChange für Select und String-Felder\n  function handleFieldChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    setFieldValue({ ...fieldValue, [name]: value });\n    setInputMissingError({ ...inputMissingError, [name]: false });\n  }\n\n  // FieldChange für Zahlen-Inputfelder\n  function handleNumberFieldChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    // Validierung: nur Zahlen\n    if (isNaN(value)) {\n      setInputWrongError({ ...inputWrongError, [name]: true });\n    } else {\n      setInputWrongError({ ...inputWrongError, [name]: false });\n    }\n\n    setFieldValue({ ...fieldValue, [name]: value });\n    setInputMissingError({ ...inputMissingError, [name]: false });\n  }\n\n  // Abfragen der Bestandsdaten\n\n  useEffect(async () => {\n    await axiosInstance.get(`transactions/` + transactionId).then((res) => {\n      setFieldValue((prev) => {\n        return {\n          ...prev,\n          auftragsnummer: res.data.id,\n          eoriVersender: res.data.partnership.partner.eori_nr,\n          //nameVersender: .partnership.partner.name,\n          firmaVersender: res.data.partnership.partner.name,\n          strasseVersender: res.data.partnership.partner.street,\n          plzVersender: res.data.partnership.partner.city_code,\n          ortVersender: res.data.partnership.partner.city,\n          staatVersender: res.data.partnership.partner.country_code,\n          telefonVersender: res.data.partnership.partner.phone,\n          emailVersender: res.data.partnership.partner.email,\n          exporteur_pubkey: res.data.partnership.partner.publickey,\n        };\n      });\n      setIsLoading(false);\n    });\n\n    //Abfrage der eigenen Nutzerdaten\n\n    await axiosInstance.get(`user/`).then((response) => {\n      setFieldValue((prev) => {\n        return {\n          ...prev,\n          eoriAnmelder: response.data[0].employee?.company.eori_nr,\n          //nameVersender: .partnership.partner.name,\n          firmaAnmelder: response.data[0].employee.company.name,\n          strasseAnmelder: response.data[0].employee.company.street,\n          plzAnmelder: response.data[0].employee.company.city_code,\n          ortAnmelder: response.data[0].employee.company.city,\n          staatAnmelder: response.data[0].employee.company.country_code,\n          telefonAnmelder: response.data[0].employee.company.phone,\n          emailAnmelder: response.data[0].employee.company.email,\n        };\n      });\n    });\n\n    //Abfrage der Rechnungen für Auswahl\n\n    await axiosInstance\n      .get(`invoice/?transaction=${transactionId}`)\n      .then((response) => {\n        setTransactionInvoices(response.data);\n      });\n\n    //Abfrage der Zollstationen\n    await axiosInstance.get(\"customoffices/\").then((res) => {\n      setCustomOffices(res.data);\n      //setCompanies(res.data);\n    });\n    //Abfrage der Documente\n    await axiosInstance\n      .get(\"documents/?transaction=\" + transactionId)\n      .then((res) => {\n        setDocuments(res.data);\n        //setCompanies(res.data);\n      });\n  }, [transactionId]);\n\n  //Abfrage der Rechnungsdaten\n  useEffect(async () => {\n    if (typeof usedInvoice !== \"undefined\") {\n      await axiosInstance.get(`invoice/${usedInvoice}/`).then((response) => {\n        setFieldValue((prev) => {\n          return {\n            ...prev,\n            waehrung: response.data?.currency,\n            datumRechnung: response.data?.issue_date,\n            gesamtbetrag: response.data?.total_value,\n            lieferkosten: response.data?.transport_costs,\n            gesamtbetrag: response.data?.total_value,\n            blockchainRID: response.data?.blockchain_id,\n            rechnungID: response.data?.id,\n          };\n        });\n        setRechnungsposten(response.data?.invoiceItem);\n      });\n    }\n  }, [usedInvoice]);\n\n  // Blockchain Transaktion\n  async function blockchainZollanmeldungTransaction(\n    _zoll,\n    _rechnungID,\n    _zollwert,\n    _incoterms\n  ) {\n    var erfolgreich = false;\n    await createZollanmeldung(_zoll, _rechnungID, _zollwert, _incoterms)\n      .then((tx) => {\n        console.log(tx);\n        erfolgreich = true;\n        axiosInstance\n          .post(\"/declaration/\", {\n            anmeldeArt: fieldValue.anmeldungArt,\n            geschaeftArt: fieldValue.geschaeftArt,\n            zahlungsart: fieldValue?.zahlungArt,\n            ausfuhrland: fieldValue.ausfuhrland,\n            bestimmungsland: fieldValue.bestimmungsland,\n            befoerderungsmittel: fieldValue.befoerderungsmittel,\n            lieferbedingung: fieldValue.lieferbedingung,\n            lieferort: fieldValue.lieferort,\n            warenort: fieldValue?.warenort,\n            invoice: usedInvoice,\n            transaction: transactionId,\n            customs_office: fieldValue.bearbeitendeDienststelle,\n            blockchain_zid: tx - 1,\n            document: usedDocuments,\n          })\n          .then((res) => {\n            // Backdrop Ladeanimation schließen\n            handleCloseBackdrop();\n            handleNavigate(true, \"Zollanmeldung angelegt und übermittelt.\");\n          })\n          .catch(function (error) {\n            if (error.response) {\n              // The request was made and the server responded with a status code\n              // that falls out of the range of 2xx\n              console.log(error.response.data);\n              console.log(error.response.status);\n              console.log(error.response.headers);\n              // Backdrop Ladeanimation schließen\n              handleCloseBackdrop();\n              handleNavigate(false, \"Fehler bei Erstellung der Zollanmeldung.\");\n            } else if (error.request) {\n              // The request was made but no response was received\n              // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n              // http.ClientRequest in node.js\n              console.log(error.request);\n              handleNavigate(false, \"Fehler bei Erstellung der Zollanmeldung.\");\n            } else {\n              // Something happened in setting up the request that triggered an Error\n              console.log(\"Error\", error.message);\n              handleNavigate(false, \"Fehler bei Erstellung der Zollanmeldung.\");\n            }\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    return erfolgreich;\n  }\n\n  // Navigation an DocumentsNew\n  //+ State: Informationen für Snackbar Alert\n\n  let navigate = useNavigate();\n\n  function handleNavigate(snackSuccess, snackMessage) {\n    let urladdress = \"/transactions/\" + fieldValue.auftragsnummer;\n    navigate(urladdress, {\n      replace: true,\n      state: { success: snackSuccess, message: snackMessage },\n    });\n  }\n\n  // -- Loading Backdrop --\n  const [openBackdrop, setOpenBackdrop] = React.useState(false);\n  const handleCloseBackdrop = () => {\n    setOpenBackdrop(false);\n  };\n  const handleToggleBackdrop = () => {\n    setOpenBackdrop(!openBackdrop);\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"loadingSpinner\">\n          <MDBSpinner>\n            <span className=\"visually-hidden\">Lädt..</span>\n          </MDBSpinner>\n        </div>\n      ) : (\n        <>\n          <h3>Zollanmeldung erstellen</h3>\n          <MDBBreadcrumb>\n            <MDBBreadcrumbItem>\n              <Link to=\"/transactions\">Aufträge</Link>\n            </MDBBreadcrumbItem>\n            <MDBBreadcrumbItem>\n              <Link to={\"/transactions/\" + transactionId}>\n                Auftrags-ID {transactionId}\n              </Link>\n            </MDBBreadcrumbItem>\n            <MDBBreadcrumbItem active>Formular Zollanmeldung</MDBBreadcrumbItem>\n          </MDBBreadcrumb>\n          <br />\n          <div>\n            <Box sx={{ width: \"100%\" }}>\n              <Stepper className=\"mb-3\" activeStep={activeStep}>\n                {steps.map((label, index) => {\n                  const stepProps = {};\n                  const labelProps = {};\n                  if (isStepOptional(index)) {\n                    labelProps.optional = (\n                      <Typography variant=\"caption\">Optional</Typography>\n                    );\n                  }\n                  if (isStepSkipped(index)) {\n                    stepProps.completed = false;\n                  }\n                  return (\n                    <Step key={label} {...stepProps}>\n                      <StepLabel {...labelProps}>{label}</StepLabel>\n                    </Step>\n                  );\n                })}\n              </Stepper>\n              {activeStep === steps.length ? (\n                <React.Fragment>\n                  <Typography sx={{ mt: 2, mb: 1 }}>\n                    All steps completed - you&apos;re finished\n                  </Typography>\n                  <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                    <Box sx={{ flex: \"1 1 auto\" }} />\n                    <Button onClick={handleReset}>Zurücksetzen</Button>\n                  </Box>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  {activeStep === 0 ? (\n                    <>\n                      <MDBContainer>\n                        <AllgemeineAngaben\n                          fieldValue={fieldValue}\n                          customOffices={customOffices}\n                          setPubkeyCO={setPubkeyCO}\n                          setFieldValue={setFieldValue}\n                          inputMissingError={inputMissingError}\n                          setInputMissingError={setInputMissingError}\n                          inputWrongError={inputWrongError}\n                          setInputWrongError={setInputWrongError}\n                          handleFieldChange={handleFieldChange}\n                          handleNumberFieldChange={handleNumberFieldChange}\n                          // Validierung State\n                          allgemeineAngabenValidity={allgemeineAngabenValidity}\n                          setAllgemeineAngabenValidity={\n                            setAllgemeineAngabenValidity\n                          }\n                          // Stepper Funktionen\n                          handleBack={handleBack}\n                          isStepOptional={isStepOptional}\n                          activeStep={activeStep}\n                          handleSkip={handleSkip}\n                          activeStep={activeStep}\n                          steps={steps}\n                          handleSubmit={handleSubmit}\n                          handleNext={handleNext}\n                        />\n                      </MDBContainer>\n                    </>\n                  ) : activeStep === 1 ? (\n                    <>\n                      <MDBContainer>\n                        <Adressdaten\n                          fieldValue={fieldValue}\n                          setFieldValue={setFieldValue}\n                          inputMissingError={inputMissingError}\n                          setInputMissingError={setInputMissingError}\n                          inputWrongError={inputWrongError}\n                          setInputWrongError={setInputWrongError}\n                          handleFieldChange={handleFieldChange}\n                          handleNumberFieldChange={handleNumberFieldChange}\n                          // Stepper Funktionen\n                          handleBack={handleBack}\n                          isStepOptional={isStepOptional}\n                          activeStep={activeStep}\n                          handleSkip={handleSkip}\n                          activeStep={activeStep}\n                          steps={steps}\n                          handleSubmit={handleSubmit}\n                          handleNext={handleNext}\n                        />\n                      </MDBContainer>\n                    </>\n                  ) : activeStep === 2 ? (\n                    <>\n                      <MDBContainer>\n                        <Lieferdaten\n                          fieldValue={fieldValue}\n                          setFieldValue={setFieldValue}\n                          inputMissingError={inputMissingError}\n                          setInputMissingError={setInputMissingError}\n                          inputWrongError={inputWrongError}\n                          setInputWrongError={setInputWrongError}\n                          handleFieldChange={handleFieldChange}\n                          handleNumberFieldChange={handleNumberFieldChange}\n                          // Validierung State\n                          lieferdatenValidity={lieferdatenValidity}\n                          setLieferdatenValidity={setLieferdatenValidity}\n                          // Stepper Funktionen\n                          handleBack={handleBack}\n                          isStepOptional={isStepOptional}\n                          activeStep={activeStep}\n                          handleSkip={handleSkip}\n                          activeStep={activeStep}\n                          steps={steps}\n                          handleSubmit={handleSubmit}\n                          handleNext={handleNext}\n                        />\n                      </MDBContainer>\n                    </>\n                  ) : activeStep === 3 ? (\n                    <>\n                      <MDBContainer>\n                        <Rechnungsdaten\n                          fieldValue={fieldValue}\n                          setFieldValue={setFieldValue}\n                          inputMissingError={inputMissingError}\n                          setInputMissingError={setInputMissingError}\n                          inputWrongError={inputWrongError}\n                          setInputWrongError={setInputWrongError}\n                          handleFieldChange={handleFieldChange}\n                          handleNumberFieldChange={handleNumberFieldChange}\n                          rechnungsposten={rechnungsposten}\n                          setRechnungsposten={setRechnungsposten}\n                          transactionInvoices={transactionInvoices}\n                          usedInvoice={usedInvoice}\n                          setUsedInvoice={setUsedInvoice}\n                          // Validierung State\n                          rechnungsdatenValidity={rechnungsdatenValidity}\n                          setRechnungsdatenValidity={setRechnungsdatenValidity}\n                          // Stepper Funktionen\n                          handleBack={handleBack}\n                          isStepOptional={isStepOptional}\n                          activeStep={activeStep}\n                          handleSkip={handleSkip}\n                          activeStep={activeStep}\n                          steps={steps}\n                          handleSubmit={handleSubmit}\n                          handleNext={handleNext}\n                        />\n                      </MDBContainer>\n                    </>\n                  ) : (\n                    <>\n                      <MDBContainer>\n                        <AnmeldungDokumente\n                          usedDocuments={usedDocuments}\n                          documents={documents}\n                          // Stepper Funktionen\n                          handleBack={handleBack}\n                          isStepOptional={isStepOptional}\n                          activeStep={activeStep}\n                          handleSkip={handleSkip}\n                          activeStep={activeStep}\n                          steps={steps}\n                          handleSubmit={handleSubmit}\n                          handleNext={handleNext}\n                        />\n                      </MDBContainer>\n                    </>\n                  )}\n                </React.Fragment>\n              )}\n            </Box>\n          </div>\n          <Backdrop\n            sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n            open={openBackdrop}\n            onClick={handleCloseBackdrop}\n          >\n            <CircularProgress color=\"inherit\" />\n          </Backdrop>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default Declaration;\n"]},"metadata":{},"sourceType":"module"}