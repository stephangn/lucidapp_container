{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axiosInstance from \"../axiosApi\";\nimport { useEffect } from \"react\";\nimport useRefreshToken from \"./useRefreshToken\";\nimport useAuth from \"./useAuth\";\nimport axios from \"axios\";\n\nconst useAxiosPrivate = () => {\n  _s();\n\n  const refresh = useRefreshToken();\n  const {\n    auth\n  } = useAuth();\n  useEffect(() => {\n    const requestIntercept = axiosInstance.interceptors.request.use(config => {\n      if (!config.headers['Authorization']) {\n        config.headers['Authorization'] = 'Bearer ${auth?.access}';\n      }\n\n      return config;\n    }, error => Promise.reject(error));\n    const responseIntercept = axiosInstance.interceptors.response.use( //Antwort weiterleiten wenn alles okay \n    response => response, //fehler abfangen und vorherige Anfrage einlesen\n    async error => {\n      var _error$response;\n\n      const prevRequest = error === null || error === void 0 ? void 0 : error.config;\n\n      if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !(prevRequest !== null && prevRequest !== void 0 && prevRequest.sent)) {\n        prevRequest.sent = true;\n        const newAccessToken = await refresh();\n        prevRequest.headers['Authorization'] = 'Bearer ${newAccessToken)';\n        return axiosInstance(prevRequest);\n      }\n\n      return Promise.reject(error);\n    }); //Cleanup -> um schleifen zu vermeiden \n\n    return () => {\n      axiosInstance.interceptors.request.eject(requestIntercept);\n      axiosInstance.interceptors.response.eject(responseIntercept);\n    };\n  }, [auth, refresh]); //zurückgeben des Axios Call mit Interceptor\n\n  return axiosInstance;\n};\n\n_s(useAxiosPrivate, \"cOmbDhC1G7Ca93jGC+edHF4xR3w=\", false, function () {\n  return [useRefreshToken, useAuth];\n});\n\nexport default useAxiosPrivate;","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/hooks/useAxiosPrivate.js"],"names":["axiosInstance","useEffect","useRefreshToken","useAuth","axios","useAxiosPrivate","refresh","auth","requestIntercept","interceptors","request","use","config","headers","error","Promise","reject","responseIntercept","response","prevRequest","status","sent","newAccessToken","eject"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAMC,OAAO,GAAGJ,eAAe,EAA/B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAWJ,OAAO,EAAxB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMO,gBAAgB,GAAGR,aAAa,CAACS,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CACrBC,MAAM,IAAI;AACN,UAAI,CAACA,MAAM,CAACC,OAAP,CAAe,eAAf,CAAL,EAAsC;AAClCD,QAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,IAAkC,wBAAlC;AACH;;AACD,aAAOD,MAAP;AACH,KANoB,EAMjBE,KAAD,IAAWC,OAAO,CAACC,MAAR,CAAeF,KAAf,CANO,CAAzB;AAQA,UAAMG,iBAAiB,GAAGjB,aAAa,CAACS,YAAd,CAA2BS,QAA3B,CAAoCP,GAApC,EACtB;AACAO,IAAAA,QAAQ,IAAIA,QAFU,EAGtB;AACA,UAAOJ,KAAP,IAAiB;AAAA;;AACb,YAAMK,WAAW,GAAGL,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEF,MAA3B;;AACA,UAAI,CAAAE,KAAK,SAAL,IAAAA,KAAK,WAAL,+BAAAA,KAAK,CAAEI,QAAP,oEAAiBE,MAAjB,MAA4B,GAA5B,IAAmC,EAACD,WAAD,aAACA,WAAD,eAACA,WAAW,CAAEE,IAAd,CAAvC,EAA2D;AACvDF,QAAAA,WAAW,CAACE,IAAZ,GAAmB,IAAnB;AACA,cAAMC,cAAc,GAAG,MAAMhB,OAAO,EAApC;AACAa,QAAAA,WAAW,CAACN,OAAZ,CAAoB,eAApB,IAAuC,0BAAvC;AACA,eAAOb,aAAa,CAACmB,WAAD,CAApB;AACH;;AACD,aAAOJ,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,KAbqB,CAA1B,CAVY,CA0BZ;;AACA,WAAM,MAAM;AACRd,MAAAA,aAAa,CAACS,YAAd,CAA2BC,OAA3B,CAAmCa,KAAnC,CAAyCf,gBAAzC;AACAR,MAAAA,aAAa,CAACS,YAAd,CAA2BS,QAA3B,CAAoCK,KAApC,CAA0CN,iBAA1C;AAEH,KAJD;AAMH,GAjCQ,EAiCN,CAACV,IAAD,EAAMD,OAAN,CAjCM,CAAT,CAJ0B,CAsC1B;;AACA,SAAON,aAAP;AAEH,CAzCD;;GAAMK,e;UACcH,e,EACCC,O;;;AAyCrB,eAAeE,eAAf","sourcesContent":["import axiosInstance from \"../axiosApi\";\nimport { useEffect } from \"react\";\nimport useRefreshToken from \"./useRefreshToken\";\nimport useAuth from \"./useAuth\";\nimport axios from \"axios\";\n\nconst useAxiosPrivate = () => {\n    const refresh = useRefreshToken();\n    const { auth } = useAuth();\n\n    useEffect(() => {\n\n        const requestIntercept = axiosInstance.interceptors.request.use(\n            config => {\n                if (!config.headers['Authorization']) {\n                    config.headers['Authorization'] = 'Bearer ${auth?.access}';\n                }\n                return config;\n            }, (error) => Promise.reject(error)\n        ); \n        const responseIntercept = axiosInstance.interceptors.response.use(\n            //Antwort weiterleiten wenn alles okay \n            response => response,\n            //fehler abfangen und vorherige Anfrage einlesen\n            async (error) => {\n                const prevRequest = error?.config;\n                if (error?.response?.status === 401 && !prevRequest?.sent) {\n                    prevRequest.sent = true;\n                    const newAccessToken = await refresh();\n                    prevRequest.headers['Authorization'] = 'Bearer ${newAccessToken)';\n                    return axiosInstance(prevRequest); \n                }\n                return Promise.reject(error);\n            }\n            \n        );\n        //Cleanup -> um schleifen zu vermeiden \n        return() => {\n            axiosInstance.interceptors.request.eject(requestIntercept)\n            axiosInstance.interceptors.response.eject(responseIntercept)\n\n        }\n        \n    }, [auth,refresh])\n    //zurückgeben des Axios Call mit Interceptor\n    return axiosInstance\n\n}\n\nexport default useAxiosPrivate"]},"metadata":{},"sourceType":"module"}