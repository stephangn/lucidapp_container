{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Declaration.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport { useParams } from \"react-router-dom\"; // Unterformulare\n\nimport AllgemeineAngaben from \"../components/Declaration/AllgemeineAngaben\";\nimport Adressdaten from \"../components/Declaration/Adressdaten\";\nimport Lieferdaten from \"../components/Declaration/Lieferdaten\";\nimport Rechnungsdaten from \"../components/Declaration/Rechnungsdaten\";\nimport AnmeldungDokumente from \"../components/Declaration/AnmeldungDokumente\";\nimport { MDBContainer, MDBSpinner } from \"mdb-react-ui-kit\"; //Smart Contract\n\nimport { createZollanmeldung } from \"../Web3Client\"; // Stepper\n\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\"; //Nutzerdaten Abruf\n\nimport useAuth from \"../hooks/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Declaration() {\n  _s();\n\n  const [usedInvoice, setUsedInvoice] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const [pubkeyCO, setPubkeyCO] = useState();\n  const [transactionInvoices, setTransactionInvoices] = useState(); //state für dokumente \n\n  const usedDocuments = [];\n  const [documents, setDocuments] = useState(); //auswahl für Zollämter\n\n  const [customOffices, setCustomOffices] = useState({}); //funktion für Nutzerdaten\n\n  const {\n    auth\n  } = useAuth(); //Abfrage der TransaktionsID \n\n  const {\n    transactionId\n  } = useParams(); // Stepper-Logik\n\n  const steps = [\"Allgemeine Angaben\", \"Adressdaten\", \"Lieferdaten\", \"Rechnungsdaten\", \"Dokumente\"];\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set()); // (Kein Step ist optional)\n\n  const isStepOptional = step => {\n    return;\n  }; //Abfrage der voreingestellten Daten\n\n\n  const axiosInstance = useAxiosPrivate();\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  }; //Übertragen der Daten\n\n\n  const handleSubmit = () => {\n    console.log(fieldValue); //auth.pubkey -> eigener Pubkey\n    //exporteur_publickey -> kontrahentenpubkey\n    // zollamt hamburg pubkey -> 0xe24D91818F5F92B4969867A8164d4E27D4336a99 (nicht fertig implementiert)\n    //Hier fehlen noch der Pub Key (1. Input) vom Zoll sowie die Blockchain-interne RechnungsID (2.Input)(Muss beides aus Datenbank kommen)\n    //Zollwert fehlt ebenfalls (3. Wert)\n    //Muss noch getestet werden inbesondere ob Summe funktioniert\n\n    const zollwert = fieldValue.total_value + fieldValue.lieferkosten;\n    console.log(zollwert);\n    blockchainZollanmeldungTransaction(pubkeyCO, fieldValue.rechnungID, zollwert, fieldValue.lieferbedingung);\n    return;\n  }; // -- DATENFELDER --\n  // State des Inhalts der Felder\n\n\n  const [fieldValue, setFieldValue] = React.useState({\n    // Allgemeine Angaben\n    auftragsnummer: \"\",\n    bearbeitendeDienststelle: \"\",\n    anmeldungArt: \"\",\n    geschaeftArt: \"\",\n    zahlungArt: \"\",\n    // Adressdaten Versender\n    eoriVersender: \"\",\n    nameVersender: \"\",\n    vornameVersender: \"\",\n    firmaVersender: \"\",\n    strasseVersender: \"\",\n    plzVersender: \"\",\n    ortVersender: \"\",\n    staatVersender: \"\",\n    telefonVersender: \"\",\n    emailVersender: \"\",\n    // Adressdaten Anmelder\n    eoriAnmelder: \"\",\n    nameAnmelder: \"\",\n    vornameAnmelder: \"\",\n    firmaAnmelder: \"\",\n    strasseAnmelder: \"\",\n    plzAnmelder: \"\",\n    ortAnmelder: \"\",\n    staatAnmelder: \"\",\n    telefonAnmelder: \"\",\n    emailAnmelder: \"\",\n    // Lieferdaten\n    ausfuhrland: \"\",\n    bestimmungsland: \"\",\n    bestimmungsbundesland: \"\",\n    befoerderungsmittel: \"\",\n    lieferbedingung: \"\",\n    lieferort: \"\",\n    warenort: \"\",\n    lieferkosten: \"\",\n    //Rechnungsdaten\n    datumRechnung: \"\",\n    gesamtbetrag: \"\",\n    waehrung: \"\"\n  });\n  const [rechnungsposten, setRechnungsposten] = React.useState([{}]); // State über fehlende Eingaben\n\n  const [inputMissingError, setInputMissingError] = React.useState({\n    // Allgemeine Angaben\n    auftragsnummer: false,\n    bearbeitendeDienststelle: false,\n    anmeldungArt: false,\n    geschaeftArt: false,\n    zahlungArt: false,\n    // Adressdaten Versender\n    eoriVersender: false,\n    nameVersender: false,\n    vornameVersender: false,\n    firmaVersender: false,\n    strasseVersender: false,\n    plzVersender: false,\n    ortVersender: false,\n    staatVersender: false,\n    telefonVersender: false,\n    emailVersender: false,\n    // Adressdaten Anmelder\n    eoriAnmelder: false,\n    nameAnmelder: false,\n    vornameAnmelder: false,\n    firmaAnmelder: false,\n    strasseAnmelder: false,\n    plzAnmelder: false,\n    ortAnmelder: false,\n    staatAnmelder: false,\n    telefonAnmelder: false,\n    emailAnmelder: false,\n    // Lieferdaten\n    ausfuhrland: false,\n    bestimmungsland: false,\n    bestimmungsbundesland: false,\n    befoerderungsmittel: false,\n    lieferbedingung: false,\n    lieferort: false,\n    warenort: false,\n    lieferkosten: false,\n    //Rechnungsdaten\n    datumRechnung: false,\n    gesamtbetrag: false,\n    waehrung: false\n  }); // State über falsche Inputs (müssen Zahlen sein)\n\n  const [inputWrongError, setInputWrongError] = React.useState({\n    auftragsnummer: false,\n    eoriVersender: false,\n    plzVersender: false,\n    eoriAnmelder: false,\n    plsAnmelder: false,\n    lieferkosten: false\n  }); // FieldChange für Select und String-Felder\n\n  function handleFieldChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    setFieldValue({ ...fieldValue,\n      [name]: value\n    });\n    setInputMissingError({ ...inputMissingError,\n      [name]: false\n    });\n  } // FieldChange für Zahlen-Inputfelder\n\n\n  function handleNumberFieldChange(event) {\n    const name = event.target.name;\n    const value = event.target.value; // Validierung: nur Zahlen\n\n    if (isNaN(value)) {\n      setInputWrongError({ ...inputWrongError,\n        [name]: true\n      });\n    } else {\n      setInputWrongError({ ...inputWrongError,\n        [name]: false\n      });\n    }\n\n    setFieldValue({ ...fieldValue,\n      [name]: value\n    });\n    setInputMissingError({ ...inputMissingError,\n      [name]: false\n    });\n  } // Abfragen der Bestandsdaten\n\n\n  useEffect(async () => {\n    console.log(transaktionId);\n    /*     if (typeof transaktionId == \"undefined\") {\n          return\n        } */\n\n    await axiosInstance.get(`transactions/` + transaktionId).then(res => {\n      setFieldValue(prev => {\n        return { ...prev,\n          auftragsnummer: res.data.id,\n          eoriVersender: res.data.partnership.partner.eori_nr,\n          //nameVersender: .partnership.partner.name,\n          firmaVersender: res.data.partnership.partner.name,\n          strasseVersender: res.data.partnership.partner.street,\n          plzVersender: res.data.partnership.partner.city_code,\n          ortVersender: res.data.partnership.partner.city,\n          staatVersender: res.data.partnership.partner.country_code,\n          telefonVersender: res.data.partnership.partner.phone,\n          emailVersender: res.data.partnership.partner.email,\n          exporteur_pubkey: res.data.partnership.partner.publickey\n        };\n      });\n      setIsLoading(false);\n    }); //Abfrage der eigenen Nutzerdaten\n\n    await axiosInstance.get(`user/`).then(response => {\n      //console.log(response);\n      setFieldValue(prev => {\n        var _response$data$0$empl;\n\n        return { ...prev,\n          eoriAnmelder: (_response$data$0$empl = response.data[0].employee) === null || _response$data$0$empl === void 0 ? void 0 : _response$data$0$empl.company.eori_nr,\n          //nameVersender: .partnership.partner.name,\n          firmaAnmelder: response.data[0].employee.company.name,\n          strasseAnmelder: response.data[0].employee.company.street,\n          plzAnmelder: response.data[0].employee.company.city_code,\n          ortAnmelder: response.data[0].employee.company.city,\n          staatAnmelder: response.data[0].employee.company.country_code,\n          telefonAnmelder: response.data[0].employee.company.phone,\n          emailAnmelder: response.data[0].employee.company.email\n        };\n      });\n    }); //Abfrage der Rechnungen für Auswahl\n\n    await axiosInstance.get(`invoice/?transaction=${transaktionId}`).then(response => {\n      setTransactionInvoices(response.data);\n    }); //Abfrage der Zollstationen\n\n    await axiosInstance.get(\"customoffices/\").then(res => {\n      console.log(res.data);\n      setCustomOffices(res.data); //setCompanies(res.data);\n    }); //Abfrage der Documente\n\n    await axiosInstance.get(\"documents/\").then(res => {\n      console.log(res.data);\n      setDocuments(res.data); //setCompanies(res.data);\n    });\n  }, [transaktionId]); //Abfrage der Rechnungsdaten\n\n  useEffect(async () => {\n    if (typeof usedInvoice !== \"undefined\") {\n      await axiosInstance.get(`invoice/${usedInvoice}/`).then(response => {\n        var _response$data8;\n\n        setFieldValue(prev => {\n          var _response$data, _response$data2, _response$data3, _response$data4, _response$data5, _response$data6, _response$data7;\n\n          return { ...prev,\n            waehrung: (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.currency,\n            datumRechnung: (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.issue_date,\n            gesamtbetrag: (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.total_value,\n            lieferkosten: (_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : _response$data4.transport_costs,\n            gesamtbetrag: (_response$data5 = response.data) === null || _response$data5 === void 0 ? void 0 : _response$data5.total_value,\n            blockchainRID: (_response$data6 = response.data) === null || _response$data6 === void 0 ? void 0 : _response$data6.blockchain_id,\n            rechnungID: (_response$data7 = response.data) === null || _response$data7 === void 0 ? void 0 : _response$data7.id\n          };\n        });\n        setRechnungsposten((_response$data8 = response.data) === null || _response$data8 === void 0 ? void 0 : _response$data8.invoiceItem);\n      });\n    }\n  }, [usedInvoice]); //Debugging\n\n  useEffect(() => {\n    console.log(\"FieldValue geändert\" + fieldValue.auftragsnummer);\n    console.log(\"PubKey des Zolls\" + pubkeyCO);\n    console.log(rechnungsposten);\n  }, [fieldValue]);\n\n  async function blockchainZollanmeldungTransaction(_zoll, _rechnungID, _zollwert, _transportkosten, _incoterms) {\n    //blockchain Transaktion\n    var erfolgreich = false;\n    createZollanmeldung(_zoll, _rechnungID, _zollwert, _transportkosten, _incoterms).then(tx => {\n      console.log(tx);\n      erfolgreich = true;\n      axiosInstance.post(\"/declaration/\", {\n        anmeldeArt: fieldValue.anmeldungArt,\n        geschaeftArt: fieldValue.geschaeftArt,\n        zahlungsart: fieldValue === null || fieldValue === void 0 ? void 0 : fieldValue.zahlungArt,\n        ausfuhrland: fieldValue.ausfuhrland,\n        bestimmungsland: fieldValue.bestimmungsland,\n        befoerderungsmittel: fieldValue.befoerderungsmittel,\n        lieferbedingung: fieldValue.lieferbedingung,\n        lieferort: fieldValue.lieferort,\n        warenort: fieldValue === null || fieldValue === void 0 ? void 0 : fieldValue.warenort,\n        invoice: usedInvoice,\n        transaction: transaktionId,\n        customs_office: fieldValue.bearbeitendeDienststelle,\n        blockchain_zid: tx,\n        document: usedDocuments\n      }).then(res => {\n        alert(\"Zollanmeldung in Datenbank gespeichert\");\n      }).catch(function (error) {\n        if (error.response) {\n          // The request was made and the server responded with a status code\n          // that falls out of the range of 2xx\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n          // http.ClientRequest in node.js\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.message);\n        }\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    return erfolgreich;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(MDBSpinner, {\n      grow: true,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"visually-hidden\",\n        children: \"L\\xE4dt..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Zollanmeldung\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Stepper, {\n            className: \"mb-3\",\n            activeStep: activeStep,\n            children: steps.map((label, index) => {\n              const stepProps = {};\n              const labelProps = {};\n\n              if (isStepOptional(index)) {\n                labelProps.optional = /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  children: \"Optional\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 23\n                }, this);\n              }\n\n              if (isStepSkipped(index)) {\n                stepProps.completed = false;\n              }\n\n              return /*#__PURE__*/_jsxDEV(Step, { ...stepProps,\n                children: /*#__PURE__*/_jsxDEV(StepLabel, { ...labelProps,\n                  children: label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 23\n                }, this)\n              }, label, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this), activeStep === steps.length ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                mt: 2,\n                mb: 1\n              },\n              children: \"All steps completed - you're finished\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: \"flex\",\n                flexDirection: \"row\",\n                pt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flex: \"1 1 auto\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleReset,\n                children: \"Zur\\xFCcksetzen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [activeStep === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n                children: /*#__PURE__*/_jsxDEV(AllgemeineAngaben, {\n                  fieldValue: fieldValue,\n                  customOffices: customOffices,\n                  setPubkeyCO: setPubkeyCO,\n                  setFieldValue: setFieldValue,\n                  inputMissingError: inputMissingError,\n                  setInputMissingError: setInputMissingError,\n                  inputWrongError: inputWrongError,\n                  setInputWrongError: setInputWrongError,\n                  handleFieldChange: handleFieldChange,\n                  handleNumberFieldChange: handleNumberFieldChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 23\n              }, this)\n            }, void 0, false) : activeStep === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n                children: /*#__PURE__*/_jsxDEV(Adressdaten, {\n                  fieldValue: fieldValue,\n                  setFieldValue: setFieldValue,\n                  inputMissingError: inputMissingError,\n                  setInputMissingError: setInputMissingError,\n                  inputWrongError: inputWrongError,\n                  setInputWrongError: setInputWrongError,\n                  handleFieldChange: handleFieldChange,\n                  handleNumberFieldChange: handleNumberFieldChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 23\n              }, this)\n            }, void 0, false) : activeStep === 2 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n                children: /*#__PURE__*/_jsxDEV(Lieferdaten, {\n                  fieldValue: fieldValue,\n                  setFieldValue: setFieldValue,\n                  inputMissingError: inputMissingError,\n                  setInputMissingError: setInputMissingError,\n                  inputWrongError: inputWrongError,\n                  setInputWrongError: setInputWrongError,\n                  handleFieldChange: handleFieldChange,\n                  handleNumberFieldChange: handleNumberFieldChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 23\n              }, this)\n            }, void 0, false) : activeStep === 3 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n                children: /*#__PURE__*/_jsxDEV(Rechnungsdaten, {\n                  fieldValue: fieldValue,\n                  setFieldValue: setFieldValue,\n                  inputMissingError: inputMissingError,\n                  setInputMissingError: setInputMissingError,\n                  inputWrongError: inputWrongError,\n                  setInputWrongError: setInputWrongError,\n                  handleFieldChange: handleFieldChange,\n                  handleNumberFieldChange: handleNumberFieldChange,\n                  rechnungsposten: rechnungsposten,\n                  setRechnungsposten: setRechnungsposten,\n                  transactionInvoices: transactionInvoices,\n                  setUsedInvoice: setUsedInvoice\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 23\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n                children: /*#__PURE__*/_jsxDEV(AnmeldungDokumente, {\n                  usedDocuments: usedDocuments,\n                  documents: documents\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 23\n              }, this)\n            }, void 0, false), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: \"flex\",\n                flexDirection: \"row\",\n                pt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                color: \"inherit\",\n                disabled: activeStep === 0,\n                onClick: handleBack,\n                sx: {\n                  mr: 1\n                },\n                children: \"Zur\\xFCck\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flex: \"1 1 auto\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 21\n              }, this), isStepOptional(activeStep) && /*#__PURE__*/_jsxDEV(Button, {\n                color: \"inherit\",\n                onClick: handleSkip,\n                sx: {\n                  mr: 1\n                },\n                children: \"\\xDCberspringen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 23\n              }, this), activeStep === steps.length - 1 ? /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleSubmit,\n                children: \"Abschicken\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleNext,\n                children: \"Weiter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s(Declaration, \"ZHPzX/jwM8Fco+TfLnytLUFt90E=\", false, function () {\n  return [useAuth, useParams, useAxiosPrivate];\n});\n\n_c = Declaration;\nexport default Declaration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Declaration\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Declaration.jsx"],"names":["React","useState","useEffect","useAxiosPrivate","useParams","AllgemeineAngaben","Adressdaten","Lieferdaten","Rechnungsdaten","AnmeldungDokumente","MDBContainer","MDBSpinner","createZollanmeldung","Box","Stepper","Step","StepLabel","Button","Typography","useAuth","Declaration","usedInvoice","setUsedInvoice","isLoading","setIsLoading","pubkeyCO","setPubkeyCO","transactionInvoices","setTransactionInvoices","usedDocuments","documents","setDocuments","customOffices","setCustomOffices","auth","transactionId","steps","activeStep","setActiveStep","skipped","setSkipped","Set","isStepOptional","step","axiosInstance","isStepSkipped","has","handleNext","newSkipped","values","delete","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","handleReset","handleSubmit","console","log","fieldValue","zollwert","total_value","lieferkosten","blockchainZollanmeldungTransaction","rechnungID","lieferbedingung","setFieldValue","auftragsnummer","bearbeitendeDienststelle","anmeldungArt","geschaeftArt","zahlungArt","eoriVersender","nameVersender","vornameVersender","firmaVersender","strasseVersender","plzVersender","ortVersender","staatVersender","telefonVersender","emailVersender","eoriAnmelder","nameAnmelder","vornameAnmelder","firmaAnmelder","strasseAnmelder","plzAnmelder","ortAnmelder","staatAnmelder","telefonAnmelder","emailAnmelder","ausfuhrland","bestimmungsland","bestimmungsbundesland","befoerderungsmittel","lieferort","warenort","datumRechnung","gesamtbetrag","waehrung","rechnungsposten","setRechnungsposten","inputMissingError","setInputMissingError","inputWrongError","setInputWrongError","plsAnmelder","handleFieldChange","event","name","target","value","handleNumberFieldChange","isNaN","transaktionId","get","then","res","prev","data","id","partnership","partner","eori_nr","street","city_code","city","country_code","phone","email","exporteur_pubkey","publickey","response","employee","company","currency","issue_date","transport_costs","blockchainRID","blockchain_id","invoiceItem","_zoll","_rechnungID","_zollwert","_transportkosten","_incoterms","erfolgreich","tx","post","anmeldeArt","zahlungsart","invoice","transaction","customs_office","blockchain_zid","document","alert","catch","error","status","headers","request","message","err","width","map","label","index","stepProps","labelProps","optional","completed","length","mt","mb","display","flexDirection","pt","flex","mr"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport { useParams } from \"react-router-dom\";\n\n// Unterformulare\nimport AllgemeineAngaben from \"../components/Declaration/AllgemeineAngaben\";\nimport Adressdaten from \"../components/Declaration/Adressdaten\";\nimport Lieferdaten from \"../components/Declaration/Lieferdaten\";\nimport Rechnungsdaten from \"../components/Declaration/Rechnungsdaten\";\nimport AnmeldungDokumente from \"../components/Declaration/AnmeldungDokumente\";\n\nimport { MDBContainer, MDBSpinner } from \"mdb-react-ui-kit\";\n\n//Smart Contract\nimport { createZollanmeldung } from \"../Web3Client\";\n\n// Stepper\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\n\n//Nutzerdaten Abruf\n\nimport useAuth from \"../hooks/useAuth\";\n\nfunction Declaration() {\n  const [usedInvoice, setUsedInvoice] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const [pubkeyCO, setPubkeyCO] = useState();\n  const [transactionInvoices, setTransactionInvoices] = useState();\n\n  //state für dokumente \n\n  const usedDocuments = [];\n  const [documents, setDocuments] = useState();\n\n  //auswahl für Zollämter\n\n  const [customOffices, setCustomOffices] = useState({});\n\n  //funktion für Nutzerdaten\n  const { auth } = useAuth();\n\n  //Abfrage der TransaktionsID \n\n  const { transactionId } = useParams();\n  \n\n  // Stepper-Logik\n  const steps = [\n    \"Allgemeine Angaben\",\n    \"Adressdaten\",\n    \"Lieferdaten\",\n    \"Rechnungsdaten\",\n    \"Dokumente\",\n  ];\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n\n  // (Kein Step ist optional)\n  const isStepOptional = (step) => {\n    return;\n  };\n\n  //Abfrage der voreingestellten Daten\n  const axiosInstance = useAxiosPrivate();\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  //Übertragen der Daten\n  const handleSubmit = () => {\n    console.log(fieldValue);\n\n    //auth.pubkey -> eigener Pubkey\n    //exporteur_publickey -> kontrahentenpubkey\n    // zollamt hamburg pubkey -> 0xe24D91818F5F92B4969867A8164d4E27D4336a99 (nicht fertig implementiert)\n\n    //Hier fehlen noch der Pub Key (1. Input) vom Zoll sowie die Blockchain-interne RechnungsID (2.Input)(Muss beides aus Datenbank kommen)\n    //Zollwert fehlt ebenfalls (3. Wert)\n\n    //Muss noch getestet werden inbesondere ob Summe funktioniert\n    const zollwert = fieldValue.total_value + fieldValue.lieferkosten;\n    console.log(zollwert);\n    blockchainZollanmeldungTransaction(\n      pubkeyCO,\n      fieldValue.rechnungID,\n      zollwert,\n      fieldValue.lieferbedingung\n    );\n    \n    return;\n  };\n\n  // -- DATENFELDER --\n  // State des Inhalts der Felder\n  const [fieldValue, setFieldValue] = React.useState({\n    // Allgemeine Angaben\n    auftragsnummer: \"\",\n    bearbeitendeDienststelle: \"\",\n    anmeldungArt: \"\",\n    geschaeftArt: \"\",\n    zahlungArt: \"\",\n    // Adressdaten Versender\n    eoriVersender: \"\",\n    nameVersender: \"\",\n    vornameVersender: \"\",\n    firmaVersender: \"\",\n    strasseVersender: \"\",\n    plzVersender: \"\",\n    ortVersender: \"\",\n    staatVersender: \"\",\n    telefonVersender: \"\",\n    emailVersender: \"\",\n    // Adressdaten Anmelder\n    eoriAnmelder: \"\",\n    nameAnmelder: \"\",\n    vornameAnmelder: \"\",\n    firmaAnmelder: \"\",\n    strasseAnmelder: \"\",\n    plzAnmelder: \"\",\n    ortAnmelder: \"\",\n    staatAnmelder: \"\",\n    telefonAnmelder: \"\",\n    emailAnmelder: \"\",\n    // Lieferdaten\n    ausfuhrland: \"\",\n    bestimmungsland: \"\",\n    bestimmungsbundesland: \"\",\n    befoerderungsmittel: \"\",\n    lieferbedingung: \"\",\n    lieferort: \"\",\n    warenort: \"\",\n    lieferkosten: \"\",\n    //Rechnungsdaten\n    datumRechnung: \"\",\n    gesamtbetrag: \"\",\n    waehrung: \"\",\n  });\n\n  const [rechnungsposten, setRechnungsposten] = React.useState([{}]);\n\n  // State über fehlende Eingaben\n  const [inputMissingError, setInputMissingError] = React.useState({\n    // Allgemeine Angaben\n    auftragsnummer: false,\n    bearbeitendeDienststelle: false,\n    anmeldungArt: false,\n    geschaeftArt: false,\n    zahlungArt: false,\n    // Adressdaten Versender\n    eoriVersender: false,\n    nameVersender: false,\n    vornameVersender: false,\n    firmaVersender: false,\n    strasseVersender: false,\n    plzVersender: false,\n    ortVersender: false,\n    staatVersender: false,\n    telefonVersender: false,\n    emailVersender: false,\n    // Adressdaten Anmelder\n    eoriAnmelder: false,\n    nameAnmelder: false,\n    vornameAnmelder: false,\n    firmaAnmelder: false,\n    strasseAnmelder: false,\n    plzAnmelder: false,\n    ortAnmelder: false,\n    staatAnmelder: false,\n    telefonAnmelder: false,\n    emailAnmelder: false,\n    // Lieferdaten\n    ausfuhrland: false,\n    bestimmungsland: false,\n    bestimmungsbundesland: false,\n    befoerderungsmittel: false,\n    lieferbedingung: false,\n    lieferort: false,\n    warenort: false,\n    lieferkosten: false,\n    //Rechnungsdaten\n    datumRechnung: false,\n    gesamtbetrag: false,\n    waehrung: false,\n  });\n\n  // State über falsche Inputs (müssen Zahlen sein)\n  const [inputWrongError, setInputWrongError] = React.useState({\n    auftragsnummer: false,\n    eoriVersender: false,\n    plzVersender: false,\n    eoriAnmelder: false,\n    plsAnmelder: false,\n    lieferkosten: false,\n  });\n\n  // FieldChange für Select und String-Felder\n  function handleFieldChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    setFieldValue({ ...fieldValue, [name]: value });\n    setInputMissingError({ ...inputMissingError, [name]: false });\n  }\n\n  // FieldChange für Zahlen-Inputfelder\n  function handleNumberFieldChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    // Validierung: nur Zahlen\n    if (isNaN(value)) {\n      setInputWrongError({ ...inputWrongError, [name]: true });\n    } else {\n      setInputWrongError({ ...inputWrongError, [name]: false });\n    }\n\n    setFieldValue({ ...fieldValue, [name]: value });\n    setInputMissingError({ ...inputMissingError, [name]: false });\n  }\n\n  // Abfragen der Bestandsdaten\n\n  useEffect(async () => {\n    console.log(transaktionId)\n/*     if (typeof transaktionId == \"undefined\") {\n      return\n    } */\n    await axiosInstance.get(`transactions/` + transaktionId).then((res) => {\n      setFieldValue((prev) => {\n        return {\n          ...prev,\n          auftragsnummer: res.data.id,\n          eoriVersender: res.data.partnership.partner.eori_nr,\n          //nameVersender: .partnership.partner.name,\n          firmaVersender: res.data.partnership.partner.name,\n          strasseVersender: res.data.partnership.partner.street,\n          plzVersender: res.data.partnership.partner.city_code,\n          ortVersender: res.data.partnership.partner.city,\n          staatVersender: res.data.partnership.partner.country_code,\n          telefonVersender: res.data.partnership.partner.phone,\n          emailVersender: res.data.partnership.partner.email,\n          exporteur_pubkey: res.data.partnership.partner.publickey,\n        };\n      });\n      setIsLoading(false);\n    });\n\n    //Abfrage der eigenen Nutzerdaten\n\n    await axiosInstance.get(`user/`).then((response) => {\n      //console.log(response);\n      setFieldValue((prev) => {\n        return {\n          ...prev,\n          eoriAnmelder: response.data[0].employee?.company.eori_nr,\n          //nameVersender: .partnership.partner.name,\n          firmaAnmelder: response.data[0].employee.company.name,\n          strasseAnmelder: response.data[0].employee.company.street,\n          plzAnmelder: response.data[0].employee.company.city_code,\n          ortAnmelder: response.data[0].employee.company.city,\n          staatAnmelder: response.data[0].employee.company.country_code,\n          telefonAnmelder: response.data[0].employee.company.phone,\n          emailAnmelder: response.data[0].employee.company.email,\n        };\n      });\n    });\n\n    //Abfrage der Rechnungen für Auswahl\n\n    await axiosInstance\n      .get(`invoice/?transaction=${transaktionId}`)\n      .then((response) => {\n        setTransactionInvoices(response.data);\n      });\n\n    //Abfrage der Zollstationen\n    await axiosInstance.get(\"customoffices/\").then((res) => {\n      console.log(res.data);\n      setCustomOffices(res.data);\n      //setCompanies(res.data);\n    });\n      //Abfrage der Documente\n      await axiosInstance.get(\"documents/\").then((res) => {\n        console.log(res.data);\n        setDocuments(res.data);\n        //setCompanies(res.data);\n      });\n  }, [transaktionId]);\n\n  //Abfrage der Rechnungsdaten\n  useEffect(async() => {\n    if (typeof usedInvoice !== \"undefined\") \n      {\n      await axiosInstance\n      .get(`invoice/${usedInvoice}/`)\n      .then((response) => {\n        setFieldValue((prev) => {\n          return {\n            ...prev,\n            waehrung: response.data?.currency,\n            datumRechnung: response.data?.issue_date,\n            gesamtbetrag: response.data?.total_value,\n            lieferkosten: response.data?.transport_costs,\n            gesamtbetrag: response.data?.total_value,\n            blockchainRID: response.data?.blockchain_id,\n            rechnungID: response.data?.id,\n\n          };\n        });\n        setRechnungsposten(response.data?.invoiceItem);\n      });\n    }\n  }, [usedInvoice]);\n\n\n  //Debugging\n  useEffect(() => {\n    console.log(\"FieldValue geändert\" + fieldValue.auftragsnummer);\n    console.log(\"PubKey des Zolls\" + pubkeyCO);\n    console.log(rechnungsposten);\n  }, [fieldValue]);\n\n  async function blockchainZollanmeldungTransaction(\n    _zoll,\n    _rechnungID,\n    _zollwert,\n    _transportkosten,\n    _incoterms\n  ) {\n    //blockchain Transaktion\n    var erfolgreich = false;\n    createZollanmeldung(\n      _zoll,\n      _rechnungID,\n      _zollwert,\n      _transportkosten,\n      _incoterms\n    )\n      .then((tx) => {\n        console.log(tx);\n        erfolgreich = true;\n        axiosInstance\n          .post(\"/declaration/\", {\n            anmeldeArt: fieldValue.anmeldungArt,\n            geschaeftArt: fieldValue.geschaeftArt,\n            zahlungsart: fieldValue?.zahlungArt,\n            ausfuhrland: fieldValue.ausfuhrland,\n            bestimmungsland: fieldValue.bestimmungsland,\n            befoerderungsmittel: fieldValue.befoerderungsmittel,\n            lieferbedingung: fieldValue.lieferbedingung,\n            lieferort: fieldValue.lieferort,\n            warenort: fieldValue?.warenort,\n            invoice: usedInvoice,\n            transaction: transaktionId,\n            customs_office: fieldValue.bearbeitendeDienststelle,\n            blockchain_zid: tx,\n            document: usedDocuments\n          })\n          .then((res) => {\n            alert(\"Zollanmeldung in Datenbank gespeichert\");\n          })\n          .catch(function (error) {\n            if (error.response) {\n              // The request was made and the server responded with a status code\n              // that falls out of the range of 2xx\n              console.log(error.response.data);\n              console.log(error.response.status);\n              console.log(error.response.headers);\n            } else if (error.request) {\n              // The request was made but no response was received\n              // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n              // http.ClientRequest in node.js\n              console.log(error.request);\n            } else {\n              // Something happened in setting up the request that triggered an Error\n              console.log(\"Error\", error.message);\n            }\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    return erfolgreich;\n  }\n  return (\n    <>\n      {isLoading ? (\n        <MDBSpinner grow>\n          <span className=\"visually-hidden\">Lädt..</span>\n        </MDBSpinner>\n      ) : (\n        <>\n          <h3>Zollanmeldung</h3>\n          <br />\n          <div>\n            <Box sx={{ width: \"100%\" }}>\n              <Stepper className=\"mb-3\" activeStep={activeStep}>\n                {steps.map((label, index) => {\n                  const stepProps = {};\n                  const labelProps = {};\n                  if (isStepOptional(index)) {\n                    labelProps.optional = (\n                      <Typography variant=\"caption\">Optional</Typography>\n                    );\n                  }\n                  if (isStepSkipped(index)) {\n                    stepProps.completed = false;\n                  }\n                  return (\n                    <Step key={label} {...stepProps}>\n                      <StepLabel {...labelProps}>{label}</StepLabel>\n                    </Step>\n                  );\n                })}\n              </Stepper>\n              {activeStep === steps.length ? (\n                <React.Fragment>\n                  <Typography sx={{ mt: 2, mb: 1 }}>\n                    All steps completed - you&apos;re finished\n                  </Typography>\n                  <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                    <Box sx={{ flex: \"1 1 auto\" }} />\n                    <Button onClick={handleReset}>Zurücksetzen</Button>\n                  </Box>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  {activeStep === 0 ? (\n                    <>\n                      <MDBContainer>\n                        <AllgemeineAngaben\n                          fieldValue={fieldValue}\n                          customOffices={customOffices}\n                          setPubkeyCO={setPubkeyCO}\n                          setFieldValue={setFieldValue}\n                          inputMissingError={inputMissingError}\n                          setInputMissingError={setInputMissingError}\n                          inputWrongError={inputWrongError}\n                          setInputWrongError={setInputWrongError}\n                          handleFieldChange={handleFieldChange}\n                          handleNumberFieldChange={handleNumberFieldChange}\n                        />\n                      </MDBContainer>\n                    </>\n                  ) : activeStep === 1 ? (\n                    <>\n                      <MDBContainer>\n                        <Adressdaten\n                          fieldValue={fieldValue}\n                          setFieldValue={setFieldValue}\n                          inputMissingError={inputMissingError}\n                          setInputMissingError={setInputMissingError}\n                          inputWrongError={inputWrongError}\n                          setInputWrongError={setInputWrongError}\n                          handleFieldChange={handleFieldChange}\n                          handleNumberFieldChange={handleNumberFieldChange}\n                        />\n                      </MDBContainer>\n                    </>\n                  ) : activeStep === 2 ? (\n                    <>\n                      <MDBContainer>\n                        <Lieferdaten\n                          fieldValue={fieldValue}\n                          setFieldValue={setFieldValue}\n                          inputMissingError={inputMissingError}\n                          setInputMissingError={setInputMissingError}\n                          inputWrongError={inputWrongError}\n                          setInputWrongError={setInputWrongError}\n                          handleFieldChange={handleFieldChange}\n                          handleNumberFieldChange={handleNumberFieldChange}\n                        />\n                      </MDBContainer>\n                    </>\n                  ) : activeStep === 3 ? (\n                    <>\n                      <MDBContainer>\n                        <Rechnungsdaten\n                          fieldValue={fieldValue}\n                          setFieldValue={setFieldValue}\n                          inputMissingError={inputMissingError}\n                          setInputMissingError={setInputMissingError}\n                          inputWrongError={inputWrongError}\n                          setInputWrongError={setInputWrongError}\n                          handleFieldChange={handleFieldChange}\n                          handleNumberFieldChange={handleNumberFieldChange}\n                          rechnungsposten={rechnungsposten}\n                          setRechnungsposten={setRechnungsposten}\n                          transactionInvoices= {transactionInvoices}\n                          setUsedInvoice = {setUsedInvoice}\n                        />\n                      </MDBContainer>\n                    </>\n                  ) : (\n                    <>\n                      <MDBContainer>\n                        <AnmeldungDokumente\n                        usedDocuments= {usedDocuments}\n                        documents={documents}\n                        />\n\n                      </MDBContainer>\n                    </>\n                  )}\n                  <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                    <Button\n                      color=\"inherit\"\n                      disabled={activeStep === 0}\n                      onClick={handleBack}\n                      sx={{ mr: 1 }}\n                    >\n                      Zurück\n                    </Button>\n                    <Box sx={{ flex: \"1 1 auto\" }} />\n                    {isStepOptional(activeStep) && (\n                      <Button\n                        color=\"inherit\"\n                        onClick={handleSkip}\n                        sx={{ mr: 1 }}\n                      >\n                        Überspringen\n                      </Button>\n                    )}\n\n                    {activeStep === steps.length - 1 ? (\n                      <Button onClick={handleSubmit}>Abschicken</Button>\n                    ) : (\n                      <Button onClick={handleNext}>Weiter</Button>\n                    )}\n                  </Box>\n                  <br />\n                  <br />\n                  <br />\n                </React.Fragment>\n              )}\n            </Box>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default Declaration;\n"]},"metadata":{},"sourceType":"module"}