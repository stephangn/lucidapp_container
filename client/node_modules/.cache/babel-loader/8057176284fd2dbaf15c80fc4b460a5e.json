{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Documents/InvoiceForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, isValidElement } from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBBadge, MDBIcon } from \"mdb-react-ui-kit\";\nimport { init, createRechnung, createZollanmeldung } from \"../../Web3Client\";\nimport { useParams } from \"react-router-dom\";\nimport \"json2csv\";\nimport LZString from \"lz-string\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar crypto = require(\"crypto\");\n\nvar blockchaintx = \"\";\n\nfunction InvoiceForm(props) {\n  _s();\n\n  const axiosInstance = useAxiosPrivate();\n  const [invoiceFields, setInvoiceFields] = useState({\n    type: \"Rechnung\",\n    description: \"\",\n    blockchainID: blockchaintx,\n    issue_date: \"\",\n    invoice_text: \"\",\n    currency: \"\",\n    transaction: \"\",\n    invoiceItem: [],\n    priceTotal: \"\",\n    transport_costs: \"\"\n  });\n  const [invoiceItemFields, setInvoiceItemFields] = useState([{\n    product: \"\",\n    amount: \"\",\n    unit: \"\",\n    price: \"\"\n  }]);\n  const {\n    transactionId\n  } = useParams(); // -- Loading Backdrop --\n\n  const [openBackdrop, setOpenBackdrop] = React.useState(false);\n\n  const handleCloseBackdrop = () => {\n    setOpenBackdrop(false);\n  };\n\n  const handleToggleBackdrop = () => {\n    setOpenBackdrop(!openBackdrop);\n  }; // Eingabe handlen\n\n\n  function handleItemChange(index, event) {\n    const values = [...invoiceItemFields];\n    values[index][event.target.name] = event.target.value;\n    setInvoiceItemFields(values);\n    invoiceFields.invoiceItem = invoiceItemFields;\n    setInvoiceFields({ ...invoiceFields,\n      transaction: transactionId\n    });\n  } // Abschicken\n\n\n  async function handleSubmit(e) {\n    var _props$transactionDat;\n\n    // Check Formular Validierung\n    var forms = document.getElementById(\"invoiceForm\");\n\n    if (forms.checkValidity() == false) {\n      console.log(\"Formular Eingabe inkorrekt.\");\n      return;\n    }\n\n    handleToggleBackdrop();\n\n    var crypto = require(\"crypto\");\n\n    let total = calculatePriceTotal(); //Blockchain Transaktion\n\n    createRechnung(total.toString(), (_props$transactionDat = props.transactionData) === null || _props$transactionDat === void 0 ? void 0 : _props$transactionDat.partnership.partner.publickey, invoiceFields.currency, invoiceFields.issue_date, crypto.createHash(\"sha512\").update(invoiceItemFields).digest(\"hex\"), invoiceFields.transport_costs).then(tx => {\n      console.log(\"Transaktion erfolgreich: \" + tx);\n      blockchaintx = tx; //Übermittel und anlegen der Rechnung\n\n      axiosInstance.post(\"/invoice/\", {\n        blockchain_id: tx - 1,\n        //Blockchain RechnungsID wird gespeichert\n        currency: invoiceFields.currency,\n        description: invoiceFields.description,\n        invoiceItem: invoiceFields.invoiceItem,\n        invoice_text: invoiceFields.invoice_text,\n        issue_date: invoiceFields.issue_date,\n        priceTotal: invoiceFields.priceTotal,\n        transaction: invoiceFields.transaction,\n        transport_costs: invoiceFields.transport_costs,\n        type: invoiceFields.type\n      }).then(res => {\n        console.log(\"Rechnung erfolgreich hochgeladen.\");\n        props.setNewDocument(!props.newDocument);\n        props.setSnackbarSuccess(true);\n        props.setSnackbarMessage(\"Rechnung erfolgreich hochgeladen.\");\n        handleCloseBackdrop();\n        props.handleOpenSnackbar();\n        props.setNewDocument(!props.newDocument);\n        props.toggleAddDocumentModal();\n      }).catch(error => {\n        console.error(\"There was an error!\", error);\n        props.setSnackbarSuccess(false);\n        props.setSnackbarMessage(\"Fehler beim hochladen der Rechnung.\");\n        handleCloseBackdrop();\n        props.handleOpenSnackbar();\n        props.toggleAddDocumentModal();\n      });\n    }).catch(err => {\n      console.log(\"Transaktion fehlgeschlagen: \" + \"  \" + err);\n      props.setSnackbarSuccess(false);\n      props.setSnackbarMessage(\"Fehler bei der Verarbeitung der Rechnung.\");\n      handleCloseBackdrop();\n      props.handleOpenSnackbar();\n      props.toggleAddDocumentModal();\n    });\n  } // Rechnungsposten hinzufügen\n\n\n  function handleAddFields(event) {\n    event.preventDefault();\n    setInvoiceItemFields([...invoiceItemFields, {\n      product: \"\",\n      amount: \"\",\n      unit: \"\",\n      price: \"\"\n    }]);\n  } // Rechnungsposten entfernen\n\n\n  function handleRemoveFields(event, index) {\n    event.preventDefault();\n    const values = [...invoiceItemFields]; // ALT:\n    // values.splice(\n    //   values.findIndex((value) => value.index === index),\n    //   1\n    // );\n\n    values.pop();\n    setInvoiceItemFields(values);\n  }\n\n  function calculatePriceTotal() {\n    const items = invoiceItemFields;\n    let total = 0;\n\n    for (let i = 0; i < items.length; i++) {\n      total += items[i].amount * items[i].price;\n    }\n\n    setInvoiceFields({ ...items,\n      priceTotal: total\n    });\n    return total;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MDBContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"invoiceForm\",\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n          children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n            children: /*#__PURE__*/_jsxDEV(MDBInput, {\n              className: \"mb-4\",\n              name: \"issue_date\",\n              id: \"issue_date\",\n              label: \"Rechnungsdatum\",\n              type: \"date\",\n              required: true,\n              onChange: e => setInvoiceFields({ ...invoiceFields,\n                issue_date: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n            children: /*#__PURE__*/_jsxDEV(MDBInput, {\n              className: \"mb-4\",\n              name: \"currency\",\n              value: invoiceFields.currency,\n              id: \"currency\",\n              label: \"W\\xE4hrung\",\n              type: \"text\",\n              required: true,\n              onChange: e => setInvoiceFields({ ...invoiceFields,\n                currency: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n            children: /*#__PURE__*/_jsxDEV(MDBInput, {\n              className: \"mb-4\",\n              name: \"transport_costs\",\n              id: \"transport_costs\",\n              label: \"Lieferkosten\",\n              type: \"number\",\n              required: true,\n              onChange: e => setInvoiceFields({ ...invoiceFields,\n                transport_costs: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n          wrapperClass: \"mb-4\",\n          textarea: true,\n          name: \"description\",\n          id: \"description\",\n          rows: 3,\n          label: \"Beschreibung\",\n          required: true,\n          onChange: e => setInvoiceFields({ ...invoiceFields,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), invoiceItemFields.map((inputField, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"Rechnungsposten \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n            className: \"mb-4\",\n            name: \"product\",\n            label: \"Produktname\",\n            type: \"text\",\n            value: inputField.product,\n            required: true,\n            onChange: event => handleItemChange(index, event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n            children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n              children: /*#__PURE__*/_jsxDEV(MDBInput, {\n                className: \"mb-4\",\n                name: \"amount\",\n                label: \"Anzahl\",\n                type: \"number\",\n                value: inputField.amount,\n                required: true,\n                onChange: event => handleItemChange(index, event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n              children: /*#__PURE__*/_jsxDEV(MDBInput, {\n                className: \"mb-4\",\n                name: \"unit\",\n                label: \"Einheit\",\n                type: \"text\",\n                value: inputField.unit,\n                required: true,\n                onChange: event => handleItemChange(index, event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n              children: /*#__PURE__*/_jsxDEV(MDBInput, {\n                className: \"mb-4\",\n                name: \"price\",\n                label: \"Preis pro Enheit\",\n                type: \"number\",\n                value: inputField.price,\n                required: true,\n                onChange: event => handleItemChange(index, event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n              children: /*#__PURE__*/_jsxDEV(MDBBadge, {\n                className: \"mt-2 me-4 float-end\",\n                color: \"primary\",\n                children: [\"Betrag : \", inputField.amount * inputField.price, \" \", invoiceFields.invoiceCurrency]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n          className: \"me-3 mb-3\",\n          color: \"success\",\n          onClick: handleAddFields,\n          children: [/*#__PURE__*/_jsxDEV(MDBIcon, {\n            size: \"lg\",\n            className: \"me-2\",\n            fas: true,\n            icon: \"plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), \"Rechnungsposten hinzuf\\xFCgen\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), invoiceItemFields.length > 1 && /*#__PURE__*/_jsxDEV(MDBBtn, {\n          className: \"me-3 mb-3\",\n          color: \"danger\",\n          onClick: handleRemoveFields,\n          children: [/*#__PURE__*/_jsxDEV(MDBIcon, {\n            size: \"lg\",\n            className: \"me-2\",\n            fas: true,\n            icon: \"minus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), \"Rechnungsposten entfernen\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n          type: \"submit\",\n          className: \"float-end\",\n          color: \"primary\",\n          onClick: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(MDBIcon, {\n            size: \"lg\",\n            className: \"me-2\",\n            fas: true,\n            icon: \"paper-plane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), \"Abschicken\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n      sx: {\n        color: \"#fff\",\n        zIndex: theme => theme.zIndex.drawer + 1\n      },\n      open: openBackdrop,\n      onClick: handleCloseBackdrop,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(InvoiceForm, \"3Jf93ye/N3C/YjePnjXAuvalgNc=\", false, function () {\n  return [useAxiosPrivate, useParams];\n});\n\n_c = InvoiceForm;\nexport default InvoiceForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoiceForm\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Documents/InvoiceForm.jsx"],"names":["React","useState","useEffect","isValidElement","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","MDBBadge","MDBIcon","init","createRechnung","createZollanmeldung","useParams","LZString","useAxiosPrivate","Backdrop","CircularProgress","crypto","require","blockchaintx","InvoiceForm","props","axiosInstance","invoiceFields","setInvoiceFields","type","description","blockchainID","issue_date","invoice_text","currency","transaction","invoiceItem","priceTotal","transport_costs","invoiceItemFields","setInvoiceItemFields","product","amount","unit","price","transactionId","openBackdrop","setOpenBackdrop","handleCloseBackdrop","handleToggleBackdrop","handleItemChange","index","event","values","target","name","value","handleSubmit","e","forms","document","getElementById","checkValidity","console","log","total","calculatePriceTotal","toString","transactionData","partnership","partner","publickey","createHash","update","digest","then","tx","post","blockchain_id","res","setNewDocument","newDocument","setSnackbarSuccess","setSnackbarMessage","handleOpenSnackbar","toggleAddDocumentModal","catch","error","err","handleAddFields","preventDefault","handleRemoveFields","pop","items","i","length","map","inputField","invoiceCurrency","color","zIndex","theme","drawer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, isValidElement } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBBadge,\n  MDBIcon,\n} from \"mdb-react-ui-kit\";\nimport { init, createRechnung, createZollanmeldung } from \"../../Web3Client\";\nimport { useParams } from \"react-router-dom\";\nimport {} from \"json2csv\";\nimport LZString from \"lz-string\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nvar crypto = require(\"crypto\");\nvar blockchaintx = \"\";\nfunction InvoiceForm(props) {\n  const axiosInstance = useAxiosPrivate();\n\n  const [invoiceFields, setInvoiceFields] = useState({\n    type: \"Rechnung\",\n    description: \"\",\n    blockchainID: blockchaintx,\n    issue_date: \"\",\n    invoice_text: \"\",\n    currency: \"\",\n    transaction: \"\",\n    invoiceItem: [],\n    priceTotal: \"\",\n    transport_costs: \"\",\n  });\n\n  const [invoiceItemFields, setInvoiceItemFields] = useState([\n    {\n      product: \"\",\n      amount: \"\",\n      unit: \"\",\n      price: \"\",\n    },\n  ]);\n  const { transactionId } = useParams();\n\n  // -- Loading Backdrop --\n  const [openBackdrop, setOpenBackdrop] = React.useState(false);\n  const handleCloseBackdrop = () => {\n    setOpenBackdrop(false);\n  };\n  const handleToggleBackdrop = () => {\n    setOpenBackdrop(!openBackdrop);\n  };\n\n  // Eingabe handlen\n  function handleItemChange(index, event) {\n    const values = [...invoiceItemFields];\n    values[index][event.target.name] = event.target.value;\n    setInvoiceItemFields(values);\n\n    invoiceFields.invoiceItem = invoiceItemFields;\n\n    setInvoiceFields({ ...invoiceFields, transaction: transactionId });\n  }\n\n  // Abschicken\n  async function handleSubmit(e) {\n    // Check Formular Validierung\n    var forms = document.getElementById(\"invoiceForm\");\n    if (forms.checkValidity() == false) {\n      console.log(\"Formular Eingabe inkorrekt.\");\n      return;\n    }\n\n    handleToggleBackdrop();\n    var crypto = require(\"crypto\");\n    let total = calculatePriceTotal();\n\n    //Blockchain Transaktion\n    createRechnung(\n      total.toString(),\n      props.transactionData?.partnership.partner.publickey,\n      invoiceFields.currency,\n      invoiceFields.issue_date,\n      crypto.createHash(\"sha512\").update(invoiceItemFields).digest(\"hex\"),\n      invoiceFields.transport_costs\n    )\n      .then((tx) => {\n        console.log(\"Transaktion erfolgreich: \" + tx);\n        blockchaintx = tx;\n        //Übermittel und anlegen der Rechnung\n        axiosInstance\n          .post(\"/invoice/\", {\n            blockchain_id: tx - 1, //Blockchain RechnungsID wird gespeichert\n            currency: invoiceFields.currency,\n            description: invoiceFields.description,\n            invoiceItem: invoiceFields.invoiceItem,\n            invoice_text: invoiceFields.invoice_text,\n            issue_date: invoiceFields.issue_date,\n            priceTotal: invoiceFields.priceTotal,\n            transaction: invoiceFields.transaction,\n            transport_costs: invoiceFields.transport_costs,\n            type: invoiceFields.type,\n          })\n          .then((res) => {\n            console.log(\"Rechnung erfolgreich hochgeladen.\");\n            props.setNewDocument(!props.newDocument);\n            props.setSnackbarSuccess(true);\n            props.setSnackbarMessage(\"Rechnung erfolgreich hochgeladen.\");\n            handleCloseBackdrop();\n            props.handleOpenSnackbar();\n            props.setNewDocument(!props.newDocument);\n            props.toggleAddDocumentModal();\n          })\n          .catch((error) => {\n            console.error(\"There was an error!\", error);\n            props.setSnackbarSuccess(false);\n            props.setSnackbarMessage(\"Fehler beim hochladen der Rechnung.\");\n            handleCloseBackdrop();\n            props.handleOpenSnackbar();\n            props.toggleAddDocumentModal();\n          });\n      })\n      .catch((err) => {\n        console.log(\"Transaktion fehlgeschlagen: \" + \"  \" + err);\n        props.setSnackbarSuccess(false);\n        props.setSnackbarMessage(\"Fehler bei der Verarbeitung der Rechnung.\");\n        handleCloseBackdrop();\n        props.handleOpenSnackbar();\n        props.toggleAddDocumentModal();\n      });\n  }\n\n  // Rechnungsposten hinzufügen\n  function handleAddFields(event) {\n    event.preventDefault();\n    setInvoiceItemFields([\n      ...invoiceItemFields,\n      {\n        product: \"\",\n        amount: \"\",\n        unit: \"\",\n        price: \"\",\n      },\n    ]);\n  }\n\n  // Rechnungsposten entfernen\n  function handleRemoveFields(event, index) {\n    event.preventDefault();\n    const values = [...invoiceItemFields];\n\n    // ALT:\n    // values.splice(\n    //   values.findIndex((value) => value.index === index),\n    //   1\n    // );\n\n    values.pop();\n    setInvoiceItemFields(values);\n  }\n\n  function calculatePriceTotal() {\n    const items = invoiceItemFields;\n    let total = 0;\n\n    for (let i = 0; i < items.length; i++) {\n      total += items[i].amount * items[i].price;\n    }\n    setInvoiceFields({ ...items, priceTotal: total });\n\n    return total;\n  }\n\n  return (\n    <>\n      <MDBContainer>\n        <form id=\"invoiceForm\" onSubmit={(e) => e.preventDefault()}>\n          <MDBRow>\n            <MDBCol>\n              <MDBInput\n                className=\"mb-4\"\n                name=\"issue_date\"\n                id=\"issue_date\"\n                label=\"Rechnungsdatum\"\n                type=\"date\"\n                required\n                onChange={(e) =>\n                  setInvoiceFields({\n                    ...invoiceFields,\n                    issue_date: e.target.value,\n                  })\n                }\n              />\n            </MDBCol>\n            <MDBCol>\n              <MDBInput\n                className=\"mb-4\"\n                name=\"currency\"\n                value={invoiceFields.currency}\n                id=\"currency\"\n                label=\"Währung\"\n                type=\"text\"\n                required\n                onChange={(e) =>\n                  setInvoiceFields({\n                    ...invoiceFields,\n                    currency: e.target.value,\n                  })\n                }\n              />\n            </MDBCol>\n            <MDBCol>\n              <MDBInput\n                className=\"mb-4\"\n                name=\"transport_costs\"\n                id=\"transport_costs\"\n                label=\"Lieferkosten\"\n                type=\"number\"\n                required\n                onChange={(e) =>\n                  setInvoiceFields({\n                    ...invoiceFields,\n                    transport_costs: e.target.value,\n                  })\n                }\n              />\n            </MDBCol>\n          </MDBRow>\n          <MDBInput\n            wrapperClass=\"mb-4\"\n            textarea\n            name=\"description\"\n            id=\"description\"\n            rows={3}\n            label=\"Beschreibung\"\n            required\n            onChange={(e) =>\n              setInvoiceFields({\n                ...invoiceFields,\n                description: e.target.value,\n              })\n            }\n          />\n          <hr />\n\n          {invoiceItemFields.map((inputField, index) => (\n            <div key={index}>\n              <h6>Rechnungsposten {index + 1}</h6>\n              <MDBInput\n                className=\"mb-4\"\n                name=\"product\"\n                label=\"Produktname\"\n                type=\"text\"\n                value={inputField.product}\n                required\n                onChange={(event) => handleItemChange(index, event)}\n              />\n              <MDBRow>\n                <MDBCol>\n                  <MDBInput\n                    className=\"mb-4\"\n                    name=\"amount\"\n                    label=\"Anzahl\"\n                    type=\"number\"\n                    value={inputField.amount}\n                    required\n                    onChange={(event) => handleItemChange(index, event)}\n                  />\n                </MDBCol>\n                <MDBCol>\n                  <MDBInput\n                    className=\"mb-4\"\n                    name=\"unit\"\n                    label=\"Einheit\"\n                    type=\"text\"\n                    value={inputField.unit}\n                    required\n                    onChange={(event) => handleItemChange(index, event)}\n                  />\n                </MDBCol>\n                <MDBCol>\n                  <MDBInput\n                    className=\"mb-4\"\n                    name=\"price\"\n                    label=\"Preis pro Enheit\"\n                    type=\"number\"\n                    value={inputField.price}\n                    required\n                    onChange={(event) => handleItemChange(index, event)}\n                  />\n                </MDBCol>\n                <MDBCol>\n                  <MDBBadge className=\"mt-2 me-4 float-end\" color=\"primary\">\n                    Betrag : {inputField.amount * inputField.price}{\" \"}\n                    {invoiceFields.invoiceCurrency}\n                  </MDBBadge>\n                </MDBCol>\n              </MDBRow>\n            </div>\n          ))}\n          <br />\n\n          <MDBBtn\n            className=\"me-3 mb-3\"\n            color=\"success\"\n            onClick={handleAddFields}\n          >\n            <MDBIcon size=\"lg\" className=\"me-2\" fas icon=\"plus\" />\n            Rechnungsposten hinzufügen\n          </MDBBtn>\n          {invoiceItemFields.length > 1 && (\n            <MDBBtn\n              className=\"me-3 mb-3\"\n              color=\"danger\"\n              onClick={handleRemoveFields}\n            >\n              <MDBIcon size=\"lg\" className=\"me-2\" fas icon=\"minus\" />\n              Rechnungsposten entfernen\n            </MDBBtn>\n          )}\n\n          <MDBBtn\n            type=\"submit\"\n            className=\"float-end\"\n            color=\"primary\"\n            onClick={handleSubmit}\n          >\n            <MDBIcon size=\"lg\" className=\"me-2\" fas icon=\"paper-plane\" />\n            Abschicken\n          </MDBBtn>\n        </form>\n      </MDBContainer>\n\n      {/* Loading Backdrop bei Meta Mask Dialog*/}\n      <Backdrop\n        sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={openBackdrop}\n        onClick={handleCloseBackdrop}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </>\n  );\n}\n\nexport default InvoiceForm;\n"]},"metadata":{},"sourceType":"module"}