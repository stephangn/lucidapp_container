{"ast":null,"code":"import _slicedToArray from\"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import{MDBCard,MDBCardBody,MDBCardText,MDBCardHeader,MDBRow,MDBCol,MDBBreadcrumb,MDBBreadcrumbItem}from\"mdb-react-ui-kit\";import{Link}from\"react-router-dom\";import useAuth from\"../../hooks/useAuth\";import{useParams}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function PreviewInvoice(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isZoll=_useState2[0],setIsZoll=_useState2[1];var _useAuth=useAuth(),auth=_useAuth.auth;var _useParams=useParams(),transactionId=_useParams.transactionId,declarationID=_useParams.declarationID;useEffect(function(){if(auth.role==\"custom_officer\"){setIsZoll(true);}},[auth.role]);// Auftrag Metadaten\nvar _React$useState=React.useState({documentId:props.invoiceData.id,transactionId:props.invoiceData.transaction,documentType:\"Rechnung\",dateAdded:props.transactionData.upload_date,description:props.invoiceData.description}),_React$useState2=_slicedToArray(_React$useState,2),auftragMetadaten=_React$useState2[0],setAuftragMetadaten=_React$useState2[1];// State des Inhalts der Felder\nvar _React$useState3=React.useState({//Rechnungsdaten\ndatumRechnung:props.invoiceData.issue_date,gesamtbetrag:props.invoiceData.total_value,waehrung:props.invoiceData.currency,lieferkosten:props.invoiceData.transport_costs,beschreibung:props.invoiceData.description}),_React$useState4=_slicedToArray(_React$useState3,2),fieldValue=_React$useState4[0],setFieldValue=_React$useState4[1];//Durch dieses Array von Objekten mappen\nvar Rechnungsposten=props.invoiceData.invoiceItem;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Dokument: Rechnung\"}),isZoll?/*#__PURE__*/_jsxs(MDBBreadcrumb,{children:[/*#__PURE__*/_jsx(MDBBreadcrumbItem,{children:/*#__PURE__*/_jsx(Link,{to:\"/zoll/declarations/\",children:\"Zollanmeldungen\"})}),/*#__PURE__*/_jsx(MDBBreadcrumbItem,{children:/*#__PURE__*/_jsxs(Link,{to:\"/zoll/declarations/\"+declarationID,children:[\"Zollanmeldungs-ID \",declarationID]})}),/*#__PURE__*/_jsxs(MDBBreadcrumbItem,{active:true,children:[\"Dokumenten-ID \",auftragMetadaten.documentId]})]}):/*#__PURE__*/_jsxs(MDBBreadcrumb,{children:[/*#__PURE__*/_jsx(MDBBreadcrumbItem,{children:/*#__PURE__*/_jsx(Link,{to:\"/transactions\",children:\"Auftr\\xE4ge\"})}),/*#__PURE__*/_jsx(MDBBreadcrumbItem,{children:/*#__PURE__*/_jsxs(Link,{to:\"/transactions/\"+auftragMetadaten.transactionId,children:[\"Auftrags-ID \",auftragMetadaten.transactionId]})}),/*#__PURE__*/_jsxs(MDBBreadcrumbItem,{active:true,children:[\"Dokumenten-ID \",auftragMetadaten.documentId]})]}),/*#__PURE__*/_jsxs(MDBCard,{style:{minHeight:600},children:[/*#__PURE__*/_jsx(MDBCardHeader,{children:/*#__PURE__*/_jsxs(\"h5\",{children:[\"Rechnung f\\xFCr Auftrags-ID \",auftragMetadaten.transactionId]})}),/*#__PURE__*/_jsx(MDBCardBody,{children:/*#__PURE__*/_jsxs(MDBRow,{children:[/*#__PURE__*/_jsx(MDBCol,{className:\"col-md-8\",children:/*#__PURE__*/_jsxs(MDBCardText,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Rechnungsdatum: \"}),fieldValue.datumRechnung]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Gesamtbetrag: \"}),fieldValue.gesamtbetrag,\" \",fieldValue.waehrung]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Lieferkosten: \"}),fieldValue.lieferkosten,\" \",fieldValue.waehrung]}),Rechnungsposten.map(function(posten){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"hr\",{className:\"my-4\"}),/*#__PURE__*/_jsx(\"h6\",{children:/*#__PURE__*/_jsx(\"u\",{children:\"Rechnungsposten 1\"})}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Produkt: \"}),posten.product]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Anzahl: \"}),posten.amount]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Einheit: \"}),posten.unit]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Preis pro Einheit: \"}),posten.price.toFixed(2),\" \",fieldValue.waehrung]})]});})]})}),/*#__PURE__*/_jsxs(MDBCol,{className:\"col-md-4\",style:{border:\"3px solid #cccccc\",height:500},children:[/*#__PURE__*/_jsxs(\"p\",{className:\"mt-4 ms-3\",children:[/*#__PURE__*/_jsx(\"b\",{children:\"Auftrags-ID: \"}),auftragMetadaten.transactionId]}),/*#__PURE__*/_jsxs(\"p\",{className:\"ms-3\",children:[/*#__PURE__*/_jsx(\"b\",{children:\"Dokumenten-ID: \"}),auftragMetadaten.documentId]}),/*#__PURE__*/_jsxs(\"p\",{className:\"ms-3\",children:[/*#__PURE__*/_jsx(\"b\",{children:\"Dokumententyp: \"}),auftragMetadaten.documentType]}),/*#__PURE__*/_jsxs(\"p\",{className:\"ms-3\",children:[/*#__PURE__*/_jsx(\"b\",{children:\"Hochgeladen am: \"}),auftragMetadaten.dateAdded]}),/*#__PURE__*/_jsxs(\"p\",{className:\"ms-3\",children:[/*#__PURE__*/_jsx(\"b\",{children:\"Hochgeladen von: \"}),auftragMetadaten.author]}),/*#__PURE__*/_jsxs(\"p\",{className:\"ms-3 mb-5\",children:[/*#__PURE__*/_jsx(\"b\",{children:\"Beschreibung: \"}),auftragMetadaten.description==\"\"?/*#__PURE__*/_jsx(\"i\",{children:\"Es liegt keine Beschreibung vor.\"}):auftragMetadaten.description]})]})]})})]})]});}","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Documents/PreviewInvoice.jsx"],"names":["React","useEffect","useState","MDBCard","MDBCardBody","MDBCardText","MDBCardHeader","MDBRow","MDBCol","MDBBreadcrumb","MDBBreadcrumbItem","Link","useAuth","useParams","PreviewInvoice","props","isZoll","setIsZoll","auth","transactionId","declarationID","role","documentId","invoiceData","id","transaction","documentType","dateAdded","transactionData","upload_date","description","auftragMetadaten","setAuftragMetadaten","datumRechnung","issue_date","gesamtbetrag","total_value","waehrung","currency","lieferkosten","transport_costs","beschreibung","fieldValue","setFieldValue","Rechnungsposten","invoiceItem","minHeight","map","posten","product","amount","unit","price","toFixed","border","height","author"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  MDBCard,\n  MDBCardBody,\n  MDBCardText,\n  MDBCardHeader,\n  MDBRow,\n  MDBCol,\n  MDBBreadcrumb,\n  MDBBreadcrumbItem,\n} from \"mdb-react-ui-kit\";\nimport { Link } from \"react-router-dom\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function PreviewInvoice(props) {\n  const [isZoll, setIsZoll] = useState(false);\n  const { auth } = useAuth();\n  const { transactionId, declarationID } = useParams();\n\n  useEffect(() => {\n    if (auth.role == \"custom_officer\") {\n      setIsZoll(true);\n    }\n  }, [auth.role]);\n  // Auftrag Metadaten\n  const [auftragMetadaten, setAuftragMetadaten] = React.useState({\n    documentId: props.invoiceData.id,\n    transactionId: props.invoiceData.transaction,\n    documentType: \"Rechnung\",\n    dateAdded: props.transactionData.upload_date,\n    description: props.invoiceData.description,\n  });\n\n  // State des Inhalts der Felder\n  const [fieldValue, setFieldValue] = React.useState({\n    //Rechnungsdaten\n    datumRechnung: props.invoiceData.issue_date,\n    gesamtbetrag: props.invoiceData.total_value,\n    waehrung: props.invoiceData.currency,\n    lieferkosten: props.invoiceData.transport_costs,\n    beschreibung: props.invoiceData.description,\n  });\n  //Durch dieses Array von Objekten mappen\n  const Rechnungsposten = props.invoiceData.invoiceItem;\n\n  return (\n    <>\n      <h3>Dokument: Rechnung</h3>\n      {isZoll ? (\n        <MDBBreadcrumb>\n          <MDBBreadcrumbItem>\n            <Link to=\"/zoll/declarations/\">Zollanmeldungen</Link>\n          </MDBBreadcrumbItem>\n          <MDBBreadcrumbItem>\n            <Link to={\"/zoll/declarations/\" + declarationID}>\n              Zollanmeldungs-ID {declarationID}\n            </Link>\n          </MDBBreadcrumbItem>\n          <MDBBreadcrumbItem active>\n            Dokumenten-ID {auftragMetadaten.documentId}\n          </MDBBreadcrumbItem>\n        </MDBBreadcrumb>\n      ) : (\n        <MDBBreadcrumb>\n          <MDBBreadcrumbItem>\n            <Link to=\"/transactions\">Aufträge</Link>\n          </MDBBreadcrumbItem>\n          <MDBBreadcrumbItem>\n            <Link to={\"/transactions/\" + auftragMetadaten.transactionId}>\n              Auftrags-ID {auftragMetadaten.transactionId}\n            </Link>\n          </MDBBreadcrumbItem>\n          <MDBBreadcrumbItem active>\n            Dokumenten-ID {auftragMetadaten.documentId}\n          </MDBBreadcrumbItem>\n        </MDBBreadcrumb>\n      )}\n      <MDBCard style={{ minHeight: 600 }}>\n        <MDBCardHeader>\n          <h5>Rechnung für Auftrags-ID {auftragMetadaten.transactionId}</h5>\n        </MDBCardHeader>\n        <MDBCardBody>\n          <MDBRow>\n            <MDBCol className=\"col-md-8\">\n              <MDBCardText>\n                <p>\n                  <b>Rechnungsdatum: </b>\n                  {fieldValue.datumRechnung}\n                </p>\n                <p>\n                  <b>Gesamtbetrag: </b>\n                  {fieldValue.gesamtbetrag} {fieldValue.waehrung}\n                </p>\n                <p>\n                  <b>Lieferkosten: </b>\n                  {fieldValue.lieferkosten} {fieldValue.waehrung}\n                </p>\n\n                {Rechnungsposten.map((posten) => (\n                  <>\n                    <hr className=\"my-4\" />\n                    <h6>\n                      <u>Rechnungsposten 1</u>\n                    </h6>\n                    <p>\n                      <b>Produkt: </b>\n                      {posten.product}\n                    </p>\n                    <p>\n                      <b>Anzahl: </b>\n                      {posten.amount}\n                    </p>\n                    <p>\n                      <b>Einheit: </b>\n                      {posten.unit}\n                    </p>\n                    <p>\n                      <b>Preis pro Einheit: </b>\n                      {posten.price.toFixed(2)} {fieldValue.waehrung}\n                    </p>\n                  </>\n                ))}\n              </MDBCardText>\n            </MDBCol>\n            <MDBCol\n              className=\"col-md-4\"\n              style={{ border: \"3px solid #cccccc\", height: 500 }}\n            >\n              <p className=\"mt-4 ms-3\">\n                <b>Auftrags-ID: </b>\n                {auftragMetadaten.transactionId}\n              </p>\n              <p className=\"ms-3\">\n                <b>Dokumenten-ID: </b>\n                {auftragMetadaten.documentId}\n              </p>\n              <p className=\"ms-3\">\n                <b>Dokumententyp: </b>\n                {auftragMetadaten.documentType}\n              </p>\n              <p className=\"ms-3\">\n                <b>Hochgeladen am: </b>\n                {auftragMetadaten.dateAdded}\n              </p>\n              <p className=\"ms-3\">\n                <b>Hochgeladen von: </b>\n                {auftragMetadaten.author}\n              </p>\n              <p className=\"ms-3 mb-5\">\n                <b>Beschreibung: </b>\n                {auftragMetadaten.description == \"\" ? (\n                  <i>Es liegt keine Beschreibung vor.</i>\n                ) : (\n                  auftragMetadaten.description\n                )}\n              </p>\n            </MDBCol>\n          </MDBRow>\n        </MDBCardBody>\n      </MDBCard>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}