{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Transactions/TransactionForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBSwitch } from \"mdb-react-ui-kit\";\nimport axiosInstance from \"../../axiosApi\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TransactionForm() {\n  _s();\n\n  const [importeur, setImporteur] = useState(\"\");\n  const [checkImporteur, setCheckImporteur] = useState(false);\n  const [description, setDescription] = useState(\"\");\n  const [partnership, setPartnership] = useState(\"\");\n  const [partners, setPartners] = useState([]);\n  const [userCompany, setUserCompany] = useState();\n  const [partnerCompany, setPartnerCompany] = useState();\n  useEffect(() => {\n    //lookup partner for checkbox\n    axiosInstance.get('partnership/').then(res => {\n      console.log(res.data);\n      setPartners(res.data);\n    }); //save current user company id for choosing importeur\n\n    axiosInstance.get('employee/').then(res => {\n      console.log(res.data);\n      setUserCompany(res.data.company.eori_nr);\n      console.log(userCompany);\n    });\n  }, []);\n\n  function handleSubmit(e) {\n    console.log(userCompany);\n    console.log(partnerCompany);\n\n    if (checkImporteur) {\n      let importeur = userCompany;\n      console.log(\"importeur ist eigene Firma\");\n    } else {\n      let importeur = partnerCompany;\n    }\n\n    e.preventDefault();\n    const newTransaction = {\n      description,\n      partnership,\n      importeur\n    };\n    console.log(newTransaction); //add transaction \n\n    axiosInstance.post('/transactions/', newTransaction).then(res => {\n      console.log(res.data);\n    }).catch(error => {\n      console.error('There was an error!', error);\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n        children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n          children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n            disablePortal: true,\n            id: \"combo-box-partner\",\n            options: partners //choose name as label for ui\n            ,\n            getOptionLabel: option => option.partner.name //when changed, save choosen Partner\n            ,\n            onChange: (event, value) => {\n              setPartnership(value.id);\n              setPartnerCompany(value.partner.eori_nr);\n            },\n            sx: {\n              width: 300\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              label: \"Partner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n          children: /*#__PURE__*/_jsxDEV(MDBInput, {\n            className: \"mb-3\",\n            name: \"description\",\n            label: \"Beschreibung der Transaktion\",\n            type: \"text\",\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            onClick: () => setCheckImporteur(!checkImporteur)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this),\n          label: \"Ist ihre Firma der Importeur?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n          children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n            type: \"submit\",\n            color: \"success\",\n            children: \"Hinzuf\\xFCgen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(TransactionForm, \"BwTfHR6Gpmk/TaYFl90LClT503M=\");\n\n_c = TransactionForm;\nexport default TransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Transactions/TransactionForm.jsx"],"names":["React","useEffect","useState","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","MDBSwitch","axiosInstance","Autocomplete","TextField","Checkbox","FormControlLabel","TransactionForm","importeur","setImporteur","checkImporteur","setCheckImporteur","description","setDescription","partnership","setPartnership","partners","setPartners","userCompany","setUserCompany","partnerCompany","setPartnerCompany","get","then","res","console","log","data","company","eori_nr","handleSubmit","e","preventDefault","newTransaction","post","catch","error","option","partner","name","event","value","id","width","params","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBSwitch,\n} from \"mdb-react-ui-kit\";\nimport axiosInstance from \"../../axiosApi\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n\n\nfunction TransactionForm() {\n\n  const [importeur, setImporteur] = useState(\"\");  \n  const [checkImporteur, setCheckImporteur] = useState(false);  \n  const [description, setDescription] = useState(\"\");\n  const [partnership, setPartnership] = useState(\"\")\n  const [partners, setPartners] = useState([])\n  const [userCompany, setUserCompany] = useState()\n  const [partnerCompany, setPartnerCompany] = useState()\n\n\n  useEffect(() => {\n    //lookup partner for checkbox\n    axiosInstance.get('partnership/').then((res) => {\n      console.log(res.data);\n      setPartners(res.data);\n    });\n    //save current user company id for choosing importeur\n    axiosInstance.get('employee/').then((res)  => {\n      console.log(res.data);\n      setUserCompany(res.data.company.eori_nr)\n      console.log(userCompany)\n    })\n\n  }, []);\n\n  function handleSubmit(e) {\n    console.log(userCompany)\n    console.log(partnerCompany)\n    if (checkImporteur) {\n      let importeur = userCompany;\n      console.log(\"importeur ist eigene Firma\")\n    } else {\n      let importeur = partnerCompany;\n    }\n    e.preventDefault();\n    const newTransaction = {\n      description,\n      partnership,\n      importeur\n    }\n    console.log(newTransaction)\n    //add transaction \n    axiosInstance\n      .post('/transactions/', newTransaction)\n      .then((res) => {\n        console.log(res.data)\n      })\n      .catch(error => {\n          console.error('There was an error!', error);\n      });\n  };\n\n  return (\n    <>\n    <form onSubmit={handleSubmit}>\n      <MDBContainer>\n        <MDBRow>\n          <Autocomplete\n              disablePortal\n              id=\"combo-box-partner\"\n              options={partners}\n              //choose name as label for ui\n              getOptionLabel={option => option.partner.name}\n              //when changed, save choosen Partner\n              onChange={(event, value) => { setPartnership(value.id); setPartnerCompany(value.partner.eori_nr) }}\n              sx={{ width: 300 }}\n              renderInput={(params) => <TextField {...params} label=\"Partner\" />}\n          />\n          <br/>\n        </MDBRow>\n        <MDBRow>\n          <MDBInput\n            className=\"mb-3\"\n            name=\"description\"\n            label=\"Beschreibung der Transaktion\"\n            type=\"text\"\n            onChange={e => setDescription(e.target.value)}\n          />\n        </MDBRow>\n        <FormControlLabel control={\n          <Checkbox\n            onClick={() => setCheckImporteur(!checkImporteur)}\n          />\n        \n          } label=\"Ist ihre Firma der Importeur?\" />\n        <MDBRow>\n          <MDBBtn type=\"submit\" color=\"success\">Hinzufügen</MDBBtn>\n        </MDBRow>      \n\n      </MDBContainer>\n    </form>\n    </>\n  );\n}\n\nexport default TransactionForm;\n"]},"metadata":{},"sourceType":"module"}