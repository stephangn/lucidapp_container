{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Documents/OtherDocumentsForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { uploadDokumentHash, getDokumentenhash } from \"../../Web3Client\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { MDBInput, MDBFile, MDBBtn } from \"mdb-react-ui-kit\";\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardSubTitle, MDBCardText, MDBCardLink } from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst steps = [\"Dokument beschreiben\", \"Dokument hochladen\", \"Bestätigen\"];\n\nfunction OtherDocumentsForm() {\n  _s();\n\n  const axiosInstance = useAxiosPrivate();\n  const [type, setType] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  /*   const [fileID, setFileID] = React.useState();\n   */\n\n  const [issueDate, setIssueDate] = React.useState(\"\");\n  const [fileID, setFileID] = React.useState();\n  let filelink = \"testlink\";\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const [selectedFile, setSelectedFile] = React.useState(null);\n  const {\n    transactionId\n  } = useParams();\n  const docformData = new FormData(); // Funktion für Datei Upload\n\n  function handleUpload(e) {\n    e.preventDefault();\n    const fileformData = new FormData();\n    fileformData.append(\"file\", selectedFile);\n    console.log(type);\n    console.log(description);\n    axiosInstance.post(\"/file/\", fileformData).then(res => {\n      alert(\"File Upload success\");\n      console.log(res.data.id);\n      setFileID(res.data.id);\n      console.log(fileID);\n      filelink = res.data.file;\n      console.log(filelink);\n    }).catch(err => console.log(err.response));\n  }\n\n  async function uDokumentHash(_transaktionID, _file) {\n    var crypto = require('crypto');\n\n    const fileReader = new FileReader();\n    var hashwert = \"\";\n    fileReader.readAsText(_file);\n\n    fileReader.onload = function (evt) {\n      hashwert = crypto.createHash('sha512').update(evt.target.result).digest('hex');\n    };\n\n    uploadDokumentHash(_transaktionID, hashwert).then(tx => {\n      console.log(\"Dokument wurde hochgeladen. DokumentenID: \" + tx + \"hash: \" + hashwert);\n      return tx;\n    }).catch(err => {\n      console.log(\"Hashgenerierung fehlgeschlagen. Fehlermeldung: \" + err);\n    });\n  }\n\n  function proofFilehash(_DokumentID, _file) {\n    var crypto = require('crypto');\n\n    var hashwert = \"\";\n    const fileReader = new FileReader();\n    fileReader.readAsText(_file);\n\n    fileReader.onload = function (evt) {\n      hashwert = crypto.createHash('sha512').update(evt.target.result).digest('hex');\n    };\n\n    getDokumentenhash(_DokumentID).then(tx => {\n      if (hashwert === tx) {\n        return true;\n      } else {\n        return false;\n      }\n    }).catch(err => {\n      console.log(\"Fehlgeschlagen. Fehlermeldung: \" + err);\n    });\n  } // Funktion zum Abschicken des Formulars\n\n\n  async function handleSubmit(e) {\n    //Standardverhalten abstellen\n    e.preventDefault();\n    docformData.append(\"description\", description);\n    docformData.append(\"type\", type);\n    docformData.append(\"file\", fileID);\n    docformData.append(\"file\", fileID);\n    docformData.append(\"issue_date\", \"2022-03-15\");\n    docformData.append(\"transaction\", transactionId);\n    uDokumentHash(transactionId, selectedFile).then(tx => {\n      console.log(tx);\n      docformData.append(\"blockchain_id\", tx);\n      axiosInstance.post(\"/documents/\", docformData).then(res => {\n        alert(\"Doc upload success\");\n        console.log(res.data);\n      }).catch(err => console.log(err.response));\n      console.log(selectedFile);\n    });\n  } // Alle Funktionen unterhalb: Steuerung des Steppers\n  // Kein Step ist optional\n\n\n  const isStepOptional = step => {\n    return;\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      children: steps.map((label, index) => {\n        const stepProps = {};\n        const labelProps = {};\n\n        if (isStepOptional(index)) {\n          labelProps.optional = /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: \"Optional\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this);\n        }\n\n        if (isStepSkipped(index)) {\n          stepProps.completed = false;\n        }\n\n        return /*#__PURE__*/_jsxDEV(Step, { ...stepProps,\n          children: /*#__PURE__*/_jsxDEV(StepLabel, { ...labelProps,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), activeStep === steps.length ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mt: 2,\n          mb: 1\n        },\n        children: \"All steps completed - you're finished\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          pt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flex: \"1 1 auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleReset,\n          children: \"Zur\\xFCcksetzen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [activeStep === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n          className: \"my-4\",\n          name: \"type\",\n          id: \"documentType\",\n          label: \"Dokumententyp\",\n          onChange: e => setType(e.target.value),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n          wrapperClass: \"mb-4\",\n          textarea: true,\n          name: \"description\",\n          id: \"documentDescription\",\n          rows: 3,\n          onChange: e => setDescription(e.target.value),\n          label: \"Beschreibung (optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : activeStep === 1 ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpload,\n        children: [/*#__PURE__*/_jsxDEV(MDBFile, {\n          className: \"my-4\",\n          label: \"Dokument ausw\\xE4hlen\",\n          id: \"customFile\",\n          onChange: e => setSelectedFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n          type: \"submit\",\n          block: true,\n          children: \"Hochladen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"mt-4\",\n          children: \"Daten best\\xE4tigen:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(MDBCard, {\n          children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n            children: [/*#__PURE__*/_jsxDEV(MDBCardTitle, {\n              children: [\"Hochgeladene Dokumentenart: \", type]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(MDBCardText, {\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(MDBCardLink, {\n              href: filelink,\n              children: \"Link zur Datei\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          pt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          disabled: activeStep === 0,\n          onClick: handleBack,\n          sx: {\n            mr: 1\n          },\n          children: \"Zur\\xFCck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flex: \"1 1 auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), isStepOptional(activeStep) && /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          onClick: handleSkip,\n          sx: {\n            mr: 1\n          },\n          children: \"\\xDCberspringen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }, this), activeStep === steps.length - 1 ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          children: \"Abschicken\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleNext,\n          children: \"Weiter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OtherDocumentsForm, \"uTtjrz9H4iHyeMut41XscwbzToQ=\", false, function () {\n  return [useAxiosPrivate, useParams];\n});\n\n_c = OtherDocumentsForm;\nexport default OtherDocumentsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OtherDocumentsForm\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Documents/OtherDocumentsForm.jsx"],"names":["React","uploadDokumentHash","getDokumentenhash","Box","Stepper","Step","StepLabel","Button","Typography","MDBInput","MDBFile","MDBBtn","MDBCard","MDBCardBody","MDBCardTitle","MDBCardSubTitle","MDBCardText","MDBCardLink","useAxiosPrivate","useParams","steps","OtherDocumentsForm","axiosInstance","type","setType","useState","description","setDescription","issueDate","setIssueDate","fileID","setFileID","filelink","activeStep","setActiveStep","skipped","setSkipped","Set","selectedFile","setSelectedFile","transactionId","docformData","FormData","handleUpload","e","preventDefault","fileformData","append","console","log","post","then","res","alert","data","id","file","catch","err","response","uDokumentHash","_transaktionID","_file","crypto","require","fileReader","FileReader","hashwert","readAsText","onload","evt","createHash","update","target","result","digest","tx","proofFilehash","_DokumentID","handleSubmit","isStepOptional","step","isStepSkipped","has","handleNext","newSkipped","values","delete","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","handleReset","width","map","label","index","stepProps","labelProps","optional","completed","length","mt","mb","display","flexDirection","pt","flex","value","files","mr"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { uploadDokumentHash, getDokumentenhash } from \"../../Web3Client\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { MDBInput, MDBFile, MDBBtn } from \"mdb-react-ui-kit\";\nimport {\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardSubTitle,\n  MDBCardText,\n  MDBCardLink,\n} from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\"; \nimport { useParams } from \"react-router-dom\";\n\n\nconst steps = [\"Dokument beschreiben\", \"Dokument hochladen\", \"Bestätigen\"];\n\nfunction OtherDocumentsForm() {\n\n  const axiosInstance = useAxiosPrivate();\n  \n  const [type, setType] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  /*   const [fileID, setFileID] = React.useState();\n   */ const [issueDate, setIssueDate] = React.useState(\"\");\n  const [fileID, setFileID] = React.useState();\n  let filelink = \"testlink\";\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n\n  const [selectedFile, setSelectedFile] = React.useState(null);\n  const { transactionId } = useParams();\n\n\n  const docformData = new FormData();\n\n\n  // Funktion für Datei Upload\n  function handleUpload(e) {\n    e.preventDefault();\n    const fileformData = new FormData();\n    fileformData.append(\"file\", selectedFile);\n    console.log(type);\n    console.log(description);\n    axiosInstance\n      .post(\"/file/\", fileformData)\n      .then((res) => {\n        alert(\"File Upload success\");\n        console.log(res.data.id);\n        setFileID(res.data.id);\n        console.log(fileID)\n        filelink = res.data.file;\n        console.log(filelink);\n      })\n      .catch((err) => console.log(err.response));\n  }\n  async function uDokumentHash(_transaktionID, _file){\n    var crypto = require('crypto');\n    const fileReader = new FileReader();\n    var hashwert = \"\";\n    fileReader.readAsText(_file);\n    fileReader.onload = function(evt) {\n      hashwert = crypto.createHash('sha512').update(evt.target.result).digest('hex');\n    };\n    uploadDokumentHash(_transaktionID, hashwert)\n    .then((tx) => {\n      console.log(\"Dokument wurde hochgeladen. DokumentenID: \" + tx+ \"hash: \"+ hashwert);\n      return tx;\n    })\n    .catch((err) => {\n      console.log(\"Hashgenerierung fehlgeschlagen. Fehlermeldung: \" + err);\n  });\n}\n\nfunction proofFilehash(_DokumentID, _file){\n  var crypto = require('crypto');\n  var hashwert =\"\";\n  const fileReader = new FileReader();\n  fileReader.readAsText(_file);\n  fileReader.onload = function(evt) {\n    hashwert = crypto.createHash('sha512').update(evt.target.result).digest('hex');\n  };\n  getDokumentenhash(_DokumentID)\n  .then((tx) => {\n    if(hashwert===tx){\n      return true;\n    }else{\n      return false;\n    }\n  })\n  .catch((err) => {\n    console.log(\"Fehlgeschlagen. Fehlermeldung: \" + err);\n});\n}\n  \n  // Funktion zum Abschicken des Formulars\n  async function handleSubmit(e) {\n    //Standardverhalten abstellen\n    e.preventDefault();\n    docformData.append(\"description\", description);\n    docformData.append(\"type\", type);\n    docformData.append(\"file\", fileID);\n    docformData.append(\"file\", fileID);\n    docformData.append(\"issue_date\", \"2022-03-15\");\n    docformData.append(\"transaction\", transactionId);\n    uDokumentHash(transactionId, selectedFile).then((tx) => {\n      console.log(tx)\n      docformData.append(\"blockchain_id\", tx);\n      axiosInstance\n      .post(\"/documents/\", docformData)\n      .then((res) => {\n        alert(\"Doc upload success\");\n        console.log(res.data);\n\n      })\n      .catch((err) => console.log(err.response));\n      console.log(selectedFile);\n\n    })\n\n  }\n\n  // Alle Funktionen unterhalb: Steuerung des Steppers\n\n  // Kein Step ist optional\n  const isStepOptional = (step) => {\n    return;\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          if (isStepOptional(index)) {\n            labelProps.optional = (\n              <Typography variant=\"caption\">Optional</Typography>\n            );\n          }\n          if (isStepSkipped(index)) {\n            stepProps.completed = false;\n          }\n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel {...labelProps}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      {activeStep === steps.length ? (\n        <React.Fragment>\n          <Typography sx={{ mt: 2, mb: 1 }}>\n            All steps completed - you&apos;re finished\n          </Typography>\n          <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n            <Box sx={{ flex: \"1 1 auto\" }} />\n            <Button onClick={handleReset}>Zurücksetzen</Button>\n          </Box>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          {activeStep === 0 ? (\n            <>\n              <MDBInput\n                className=\"my-4\"\n                name=\"type\"\n                id=\"documentType\"\n                label=\"Dokumententyp\"\n                onChange={(e) => setType(e.target.value)}\n                type=\"text\"\n              />\n              <MDBInput\n                wrapperClass=\"mb-4\"\n                textarea\n                name=\"description\"\n                id=\"documentDescription\"\n                rows={3}\n                onChange={(e) => setDescription(e.target.value)}\n                label=\"Beschreibung (optional)\"\n              />\n            </>\n          ) : activeStep === 1 ? (\n            <form onSubmit={handleUpload}>\n              <MDBFile\n                className=\"my-4\"\n                label=\"Dokument auswählen\"\n                id=\"customFile\"\n                onChange={(e) => setSelectedFile(e.target.files[0])}\n              />\n\n              <MDBBtn type=\"submit\" block>\n                Hochladen\n              </MDBBtn>\n            </form>\n          ) : (\n            <>\n              <h4 className=\"mt-4\">Daten bestätigen:</h4>\n              <MDBCard>\n                <MDBCardBody>\n                  <MDBCardTitle>\n                    Hochgeladene Dokumentenart: {type}\n                  </MDBCardTitle>\n                  <MDBCardText>{description}</MDBCardText>\n                  <MDBCardLink href={filelink}>Link zur Datei</MDBCardLink>\n                </MDBCardBody>\n              </MDBCard>\n            </>\n          )}\n          <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n            <Button\n              color=\"inherit\"\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              sx={{ mr: 1 }}\n            >\n              Zurück\n            </Button>\n            <Box sx={{ flex: \"1 1 auto\" }} />\n            {isStepOptional(activeStep) && (\n              <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\n                Überspringen\n              </Button>\n            )}\n\n            {activeStep === steps.length - 1 ? (\n              <Button onClick={handleSubmit}>Abschicken</Button>\n            ) : (\n              <Button onClick={handleNext}>Weiter</Button>\n            )}\n          </Box>\n        </React.Fragment>\n      )}\n    </Box>\n  );\n}\n\nexport default OtherDocumentsForm;\n"]},"metadata":{},"sourceType":"module"}