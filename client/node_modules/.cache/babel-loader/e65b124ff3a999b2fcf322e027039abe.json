{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Dashboard/NotifcationToast.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport Toast from \"react-bootstrap/Toast\";\nimport axiosInstance from \"../../axiosApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NotificationToast(props) {\n  _s();\n\n  var timestamp = new Date(props.alert.timestamp);\n  const [notificationText, setNotificationText] = useState(\"\");\n  const [notificationObject, setNotificationObject] = useState(\"\");\n  const [showB, setShowB] = useState(true);\n\n  const toggleShowB = () => setShowB(!showB);\n\n  useEffect(() => {\n    var _props$alert, _props$alert3;\n\n    if (((_props$alert = props.alert) === null || _props$alert === void 0 ? void 0 : _props$alert.target_content_type) == \"10\") {\n      var _props$alert2;\n\n      setNotificationText((_props$alert2 = props.alert) === null || _props$alert2 === void 0 ? void 0 : _props$alert2.description);\n      setNotificationObject(\"Partnerschaftsanfrage\");\n    } else if (((_props$alert3 = props.alert) === null || _props$alert3 === void 0 ? void 0 : _props$alert3.target_content_type) == \"11\") {\n      var _props$alert4;\n\n      const text = (_props$alert4 = props.alert) === null || _props$alert4 === void 0 ? void 0 : _props$alert4.description;\n      setNotificationText(text);\n      setNotificationObject(`Auftrags-ID ${props.alert.target_object_id}`);\n    } else {\n      var _props$alert5;\n\n      const text = \"sonstige Benachrichtigung\";\n      setNotificationText((_props$alert5 = props.alert) === null || _props$alert5 === void 0 ? void 0 : _props$alert5.description);\n      setNotificationObject(\"Allgemeine Benachrichtigung\");\n    }\n  }, [alert]);\n\n  const markasread = () => {\n    var _props$alert6;\n\n    return axiosInstance.patch(`/alerts/${(_props$alert6 = props.alert) === null || _props$alert6 === void 0 ? void 0 : _props$alert6.id}/`, {\n      unread: false\n    }).then(res => {\n      toggleShowB();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Toast, {\n    className: \"mb-2\",\n    bg: \"light\",\n    style: {\n      width: \"100%\"\n    },\n    onClose: markasread,\n    show: showB,\n    children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        className: \"me-auto\",\n        children: notificationObject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: timestamp.toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n      children: notificationText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NotificationToast, \"34r4IAYPqr87ZvDEB4UsNZ4MoRc=\");\n\n_c = NotificationToast;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationToast\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Dashboard/NotifcationToast.jsx"],"names":["React","useState","useEffect","Toast","axiosInstance","NotificationToast","props","timestamp","Date","alert","notificationText","setNotificationText","notificationObject","setNotificationObject","showB","setShowB","toggleShowB","target_content_type","description","text","target_object_id","markasread","patch","id","unread","then","res","catch","err","console","log","width","toLocaleString"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAEA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA;;AAC/C,MAAIC,SAAS,GAAG,IAAIC,IAAJ,CAASF,KAAK,CAACG,KAAN,CAAYF,SAArB,CAAhB;AACA,QAAM,CAACG,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACW,kBAAD,EAAqBC,qBAArB,IAA8CZ,QAAQ,CAAC,EAAD,CAA5D;AAEA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMe,WAAW,GAAG,MAAMD,QAAQ,CAAC,CAACD,KAAF,CAAlC;;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,QAAI,iBAAAI,KAAK,CAACG,KAAN,8DAAaQ,mBAAb,KAAoC,IAAxC,EAA8C;AAAA;;AAC5CN,MAAAA,mBAAmB,kBAACL,KAAK,CAACG,KAAP,kDAAC,cAAaS,WAAd,CAAnB;AACAL,MAAAA,qBAAqB,CAAC,uBAAD,CAArB;AACD,KAHD,MAGO,IAAI,kBAAAP,KAAK,CAACG,KAAN,gEAAaQ,mBAAb,KAAoC,IAAxC,EAA8C;AAAA;;AACnD,YAAME,IAAI,oBAAGb,KAAK,CAACG,KAAT,kDAAG,cAAaS,WAA1B;AACAP,MAAAA,mBAAmB,CAACQ,IAAD,CAAnB;AACAN,MAAAA,qBAAqB,CAAE,eAAcP,KAAK,CAACG,KAAN,CAAYW,gBAAiB,EAA7C,CAArB;AACD,KAJM,MAIA;AAAA;;AACL,YAAMD,IAAI,GAAG,2BAAb;AACAR,MAAAA,mBAAmB,kBAACL,KAAK,CAACG,KAAP,kDAAC,cAAaS,WAAd,CAAnB;AACAL,MAAAA,qBAAqB,CAAC,6BAAD,CAArB;AACD;AACF,GAbQ,EAaN,CAACJ,KAAD,CAbM,CAAT;;AAeA,QAAMY,UAAU,GAAG;AAAA;;AAAA,WACjBjB,aAAa,CACVkB,KADH,CACU,WAAD,iBAAWhB,KAAK,CAACG,KAAjB,kDAAW,cAAac,EAAG,GADpC,EACwC;AACpCC,MAAAA,MAAM,EAAE;AAD4B,KADxC,EAIGC,IAJH,CAISC,GAAD,IAAS;AACbV,MAAAA,WAAW;AACZ,KANH,EAOGW,KAPH,CAOUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KATH,CADiB;AAAA,GAAnB;;AAYA,sBACE,QAAC,KAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,EAAE,EAAC,OAFL;AAGE,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAHT;AAIE,IAAA,OAAO,EAAEV,UAJX;AAKE,IAAA,IAAI,EAAEP,KALR;AAAA,4BAOE,QAAC,KAAD,CAAO,MAAP;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAAA,kBAA6BF;AAA7B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAQL,SAAS,CAACyB,cAAV;AAAR;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAWE,QAAC,KAAD,CAAO,IAAP;AAAA,gBAAatB;AAAb;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAnDuBL,iB;;KAAAA,iB","sourcesContent":["import { React, useState, useEffect } from \"react\";\n\nimport Toast from \"react-bootstrap/Toast\";\nimport axiosInstance from \"../../axiosApi\";\n\nexport default function NotificationToast(props) {\n  var timestamp = new Date(props.alert.timestamp);\n  const [notificationText, setNotificationText] = useState(\"\");\n  const [notificationObject, setNotificationObject] = useState(\"\");\n\n  const [showB, setShowB] = useState(true);\n\n  const toggleShowB = () => setShowB(!showB);\n\n  useEffect(() => {\n    if (props.alert?.target_content_type == \"10\") {\n      setNotificationText(props.alert?.description);\n      setNotificationObject(\"Partnerschaftsanfrage\");\n    } else if (props.alert?.target_content_type == \"11\") {\n      const text = props.alert?.description;\n      setNotificationText(text);\n      setNotificationObject(`Auftrags-ID ${props.alert.target_object_id}`);\n    } else {\n      const text = \"sonstige Benachrichtigung\";\n      setNotificationText(props.alert?.description);\n      setNotificationObject(\"Allgemeine Benachrichtigung\");\n    }\n  }, [alert]);\n\n  const markasread = () =>\n    axiosInstance\n      .patch(`/alerts/${props.alert?.id}/`, {\n        unread: false,\n      })\n      .then((res) => {\n        toggleShowB();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n  return (\n    <Toast\n      className=\"mb-2\"\n      bg=\"light\"\n      style={{ width: \"100%\" }}\n      onClose={markasread}\n      show={showB}\n    >\n      <Toast.Header>\n        <strong className=\"me-auto\">{notificationObject}</strong>\n        <small>{timestamp.toLocaleString()}</small>\n      </Toast.Header>\n      <Toast.Body>{notificationText}</Toast.Body>\n    </Toast>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}