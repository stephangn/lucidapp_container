{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axiosInstance from \"../axiosApi\";\nimport useAuth from \"./useAuth\";\nimport useAxiosPrivate from \"./useAxiosPrivate\";\n\nconst useDataUpdate = () => {\n  _s();\n\n  const {\n    setAuth\n  } = useAuth();\n  const axiosInstance = useAxiosPrivate();\n\n  const dataUpdate = async () => {\n    //console.log(`Neue Nutzerdaten werden angefordert`);\n    const response = await axiosInstance.get('user'); //console.log(response.data[0])\n\n    if (response.data[0].role == \"company_employee\") {\n      setAuth(prev => {\n        var _response$data$0$empl, _response$data$0$empl2, _response$data$0$empl3;\n\n        return { ...prev,\n          username: response.data[0].username,\n          company: (_response$data$0$empl = response.data[0].employee) === null || _response$data$0$empl === void 0 ? void 0 : _response$data$0$empl.company.name,\n          pubkey: (_response$data$0$empl2 = response.data[0].employee) === null || _response$data$0$empl2 === void 0 ? void 0 : _response$data$0$empl2.company.publickey,\n          eori_nr: (_response$data$0$empl3 = response.data[0].employee) === null || _response$data$0$empl3 === void 0 ? void 0 : _response$data$0$empl3.company.eori_nr,\n          role: response.data[0].role,\n          userData: response.data[0]\n        };\n      });\n      return;\n    }\n\n    setAuth(prev => {\n      var _response$data$0$empl4, _response$data$0$empl5, _response$data$0$empl6;\n\n      //console.log(`New Username received : ${response.data[0].username}`);\n      return { ...prev,\n        username: response.data[0].username,\n        company: (_response$data$0$empl4 = response.data[0].employee) === null || _response$data$0$empl4 === void 0 ? void 0 : _response$data$0$empl4.custom_office.name,\n        pubkey: (_response$data$0$empl5 = response.data[0].employee) === null || _response$data$0$empl5 === void 0 ? void 0 : _response$data$0$empl5.custom_office.publickey,\n        eori_nr: (_response$data$0$empl6 = response.data[0].employee) === null || _response$data$0$empl6 === void 0 ? void 0 : _response$data$0$empl6.custom_office.id,\n        role: response.data[0].role\n      };\n    });\n    return;\n  };\n\n  return dataUpdate;\n};\n\n_s(useDataUpdate, \"w1/1usq1prNobEcHIMKRrSmUEbk=\", false, function () {\n  return [useAuth, useAxiosPrivate];\n});\n\nexport default useDataUpdate;","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/hooks/useDataUpdate.js"],"names":["axiosInstance","useAuth","useAxiosPrivate","useDataUpdate","setAuth","dataUpdate","response","get","data","role","prev","username","company","employee","name","pubkey","publickey","eori_nr","userData","custom_office","id"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAGA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAcH,OAAO,EAA3B;AACA,QAAMD,aAAa,GAAGE,eAAe,EAArC;;AAEA,QAAMG,UAAU,GAAG,YAAW;AAC1B;AACA,UAAMC,QAAQ,GAAG,MAAMN,aAAa,CAACO,GAAd,CAAkB,MAAlB,CAAvB,CAF0B,CAG1B;;AACA,QAAID,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBC,IAAjB,IAAuB,kBAA3B,EAA+C;AAC3CL,MAAAA,OAAO,CAACM,IAAI,IAAI;AAAA;;AACZ,eAAO,EACH,GAAGA,IADA;AAEHC,UAAAA,QAAQ,EAAEL,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBG,QAFxB;AAGHC,UAAAA,OAAO,2BAAEN,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBK,QAAnB,0DAAE,sBAA2BD,OAA3B,CAAmCE,IAHzC;AAIHC,UAAAA,MAAM,4BAAET,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBK,QAAnB,2DAAE,uBAA2BD,OAA3B,CAAmCI,SAJxC;AAKHC,UAAAA,OAAO,4BAAEX,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBK,QAAnB,2DAAE,uBAA2BD,OAA3B,CAAmCK,OALzC;AAMHR,UAAAA,IAAI,EAAEH,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBC,IANpB;AAOHS,UAAAA,QAAQ,EAAEZ,QAAQ,CAACE,IAAT,CAAc,CAAd;AAPP,SAAP;AASH,OAVM,CAAP;AAWA;AACH;;AACDJ,IAAAA,OAAO,CAACM,IAAI,IAAI;AAAA;;AACZ;AACA,aAAO,EACH,GAAGA,IADA;AAEHC,QAAAA,QAAQ,EAAEL,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBG,QAFxB;AAGHC,QAAAA,OAAO,4BAAEN,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBK,QAAnB,2DAAE,uBAA2BM,aAA3B,CAAyCL,IAH/C;AAIHC,QAAAA,MAAM,4BAAET,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBK,QAAnB,2DAAE,uBAA2BM,aAA3B,CAAyCH,SAJ9C;AAKHC,QAAAA,OAAO,4BAAEX,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBK,QAAnB,2DAAE,uBAA2BM,aAA3B,CAAyCC,EAL/C;AAMHX,QAAAA,IAAI,EAAEH,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBC;AANpB,OAAP;AAQH,KAVM,CAAP;AAWA;AAIH,GAjCD;;AAkCF,SAAOJ,UAAP;AAED,CAxCD;;GAAMF,a;UACkBF,O,EACEC,e;;;AAwC1B,eAAeC,aAAf","sourcesContent":["import axiosInstance from \"../axiosApi\"\nimport useAuth from \"./useAuth\"\nimport useAxiosPrivate from \"./useAxiosPrivate\";\n\n\nconst useDataUpdate = () => {\n    const { setAuth } = useAuth();\n    const axiosInstance = useAxiosPrivate();\n\n    const dataUpdate = async() => {\n        //console.log(`Neue Nutzerdaten werden angefordert`);\n        const response = await axiosInstance.get('user')\n        //console.log(response.data[0])\n        if (response.data[0].role==\"company_employee\") {\n            setAuth(prev => {\n                return {\n                    ...prev,\n                    username: response.data[0].username,\n                    company: response.data[0].employee?.company.name,\n                    pubkey: response.data[0].employee?.company.publickey,\n                    eori_nr: response.data[0].employee?.company.eori_nr,\n                    role: response.data[0].role,\n                    userData: response.data[0]\n                }\n            });\n            return; \n        }\n        setAuth(prev => {\n            //console.log(`New Username received : ${response.data[0].username}`);\n            return {\n                ...prev,\n                username: response.data[0].username,\n                company: response.data[0].employee?.custom_office.name,\n                pubkey: response.data[0].employee?.custom_office.publickey,\n                eori_nr: response.data[0].employee?.custom_office.id,\n                role: response.data[0].role\n            }\n        });\n        return; \n\n\n\n    }\n  return dataUpdate\n\n}\n\nexport default useDataUpdate"]},"metadata":{},"sourceType":"module"}