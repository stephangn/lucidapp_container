{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axiosInstance from \"../axiosApi\";\nimport useAuth from \"./useAuth\";\n\nconst useRefreshToken = () => {\n  _s();\n\n  const {\n    setAuth\n  } = useAuth();\n  const refreshToken = localStorage.getItem(\"refresh_token\");\n\n  const refresh = async () => {\n    console.log(`Neuer Access token wird angefordert. Genutzter Refresh Token ${refreshToken}`);\n    const response = await axiosInstance.post('/api/token/refresh/', //Refresh Token an Server für neuen Access Token\n    JSON.stringify({\n      refresh: refreshToken\n    }));\n    setAuth(prev => {\n      console.log(JSON.stringify(prev));\n      console.log(`New AccessToken received : ${response.data.access}`);\n      return { ...prev,\n        roles: response.data.roles,\n        company: response.data.company,\n        user: response.data.user,\n        accessToken: response.data.access\n      };\n    });\n    return response.data.access;\n  };\n\n  return refresh;\n};\n\n_s(useRefreshToken, \"ULyvyk72gQF34wX4GH57egc/0Yo=\", false, function () {\n  return [useAuth];\n});\n\nexport default useRefreshToken;","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/hooks/useRefreshToken.js"],"names":["axiosInstance","useAuth","useRefreshToken","setAuth","refreshToken","localStorage","getItem","refresh","console","log","response","post","JSON","stringify","prev","data","access","roles","company","user","accessToken"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAcF,OAAO,EAA3B;AACA,QAAMG,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAArB;;AACA,QAAMC,OAAO,GAAG,YAAW;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAa,gEAA+DL,YAAa,EAAzF;AACA,UAAMM,QAAQ,GAAG,MAAMV,aAAa,CAACW,IAAd,CAAmB,qBAAnB,EACnB;AACAC,IAAAA,IAAI,CAACC,SAAL,CAAe;AAACN,MAAAA,OAAO,EAAEH;AAAV,KAAf,CAFmB,CAAvB;AAIAD,IAAAA,OAAO,CAACW,IAAI,IAAI;AACZN,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACC,SAAL,CAAeC,IAAf,CAAZ;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAa,8BAA6BC,QAAQ,CAACK,IAAT,CAAcC,MAAO,EAA/D;AACA,aAAO,EACH,GAAGF,IADA;AAEHG,QAAAA,KAAK,EAAEP,QAAQ,CAACK,IAAT,CAAcE,KAFlB;AAGHC,QAAAA,OAAO,EAAER,QAAQ,CAACK,IAAT,CAAcG,OAHpB;AAIHC,QAAAA,IAAI,EAAET,QAAQ,CAACK,IAAT,CAAcI,IAJjB;AAMHC,QAAAA,WAAW,EAAEV,QAAQ,CAACK,IAAT,CAAcC;AANxB,OAAP;AAQH,KAXM,CAAP;AAYA,WAAON,QAAQ,CAACK,IAAT,CAAcC,MAArB;AACH,GAnBD;;AAoBF,SAAOT,OAAP;AAED,CAzBD;;GAAML,e;UACkBD,O;;;AA0BxB,eAAeC,eAAf","sourcesContent":["import axiosInstance from \"../axiosApi\"\nimport useAuth from \"./useAuth\"\n\n\nconst useRefreshToken = () => {\n    const { setAuth } = useAuth();\n    const refreshToken = localStorage.getItem(\"refresh_token\");\n    const refresh = async() => {\n        console.log(`Neuer Access token wird angefordert. Genutzter Refresh Token ${refreshToken}`);\n        const response = await axiosInstance.post('/api/token/refresh/', \n            //Refresh Token an Server für neuen Access Token\n            JSON.stringify({refresh: refreshToken}),\n        );\n        setAuth(prev => {\n            console.log(JSON.stringify(prev));\n            console.log(`New AccessToken received : ${response.data.access}`);\n            return {\n                ...prev,\n                roles: response.data.roles,\n                company: response.data.company,\n                user: response.data.user,\n\n                accessToken: response.data.access\n            }\n        });\n        return response.data.access; \n    }\n  return refresh\n\n}\n\nexport default useRefreshToken"]},"metadata":{},"sourceType":"module"}