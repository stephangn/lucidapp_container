{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Documents/OtherDocumentsForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { uploadDokumentHash, getDokumentenhash } from \"../../Web3Client\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Alert from \"@mui/material/Alert\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { MDBInput, MDBFile, MDBBtn, MDBContainer } from \"mdb-react-ui-kit\";\nimport { MDBSpinner } from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst steps = [\"Dokument beschreiben\", \"Dokument hochladen\", \"Bestätigen\"];\n\nfunction OtherDocumentsForm(props) {\n  _s();\n\n  const axiosInstance = useAxiosPrivate();\n  const [type, setType] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [issueDate, setIssueDate] = React.useState(\"\");\n  const [fileID, setFileID] = React.useState();\n  const [fileLink, setFileLink] = React.useState(\"\");\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const [selectedFile, setSelectedFile] = React.useState();\n  const [uploadLoading, setUploadLoading] = React.useState(false);\n  const [fileUploadSuccess, setFileUploadSuccess] = React.useState(false);\n  const {\n    transactionId\n  } = useParams();\n  const [newDocumentData, setNewDocumentData] = useState();\n  var newDocumentID;\n  const docformData = new FormData(); // -- Loading Backdrop --\n\n  const [openBackdrop, setOpenBackdrop] = React.useState(false);\n\n  const handleCloseBackdrop = () => {\n    setOpenBackdrop(false);\n  };\n\n  const handleToggleBackdrop = () => {\n    setOpenBackdrop(!openBackdrop);\n  }; // Funktion für Datei Upload\n\n\n  function handleUpload(e) {\n    e.preventDefault();\n    setUploadLoading(true);\n    const fileformData = new FormData();\n    fileformData.append(\"file\", selectedFile);\n    console.log(type);\n    console.log(description);\n    axiosInstance.post(\"/file/\", fileformData).then(res => {\n      console.log(res.data.id);\n      setFileID(res.data.id);\n      console.log(fileID);\n      console.log(res.data.file);\n      setFileLink(res.data.file);\n      setFileUploadSuccess(true);\n      setUploadLoading(false);\n    }).catch(err => console.log(err.response));\n  }\n\n  async function uDokumentHash(_transaktionID, _file) {\n    var crypto = require(\"crypto\");\n\n    const fileReader = new FileReader();\n    var hashwert = \"\";\n    fileReader.readAsText(_file);\n\n    fileReader.onload = function (evt) {\n      hashwert = crypto.createHash(\"sha512\").update(evt.target.result).digest(\"hex\");\n      console.log(hashwert);\n      uploadDokumentHash(_transaktionID, \"335fa03cdead8c9c873ecab475cc31f0a0a615ca688d6b0c9e26e47a892ab1859089f5f9494cd0b2195725641e2e82a28d78f0a58ccfc33c7caa827c418dc2f3\").then(tx => {\n        //console.log(newDocumentData)\n        //console.log(\"Dokument wurde hochgeladen. DokumentenID: \" + tx + \"hash: \"+ hashwert);\n        docformData.append(\"blockchain_id\", tx - 1);\n        axiosInstance.post(\"/documents/\", docformData).then(res => {\n          console.log(res.data);\n          setNewDocumentData(res.data);\n          newDocumentID = res.data.id;\n          console.log(\"Dokument erfolgreich hochgeladen.\"); // newDocument -> State aktualisieren\n\n          props.setNewDocument(!props.newDocument); // Erfolgs-Snackbar setzen\n\n          props.setSnackbarSuccess(true);\n          props.setSnackbarMessage(\"Dokument erfolgreich hochgeladen.\"); // Backdrop Ladeanimation öffnen\n\n          handleToggleBackdrop(); // Snackbar öffnen\n\n          props.handleOpenSnackbar(); // Modal schließen\n\n          props.toggleAddDocumentModal();\n        }).catch(err => {\n          console.log(err.response); // Error-Snackbar setzen\n\n          props.setSnackbarSuccess(false);\n          props.setSnackbarMessage(\"Fehler beim hochladen des Dokuments.\"); // Backdrop Ladeanimation öffnen\n\n          handleToggleBackdrop(); // Snackbar öffnen\n\n          props.handleOpenSnackbar(); // Modal schließen\n\n          props.toggleAddDocumentModal();\n        });\n        return tx;\n      }).catch(err => {\n        console.log(\"Hashgenerierung fehlgeschlagen. Fehlermeldung: \" + err);\n      });\n    };\n  } // Funktion zum Abschicken des Formulars\n\n\n  async function handleSubmit(e) {\n    //Standardverhalten abstellen\n    e.preventDefault(); // Backdrop Ladeanimation öffnen\n\n    handleToggleBackdrop();\n    docformData.append(\"description\", description);\n    docformData.append(\"type\", type);\n    docformData.append(\"file\", fileID);\n    docformData.append(\"issue_date\", \"2022-03-15\");\n    docformData.append(\"transaction\", transactionId);\n    const tx = await uDokumentHash(transactionId, selectedFile); //console.log(tx)\n    //console.log(selectedFile);\n  } // Alle Funktionen unterhalb: Steuerung des Steppers\n  // Kein Step ist optional\n\n\n  const isStepOptional = step => {\n    return;\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: activeStep,\n        children: steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n\n          if (isStepOptional(index)) {\n            labelProps.optional = /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              children: \"Optional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this);\n          }\n\n          if (isStepSkipped(index)) {\n            stepProps.completed = false;\n          }\n\n          return /*#__PURE__*/_jsxDEV(Step, { ...stepProps,\n            children: /*#__PURE__*/_jsxDEV(StepLabel, { ...labelProps,\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)\n          }, label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBContainer, {\n        className: \"mt-4\",\n        children: activeStep === steps.length ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 2,\n              mb: 1\n            },\n            children: \"All steps completed - you're finished\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              pt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flex: \"1 1 auto\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleReset,\n              children: \"Zur\\xFCcksetzen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [activeStep === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n              className: \"my-4\",\n              value: type,\n              name: \"type\",\n              id: \"documentType\",\n              label: \"Dokumententyp\",\n              onChange: e => setType(e.target.value),\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n              wrapperClass: \"mb-4\",\n              value: description,\n              textarea: true,\n              name: \"description\",\n              id: \"documentDescription\",\n              rows: 3,\n              onChange: e => setDescription(e.target.value),\n              label: \"Beschreibung (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : activeStep === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleUpload,\n              children: [/*#__PURE__*/_jsxDEV(MDBFile, {\n                className: \"my-4\",\n                label: \"PDF-Dokument ausw\\xE4hlen\",\n                id: \"customFile\",\n                onChange: e => setSelectedFile(e.target.files[0])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this), uploadLoading == false ? /*#__PURE__*/_jsxDEV(MDBBtn, {\n                type: \"submit\",\n                block: true,\n                children: \"Hochladen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(MDBBtn, {\n                type: \"submit\",\n                block: true,\n                disabled: true,\n                children: [/*#__PURE__*/_jsxDEV(MDBSpinner, {\n                  size: \"sm\",\n                  role: \"status\",\n                  tag: \"span\",\n                  className: \"me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 25\n                }, this), \"Hochladen...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this), fileUploadSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"success\",\n              className: \"mt-4\",\n              children: \"Dokument wurde verarbeitet. Weiter um Upload abzuschlie\\xDFen.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mt-4\",\n              children: \"Daten best\\xE4tigen:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Hochgeladene Dokumentenart: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this), type]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Beschreibung: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, this), description == \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"Keine Beschreibung.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 23\n              }, this) : description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: fileLink,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: \"Link zur Datei\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              pt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"inherit\",\n              disabled: activeStep === 0,\n              onClick: handleBack,\n              sx: {\n                mr: 1\n              },\n              children: \"Zur\\xFCck\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flex: \"1 1 auto\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), isStepOptional(activeStep) && /*#__PURE__*/_jsxDEV(Button, {\n              color: \"inherit\",\n              onClick: handleSkip,\n              sx: {\n                mr: 1\n              },\n              children: \"\\xDCberspringen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this), activeStep === steps.length - 1 ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSubmit,\n              children: \"Abschicken\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }, this) : activeStep == 0 && type == \"\" ? /*#__PURE__*/_jsxDEV(Button, {\n              disabled: true,\n              onClick: handleNext,\n              children: \"Weiter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 19\n            }, this) : activeStep == 1 && fileUploadSuccess == false ? /*#__PURE__*/_jsxDEV(Button, {\n              disabled: true,\n              onClick: handleNext,\n              children: \"Weiter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleNext,\n              children: \"Weiter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n      sx: {\n        color: \"#fff\",\n        zIndex: theme => theme.zIndex.drawer + 1\n      },\n      open: openBackdrop,\n      onClick: handleCloseBackdrop,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(OtherDocumentsForm, \"e+zwFR91Ur/l1L3JYPejE4PI/ys=\", false, function () {\n  return [useAxiosPrivate, useParams];\n});\n\n_c = OtherDocumentsForm;\nexport default OtherDocumentsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OtherDocumentsForm\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Documents/OtherDocumentsForm.jsx"],"names":["React","useState","uploadDokumentHash","getDokumentenhash","Box","Stepper","Step","StepLabel","Button","Typography","Alert","Backdrop","CircularProgress","MDBInput","MDBFile","MDBBtn","MDBContainer","MDBSpinner","useAxiosPrivate","useParams","Link","axios","steps","OtherDocumentsForm","props","axiosInstance","type","setType","description","setDescription","issueDate","setIssueDate","fileID","setFileID","fileLink","setFileLink","activeStep","setActiveStep","skipped","setSkipped","Set","selectedFile","setSelectedFile","uploadLoading","setUploadLoading","fileUploadSuccess","setFileUploadSuccess","transactionId","newDocumentData","setNewDocumentData","newDocumentID","docformData","FormData","openBackdrop","setOpenBackdrop","handleCloseBackdrop","handleToggleBackdrop","handleUpload","e","preventDefault","fileformData","append","console","log","post","then","res","data","id","file","catch","err","response","uDokumentHash","_transaktionID","_file","crypto","require","fileReader","FileReader","hashwert","readAsText","onload","evt","createHash","update","target","result","digest","tx","setNewDocument","newDocument","setSnackbarSuccess","setSnackbarMessage","handleOpenSnackbar","toggleAddDocumentModal","handleSubmit","isStepOptional","step","isStepSkipped","has","handleNext","newSkipped","values","delete","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","handleReset","width","map","label","index","stepProps","labelProps","optional","completed","length","mt","mb","display","flexDirection","pt","flex","value","files","mr","color","zIndex","theme","drawer"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { uploadDokumentHash, getDokumentenhash } from \"../../Web3Client\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Alert from \"@mui/material/Alert\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nimport { MDBInput, MDBFile, MDBBtn, MDBContainer } from \"mdb-react-ui-kit\";\nimport { MDBSpinner } from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst steps = [\"Dokument beschreiben\", \"Dokument hochladen\", \"Bestätigen\"];\n\nfunction OtherDocumentsForm(props) {\n  const axiosInstance = useAxiosPrivate();\n\n  const [type, setType] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  const [issueDate, setIssueDate] = React.useState(\"\");\n  const [fileID, setFileID] = React.useState();\n\n  const [fileLink, setFileLink] = React.useState(\"\");\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n\n  const [selectedFile, setSelectedFile] = React.useState();\n  const [uploadLoading, setUploadLoading] = React.useState(false);\n  const [fileUploadSuccess, setFileUploadSuccess] = React.useState(false);\n  const { transactionId } = useParams();\n  const [newDocumentData, setNewDocumentData] = useState();\n\n  var newDocumentID;\n\n  const docformData = new FormData();\n\n  // -- Loading Backdrop --\n  const [openBackdrop, setOpenBackdrop] = React.useState(false);\n  const handleCloseBackdrop = () => {\n    setOpenBackdrop(false);\n  };\n  const handleToggleBackdrop = () => {\n    setOpenBackdrop(!openBackdrop);\n  };\n\n  // Funktion für Datei Upload\n  function handleUpload(e) {\n    e.preventDefault();\n    setUploadLoading(true);\n    const fileformData = new FormData();\n    fileformData.append(\"file\", selectedFile);\n    console.log(type);\n    console.log(description);\n    axiosInstance\n      .post(\"/file/\", fileformData)\n      .then((res) => {\n        console.log(res.data.id);\n        setFileID(res.data.id);\n        console.log(fileID);\n        console.log(res.data.file);\n        setFileLink(res.data.file);\n        setFileUploadSuccess(true);\n        setUploadLoading(false);\n      })\n      .catch((err) => console.log(err.response));\n  }\n  async function uDokumentHash(_transaktionID, _file) {\n    var crypto = require(\"crypto\");\n    const fileReader = new FileReader();\n    var hashwert = \"\";\n    fileReader.readAsText(_file);\n    fileReader.onload = function (evt) {\n      hashwert = crypto\n        .createHash(\"sha512\")\n        .update(evt.target.result)\n        .digest(\"hex\");\n      console.log(hashwert);\n      uploadDokumentHash(\n        _transaktionID,\n        \"335fa03cdead8c9c873ecab475cc31f0a0a615ca688d6b0c9e26e47a892ab1859089f5f9494cd0b2195725641e2e82a28d78f0a58ccfc33c7caa827c418dc2f3\"\n      )\n        .then((tx) => {\n          //console.log(newDocumentData)\n          //console.log(\"Dokument wurde hochgeladen. DokumentenID: \" + tx + \"hash: \"+ hashwert);\n          docformData.append(\"blockchain_id\", tx - 1);\n          axiosInstance\n            .post(\"/documents/\", docformData)\n            .then((res) => {\n              console.log(res.data);\n              setNewDocumentData(res.data);\n              newDocumentID = res.data.id;\n              console.log(\"Dokument erfolgreich hochgeladen.\");\n              // newDocument -> State aktualisieren\n              props.setNewDocument(!props.newDocument);\n              // Erfolgs-Snackbar setzen\n              props.setSnackbarSuccess(true);\n              props.setSnackbarMessage(\"Dokument erfolgreich hochgeladen.\");\n              // Backdrop Ladeanimation öffnen\n              handleToggleBackdrop();\n              // Snackbar öffnen\n              props.handleOpenSnackbar();\n              // Modal schließen\n              props.toggleAddDocumentModal();\n            })\n            .catch((err) => {\n              console.log(err.response);\n              // Error-Snackbar setzen\n              props.setSnackbarSuccess(false);\n              props.setSnackbarMessage(\"Fehler beim hochladen des Dokuments.\");\n              // Backdrop Ladeanimation öffnen\n              handleToggleBackdrop();\n              // Snackbar öffnen\n              props.handleOpenSnackbar();\n              // Modal schließen\n              props.toggleAddDocumentModal();\n            });\n          return tx;\n        })\n        .catch((err) => {\n          console.log(\"Hashgenerierung fehlgeschlagen. Fehlermeldung: \" + err);\n        });\n    };\n  }\n\n  // Funktion zum Abschicken des Formulars\n  async function handleSubmit(e) {\n    //Standardverhalten abstellen\n    e.preventDefault();\n    // Backdrop Ladeanimation öffnen\n    handleToggleBackdrop();\n    docformData.append(\"description\", description);\n    docformData.append(\"type\", type);\n    docformData.append(\"file\", fileID);\n    docformData.append(\"issue_date\", \"2022-03-15\");\n    docformData.append(\"transaction\", transactionId);\n    const tx = await uDokumentHash(transactionId, selectedFile);\n    //console.log(tx)\n\n    //console.log(selectedFile);\n  }\n\n  // Alle Funktionen unterhalb: Steuerung des Steppers\n\n  // Kein Step ist optional\n  const isStepOptional = (step) => {\n    return;\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <>\n      <Box sx={{ width: \"100%\" }}>\n        <Stepper activeStep={activeStep}>\n          {steps.map((label, index) => {\n            const stepProps = {};\n            const labelProps = {};\n            if (isStepOptional(index)) {\n              labelProps.optional = (\n                <Typography variant=\"caption\">Optional</Typography>\n              );\n            }\n            if (isStepSkipped(index)) {\n              stepProps.completed = false;\n            }\n            return (\n              <Step key={label} {...stepProps}>\n                <StepLabel {...labelProps}>{label}</StepLabel>\n              </Step>\n            );\n          })}\n        </Stepper>\n        <MDBContainer className=\"mt-4\">\n          {activeStep === steps.length ? (\n            <React.Fragment>\n              <Typography sx={{ mt: 2, mb: 1 }}>\n                All steps completed - you&apos;re finished\n              </Typography>\n              <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                <Box sx={{ flex: \"1 1 auto\" }} />\n                <Button onClick={handleReset}>Zurücksetzen</Button>\n              </Box>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              {activeStep === 0 ? (\n                <>\n                  <MDBInput\n                    className=\"my-4\"\n                    value={type}\n                    name=\"type\"\n                    id=\"documentType\"\n                    label=\"Dokumententyp\"\n                    onChange={(e) => setType(e.target.value)}\n                    type=\"text\"\n                  />\n                  <MDBInput\n                    wrapperClass=\"mb-4\"\n                    value={description}\n                    textarea\n                    name=\"description\"\n                    id=\"documentDescription\"\n                    rows={3}\n                    onChange={(e) => setDescription(e.target.value)}\n                    label=\"Beschreibung (optional)\"\n                  />\n                </>\n              ) : activeStep === 1 ? (\n                <>\n                  <form onSubmit={handleUpload}>\n                    <MDBFile\n                      className=\"my-4\"\n                      label=\"PDF-Dokument auswählen\"\n                      id=\"customFile\"\n                      onChange={(e) => setSelectedFile(e.target.files[0])}\n                    />\n\n                    {uploadLoading == false ? (\n                      <MDBBtn type=\"submit\" block>\n                        Hochladen\n                      </MDBBtn>\n                    ) : (\n                      <MDBBtn type=\"submit\" block disabled>\n                        <MDBSpinner\n                          size=\"sm\"\n                          role=\"status\"\n                          tag=\"span\"\n                          className=\"me-2\"\n                        />\n                        Hochladen...\n                      </MDBBtn>\n                    )}\n                  </form>\n                  {fileUploadSuccess && (\n                    <Alert severity=\"success\" className=\"mt-4\">\n                      Dokument wurde verarbeitet. Weiter um Upload\n                      abzuschließen.\n                    </Alert>\n                  )}\n                </>\n              ) : (\n                <>\n                  <h5 className=\"mt-4\">Daten bestätigen:</h5>\n                  <p>\n                    <b>Hochgeladene Dokumentenart: </b>\n                    <br />\n                    {type}\n                  </p>\n                  <p>\n                    <b>Beschreibung: </b>\n                    <br />\n                    {description == \"\" ? (\n                      <i>Keine Beschreibung.</i>\n                    ) : (\n                      description\n                    )}\n                  </p>\n\n                  <p>\n                    <a\n                      href={fileLink}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      Link zur Datei\n                    </a>\n                  </p>\n                </>\n              )}\n              <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                <Button\n                  color=\"inherit\"\n                  disabled={activeStep === 0}\n                  onClick={handleBack}\n                  sx={{ mr: 1 }}\n                >\n                  Zurück\n                </Button>\n                <Box sx={{ flex: \"1 1 auto\" }} />\n                {isStepOptional(activeStep) && (\n                  <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\n                    Überspringen\n                  </Button>\n                )}\n\n                {activeStep === steps.length - 1 ? (\n                  <Button onClick={handleSubmit}>Abschicken</Button>\n                ) : activeStep == 0 && type == \"\" ? (\n                  <Button disabled onClick={handleNext}>\n                    Weiter\n                  </Button>\n                ) : activeStep == 1 && fileUploadSuccess == false ? (\n                  <Button disabled onClick={handleNext}>\n                    Weiter\n                  </Button>\n                ) : (\n                  <Button onClick={handleNext}>Weiter</Button>\n                )}\n              </Box>\n            </React.Fragment>\n          )}\n        </MDBContainer>\n      </Box>\n\n      <Backdrop\n        sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={openBackdrop}\n        onClick={handleCloseBackdrop}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </>\n  );\n}\n\nexport default OtherDocumentsForm;\n"]},"metadata":{},"sourceType":"module"}