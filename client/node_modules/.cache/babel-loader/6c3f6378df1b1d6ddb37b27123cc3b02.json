{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { MDBContainer, MDBRow, MDBBtn, MDBCol, MDBBadge } from \"mdb-react-ui-kit\";\nimport { TextField } from \"@mui/material\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport Partner from \"../components/Partners/Partner\";\nimport Transaction from \"../components/Transactions/Transaction\";\nimport { Divider } from \"@mui/material\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Search(props) {\n  _s();\n\n  const axiosInstance = useAxiosPrivate();\n  const [query, setQuery] = useState(\"\");\n  const [resultsTransaction, setResultsTransactions] = useState([]);\n  const [resultsPartnerships, setResultsPartnerships] = useState([]);\n  const [documentsData, setDocumentsData] = useState([]);\n  const [declarationData, setDeclarationData] = useState([]);\n  const [activeSearch, setActiveSearch] = useState(false);\n  const {\n    search\n  } = window.location;\n  let [searchParams, setSearchParams] = useSearchParams();\n  useEffect(() => {\n    console.log(query);\n    console.log(suchbegriff);\n  }, [query]);\n  let suchbegriff = searchParams.get(\"\");\n  useEffect(async () => {\n    if (suchbegriff) {\n      let query = suchbegriff;\n      handleSearch(query);\n    }\n  }, [suchbegriff]); //Bisher Suche nur nach Transaktionen\n\n  function handleSearch(queryset) {\n    axiosInstance.get(\"transactions/?search=\" + queryset).then(res => {\n      console.log(res);\n      setResultsTransactions(res.data);\n    });\n    axiosInstance.get(\"partnership/?search=\" + queryset).then(res => {\n      console.log(res);\n      setResultsPartnerships(res.data);\n    });\n    console.log(\"hier steht eine suche mit dem suchwort\" + queryset); // Dokumente abrufen\n\n    axiosInstance.get(\"documents/\").then(res => {\n      setDocumentsData(res.data);\n    }); // Zollanmeldungen abrufen\n\n    axiosInstance.get(\"declaration/\").then(res => {\n      setDeclarationData(res.data);\n      console.log(res.data);\n    });\n    setActiveSearch(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n      children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Suche\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n        children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"my-3\",\n            sx: {\n              width: 550\n            },\n            id: \"suchbegriff\",\n            name: \"suchbegriff\",\n            label: \"Suchbegriff\",\n            variant: \"outlined\",\n            value: query,\n            onChange: event => {\n              setActiveSearch(false);\n              setQuery(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n          children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n            className: \"mt-4 float-start\",\n            onClick: () => handleSearch(query),\n            children: [\" \", \"Abschicken\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), activeSearch && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mt-3\",\n            children: [\"Suche nach Auftr\\xE4gen/Partnern, die folgenden Begriff enthalten:\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: query\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          textAlign: \"left\",\n          className: \"mt-5 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"\\xDCberblick \\xFCber die Ergebnisse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MDBBadge, {\n          pill: true,\n          className: \"ms-3\",\n          children: resultsPartnerships.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \" Partnerschaften\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MDBBadge, {\n          pill: true,\n          className: \"ms-3\",\n          children: resultsTransaction.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \" Auftr\\xE4ge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          textAlign: \"left\",\n          className: \"mt-5 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Ergebnisse f\\xFCr Auftr\\xE4ge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n          children: [resultsTransaction.map(transactionData => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Transaction, {\n              id: transactionData.id,\n              title: transactionData.description,\n              added: transactionData.date_added,\n              exportAddress: transactionData.partnership.partner.name,\n              exportStreet: transactionData.partnership.partner.street,\n              exportCity: transactionData.partnership.partner.city,\n              exportCountry: transactionData.partnership.partner.country_code,\n              importAddress: transactionData.importAddress,\n              importStreet: transactionData.importStreet,\n              importCity: transactionData.importCity,\n              importCountry: transactionData.importCountry,\n              stakeholderCount: transactionData.stakeholderCount,\n              lastChange: transactionData.date_processed,\n              status: transactionData.status,\n              timestamp_added: transactionData.timestamp_added,\n              timestamp_processed: transactionData.timestamp_processed,\n              documentsData: documentsData,\n              declarationData: declarationData\n            }, transactionData.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(Divider, {\n            textAlign: \"left\",\n            className: \"mt-5 mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Ergebnisse f\\xFCr Partnerschaften\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), resultsPartnerships.map(partner => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Partner, {\n              id: partner.partner.eori_nr,\n              id_relation: partner.id,\n              title: partner.partner.name,\n              added: partner.date_added,\n              addressStreet: partner.partner.street,\n              addressCity: partner.partner.city,\n              addressCountry: partner.partner.country_code,\n              email: partner.partner.email,\n              phone: partner.partner.phone,\n              eori: partner.partner.eori_nr\n            }, partner.partner.eori_nr, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this)), \";\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"ZuJWcbWQ8qs+5gKwbcCp+baQu1E=\", false, function () {\n  return [useAxiosPrivate, useSearchParams];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Search.jsx"],"names":["React","useEffect","useState","MDBContainer","MDBRow","MDBBtn","MDBCol","MDBBadge","TextField","useAxiosPrivate","Partner","Transaction","Divider","useSearchParams","Search","props","axiosInstance","query","setQuery","resultsTransaction","setResultsTransactions","resultsPartnerships","setResultsPartnerships","documentsData","setDocumentsData","declarationData","setDeclarationData","activeSearch","setActiveSearch","search","window","location","searchParams","setSearchParams","console","log","suchbegriff","get","handleSearch","queryset","then","res","data","width","event","target","value","length","map","transactionData","id","description","date_added","partnership","partner","name","street","city","country_code","importAddress","importStreet","importCity","importCountry","stakeholderCount","date_processed","status","timestamp_added","timestamp_processed","eori_nr","email","phone"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBBtn,\n  MDBCol,\n  MDBBadge,\n} from \"mdb-react-ui-kit\";\nimport { TextField } from \"@mui/material\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport Partner from \"../components/Partners/Partner\";\nimport Transaction from \"../components/Transactions/Transaction\";\nimport { Divider } from \"@mui/material\";\nimport { useSearchParams } from \"react-router-dom\";\n\nfunction Search(props) {\n  const axiosInstance = useAxiosPrivate();\n\n  const [query, setQuery] = useState(\"\");\n\n  const [resultsTransaction, setResultsTransactions] = useState([]);\n\n  const [resultsPartnerships, setResultsPartnerships] = useState([]);\n  const [documentsData, setDocumentsData] = useState([]);\n  const [declarationData, setDeclarationData] = useState([]);\n\n  const [activeSearch, setActiveSearch] = useState(false);\n\n  const { search } = window.location;\n  let [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    console.log(query);\n    console.log(suchbegriff);\n  }, [query]);\n\n  let suchbegriff = searchParams.get(\"\");\n\n  useEffect(async () => {\n    if (suchbegriff) {\n      let query = suchbegriff\n\n      handleSearch(query);\n    }\n  }, [suchbegriff]);\n\n  //Bisher Suche nur nach Transaktionen\n  function handleSearch(queryset) {\n    axiosInstance.get(\"transactions/?search=\" + queryset).then((res) => {\n      console.log(res);\n      setResultsTransactions(res.data);\n    });\n    axiosInstance.get(\"partnership/?search=\" + queryset).then((res) => {\n      console.log(res);\n      setResultsPartnerships(res.data);\n    });\n    console.log(\"hier steht eine suche mit dem suchwort\" + queryset);\n    // Dokumente abrufen\n\n    axiosInstance.get(\"documents/\").then((res) => {\n      setDocumentsData(res.data);\n    });\n    // Zollanmeldungen abrufen\n\n    axiosInstance.get(\"declaration/\").then((res) => {\n      setDeclarationData(res.data);\n      console.log(res.data);\n    });\n\n    setActiveSearch(true);\n  }\n\n  return (\n    <div>\n      <MDBContainer>\n        <MDBRow>\n          <h3>Suche</h3>\n        </MDBRow>\n        <MDBRow>\n          <MDBCol>\n            <TextField\n              className=\"my-3\"\n              sx={{ width: 550 }}\n              id=\"suchbegriff\"\n              name=\"suchbegriff\"\n              label=\"Suchbegriff\"\n              variant=\"outlined\"\n              value={query}\n              onChange={(event) => {\n                setActiveSearch(false);\n                setQuery(event.target.value);\n              }}\n            />\n          </MDBCol>\n          <MDBCol>\n            <MDBBtn\n              className=\"mt-4 float-start\"\n              onClick={() => handleSearch(query)}\n            >\n              {\" \"}\n              Abschicken\n            </MDBBtn>\n          </MDBCol>\n        </MDBRow>\n\n        {activeSearch && (\n          <>\n            <MDBRow>\n              <h5 className=\"mt-3\">\n                Suche nach Aufträgen/Partnern, die folgenden Begriff enthalten:{\" \"}\n                <i>{query}</i>\n              </h5>\n            </MDBRow>\n            <Divider textAlign=\"left\" className=\"mt-5 mb-4\">\n              <h5>Überblick über die Ergebnisse</h5>\n            </Divider>\n            <MDBBadge pill className=\"ms-3\">\n              {resultsPartnerships.length}\n            </MDBBadge>\n            <b> Partnerschaften</b>\n            <MDBBadge pill className=\"ms-3\">\n              {resultsTransaction.length}\n            </MDBBadge>\n            <b> Aufträge</b>\n            <Divider textAlign=\"left\" className=\"mt-5 mb-4\">\n              <h5>Ergebnisse für Aufträge</h5>\n            </Divider>\n            <MDBRow>\n              {resultsTransaction.map((transactionData) => (\n                <React.Fragment>\n                  <Transaction\n                    key={transactionData.id}\n                    id={transactionData.id}\n                    title={transactionData.description}\n                    added={transactionData.date_added}\n                    exportAddress={transactionData.partnership.partner.name}\n                    exportStreet={transactionData.partnership.partner.street}\n                    exportCity={transactionData.partnership.partner.city}\n                    exportCountry={\n                      transactionData.partnership.partner.country_code\n                    }\n                    importAddress={transactionData.importAddress}\n                    importStreet={transactionData.importStreet}\n                    importCity={transactionData.importCity}\n                    importCountry={transactionData.importCountry}\n                    stakeholderCount={transactionData.stakeholderCount}\n                    lastChange={transactionData.date_processed}\n                    status={transactionData.status}\n                    timestamp_added={transactionData.timestamp_added}\n                    timestamp_processed={transactionData.timestamp_processed}\n                    documentsData={documentsData}\n                    declarationData={declarationData}\n                  />\n                  <br />\n                </React.Fragment>\n              ))}\n              <Divider textAlign=\"left\" className=\"mt-5 mb-4\">\n                <h5>Ergebnisse für Partnerschaften</h5>\n              </Divider>\n              {resultsPartnerships.map((partner) => (\n                <React.Fragment>\n                  <Partner\n                    key={partner.partner.eori_nr}\n                    id={partner.partner.eori_nr}\n                    id_relation={partner.id}\n                    title={partner.partner.name}\n                    added={partner.date_added}\n                    addressStreet={partner.partner.street}\n                    addressCity={partner.partner.city}\n                    addressCountry={partner.partner.country_code}\n                    email={partner.partner.email}\n                    phone={partner.partner.phone}\n                    eori={partner.partner.eori_nr}\n                  />\n                  <br />\n                </React.Fragment>\n              ))}\n              ;\n            </MDBRow>\n          </>\n        )}\n      </MDBContainer>\n    </div>\n  );\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}