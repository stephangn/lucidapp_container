{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Zoll/ZollDocuments.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport { MDBContainer, MDBBtn, MDBRow, MDBCol, MDBSpinner, MDBBadge } from \"mdb-react-ui-kit\";\nimport Divider from \"@mui/material/Divider\";\nimport { Link } from \"react-router-dom\";\nimport { MDBBreadcrumb, MDBBreadcrumbItem } from \"mdb-react-ui-kit\";\nimport ZollDocumentsModal from \"../../components/ZollDocuments/ZollDocumentsModal\";\nimport ZollDocumentTransaction from \"../../components/ZollDocuments/ZollDocumentTransaction\";\nimport DocumentCard from \"../../components/Documents/DocumentCard\";\nimport DeclarationCard from \"../../components/Documents/DeclarationCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ZollDocuments(props) {\n  _s();\n\n  // Allgemeine Auftragsinformationen\n  const [transactionData, setTransactionData] = useState([]); // Informationen der hochgeladenen Dokumente\n\n  const [documentsData, setDocumentsData] = useState([]);\n  const [declarationData, setDeclarationData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const axiosInstance = useAxiosPrivate(); // // Anzahl Dokumente\n  // const [numberInvoiceDocumentes, setNumberInvoiceDocuments] = useState(0);\n  // const [numberOtherDocumentes, setNumberOtherDocuments] = useState(0);\n  // Speichern der Transaktions-ID aus URL\n\n  const {\n    declarationID\n  } = useParams();\n  useEffect(async () => {\n    console.log(declarationID);\n    await axiosInstance.get(`declaration_auth/` + declarationID).then(res => {\n      console.log(res.data);\n      setDeclarationData(res.data);\n      setDocumentsData(res.data.document);\n      setTransactionData(res.data.transaction);\n    }).catch(err => {\n      console.log(\"Keine Zollanmeldung liegt vor\" + err);\n    });\n    setIsLoading(false);\n    /*     console.log(transactionData);\n        axiosInstance.get(`documents/?transaction=` + transactionId).then((res) => {\n          //console.log(res.data);\n          setDocumentsData(res.data);\n          //console.log(documentsData);\n        }); */\n  }, []);\n  useEffect(() => {\n    console.log(declarationData);\n    console.log(transactionData);\n  }, [declarationData, transactionData]); // State für \"Dokument hinzufügen\" Modal\n\n  const [addDocumentModal, setAddDocumentModal] = useState(false); // Funktion für Manipulation von Modal (als props weitergereicht)\n\n  function toggleAddDocumentModal() {\n    setAddDocumentModal(!addDocumentModal);\n  } // Anzahl Rechnungs+Zolldokumente call(a) und sonstige Dokumente call(b)\n\n\n  function numberInvoiceDocuments(alternative) {\n    let invoiceAndCustoms = 0;\n    let other = 0;\n\n    for (let i = 0; i < documentsData.length; i++) {\n      if (documentsData[i].type == \"Rechnung\" || documentsData[i].type == \"Zoll\") {\n        invoiceAndCustoms += 1;\n      } else {\n        other += 1;\n      }\n    }\n\n    if (alternative == \"a\") {\n      return invoiceAndCustoms;\n    }\n\n    if (alternative == \"b\") {\n      return other;\n    }\n\n    return;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(MDBSpinner, {\n      grow: true,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"visually-hidden\",\n        children: \"L\\xE4dt..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(MDBContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Zollanmeldung Dokumente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ZollDocumentsModal, {\n        basicModal: addDocumentModal,\n        setBasicModal: setAddDocumentModal,\n        toggleShow: toggleAddDocumentModal,\n        transactionData: transactionData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MDBBreadcrumb, {\n        children: [/*#__PURE__*/_jsxDEV(MDBBreadcrumbItem, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/zoll/transactions\",\n            children: \"Auftr\\xE4ge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MDBBreadcrumbItem, {\n          active: true,\n          children: [\"Zollanmeldung-ID \", declarationData.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ZollDocumentTransaction, {\n        declarationData: declarationData,\n        numberDocuments: documentsData === null || documentsData === void 0 ? void 0 : documentsData.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"my-3 navbar navbar-expand-lg navbar-light bg-light\",\n        children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MDBBadge, {\n              pill: true,\n              children: numberInvoiceDocuments(\"a\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Rechnungs- und Zolldokumente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MDBBadge, {\n              pill: true,\n              className: \"ms-3\",\n              children: numberInvoiceDocuments(\"b\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Sonstige Dokumente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n            outline: true,\n            className: \"float-end\",\n            color: \"success\",\n            onClick: toggleAddDocumentModal,\n            children: \"Dokument hinzuf\\xFCgen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        textAlign: \"left\",\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Zollanmeldung\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DeclarationCard, {\n        transactionId: transactionId,\n        documentId: documentsData.documentId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        textAlign: \"left\",\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Rechnung\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n        className: \"row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\",\n        children: documentsData.map(documentData => documentData.type == \"Rechnung\" && /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(MDBCol, {\n            children: /*#__PURE__*/_jsxDEV(DocumentCard, {\n              id: documentData.id,\n              author_company: documentData.owner.employee.company.name,\n              author: documentData.owner.username,\n              type: documentData.type,\n              description: documentData.description,\n              documentDate: documentData.issue_date,\n              uploadDate: documentData.upload_date,\n              file: documentData.file,\n              confirmed: documentData.confirmed\n            }, documentData.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        textAlign: \"left\",\n        className: \"mt-5 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Sonstige Dokumente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n        className: \"row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\",\n        children: documentsData.map(documentData => documentData.type !== \"Rechnung\" && /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(MDBCol, {\n            children: /*#__PURE__*/_jsxDEV(DocumentCard, {\n              id: documentData.id,\n              author: documentData.author,\n              type: documentData.type,\n              description: documentData.description,\n              documentDate: documentData.issue_date,\n              uploadDate: documentData.upload_date,\n              file: documentData.file,\n              confirmed: documentData.confirmed\n            }, documentData.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(ZollDocuments, \"VAVur9SPk9N+qbbrp3fXMWbN+oI=\", false, function () {\n  return [useAxiosPrivate, useParams];\n});\n\n_c = ZollDocuments;\nexport default ZollDocuments;\n\nvar _c;\n\n$RefreshReg$(_c, \"ZollDocuments\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Zoll/ZollDocuments.jsx"],"names":["React","useEffect","useState","useParams","useAxiosPrivate","MDBContainer","MDBBtn","MDBRow","MDBCol","MDBSpinner","MDBBadge","Divider","Link","MDBBreadcrumb","MDBBreadcrumbItem","ZollDocumentsModal","ZollDocumentTransaction","DocumentCard","DeclarationCard","ZollDocuments","props","transactionData","setTransactionData","documentsData","setDocumentsData","declarationData","setDeclarationData","isLoading","setIsLoading","axiosInstance","declarationID","console","log","get","then","res","data","document","transaction","catch","err","addDocumentModal","setAddDocumentModal","toggleAddDocumentModal","numberInvoiceDocuments","alternative","invoiceAndCustoms","other","i","length","type","id","transactionId","documentId","map","documentData","owner","employee","company","name","username","description","issue_date","upload_date","file","confirmed","author"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport {\n  MDBContainer,\n  MDBBtn,\n  MDBRow,\n  MDBCol,\n  MDBSpinner,\n  MDBBadge,\n} from \"mdb-react-ui-kit\";\nimport Divider from \"@mui/material/Divider\";\n\nimport { Link } from \"react-router-dom\";\nimport { MDBBreadcrumb, MDBBreadcrumbItem } from \"mdb-react-ui-kit\";\n\nimport ZollDocumentsModal from \"../../components/ZollDocuments/ZollDocumentsModal\";\nimport ZollDocumentTransaction from \"../../components/ZollDocuments/ZollDocumentTransaction\";\nimport DocumentCard from \"../../components/Documents/DocumentCard\";\nimport DeclarationCard\n from \"../../components/Documents/DeclarationCard\";\nfunction ZollDocuments(props) {\n  // Allgemeine Auftragsinformationen\n  const [transactionData, setTransactionData] = useState([]);\n\n  // Informationen der hochgeladenen Dokumente\n  const [documentsData, setDocumentsData] = useState([]);\n\n  const [declarationData, setDeclarationData] = useState([]);\n\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const axiosInstance = useAxiosPrivate();\n\n  // // Anzahl Dokumente\n  // const [numberInvoiceDocumentes, setNumberInvoiceDocuments] = useState(0);\n  // const [numberOtherDocumentes, setNumberOtherDocuments] = useState(0);\n\n  // Speichern der Transaktions-ID aus URL\n  const { declarationID } = useParams();\n\n\n  useEffect(async() => {\n    console.log(declarationID)\n    await axiosInstance.get(`declaration_auth/` + declarationID).then((res) => {\n      console.log(res.data);\n      setDeclarationData(res.data)\n      setDocumentsData(res.data.document);\n      setTransactionData(res.data.transaction);\n    }).catch((err) =>{\n      console.log(\"Keine Zollanmeldung liegt vor\" + err)\n    });\n\n    setIsLoading(false);\n\n/*     console.log(transactionData);\n    axiosInstance.get(`documents/?transaction=` + transactionId).then((res) => {\n      //console.log(res.data);\n      setDocumentsData(res.data);\n      //console.log(documentsData);\n    }); */\n  }, []);\n\n  useEffect(() => {\n    console.log(declarationData)\n    console.log(transactionData)\n  },[declarationData, transactionData])\n\n  // State für \"Dokument hinzufügen\" Modal\n  const [addDocumentModal, setAddDocumentModal] = useState(false);\n  // Funktion für Manipulation von Modal (als props weitergereicht)\n  function toggleAddDocumentModal() {\n    setAddDocumentModal(!addDocumentModal);\n  }\n\n  // Anzahl Rechnungs+Zolldokumente call(a) und sonstige Dokumente call(b)\n  function numberInvoiceDocuments(alternative) {\n    let invoiceAndCustoms = 0;\n    let other = 0;\n    for (let i = 0; i < documentsData.length; i++) {\n      if (\n        documentsData[i].type == \"Rechnung\" ||\n        documentsData[i].type == \"Zoll\"\n      ) {\n        invoiceAndCustoms += 1;\n      } else {\n        other += 1;\n      }\n    }\n    if (alternative == \"a\") {\n      return invoiceAndCustoms;\n    }\n    if (alternative == \"b\") {\n      return other;\n    }\n    return;\n  }\n\n  return (\n    <>\n      {isLoading ? (\n        <MDBSpinner grow>\n          <span className=\"visually-hidden\">Lädt..</span>\n        </MDBSpinner>\n      ) : (\n        <MDBContainer>\n          <h3>Zollanmeldung Dokumente</h3>\n          <ZollDocumentsModal\n            basicModal={addDocumentModal}\n            setBasicModal={setAddDocumentModal}\n            toggleShow={toggleAddDocumentModal}\n            transactionData={transactionData}\n          />\n          <MDBBreadcrumb>\n            <MDBBreadcrumbItem>\n              <Link to=\"/zoll/transactions\">Aufträge</Link>\n            </MDBBreadcrumbItem>\n            <MDBBreadcrumbItem active>\n              Zollanmeldung-ID {declarationData.id}\n            </MDBBreadcrumbItem>\n          </MDBBreadcrumb>\n          <ZollDocumentTransaction\n            declarationData = {declarationData}\n            numberDocuments={documentsData?.length}\n          />\n\n          {/* Navleiste mit Anzahl der Dokumente */}\n          <nav className=\"my-3 navbar navbar-expand-lg navbar-light bg-light\">\n            <MDBContainer>\n              <div>\n                <MDBBadge pill>{numberInvoiceDocuments(\"a\")}</MDBBadge>{\" \"}\n                <b>Rechnungs- und Zolldokumente</b>\n                <MDBBadge pill className=\"ms-3\">\n                  {numberInvoiceDocuments(\"b\")}\n                </MDBBadge>{\" \"}\n                <b>Sonstige Dokumente</b>\n              </div>\n              <MDBBtn\n                outline\n                className=\"float-end\"\n                color=\"success\"\n                onClick={toggleAddDocumentModal}\n              >\n                Dokument hinzufügen\n              </MDBBtn>\n            </MDBContainer>\n          </nav>\n          {/* Auflistung der Rechnungsdokumente */}\n          <Divider textAlign=\"left\" className=\"mb-4\">\n            <h5>Zollanmeldung</h5>\n          </Divider>\n          <DeclarationCard\n            transactionId={transactionId}\n            documentId={documentsData.documentId}\n          />\n\n          <Divider textAlign=\"left\" className=\"mb-4\">\n            <h5>Rechnung</h5>\n          </Divider>\n          <MDBRow className=\"row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\">\n            {documentsData.map(\n              (documentData) =>\n                documentData.type == \"Rechnung\" && (\n                  <React.Fragment>\n                    <MDBCol>\n                      <DocumentCard\n                        key={documentData.id}\n                        id={documentData.id}\n                        author_company={\n                          documentData.owner.employee.company.name\n                        }\n                        author={documentData.owner.username}\n                        type={documentData.type}\n                        description={documentData.description}\n                        documentDate={documentData.issue_date}\n                        uploadDate={documentData.upload_date}\n                        file={documentData.file}\n                        confirmed={documentData.confirmed}\n                      />\n                    </MDBCol>\n                  </React.Fragment>\n                )\n            )}\n          </MDBRow>\n\n          {/* Auflistung der sontigen Dokumente */}\n\n          <Divider textAlign=\"left\" className=\"mt-5 mb-4\">\n            <h5>Sonstige Dokumente</h5>\n          </Divider>\n          <MDBRow className=\"row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\">\n            {documentsData.map(\n              (documentData) =>\n                documentData.type !== \"Rechnung\" && (\n                  <React.Fragment>\n                    <MDBCol>\n                      <DocumentCard\n                        key={documentData.id}\n                        id={documentData.id}\n                        author={documentData.author}\n                        type={documentData.type}\n                        description={documentData.description}\n                        documentDate={documentData.issue_date}\n                        uploadDate={documentData.upload_date}\n                        file={documentData.file}\n                        confirmed={documentData.confirmed}\n                      />\n                    </MDBCol>\n                  </React.Fragment>\n                )\n            )}\n          </MDBRow>\n        </MDBContainer>\n      )}\n    </>\n  );\n}\n\nexport default ZollDocuments;\n"]},"metadata":{},"sourceType":"module"}