{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Declaration.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\"; // Unterformulare\n\nimport AllgemeineAngaben from \"../components/Declaration/AllgemeineAngaben\";\nimport Adressdaten from \"../components/Declaration/Adressdaten\";\nimport Lieferdaten from \"../components/Declaration/Lieferdaten\";\nimport Rechnungsdaten from \"../components/Declaration/Rechnungsdaten\";\nimport { MDBContainer, MDBSpinner } from \"mdb-react-ui-kit\"; //Smart Contract\n\nimport { createZollanmeldung } from \"../Web3Client\"; // Stepper\n\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Declaration() {\n  _s();\n\n  const [transactionData, setTransactionData] = React.useState({});\n  const [isLoading, setIsLoading] = useState(true); // Stepper-Logik\n\n  const steps = [\"Allgemeine Angaben\", \"Adressdaten\", \"Lieferdaten\", \"Rechnungsdaten\"];\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set()); // (Kein Step ist optional)\n\n  const isStepOptional = step => {\n    return;\n  }; //Abfrage der voreingestellten Daten\n\n\n  const axiosInstance = useAxiosPrivate();\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  }; //Übertragen der Daten\n\n\n  const handleSubmit = () => {\n    console.log(fieldValue); //Hier fehlen noch der Pub Key (1. Input) vom Zoll sowie die Blockchain-interne RechnungsID (2.Input)(Muss beides aus Datenbank kommen)\n    //Zollwert fehlt ebenfalls (3. Wert)\n\n    blockchainZollanmeldungTransaction(\"0xe24D91818F5F92B4969867A8164d4E27D4336a99\", \"1\", \"Zollwert\", fieldValue.lieferkosten, fieldValue.lieferbedingung); //speichern in Datenbank\n\n    axios.post();\n    return;\n  }; // -- DATENFELDER --\n  // State des Inhalts der Felder\n\n\n  const [fieldValue, setFieldValue] = React.useState({\n    // Allgemeine Angaben\n    auftragsnummer: \"\",\n    bearbeitendeDienststelle: \"\",\n    anmeldungArt: \"\",\n    geschaeftArt: \"\",\n    zahlungArt: \"\",\n    // Adressdaten Versender\n    eoriVersender: \"\",\n    nameVersender: \"\",\n    vornameVersender: \"\",\n    firmaVersender: \"\",\n    strasseVersender: \"\",\n    plzVersender: \"\",\n    ortVersender: \"\",\n    staatVersender: \"\",\n    telefonVersender: \"\",\n    emailVersender: \"\",\n    // Adressdaten Anmelder\n    eoriAnmelder: \"\",\n    nameAnmelder: \"\",\n    vornameAnmelder: \"\",\n    firmaAnmelder: \"\",\n    strasseAnmelder: \"\",\n    plzAnmelder: \"\",\n    ortAnmelder: \"\",\n    staatAnmelder: \"\",\n    telefonAnmelder: \"\",\n    emailAnmelder: \"\",\n    // Lieferdaten\n    ausfuhrland: \"\",\n    bestimmungsland: \"\",\n    bestimmungsbundesland: \"\",\n    befoerderungsmittel: \"\",\n    lieferbedingung: \"\",\n    lieferort: \"\",\n    warenort: \"\",\n    lieferkosten: \"\",\n    //Rechnungsdaten\n    datumRechnung: \"\",\n    gesamtbetrag: \"\",\n    waehrung: \"\"\n  });\n  const [rechnungsposten, setRechnungsposten] = React.useState([{\n    rechnungspostenProdukt: \"\",\n    rechnungspostenAnzahl: \"\",\n    rechnungspostenEinheit: \"\",\n    rechnungspostenPreisEinheit: \"\"\n  }]); // State über fehlende Eingaben\n\n  const [inputMissingError, setInputMissingError] = React.useState({\n    // Allgemeine Angaben\n    auftragsnummer: false,\n    bearbeitendeDienststelle: false,\n    anmeldungArt: false,\n    geschaeftArt: false,\n    zahlungArt: false,\n    // Adressdaten Versender\n    eoriVersender: false,\n    nameVersender: false,\n    vornameVersender: false,\n    firmaVersender: false,\n    strasseVersender: false,\n    plzVersender: false,\n    ortVersender: false,\n    staatVersender: false,\n    telefonVersender: false,\n    emailVersender: false,\n    // Adressdaten Anmelder\n    eoriAnmelder: false,\n    nameAnmelder: false,\n    vornameAnmelder: false,\n    firmaAnmelder: false,\n    strasseAnmelder: false,\n    plzAnmelder: false,\n    ortAnmelder: false,\n    staatAnmelder: false,\n    telefonAnmelder: false,\n    emailAnmelder: false,\n    // Lieferdaten\n    ausfuhrland: false,\n    bestimmungsland: false,\n    bestimmungsbundesland: false,\n    befoerderungsmittel: false,\n    lieferbedingung: false,\n    lieferort: false,\n    warenort: false,\n    lieferkosten: false,\n    //Rechnungsdaten\n    datumRechnung: false,\n    gesamtbetrag: false,\n    waehrung: false\n  }); // State über falsche Inputs (müssen Zahlen sein)\n\n  const [inputWrongError, setInputWrongError] = React.useState({\n    auftragsnummer: false,\n    eoriVersender: false,\n    plzVersender: false,\n    eoriAnmelder: false,\n    plsAnmelder: false,\n    lieferkosten: false\n  }); // FieldChange für Select und String-Felder\n\n  function handleFieldChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    setFieldValue({ ...fieldValue,\n      [name]: value\n    });\n    setInputMissingError({ ...inputMissingError,\n      [name]: false\n    });\n  } // FieldChange für Zahlen-Inputfelder\n\n\n  function handleNumberFieldChange(event) {\n    const name = event.target.name;\n    const value = event.target.value; // Validierung: nur Zahlen\n\n    if (isNaN(value)) {\n      setInputWrongError({ ...inputWrongError,\n        [name]: true\n      });\n    } else {\n      setInputWrongError({ ...inputWrongError,\n        [name]: false\n      });\n    }\n\n    setFieldValue({ ...fieldValue,\n      [name]: value\n    });\n    setInputMissingError({ ...inputMissingError,\n      [name]: false\n    });\n  } // Abfragen der Bestandsdaten\n\n\n  useEffect(async () => {\n    const transactionId = 11;\n    await axiosInstance.get(`transactions/` + transactionId).then(res => {\n      setFieldValue(prev => {\n        return { ...prev,\n          auftragsnummer: res.data.id,\n          eoriVersender: res.data.partnership.partner.eori_nr,\n          //nameVersender: .partnership.partner.name,\n          firmaVersender: res.data.partnership.partner.name,\n          strasseVersender: res.data.partnership.partner.street,\n          plzVersender: res.data.partnership.partner.city_code,\n          ortVersender: res.data.partnership.partner.city,\n          staatVersender: res.data.partnership.partner.country_code,\n          telefonVersender: res.data.partnership.partner.phone,\n          emailVersender: res.data.partnership.partner.email\n        };\n      });\n      setIsLoading(false);\n    }); //Abfrage der eigenen Nutzerdaten\n\n    await axiosInstance.get(`user/`).then(response => {\n      //console.log(response);\n      setFieldValue(prev => {\n        var _response$data$0$empl;\n\n        return { ...prev,\n          eoriAnmelder: (_response$data$0$empl = response.data[0].employee) === null || _response$data$0$empl === void 0 ? void 0 : _response$data$0$empl.company.eori_nr,\n          //nameVersender: .partnership.partner.name,\n          firmaAnmelder: response.data[0].employee.company.name,\n          strasseAnmelder: response.data[0].employee.company.street,\n          plzAnmelder: response.data[0].employee.company.city_code,\n          ortAnmelder: response.data[0].employee.company.city,\n          staatAnmelder: response.data[0].employee.company.country_code,\n          telefonAnmelder: response.data[0].employee.company.phone,\n          emailAnmelder: response.data[0].employee.company.email\n        };\n      });\n    }); //Abfrage der Rechnungsdaten \n\n    await axiosInstance.get(`invoice/?transaction=${transactionId}`).then(response => {\n      setFieldValue(prev => {\n        var _response$data$;\n\n        return { ...prev,\n          waehrung: response.data[0].currency,\n          datumRechnung: response.data[0].issue_date,\n          gesamtbetrag: (_response$data$ = response.data[0]) === null || _response$data$ === void 0 ? void 0 : _response$data$.issue_date\n        };\n      });\n    });\n  }, []); //Debugging\n\n  useEffect(() => {\n    console.log(\"FieldValue geändert\" + fieldValue.auftragsnummer);\n  }, [fieldValue]);\n\n  async function blockchainZollanmeldungTransaction(_zoll, _rechnungID, _zollwert, _transportkosten, _incoterms) {\n    //blockchain Transaktion\n    var erfolgreich = false;\n    createZollanmeldung(_zoll, _rechnungID, _zollwert, _transportkosten, _incoterms).then(tx => {\n      console.log(tx);\n      erfolgreich = true;\n    }).catch(err => {\n      console.log(err);\n    });\n    return erfolgreich;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(MDBSpinner, {\n      grow: true,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"visually-hidden\",\n        children: \"L\\xE4dt..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Zollanmeldung\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Stepper, {\n            className: \"mb-3\",\n            activeStep: activeStep,\n            children: steps.map((label, index) => {\n              const stepProps = {};\n              const labelProps = {};\n\n              if (isStepOptional(index)) {\n                labelProps.optional = /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  children: \"Optional\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 21\n                }, this);\n              }\n\n              if (isStepSkipped(index)) {\n                stepProps.completed = false;\n              }\n\n              return /*#__PURE__*/_jsxDEV(Step, { ...stepProps,\n                children: /*#__PURE__*/_jsxDEV(StepLabel, { ...labelProps,\n                  children: label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 21\n                }, this)\n              }, label, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), activeStep === steps.length ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                mt: 2,\n                mb: 1\n              },\n              children: \"All steps completed - you're finished\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: \"flex\",\n                flexDirection: \"row\",\n                pt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flex: \"1 1 auto\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleReset,\n                children: \"Zur\\xFCcksetzen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [activeStep === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n                children: /*#__PURE__*/_jsxDEV(AllgemeineAngaben, {\n                  fieldValue: fieldValue,\n                  setFieldValue: setFieldValue,\n                  inputMissingError: inputMissingError,\n                  setInputMissingError: setInputMissingError,\n                  inputWrongError: inputWrongError,\n                  setInputWrongError: setInputWrongError,\n                  handleFieldChange: handleFieldChange,\n                  handleNumberFieldChange: handleNumberFieldChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 21\n              }, this)\n            }, void 0, false) : activeStep === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n                children: /*#__PURE__*/_jsxDEV(Adressdaten, {\n                  fieldValue: fieldValue,\n                  setFieldValue: setFieldValue,\n                  inputMissingError: inputMissingError,\n                  setInputMissingError: setInputMissingError,\n                  inputWrongError: inputWrongError,\n                  setInputWrongError: setInputWrongError,\n                  handleFieldChange: handleFieldChange,\n                  handleNumberFieldChange: handleNumberFieldChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 21\n              }, this)\n            }, void 0, false) : activeStep === 2 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n                children: /*#__PURE__*/_jsxDEV(Lieferdaten, {\n                  fieldValue: fieldValue,\n                  setFieldValue: setFieldValue,\n                  inputMissingError: inputMissingError,\n                  setInputMissingError: setInputMissingError,\n                  inputWrongError: inputWrongError,\n                  setInputWrongError: setInputWrongError,\n                  handleFieldChange: handleFieldChange,\n                  handleNumberFieldChange: handleNumberFieldChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 21\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n                children: /*#__PURE__*/_jsxDEV(Rechnungsdaten, {\n                  fieldValue: fieldValue,\n                  setFieldValue: setFieldValue,\n                  inputMissingError: inputMissingError,\n                  setInputMissingError: setInputMissingError,\n                  inputWrongError: inputWrongError,\n                  setInputWrongError: setInputWrongError,\n                  handleFieldChange: handleFieldChange,\n                  handleNumberFieldChange: handleNumberFieldChange,\n                  rechnungsposten: rechnungsposten,\n                  setRechnungsposten: setRechnungsposten\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 21\n              }, this)\n            }, void 0, false), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: \"flex\",\n                flexDirection: \"row\",\n                pt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                color: \"inherit\",\n                disabled: activeStep === 0,\n                onClick: handleBack,\n                sx: {\n                  mr: 1\n                },\n                children: \"Zur\\xFCck\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  flex: \"1 1 auto\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 19\n              }, this), isStepOptional(activeStep) && /*#__PURE__*/_jsxDEV(Button, {\n                color: \"inherit\",\n                onClick: handleSkip,\n                sx: {\n                  mr: 1\n                },\n                children: \"\\xDCberspringen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 21\n              }, this), activeStep === steps.length - 1 ? /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleSubmit,\n                children: \"Abschicken\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleNext,\n                children: \"Weiter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s(Declaration, \"cKI5gjhdg3mQg/5dFROwuk0AMoA=\", false, function () {\n  return [useAxiosPrivate];\n});\n\n_c = Declaration;\nexport default Declaration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Declaration\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Declaration.jsx"],"names":["React","useState","useEffect","useAxiosPrivate","AllgemeineAngaben","Adressdaten","Lieferdaten","Rechnungsdaten","MDBContainer","MDBSpinner","createZollanmeldung","Box","Stepper","Step","StepLabel","Button","Typography","axios","Declaration","transactionData","setTransactionData","isLoading","setIsLoading","steps","activeStep","setActiveStep","skipped","setSkipped","Set","isStepOptional","step","axiosInstance","isStepSkipped","has","handleNext","newSkipped","values","delete","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","handleReset","handleSubmit","console","log","fieldValue","blockchainZollanmeldungTransaction","lieferkosten","lieferbedingung","post","setFieldValue","auftragsnummer","bearbeitendeDienststelle","anmeldungArt","geschaeftArt","zahlungArt","eoriVersender","nameVersender","vornameVersender","firmaVersender","strasseVersender","plzVersender","ortVersender","staatVersender","telefonVersender","emailVersender","eoriAnmelder","nameAnmelder","vornameAnmelder","firmaAnmelder","strasseAnmelder","plzAnmelder","ortAnmelder","staatAnmelder","telefonAnmelder","emailAnmelder","ausfuhrland","bestimmungsland","bestimmungsbundesland","befoerderungsmittel","lieferort","warenort","datumRechnung","gesamtbetrag","waehrung","rechnungsposten","setRechnungsposten","rechnungspostenProdukt","rechnungspostenAnzahl","rechnungspostenEinheit","rechnungspostenPreisEinheit","inputMissingError","setInputMissingError","inputWrongError","setInputWrongError","plsAnmelder","handleFieldChange","event","name","target","value","handleNumberFieldChange","isNaN","transactionId","get","then","res","prev","data","id","partnership","partner","eori_nr","street","city_code","city","country_code","phone","email","response","employee","company","currency","issue_date","_zoll","_rechnungID","_zollwert","_transportkosten","_incoterms","erfolgreich","tx","catch","err","width","map","label","index","stepProps","labelProps","optional","completed","length","mt","mb","display","flexDirection","pt","flex","mr"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\n\n// Unterformulare\nimport AllgemeineAngaben from \"../components/Declaration/AllgemeineAngaben\";\nimport Adressdaten from \"../components/Declaration/Adressdaten\";\nimport Lieferdaten from \"../components/Declaration/Lieferdaten\";\nimport Rechnungsdaten from \"../components/Declaration/Rechnungsdaten\";\n\nimport { MDBContainer, MDBSpinner } from \"mdb-react-ui-kit\";\n\n//Smart Contract\nimport { createZollanmeldung } from \"../Web3Client\";\n\n// Stepper\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport axios from \"axios\";\n\n\n\nfunction Declaration() {\n  const [transactionData, setTransactionData] = React.useState({})\n  const [isLoading, setIsLoading] = useState(true)\n\n\n  // Stepper-Logik\n  const steps = [\n    \"Allgemeine Angaben\",\n    \"Adressdaten\",\n    \"Lieferdaten\",\n    \"Rechnungsdaten\",\n  ];\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n\n  // (Kein Step ist optional)\n  const isStepOptional = (step) => {\n    return;\n  };\n\n\n  //Abfrage der voreingestellten Daten\n  const axiosInstance = useAxiosPrivate();\n\n\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n\n  //Übertragen der Daten\n  const handleSubmit = () => {\n    console.log(fieldValue);\n\n  \n    //Hier fehlen noch der Pub Key (1. Input) vom Zoll sowie die Blockchain-interne RechnungsID (2.Input)(Muss beides aus Datenbank kommen)\n    //Zollwert fehlt ebenfalls (3. Wert)\n    blockchainZollanmeldungTransaction(\"0xe24D91818F5F92B4969867A8164d4E27D4336a99\", \"1\", \"Zollwert\", fieldValue.lieferkosten, fieldValue.lieferbedingung);\n\n    //speichern in Datenbank\n    axios.post()\n\n    return;\n  };\n\n\n\n  // -- DATENFELDER --\n  // State des Inhalts der Felder\n  const [fieldValue, setFieldValue] = React.useState({\n    // Allgemeine Angaben\n    auftragsnummer: \"\",\n    bearbeitendeDienststelle: \"\",\n    anmeldungArt: \"\",\n    geschaeftArt: \"\",\n    zahlungArt: \"\",\n    // Adressdaten Versender\n    eoriVersender: \"\",\n    nameVersender: \"\",\n    vornameVersender: \"\",\n    firmaVersender: \"\",\n    strasseVersender: \"\",\n    plzVersender: \"\",\n    ortVersender: \"\",\n    staatVersender: \"\",\n    telefonVersender: \"\",\n    emailVersender: \"\",\n    // Adressdaten Anmelder\n    eoriAnmelder: \"\",\n    nameAnmelder: \"\",\n    vornameAnmelder: \"\",\n    firmaAnmelder: \"\",\n    strasseAnmelder: \"\",\n    plzAnmelder: \"\",\n    ortAnmelder: \"\",\n    staatAnmelder: \"\",\n    telefonAnmelder: \"\",\n    emailAnmelder: \"\",\n    // Lieferdaten\n    ausfuhrland: \"\",\n    bestimmungsland: \"\",\n    bestimmungsbundesland: \"\",\n    befoerderungsmittel: \"\",\n    lieferbedingung: \"\",\n    lieferort: \"\",\n    warenort: \"\",\n    lieferkosten: \"\",\n    //Rechnungsdaten\n    datumRechnung: \"\",\n    gesamtbetrag: \"\",\n    waehrung: \"\",\n  });\n\n  const [rechnungsposten, setRechnungsposten] = React.useState([\n    {\n      rechnungspostenProdukt: \"\",\n      rechnungspostenAnzahl: \"\",\n      rechnungspostenEinheit: \"\",\n      rechnungspostenPreisEinheit: \"\",\n    },\n  ]);\n\n  // State über fehlende Eingaben\n  const [inputMissingError, setInputMissingError] = React.useState({\n    // Allgemeine Angaben\n    auftragsnummer: false,\n    bearbeitendeDienststelle: false,\n    anmeldungArt: false,\n    geschaeftArt: false,\n    zahlungArt: false,\n    // Adressdaten Versender\n    eoriVersender: false,\n    nameVersender: false,\n    vornameVersender: false,\n    firmaVersender: false,\n    strasseVersender: false,\n    plzVersender: false,\n    ortVersender: false,\n    staatVersender: false,\n    telefonVersender: false,\n    emailVersender: false,\n    // Adressdaten Anmelder\n    eoriAnmelder: false,\n    nameAnmelder: false,\n    vornameAnmelder: false,\n    firmaAnmelder: false,\n    strasseAnmelder: false,\n    plzAnmelder: false,\n    ortAnmelder: false,\n    staatAnmelder: false,\n    telefonAnmelder: false,\n    emailAnmelder: false,\n    // Lieferdaten\n    ausfuhrland: false,\n    bestimmungsland: false,\n    bestimmungsbundesland: false,\n    befoerderungsmittel: false,\n    lieferbedingung: false,\n    lieferort: false,\n    warenort: false,\n    lieferkosten: false,\n    //Rechnungsdaten\n    datumRechnung: false,\n    gesamtbetrag: false,\n    waehrung: false,\n  });\n\n  // State über falsche Inputs (müssen Zahlen sein)\n  const [inputWrongError, setInputWrongError] = React.useState({\n    auftragsnummer: false,\n    eoriVersender: false,\n    plzVersender: false,\n    eoriAnmelder: false,\n    plsAnmelder: false,\n    lieferkosten: false,\n  });\n\n  // FieldChange für Select und String-Felder\n  function handleFieldChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    setFieldValue({ ...fieldValue, [name]: value });\n    setInputMissingError({ ...inputMissingError, [name]: false });\n  }\n\n  // FieldChange für Zahlen-Inputfelder\n  function handleNumberFieldChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    // Validierung: nur Zahlen\n    if (isNaN(value)) {\n      setInputWrongError({ ...inputWrongError, [name]: true });\n    } else {\n      setInputWrongError({ ...inputWrongError, [name]: false });\n    }\n\n    setFieldValue({ ...fieldValue, [name]: value });\n    setInputMissingError({ ...inputMissingError, [name]: false });\n  }\n\n  // Abfragen der Bestandsdaten\n\n  useEffect( async () => {\n    const transactionId = 11;\n    await axiosInstance.get(`transactions/` + transactionId).then((res) => {\n      setFieldValue(prev => {\n        return {\n            ...prev,\n            auftragsnummer: res.data.id,\n            eoriVersender: res.data.partnership.partner.eori_nr,\n             //nameVersender: .partnership.partner.name,\n            firmaVersender: res.data.partnership.partner.name,\n            strasseVersender: res.data.partnership.partner.street,\n            plzVersender: res.data.partnership.partner.city_code,\n            ortVersender: res.data.partnership.partner.city,\n            staatVersender: res.data.partnership.partner.country_code,\n            telefonVersender: res.data.partnership.partner.phone,\n            emailVersender: res.data.partnership.partner.email \n        \n        }\n        });\n        setIsLoading(false);\n\n    });\n\n    //Abfrage der eigenen Nutzerdaten\n\n    await axiosInstance.get(`user/` ).then((response) => {\n      //console.log(response);\n      setFieldValue(prev => {\n        return {\n            ...prev,\n            eoriAnmelder: response.data[0].employee?.company.eori_nr,\n              //nameVersender: .partnership.partner.name,\n            firmaAnmelder: response.data[0].employee.company.name,\n            strasseAnmelder: response.data[0].employee.company.street,\n            plzAnmelder: response.data[0].employee.company.city_code,\n            ortAnmelder: response.data[0].employee.company.city,\n            staatAnmelder: response.data[0].employee.company.country_code,\n            telefonAnmelder: response.data[0].employee.company.phone,\n            emailAnmelder: response.data[0].employee.company.email \n        }\n        });\n      });\n\n    //Abfrage der Rechnungsdaten \n\n    await axiosInstance.get(`invoice/?transaction=${transactionId}`).then((response) => {\n      setFieldValue(prev => {\n        return {\n            ...prev,\n            waehrung: response.data[0].currency,\n            datumRechnung: response.data[0].issue_date,\n            gesamtbetrag: response.data[0]?.issue_date\n\n        }\n        });\n      });\n\n  }, []);\n\n  //Debugging\n  useEffect(() => {\n    console.log(\"FieldValue geändert\" + fieldValue.auftragsnummer)\n  }, [fieldValue]);\n\n\n  async function blockchainZollanmeldungTransaction(_zoll, _rechnungID, _zollwert, _transportkosten, _incoterms){\n    //blockchain Transaktion\n    var erfolgreich=false;\n    createZollanmeldung(_zoll, _rechnungID, _zollwert, _transportkosten, _incoterms)\n      .then((tx) => {\n        console.log(tx);\n        erfolgreich=true;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n      return erfolgreich;\n}\n  return (\n    <>\n      {isLoading\n        ? <MDBSpinner grow>\n          <span className='visually-hidden'>Lädt..</span>\n        </MDBSpinner>\n        :\n        <><h3>Zollanmeldung</h3><br /><div>\n          <Box sx={{ width: \"100%\" }}>\n            <Stepper className=\"mb-3\" activeStep={activeStep}>\n              {steps.map((label, index) => {\n                const stepProps = {};\n                const labelProps = {};\n                if (isStepOptional(index)) {\n                  labelProps.optional = (\n                    <Typography variant=\"caption\">Optional</Typography>\n                  );\n                }\n                if (isStepSkipped(index)) {\n                  stepProps.completed = false;\n                }\n                return (\n                  <Step key={label} {...stepProps}>\n                    <StepLabel {...labelProps}>{label}</StepLabel>\n                  </Step>\n                );\n              })}\n            </Stepper>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography sx={{ mt: 2, mb: 1 }}>\n                  All steps completed - you&apos;re finished\n                </Typography>\n                <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                  <Box sx={{ flex: \"1 1 auto\" }} />\n                  <Button onClick={handleReset}>Zurücksetzen</Button>\n                </Box>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {activeStep === 0 ? (\n                  <>\n                    <MDBContainer>\n                      <AllgemeineAngaben\n                        fieldValue={fieldValue}\n                        setFieldValue={setFieldValue}\n                        inputMissingError={inputMissingError}\n                        setInputMissingError={setInputMissingError}\n                        inputWrongError={inputWrongError}\n                        setInputWrongError={setInputWrongError}\n                        handleFieldChange={handleFieldChange}\n                        handleNumberFieldChange={handleNumberFieldChange} />\n                    </MDBContainer>\n                  </>\n                ) : activeStep === 1 ? (\n                  <>\n                    <MDBContainer>\n                      <Adressdaten\n                        fieldValue={fieldValue}\n                        setFieldValue={setFieldValue}\n                        inputMissingError={inputMissingError}\n                        setInputMissingError={setInputMissingError}\n                        inputWrongError={inputWrongError}\n                        setInputWrongError={setInputWrongError}\n                        handleFieldChange={handleFieldChange}\n                        handleNumberFieldChange={handleNumberFieldChange} />\n                    </MDBContainer>\n                  </>\n                ) : activeStep === 2 ? (\n                  <>\n                    <MDBContainer>\n                      <Lieferdaten\n                        fieldValue={fieldValue}\n                        setFieldValue={setFieldValue}\n                        inputMissingError={inputMissingError}\n                        setInputMissingError={setInputMissingError}\n                        inputWrongError={inputWrongError}\n                        setInputWrongError={setInputWrongError}\n                        handleFieldChange={handleFieldChange}\n                        handleNumberFieldChange={handleNumberFieldChange} />\n                    </MDBContainer>\n                  </>\n                ) : (\n                  <>\n                    <MDBContainer>\n                      <Rechnungsdaten\n                        fieldValue={fieldValue}\n                        setFieldValue={setFieldValue}\n                        inputMissingError={inputMissingError}\n                        setInputMissingError={setInputMissingError}\n                        inputWrongError={inputWrongError}\n                        setInputWrongError={setInputWrongError}\n                        handleFieldChange={handleFieldChange}\n                        handleNumberFieldChange={handleNumberFieldChange}\n                        rechnungsposten={rechnungsposten}\n                        setRechnungsposten={setRechnungsposten} />\n                    </MDBContainer>\n                  </>\n                )}\n                <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                  <Button\n                    color=\"inherit\"\n                    disabled={activeStep === 0}\n                    onClick={handleBack}\n                    sx={{ mr: 1 }}\n                  >\n                    Zurück\n                  </Button>\n                  <Box sx={{ flex: \"1 1 auto\" }} />\n                  {isStepOptional(activeStep) && (\n                    <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\n                      Überspringen\n                    </Button>\n                  )}\n\n                  {activeStep === steps.length - 1 ? (\n                    <Button onClick={handleSubmit}>Abschicken</Button>\n                  ) : (\n                    <Button onClick={handleNext}>Weiter</Button>\n                  )}\n                </Box>\n                <br />\n                <br />\n                <br />\n              </React.Fragment>\n            )}\n          </Box>\n        </div>\n        </>}\n    </>\n  );\n}\n\nexport default Declaration;\n"]},"metadata":{},"sourceType":"module"}