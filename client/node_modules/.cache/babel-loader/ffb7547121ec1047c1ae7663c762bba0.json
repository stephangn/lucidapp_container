{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Zoll/ZollTransactions.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { MDBBtn, MDBContainer, MDBCol, MDBRow, MDBIcon, MDBSpinner } from \"mdb-react-ui-kit\";\nimport Transaction from \"../../components/Transactions/Transaction\";\nimport { useParams } from \"react-router-dom\";\nimport TransactionModal from \"../../components/Transactions/TransactionModal\";\nimport Form from \"react-bootstrap/Form\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport { TextRotateUpRounded } from \"@mui/icons-material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ZollTransactions() {\n  _s();\n\n  const [transactionsData, setTransactionsData] = useState([]);\n  const [reload, setreload] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const axiosInstance = useAxiosPrivate();\n  useEffect(async () => {\n    await axiosInstance.get(\"declaration_auth/?customs_office=1\").then(res => {\n      setTransactionsData(res.data.transaction);\n    }).catch(err => {\n      console.log(err);\n    });\n    setIsLoading(false);\n  }, [reload]); // Sortieralgorithmen\n\n  function sortDescriptionAsc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.description > b.description ? -1 : 1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDescriptionDesc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.description > b.description ? 1 : -1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedAsc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.date_added > b.date_added ? 1 : -1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedDesc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.date_added > b.date_added ? -1 : 1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedAsc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.date_processed > b.date_processed ? 1 : -1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedDesc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.date_processed > b.date_processed ? -1 : 1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortTransactions(event) {\n    if (event.target.value === \"DescriptionAsc\") {\n      sortDescriptionAsc();\n      return;\n    }\n\n    if (event.target.value === \"DescriptionDesc\") {\n      sortDescriptionDesc();\n      return;\n    }\n\n    if (event.target.value === \"UpdatedAsc\") {\n      sortDateUpdatedAsc();\n      return;\n    }\n\n    if (event.target.value === \"UpdatedDesc\") {\n      sortDateUpdatedDesc();\n      return;\n    }\n\n    if (event.target.value === \"AddedAsc\") {\n      sortDateAddedAsc();\n      return;\n    }\n\n    if (event.target.value === \"AddedDesc\") {\n      sortDateAddedDesc();\n      return;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(MDBSpinner, {\n      grow: true,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"visually-hidden\",\n        children: \"L\\xE4dt..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Zollanmeldungen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"my-3 navbar navbar-expand-lg navbar-light bg-light\",\n          children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n              style: {\n                minWidth: 250,\n                maxWidth: 250\n              },\n              onChange: event => sortTransactions(event),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"UpdatedDesc\",\n                children: \"Zuletzt ge\\xE4ndert \\uD83E\\uDC17\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"UpdatedAsc\",\n                children: \"Zuletzt ge\\xE4ndert aufsteigend \\uD83E\\uDC15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"DescriptionDesc\",\n                children: \"Beschreibung absteigend \\uD83E\\uDC17\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"DescriptionAsc\",\n                children: \"Beschreibung aufsteigend \\uD83E\\uDC15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"AddedDesc\",\n                children: \"Hinzugef\\xFCgt am absteigend \\uD83E\\uDC17\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"AddedAsc\",\n                children: \"Hinzugef\\xFCgt am aufsteigend \\uD83E\\uDC15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"float-left\",\n              children: [transactionsData.length, \" Auftr\\xE4ge\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TransactionModal, {\n              setreload: setreload,\n              reload: reload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this), transactionsData.map(transactionData => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Transaction, {\n            id: transactionData.id,\n            title: transactionData.description,\n            added: transactionData.date_added,\n            exportAddress: transactionData.partnership.partner.name,\n            exportStreet: transactionData.partnership.partner.street,\n            exportCity: transactionData.partnership.partner.city,\n            exportCountry: transactionData.partnership.partner.country_code,\n            importAddress: transactionData.importAddress,\n            importStreet: transactionData.importStreet,\n            importCity: transactionData.importCity,\n            importCountry: transactionData.importCountry,\n            stakeholderCount: transactionData.stakeholderCount,\n            lastChange: transactionData.date_processed\n          }, transactionData.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }, this), \";\"]\n  }, void 0, true);\n}\n\n_s(ZollTransactions, \"5UlJ7GD4U3v0YdWgJ3TxC6AZiZs=\", false, function () {\n  return [useAxiosPrivate];\n});\n\n_c = ZollTransactions;\nexport default ZollTransactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"ZollTransactions\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Zoll/ZollTransactions.jsx"],"names":["React","useState","useEffect","MDBBtn","MDBContainer","MDBCol","MDBRow","MDBIcon","MDBSpinner","Transaction","useParams","TransactionModal","Form","useAxiosPrivate","TextRotateUpRounded","ZollTransactions","transactionsData","setTransactionsData","reload","setreload","isLoading","setIsLoading","axiosInstance","get","then","res","data","transaction","catch","err","console","log","sortDescriptionAsc","myData","concat","sort","a","b","description","sortDescriptionDesc","sortDateAddedAsc","date_added","sortDateAddedDesc","sortDateUpdatedAsc","date_processed","sortDateUpdatedDesc","sortTransactions","event","target","value","minWidth","maxWidth","length","map","transactionData","id","partnership","partner","name","street","city","country_code","importAddress","importStreet","importCity","importCountry","stakeholderCount"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  MDBBtn,\n  MDBContainer,\n  MDBCol,\n  MDBRow,\n  MDBIcon,\n  MDBSpinner\n} from \"mdb-react-ui-kit\";\nimport Transaction from \"../../components/Transactions/Transaction\";\nimport { useParams } from \"react-router-dom\";\nimport TransactionModal from \"../../components/Transactions/TransactionModal\";\nimport Form from \"react-bootstrap/Form\";\n\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport { TextRotateUpRounded } from \"@mui/icons-material\";\n\nfunction ZollTransactions() {\n  const [transactionsData, setTransactionsData] = useState([]);\n  const [reload, setreload] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const axiosInstance = useAxiosPrivate();\n\n  useEffect(async() => {\n    await axiosInstance.get(\"declaration_auth/?customs_office=1\").then((res) => {\n      setTransactionsData(res.data.transaction);\n    }).catch ((err) => {\n      console.log(err)\n    });\n    setIsLoading(false)\n  }, [reload]);\n\n  // Sortieralgorithmen\n  function sortDescriptionAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.description > b.description ? -1 : 1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDescriptionDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.description > b.description ? 1 : -1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.date_added > b.date_added ? 1 : -1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.date_added > b.date_added ? -1 : 1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.date_processed > b.date_processed ? 1 : -1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.date_processed > b.date_processed ? -1 : 1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortTransactions(event) {\n    if (event.target.value === \"DescriptionAsc\") {\n      sortDescriptionAsc();\n      return;\n    }\n    if (event.target.value === \"DescriptionDesc\") {\n      sortDescriptionDesc();\n      return;\n    }\n    if (event.target.value === \"UpdatedAsc\") {\n      sortDateUpdatedAsc();\n      return;\n    }\n    if (event.target.value === \"UpdatedDesc\") {\n      sortDateUpdatedDesc();\n      return;\n    }\n    if (event.target.value === \"AddedAsc\") {\n      sortDateAddedAsc();\n      return;\n    }\n    if (event.target.value === \"AddedDesc\") {\n      sortDateAddedDesc();\n      return;\n    }\n  }\n\n  return (\n    <>\n    {isLoading ? (\n      <MDBSpinner grow>\n        <span className=\"visually-hidden\">Lädt..</span>\n      </MDBSpinner>\n    ) : (\n    <div>\n      <MDBContainer>\n        <h3>Zollanmeldungen</h3>\n\n        <nav className=\"my-3 navbar navbar-expand-lg navbar-light bg-light\">\n          <MDBContainer>\n            <Form.Select\n              style={{\n                minWidth: 250,\n                maxWidth: 250,\n              }}\n              onChange={(event) => sortTransactions(event)}\n            >\n              <option value={\"UpdatedDesc\"}>Zuletzt geändert 🠗</option>\n              <option value={\"UpdatedAsc\"}>\n                Zuletzt geändert aufsteigend 🠕\n              </option>\n              <option value={\"DescriptionDesc\"}>\n                Beschreibung absteigend 🠗\n              </option>\n              <option value={\"DescriptionAsc\"}>\n                Beschreibung aufsteigend 🠕\n              </option>\n              <option value={\"AddedDesc\"}>Hinzugefügt am absteigend 🠗</option>\n              <option value={\"AddedAsc\"}>Hinzugefügt am aufsteigend 🠕</option>\n            </Form.Select>{\" \"}\n            <div className=\"float-left\">{transactionsData.length} Aufträge</div>\n            <TransactionModal setreload={setreload} reload={reload} />\n          </MDBContainer>\n        </nav>\n        {transactionsData.map((transactionData) => (\n          <React.Fragment>\n            <Transaction\n              key={transactionData.id}\n              id={transactionData.id}\n              title={transactionData.description}\n              added={transactionData.date_added}\n              exportAddress={transactionData.partnership.partner.name}\n              exportStreet={transactionData.partnership.partner.street}\n              exportCity={transactionData.partnership.partner.city}\n              exportCountry={transactionData.partnership.partner.country_code}\n              importAddress={transactionData.importAddress}\n              importStreet={transactionData.importStreet}\n              importCity={transactionData.importCity}\n              importCountry={transactionData.importCountry}\n              stakeholderCount={transactionData.stakeholderCount}\n              lastChange={transactionData.date_processed}\n            />\n            <br />\n          </React.Fragment>\n        ))}\n      </MDBContainer>\n    </div>\n    )\n    };\n    </>\n  );\n}\n\nexport default ZollTransactions;\n"]},"metadata":{},"sourceType":"module"}