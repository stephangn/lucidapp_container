{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Dashboard/NotifcationToast.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBCardHeader, MDBCardFooter, MDBBtn } from \"mdb-react-ui-kit\";\nimport Toast from \"react-bootstrap/Toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NotificationToast(props) {\n  _s();\n\n  var timestamp = new Date(props.alert.timestamp);\n  const [notificationText, setNotificationText] = useState(\"\");\n  const [notificationObject, setNotificationObject] = useState(\"\");\n  useEffect(() => {\n    var _props$alert, _props$alert3, _props$alert4, _props$alert5;\n\n    console.log(props.alert.actor_content_type);\n\n    if (((_props$alert = props.alert) === null || _props$alert === void 0 ? void 0 : _props$alert.actor_content_type) == \"7\") {\n      var _props$alert2;\n\n      setNotificationText((_props$alert2 = props.alert) === null || _props$alert2 === void 0 ? void 0 : _props$alert2.description);\n      setNotificationObject(\"Partnerschaftsanfrage\");\n    } else if (((_props$alert3 = props.alert) === null || _props$alert3 === void 0 ? void 0 : _props$alert3.actor_content_type) == \"12\") {\n      const text = `Eine neue Partnerschaftsanfrage ist eingegangen`;\n      setNotificationText(text);\n      setNotificationObject(\"Dokument-ID\");\n    } else if (((_props$alert4 = props.alert) === null || _props$alert4 === void 0 ? void 0 : _props$alert4.actor_content_type) == \"13\") {\n      const text = `Ein neues Dokument wurde hochgeladen`;\n      setNotificationObject(\"Dokument-ID\");\n      setNotificationText(text);\n    } else if (((_props$alert5 = props.alert) === null || _props$alert5 === void 0 ? void 0 : _props$alert5.actor_content_type) == \"14\") {\n      const text = `Eine Zollanmeldung wurde bestätigt`;\n      setNotificationObject(\"Anmeldungs-ID\");\n      setNotificationText(text);\n    } else {\n      const text = \"sonstige Benachrichtigung\";\n      setNotificationText(text);\n      setNotificationObject(\"Model ID\");\n    }\n  }, [alert]);\n  return /*#__PURE__*/_jsxDEV(Toast, {\n    className: \"mb-2\",\n    bg: \"light\",\n    style: {\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        className: \"me-auto\",\n        children: [notificationObject, \" \", props.alert.actor_object_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: timestamp.toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n      children: notificationText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NotificationToast, \"rxf7cX+FpwXi664YuN1F83TAfV0=\");\n\n_c = NotificationToast;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationToast\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Dashboard/NotifcationToast.jsx"],"names":["React","useState","useEffect","MDBCard","MDBCardBody","MDBCardTitle","MDBCardText","MDBCardHeader","MDBCardFooter","MDBBtn","Toast","NotificationToast","props","timestamp","Date","alert","notificationText","setNotificationText","notificationObject","setNotificationObject","console","log","actor_content_type","description","text","width","actor_object_id","toLocaleString"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,OADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,aANF,EAOEC,MAPF,QAQO,kBARP;AASA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA;;AAC7C,MAAIC,SAAS,GAAG,IAAIC,IAAJ,CAASF,KAAK,CAACG,KAAN,CAAYF,SAArB,CAAhB;AACA,QAAM,CAACG,gBAAD,EAAmBC,mBAAnB,IAA0ChB,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACiB,kBAAD,EAAqBC,qBAArB,IAA8ClB,QAAQ,CAAC,EAAD,CAA5D;AAEAC,EAAAA,SAAS,CAAC,MAAK;AAAA;;AACXkB,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACG,KAAN,CAAYO,kBAAxB;;AACA,QAAI,iBAAAV,KAAK,CAACG,KAAN,8DAAaO,kBAAb,KAAiC,GAArC,EAA0C;AAAA;;AACtCL,MAAAA,mBAAmB,kBAACL,KAAK,CAACG,KAAP,kDAAC,cAAaQ,WAAd,CAAnB;AACAJ,MAAAA,qBAAqB,CAAC,uBAAD,CAArB;AACH,KAHD,MAGO,IAAI,kBAAAP,KAAK,CAACG,KAAN,gEAAaO,kBAAb,KAAiC,IAArC,EAA0C;AAC7C,YAAME,IAAI,GAAG,iDAAb;AACAP,MAAAA,mBAAmB,CAACO,IAAD,CAAnB;AACAL,MAAAA,qBAAqB,CAAC,aAAD,CAArB;AAEH,KALM,MAKA,IAAI,kBAAAP,KAAK,CAACG,KAAN,gEAAaO,kBAAb,KAAiC,IAArC,EAA0C;AAC7C,YAAME,IAAI,GAAG,sCAAb;AACAL,MAAAA,qBAAqB,CAAC,aAAD,CAArB;AAEAF,MAAAA,mBAAmB,CAACO,IAAD,CAAnB;AACH,KALM,MAKA,IAAI,kBAAAZ,KAAK,CAACG,KAAN,gEAAaO,kBAAb,KAAiC,IAArC,EAA0C;AAC7C,YAAME,IAAI,GAAG,oCAAb;AACAL,MAAAA,qBAAqB,CAAC,eAAD,CAArB;AAEAF,MAAAA,mBAAmB,CAACO,IAAD,CAAnB;AACH,KALM,MAKA;AACH,YAAMA,IAAI,GAAG,2BAAb;AACAP,MAAAA,mBAAmB,CAACO,IAAD,CAAnB;AACAL,MAAAA,qBAAqB,CAAC,UAAD,CAArB;AAGH;AACJ,GA3BQ,EA2BN,CAACJ,KAAD,CA3BM,CAAT;AA8BA,sBACA,QAAC,KAAD;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,EAAE,EAAC,OAFP;AAGI,IAAA,KAAK,EAAE;AAAEU,MAAAA,KAAK,EAAE;AAAT,KAHX;AAAA,4BAKI,QAAC,KAAD,CAAO,MAAP;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAAA,mBAA6BP,kBAA7B,OAAkDN,KAAK,CAACG,KAAN,CAAYW,eAA9D;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAQb,SAAS,CAACc,cAAV;AAAR;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eASI,QAAC,KAAD,CAAO,IAAP;AAAA,gBACGX;AADH;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAkBH;;GArDuBL,iB;;KAAAA,iB","sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport {\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardText,\n  MDBCardHeader,\n  MDBCardFooter,\n  MDBBtn,\n} from \"mdb-react-ui-kit\";\nimport Toast from \"react-bootstrap/Toast\";\n\nexport default function NotificationToast(props) {\n    var timestamp = new Date(props.alert.timestamp)\n    const [notificationText, setNotificationText] = useState(\"\")\n    const [notificationObject, setNotificationObject] = useState(\"\")\n\n    useEffect(() =>{\n        console.log(props.alert.actor_content_type)\n        if (props.alert?.actor_content_type==\"7\") {\n            setNotificationText(props.alert?.description)\n            setNotificationObject(\"Partnerschaftsanfrage\")\n        } else if (props.alert?.actor_content_type==\"12\"){\n            const text= `Eine neue Partnerschaftsanfrage ist eingegangen`\n            setNotificationText(text)\n            setNotificationObject(\"Dokument-ID\")\n\n        } else if (props.alert?.actor_content_type==\"13\"){\n            const text= `Ein neues Dokument wurde hochgeladen`\n            setNotificationObject(\"Dokument-ID\")\n\n            setNotificationText(text)\n        } else if (props.alert?.actor_content_type==\"14\"){\n            const text= `Eine Zollanmeldung wurde bestätigt`\n            setNotificationObject(\"Anmeldungs-ID\")\n\n            setNotificationText(text)\n        } else {\n            const text = \"sonstige Benachrichtigung\"\n            setNotificationText(text)\n            setNotificationObject(\"Model ID\")\n\n\n        }\n    }, [alert])\n\n\n    return (\n    <Toast\n        className=\"mb-2\"\n        bg=\"light\"\n        style={{ width: \"100%\" }}\n      >\n        <Toast.Header>\n          <strong className=\"me-auto\">{notificationObject} {props.alert.actor_object_id}</strong>\n          <small>{timestamp.toLocaleString()}</small>\n        </Toast.Header>\n        <Toast.Body>\n          {notificationText}\n        </Toast.Body>\n      </Toast>\n\n\n\n    )\n}"]},"metadata":{},"sourceType":"module"}