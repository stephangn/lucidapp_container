{"ast":null,"code":"import _objectSpread from \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\", \"bsPrefix\", \"backdrop\", \"backdropClassName\", \"keyboard\", \"scroll\", \"placement\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"onShow\", \"onHide\", \"onEscapeKeyDown\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\"];\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useBreakpoint from '@restart/hooks/useBreakpoint';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Offcanvas from './Offcanvas';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar NavbarOffcanvas = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      bsPrefix = _ref.bsPrefix,\n      backdrop = _ref.backdrop,\n      backdropClassName = _ref.backdropClassName,\n      keyboard = _ref.keyboard,\n      scroll = _ref.scroll,\n      placement = _ref.placement,\n      autoFocus = _ref.autoFocus,\n      enforceFocus = _ref.enforceFocus,\n      restoreFocus = _ref.restoreFocus,\n      restoreFocusOptions = _ref.restoreFocusOptions,\n      onShow = _ref.onShow,\n      onHide = _ref.onHide,\n      onEscapeKeyDown = _ref.onEscapeKeyDown,\n      onEnter = _ref.onEnter,\n      onEntering = _ref.onEntering,\n      onEntered = _ref.onEntered,\n      onExit = _ref.onExit,\n      onExiting = _ref.onExiting,\n      onExited = _ref.onExited,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var context = useContext(NavbarContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  var hasExpandProp = typeof (context == null ? void 0 : context.expand) === 'string';\n  var shouldExpand = useBreakpoint(hasExpandProp ? context.expand : 'xs', 'up');\n  return hasExpandProp && shouldExpand ? /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({\n    ref: ref\n  }, props), {}, {\n    className: classNames(className, bsPrefix, \"\".concat(bsPrefix, \"-\").concat(placement))\n  })) : /*#__PURE__*/_jsx(Offcanvas, _objectSpread({\n    ref: ref,\n    show: !!(context != null && context.expanded),\n    bsPrefix: bsPrefix,\n    backdrop: backdrop,\n    backdropClassName: backdropClassName,\n    keyboard: keyboard,\n    scroll: scroll,\n    placement: placement,\n    autoFocus: autoFocus,\n    enforceFocus: enforceFocus,\n    restoreFocus: restoreFocus,\n    restoreFocusOptions: restoreFocusOptions,\n    onShow: onShow,\n    onHide: onHide,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited\n  }, props));\n});\nNavbarOffcanvas.displayName = 'NavbarOffcanvas';\nexport default NavbarOffcanvas;","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/node_modules/react-bootstrap/esm/NavbarOffcanvas.js"],"names":["React","useContext","useBreakpoint","classNames","useBootstrapPrefix","Offcanvas","NavbarContext","jsx","_jsx","NavbarOffcanvas","forwardRef","ref","className","bsPrefix","backdrop","backdropClassName","keyboard","scroll","placement","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","onShow","onHide","onEscapeKeyDown","onEnter","onEntering","onEntered","onExit","onExiting","onExited","props","context","hasExpandProp","expand","shouldExpand","show","expanded","displayName"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useContext } from 'react';\nimport useBreakpoint from '@restart/hooks/useBreakpoint';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Offcanvas from './Offcanvas';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarOffcanvas = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  backdrop,\n  backdropClassName,\n  keyboard,\n  scroll,\n  placement,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onShow,\n  onHide,\n  onEscapeKeyDown,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  ...props\n}, ref) => {\n  const context = useContext(NavbarContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  const hasExpandProp = typeof (context == null ? void 0 : context.expand) === 'string';\n  const shouldExpand = useBreakpoint(hasExpandProp ? context.expand : 'xs', 'up');\n  return hasExpandProp && shouldExpand ? /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix, `${bsPrefix}-${placement}`)\n  }) : /*#__PURE__*/_jsx(Offcanvas, {\n    ref: ref,\n    show: !!(context != null && context.expanded),\n    bsPrefix: bsPrefix,\n    backdrop: backdrop,\n    backdropClassName: backdropClassName,\n    keyboard: keyboard,\n    scroll: scroll,\n    placement: placement,\n    autoFocus: autoFocus,\n    enforceFocus: enforceFocus,\n    restoreFocus: restoreFocus,\n    restoreFocusOptions: restoreFocusOptions,\n    onShow: onShow,\n    onHide: onHide,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    ...props\n  });\n});\nNavbarOffcanvas.displayName = 'NavbarOffcanvas';\nexport default NavbarOffcanvas;"]},"metadata":{},"sourceType":"module"}