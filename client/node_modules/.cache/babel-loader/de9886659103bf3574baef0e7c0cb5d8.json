{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/PersistLogin.js\",\n    _s = $RefreshSig$();\n\nimport { Outlet } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport useRefreshToken from \"../hooks/useRefreshToken\";\nimport useAuth from \"../hooks/useAuth\";\nimport { MDBSpinner } from \"mdb-react-ui-kit\";\nimport useDataUpdate from \"../hooks/useDataUpdate\";\nimport \"../pages/css/LoadingSpinner.css\"; //Nutzer bleibt eingeloggt, sofern er sich nicht auslogt oder den Refresh Token im lokalen Speicher löscht \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PersistLogin = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const refresh = useRefreshToken();\n  const {\n    auth,\n    setAuth\n  } = useAuth();\n  const dataUpdate = useDataUpdate();\n  useEffect(() => {\n    let isMounted = true; //Sofern Nutzer zurückgekehrt werden Daten neu abgerufen \n\n    const verifyRefreshToken = async () => {\n      //console.log(\"Verify Refresh token called\");\n      try {\n        await dataUpdate();\n        await refresh();\n      } catch (err) {//console.error(err);\n      } finally {\n        isMounted && setIsLoading(false);\n      }\n    };\n\n    !(auth !== null && auth !== void 0 && auth.accessToken) ? verifyRefreshToken() : setIsLoading(false);\n    return () => isMounted = false;\n  }, []); //Nur für Debugging und die Anzeige der aktuellen Status:\n\n  /*     useEffect(() => {\n        console.log(`isLoading: ${isLoading}`)\n        console.log(`aT: ${JSON.stringify(auth?.accessToken)}`)\n    }, [isLoading]) */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loadingSpinner\",\n      children: /*#__PURE__*/_jsxDEV(MDBSpinner, {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"L\\xE4dt..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(PersistLogin, \"WGnaD/JiCLysmK7IiaFTinvcAz4=\", false, function () {\n  return [useRefreshToken, useAuth, useDataUpdate];\n});\n\n_c = PersistLogin;\nexport default PersistLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersistLogin\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/PersistLogin.js"],"names":["Outlet","useState","useEffect","useRefreshToken","useAuth","MDBSpinner","useDataUpdate","PersistLogin","isLoading","setIsLoading","refresh","auth","setAuth","dataUpdate","isMounted","verifyRefreshToken","err","accessToken"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAO,iCAAP,C,CAEA;;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAMS,OAAO,GAAGP,eAAe,EAA/B;AACA,QAAM;AAAEQ,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBR,OAAO,EAAjC;AACA,QAAMS,UAAU,GAAGP,aAAa,EAAhC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,SAAS,GAAG,IAAhB,CADc,CAGd;;AAEA,UAAMC,kBAAkB,GAAG,YAAY;AACrC;AACA,UAAI;AACF,cAAMF,UAAU,EAAhB;AACA,cAAMH,OAAO,EAAb;AACD,OAHD,CAGE,OAAOM,GAAP,EAAY,CACZ;AACD,OALD,SAKU;AACRF,QAAAA,SAAS,IAAIL,YAAY,CAAC,KAAD,CAAzB;AACD;AACF,KAVD;;AAYA,MAACE,IAAD,aAACA,IAAD,eAACA,IAAI,CAAEM,WAAP,IAAqBF,kBAAkB,EAAvC,GAA4CN,YAAY,CAAC,KAAD,CAAxD;AAEA,WAAO,MAAOK,SAAS,GAAG,KAA1B;AACD,GApBQ,EAoBN,EApBM,CAAT,CANyB,CA4BzB;;AAEA;AACF;AACA;AACA;;AAEE,sBACE;AAAA,cACGN,SAAS,gBACR;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE,QAAC,UAAD;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADQ,gBAOR,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AARJ,mBADF;AAaD,CAhDD;;GAAMD,Y;UAEYJ,e,EACUC,O,EACPE,a;;;KAJfC,Y;AAkDN,eAAeA,YAAf","sourcesContent":["import { Outlet } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport useRefreshToken from \"../hooks/useRefreshToken\";\nimport useAuth from \"../hooks/useAuth\";\nimport { MDBSpinner } from \"mdb-react-ui-kit\";\nimport useDataUpdate from \"../hooks/useDataUpdate\";\nimport \"../pages/css/LoadingSpinner.css\";\n\n//Nutzer bleibt eingeloggt, sofern er sich nicht auslogt oder den Refresh Token im lokalen Speicher löscht \n\nconst PersistLogin = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const refresh = useRefreshToken();\n  const { auth, setAuth } = useAuth();\n  const dataUpdate = useDataUpdate();\n\n  useEffect(() => {\n    let isMounted = true;\n\n    //Sofern Nutzer zurückgekehrt werden Daten neu abgerufen \n\n    const verifyRefreshToken = async () => {\n      //console.log(\"Verify Refresh token called\");\n      try {\n        await dataUpdate();\n        await refresh();\n      } catch (err) {\n        //console.error(err);\n      } finally {\n        isMounted && setIsLoading(false);\n      }\n    };\n\n    !auth?.accessToken ? verifyRefreshToken() : setIsLoading(false);\n\n    return () => (isMounted = false);\n  }, []);\n\n  //Nur für Debugging und die Anzeige der aktuellen Status:\n\n  /*     useEffect(() => {\n        console.log(`isLoading: ${isLoading}`)\n        console.log(`aT: ${JSON.stringify(auth?.accessToken)}`)\n    }, [isLoading]) */\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"loadingSpinner\">\n          <MDBSpinner>\n            <span className=\"visually-hidden\">Lädt..</span>\n          </MDBSpinner>\n        </div>\n      ) : (\n        <Outlet />\n      )}\n    </>\n  );\n};\n\nexport default PersistLogin;\n"]},"metadata":{},"sourceType":"module"}