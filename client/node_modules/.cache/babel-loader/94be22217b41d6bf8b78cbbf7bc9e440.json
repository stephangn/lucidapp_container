{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Partners/PartnerForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PartnerForm() {\n  _s();\n\n  const [eori_nr, setEoriNr] = useState(\"\");\n  const [street, setStreet] = useState(\"\");\n  const [city_code, setZipCode] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [country_code, setCountry] = useState(\"\");\n  const [companies, setCompanies] = useState(\"\");\n  const [requestedCompany, setrequestedCompany] = useState(\"\");\n  const axiosInstance = useAxiosPrivate(); //useffect Abfragen der Firmemliste\n\n  useEffect(() => {\n    axiosInstance.get(\"companies/\").then(res => {\n      console.log(res.data);\n      setCompanies(res.data);\n    });\n  }, []);\n\n  function handleSubmit(e) {\n    e.preventDefault(); //firma hinzufügen\n\n    axiosInstance.post(\"/partnership/\", {\n      added_partner: requestedCompany\n    }).then(console.log(requestedCompany)).catch(error => {\n      this.setState({\n        errorMessage: error.message\n      });\n      console.error(\"There was an error!\", error);\n    }); //firma als partner hinterlegen\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n          className: \"mt-1\",\n          disablePortal: true,\n          id: \"combo-box-companies\",\n          options: companies //choose name as label for ui\n          ,\n          getOptionLabel: option => option.companies.name //when changed, save choosen Partner\n          ,\n          onChange: (event, value) => {\n            setrequestedCompany(value.id);\n          },\n          sx: {\n            width: 320\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Empf\\xE4nger der Partnerschaftsanfrage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-grid mx-auto\",\n          children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n            className: \"mt-3\",\n            type: \"submit\",\n            color: \"success\",\n            children: \"Anfrage abschicken\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(PartnerForm, \"1bXaotd2iik9Pqn0cIVQlNYVhZ8=\", false, function () {\n  return [useAxiosPrivate];\n});\n\n_c = PartnerForm;\nexport default PartnerForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PartnerForm\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Partners/PartnerForm.jsx"],"names":["React","useState","useEffect","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","useAxiosPrivate","Autocomplete","TextField","PartnerForm","eori_nr","setEoriNr","street","setStreet","city_code","setZipCode","email","setEmail","name","setName","city","setCity","country_code","setCountry","companies","setCompanies","requestedCompany","setrequestedCompany","axiosInstance","get","then","res","console","log","data","handleSubmit","e","preventDefault","post","added_partner","catch","error","setState","errorMessage","message","option","event","value","id","width","params"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n} from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\n\n\n\nfunction PartnerForm() {\n  const [eori_nr, setEoriNr] = useState(\"\");\n  const [street, setStreet] = useState(\"\");\n  const [city_code, setZipCode] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [country_code, setCountry] = useState(\"\");\n  const [companies, setCompanies] = useState(\"\");\n  const [requestedCompany, setrequestedCompany] = useState(\"\")\n  const axiosInstance = useAxiosPrivate();\n\n\n  //useffect Abfragen der Firmemliste\n\n  useEffect(() => {\n    axiosInstance.get(\"companies/\").then((res) => {\n      console.log(res.data);\n      setCompanies(res.data);\n    });\n  \n  }, [])\n  \n\n  \n  function handleSubmit(e) {\n    e.preventDefault();\n    //firma hinzufügen\n    axiosInstance\n      .post(\"/partnership/\", { added_partner: requestedCompany })\n      .then(console.log(requestedCompany))\n      .catch((error) => {\n        this.setState({ errorMessage: error.message });\n        console.error(\"There was an error!\", error);\n      })\n      \n    //firma als partner hinterlegen\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <MDBContainer>\n          <Autocomplete\n                  className=\"mt-1\"\n                  disablePortal\n                  id=\"combo-box-companies\"\n                  options={companies}\n                  //choose name as label for ui\n                  getOptionLabel={(option) => option.companies.name}\n                  //when changed, save choosen Partner\n                  onChange={(event, value) => {\n                    setrequestedCompany(value.id);\n                  }}\n                  sx={{ width: 320 }}\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"Empfänger der Partnerschaftsanfrage\" />\n                  )}\n                />\n          <div className=\"d-grid mx-auto\">\n            <MDBBtn className=\"mt-3\" type=\"submit\" color=\"success\">\n              Anfrage abschicken\n            </MDBBtn>\n          </div>\n        </MDBContainer>\n      </form>\n    </>\n  );\n}\n\nexport default PartnerForm;\n"]},"metadata":{},"sourceType":"module"}