{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Documents/OtherDocumentsForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { uploadDokumentHash, getDokumentenhash } from \"../../Web3Client\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Alert from \"@mui/material/Alert\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { MDBInput, MDBFile, MDBBtn, MDBContainer } from \"mdb-react-ui-kit\";\nimport { MDBSpinner } from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport { useParams } from \"react-router-dom\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst steps = [\"Dokument beschreiben\", \"Dokument hochladen\", \"Bestätigen\"];\n\nfunction OtherDocumentsForm(props) {\n  _s();\n\n  const axiosInstance = useAxiosPrivate();\n  const [type, setType] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [issueDate, setIssueDate] = React.useState(\"\");\n  const [fileID, setFileID] = React.useState();\n  const [fileLink, setFileLink] = React.useState(\"\");\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const [selectedFile, setSelectedFile] = React.useState();\n  const [uploadLoading, setUploadLoading] = React.useState(false);\n  const [fileUploadSuccess, setFileUploadSuccess] = React.useState(false);\n  const {\n    transactionId\n  } = useParams();\n  const [newDocumentData, setNewDocumentData] = useState();\n  const {\n    auth\n  } = useAuth();\n  var newDocumentID;\n  const docformData = new FormData(); // -- Loading Backdrop --\n\n  const [openBackdrop, setOpenBackdrop] = React.useState(false);\n\n  const handleCloseBackdrop = () => {\n    setOpenBackdrop(false);\n  };\n\n  const handleToggleBackdrop = () => {\n    setOpenBackdrop(!openBackdrop);\n  }; // Funktion für Datei Upload\n\n\n  function handleUpload(e) {\n    e.preventDefault();\n    setUploadLoading(true);\n    const fileformData = new FormData();\n    fileformData.append(\"file\", selectedFile);\n    console.log(type);\n    console.log(description);\n    axiosInstance.post(\"/file/\", fileformData).then(res => {\n      console.log(res.data.id);\n      setFileID(res.data.id);\n      console.log(fileID);\n      console.log(res.data.file);\n      setFileLink(res.data.file);\n      setFileUploadSuccess(true);\n      setUploadLoading(false);\n    }).catch(err => console.log(err.response));\n  }\n\n  async function uDokumentHash(_transaktionID, _file) {\n    var crypto = require(\"crypto\");\n\n    const fileReader = new FileReader();\n    var hashwert = \"\";\n    fileReader.readAsText(_file);\n\n    fileReader.onload = function (evt) {\n      hashwert = crypto.createHash(\"sha512\").update(evt.target.result).digest(\"hex\");\n      console.log(hashwert);\n      uploadDokumentHash(_transaktionID, hashwert) //Blockchain Transaktion\n      .then(tx => {\n        docformData.append(\"blockchain_id\", tx - 1);\n        uploadToDatabase(docformData);\n        return tx;\n      }).catch(err => {\n        console.log(\"Hashgenerierung fehlgeschlagen. Fehlermeldung: \" + err); // Error-Snackbar setzen\n\n        props.setSnackbarSuccess(false);\n        props.setSnackbarMessage(\"Fehler bei der Verarbeitung des Dokuments.\"); // Backdrop Ladeanimation schließen\n\n        handleCloseBackdrop(); // Snackbar öffnen\n\n        props.handleOpenSnackbar(); // Modal schließen\n\n        props.toggleAddDocumentModal();\n      });\n    };\n  }\n\n  async function uploadToDatabase(docformData) {\n    await axiosInstance.post(\"/documents/\", docformData).then(res => {\n      console.log(res.data);\n      setNewDocumentData(res.data);\n      newDocumentID = res.data.id;\n      console.log(\"Dokument erfolgreich hochgeladen.\"); // newDocument -> State aktualisieren\n\n      props.setNewDocument(!props.newDocument); // Erfolgs-Snackbar setzen\n\n      props.setSnackbarSuccess(true);\n      props.setSnackbarMessage(\"Dokument erfolgreich hochgeladen.\"); // Backdrop Ladeanimation öffnen\n\n      handleToggleBackdrop(); // Snackbar öffnen\n\n      props.handleOpenSnackbar(); // Modal schließen\n\n      props.toggleAddDocumentModal();\n    }).catch(err => {\n      console.log(err.response); // Error-Snackbar setzen\n\n      props.setSnackbarSuccess(false);\n      props.setSnackbarMessage(\"Fehler beim hochladen des Dokuments.\"); // Backdrop Ladeanimation öffnen\n\n      handleToggleBackdrop(); // Snackbar öffnen\n\n      props.handleOpenSnackbar(); // Modal schließen\n\n      props.toggleAddDocumentModal();\n    });\n  } // Funktion zum Abschicken des Formulars\n\n\n  async function handleSubmit(e) {\n    //Standardverhalten abstellen\n    e.preventDefault(); // Backdrop Ladeanimation öffnen\n\n    handleToggleBackdrop();\n    docformData.append(\"description\", description);\n    docformData.append(\"type\", type);\n    docformData.append(\"file\", fileID);\n    docformData.append(\"issue_date\", \"2022-03-15\");\n\n    if (transactionId == undefined) {\n      console.log(\"Zollmodus mit Transaction ID\" + props.transactionID_zoll);\n      docformData.append(\"transaction\", props.transactionID_zoll);\n      const tx = await uDokumentHash(props.transactionID_zoll, selectedFile);\n    } else {\n      console.log(\"Normal\");\n      docformData.append(\"transaction\", transactionId);\n      const tx = await uDokumentHash(transactionId, selectedFile);\n    }\n  } // Alle Funktionen unterhalb: Steuerung des Steppers\n  // Kein Step ist optional\n\n\n  const isStepOptional = step => {\n    return;\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    if (activeStep === 0) {\n      var forms = document.getElementById(\"documentForm\");\n\n      if (forms.checkValidity() == false) {\n        console.log(\"Formular Eingabe inkorrekt.\");\n        return;\n      }\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  useEffect(() => {\n    if ((props === null || props === void 0 ? void 0 : props.isZoll) == true) {\n      setType(\"Zollbescheid\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: activeStep,\n        children: steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n\n          if (isStepOptional(index)) {\n            labelProps.optional = /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              children: \"Optional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this);\n          }\n\n          if (isStepSkipped(index)) {\n            stepProps.completed = false;\n          }\n\n          return /*#__PURE__*/_jsxDEV(Step, { ...stepProps,\n            children: /*#__PURE__*/_jsxDEV(StepLabel, { ...labelProps,\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)\n          }, label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBContainer, {\n        className: \"mt-4\",\n        children: activeStep === steps.length ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 2,\n              mb: 1\n            },\n            children: \"All steps completed - you're finished\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              pt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flex: \"1 1 auto\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleReset,\n              children: \"Zur\\xFCcksetzen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [activeStep === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"documentForm\",\n              onSubmit: e => e.preventDefault(),\n              children: [(props === null || props === void 0 ? void 0 : props.isZoll) == true ? /*#__PURE__*/_jsxDEV(MDBInput, {\n                className: \"my-4\",\n                value: \"Zollbescheid\",\n                name: \"type\",\n                id: \"documentType\",\n                label: \"Dokumententyp\",\n                disabled: true,\n                onChange: e => setType(e.target.value),\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(MDBInput, {\n                className: \"my-4\",\n                value: type,\n                name: \"type\",\n                id: \"documentType\",\n                label: \"Dokumententyp\",\n                required: true,\n                onChange: e => setType(e.target.value),\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                wrapperClass: \"mb-4\",\n                value: description,\n                textarea: true,\n                name: \"description\",\n                id: \"documentDescription\",\n                rows: 3,\n                onChange: e => setDescription(e.target.value),\n                label: \"Beschreibung (optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this), type.toUpperCase() == \"RECHNUNG\" && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errmsg alert alert-danger\",\n              children: \"Bezeichnung \\\"Rechnung\\\" nicht zul\\xE4ssig. Rechnungsformular verwenden.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : activeStep === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleUpload,\n              children: [/*#__PURE__*/_jsxDEV(MDBFile, {\n                className: \"my-4\",\n                label: \"PDF-Dokument ausw\\xE4hlen\",\n                id: \"customFile\",\n                onChange: e => setSelectedFile(e.target.files[0])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this), selectedFile === undefined || selectedFile == \"\" ? /*#__PURE__*/_jsxDEV(MDBBtn, {\n                disabled: true,\n                type: \"submit\",\n                block: true,\n                children: \"Hochladen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 23\n              }, this) : uploadLoading == false ? /*#__PURE__*/_jsxDEV(MDBBtn, {\n                type: \"submit\",\n                block: true,\n                children: \"Hochladen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(MDBBtn, {\n                type: \"submit\",\n                block: true,\n                disabled: true,\n                children: [/*#__PURE__*/_jsxDEV(MDBSpinner, {\n                  size: \"sm\",\n                  role: \"status\",\n                  tag: \"span\",\n                  className: \"me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 25\n                }, this), \"Hochladen...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this), fileUploadSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"success\",\n              className: \"mt-4\",\n              children: \"Dokument wurde verarbeitet. Weiter um Upload abzuschlie\\xDFen.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mt-4\",\n              children: \"Daten best\\xE4tigen:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Hochgeladene Dokumentenart: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 21\n              }, this), type]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Beschreibung: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 21\n              }, this), description == \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"Keine Beschreibung.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 23\n              }, this) : description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: fileLink,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: \"Link zur Datei\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              pt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"inherit\",\n              disabled: activeStep === 0,\n              onClick: handleBack,\n              sx: {\n                mr: 1\n              },\n              children: \"Zur\\xFCck\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flex: \"1 1 auto\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, this), isStepOptional(activeStep) && /*#__PURE__*/_jsxDEV(Button, {\n              color: \"inherit\",\n              onClick: handleSkip,\n              sx: {\n                mr: 1\n              },\n              children: \"\\xDCberspringen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 19\n            }, this), activeStep === steps.length - 1 ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSubmit,\n              children: \"Abschicken\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 19\n            }, this) : activeStep == 1 && fileUploadSuccess == false ? /*#__PURE__*/_jsxDEV(Button, {\n              disabled: true,\n              onClick: handleNext,\n              children: \"Weiter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 19\n            }, this) : activeStep == 1 && fileUploadSuccess == true ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleNext,\n              children: \"Weiter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              form: \"documentForm\",\n              onClick: handleNext,\n              children: \"Weiter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n      sx: {\n        color: \"#fff\",\n        zIndex: theme => theme.zIndex.drawer + 1\n      },\n      open: openBackdrop,\n      onClick: handleCloseBackdrop,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(OtherDocumentsForm, \"gMpcgmM4lTdvwafVSX/LsDh/3kY=\", false, function () {\n  return [useAxiosPrivate, useParams, useAuth];\n});\n\n_c = OtherDocumentsForm;\nexport default OtherDocumentsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OtherDocumentsForm\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Documents/OtherDocumentsForm.jsx"],"names":["React","useEffect","useState","uploadDokumentHash","getDokumentenhash","Box","Stepper","Step","StepLabel","Button","Typography","Alert","Backdrop","CircularProgress","MDBInput","MDBFile","MDBBtn","MDBContainer","MDBSpinner","useAxiosPrivate","useParams","useAuth","steps","OtherDocumentsForm","props","axiosInstance","type","setType","description","setDescription","issueDate","setIssueDate","fileID","setFileID","fileLink","setFileLink","activeStep","setActiveStep","skipped","setSkipped","Set","selectedFile","setSelectedFile","uploadLoading","setUploadLoading","fileUploadSuccess","setFileUploadSuccess","transactionId","newDocumentData","setNewDocumentData","auth","newDocumentID","docformData","FormData","openBackdrop","setOpenBackdrop","handleCloseBackdrop","handleToggleBackdrop","handleUpload","e","preventDefault","fileformData","append","console","log","post","then","res","data","id","file","catch","err","response","uDokumentHash","_transaktionID","_file","crypto","require","fileReader","FileReader","hashwert","readAsText","onload","evt","createHash","update","target","result","digest","tx","uploadToDatabase","setSnackbarSuccess","setSnackbarMessage","handleOpenSnackbar","toggleAddDocumentModal","setNewDocument","newDocument","handleSubmit","undefined","transactionID_zoll","isStepOptional","step","isStepSkipped","has","handleNext","newSkipped","values","delete","forms","document","getElementById","checkValidity","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","handleReset","isZoll","width","map","label","index","stepProps","labelProps","optional","completed","length","mt","mb","display","flexDirection","pt","flex","value","toUpperCase","files","mr","color","zIndex","theme","drawer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { uploadDokumentHash, getDokumentenhash } from \"../../Web3Client\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Alert from \"@mui/material/Alert\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nimport { MDBInput, MDBFile, MDBBtn, MDBContainer } from \"mdb-react-ui-kit\";\nimport { MDBSpinner } from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport { useParams } from \"react-router-dom\";\nimport useAuth from \"../../hooks/useAuth\";\n\nconst steps = [\"Dokument beschreiben\", \"Dokument hochladen\", \"Bestätigen\"];\n\nfunction OtherDocumentsForm(props) {\n  const axiosInstance = useAxiosPrivate();\n\n  const [type, setType] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  const [issueDate, setIssueDate] = React.useState(\"\");\n  const [fileID, setFileID] = React.useState();\n\n  const [fileLink, setFileLink] = React.useState(\"\");\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n\n  const [selectedFile, setSelectedFile] = React.useState();\n  const [uploadLoading, setUploadLoading] = React.useState(false);\n  const [fileUploadSuccess, setFileUploadSuccess] = React.useState(false);\n  const { transactionId } = useParams();\n  const [newDocumentData, setNewDocumentData] = useState();\n  const { auth } = useAuth();\n\n  var newDocumentID;\n\n  const docformData = new FormData();\n\n  // -- Loading Backdrop --\n  const [openBackdrop, setOpenBackdrop] = React.useState(false);\n  const handleCloseBackdrop = () => {\n    setOpenBackdrop(false);\n  };\n  const handleToggleBackdrop = () => {\n    setOpenBackdrop(!openBackdrop);\n  };\n\n  // Funktion für Datei Upload\n  function handleUpload(e) {\n    e.preventDefault();\n    setUploadLoading(true);\n    const fileformData = new FormData();\n    fileformData.append(\"file\", selectedFile);\n    console.log(type);\n    console.log(description);\n    axiosInstance\n      .post(\"/file/\", fileformData)\n      .then((res) => {\n        console.log(res.data.id);\n        setFileID(res.data.id);\n        console.log(fileID);\n        console.log(res.data.file);\n        setFileLink(res.data.file);\n        setFileUploadSuccess(true);\n        setUploadLoading(false);\n      })\n      .catch((err) => console.log(err.response));\n  }\n  async function uDokumentHash(_transaktionID, _file) {\n    var crypto = require(\"crypto\");\n    const fileReader = new FileReader();\n    var hashwert = \"\";\n    fileReader.readAsText(_file);\n    fileReader.onload = function (evt) {\n      hashwert = crypto\n        .createHash(\"sha512\")\n        .update(evt.target.result)\n        .digest(\"hex\");\n      console.log(hashwert);\n      uploadDokumentHash(_transaktionID, hashwert) //Blockchain Transaktion\n        .then((tx) => {\n          docformData.append(\"blockchain_id\", tx - 1);\n          uploadToDatabase(docformData);\n          return tx;\n        })\n        .catch((err) => {\n          console.log(\"Hashgenerierung fehlgeschlagen. Fehlermeldung: \" + err);\n          // Error-Snackbar setzen\n          props.setSnackbarSuccess(false);\n          props.setSnackbarMessage(\n            \"Fehler bei der Verarbeitung des Dokuments.\"\n          );\n          // Backdrop Ladeanimation schließen\n          handleCloseBackdrop();\n          // Snackbar öffnen\n          props.handleOpenSnackbar();\n          // Modal schließen\n          props.toggleAddDocumentModal();\n        });\n    };\n  }\n\n  async function uploadToDatabase(docformData) {\n    await axiosInstance\n      .post(\"/documents/\", docformData)\n      .then((res) => {\n        console.log(res.data);\n        setNewDocumentData(res.data);\n        newDocumentID = res.data.id;\n        console.log(\"Dokument erfolgreich hochgeladen.\");\n        // newDocument -> State aktualisieren\n        props.setNewDocument(!props.newDocument);\n        // Erfolgs-Snackbar setzen\n        props.setSnackbarSuccess(true);\n        props.setSnackbarMessage(\"Dokument erfolgreich hochgeladen.\");\n        // Backdrop Ladeanimation öffnen\n        handleToggleBackdrop();\n        // Snackbar öffnen\n        props.handleOpenSnackbar();\n        // Modal schließen\n        props.toggleAddDocumentModal();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        // Error-Snackbar setzen\n        props.setSnackbarSuccess(false);\n        props.setSnackbarMessage(\"Fehler beim hochladen des Dokuments.\");\n        // Backdrop Ladeanimation öffnen\n        handleToggleBackdrop();\n        // Snackbar öffnen\n        props.handleOpenSnackbar();\n        // Modal schließen\n        props.toggleAddDocumentModal();\n      });\n  }\n\n  // Funktion zum Abschicken des Formulars\n  async function handleSubmit(e) {\n    //Standardverhalten abstellen\n    e.preventDefault();\n    // Backdrop Ladeanimation öffnen\n    handleToggleBackdrop();\n    docformData.append(\"description\", description);\n    docformData.append(\"type\", type);\n    docformData.append(\"file\", fileID);\n    docformData.append(\"issue_date\", \"2022-03-15\");\n    if (transactionId == undefined) {\n      console.log(\"Zollmodus mit Transaction ID\" + props.transactionID_zoll);\n      docformData.append(\"transaction\", props.transactionID_zoll);\n      const tx = await uDokumentHash(props.transactionID_zoll, selectedFile);\n    } else {\n      console.log(\"Normal\");\n      docformData.append(\"transaction\", transactionId);\n      const tx = await uDokumentHash(transactionId, selectedFile);\n    }\n  }\n\n  // Alle Funktionen unterhalb: Steuerung des Steppers\n\n  // Kein Step ist optional\n  const isStepOptional = (step) => {\n    return;\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    if (activeStep === 0) {\n      var forms = document.getElementById(\"documentForm\");\n\n      if (forms.checkValidity() == false) {\n        console.log(\"Formular Eingabe inkorrekt.\");\n        return;\n      }\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  useEffect(() => {\n    if (props?.isZoll == true) {\n      setType(\"Zollbescheid\");\n    }\n  }, []);\n\n  return (\n    <>\n      <Box sx={{ width: \"100%\" }}>\n        <Stepper activeStep={activeStep}>\n          {steps.map((label, index) => {\n            const stepProps = {};\n            const labelProps = {};\n            if (isStepOptional(index)) {\n              labelProps.optional = (\n                <Typography variant=\"caption\">Optional</Typography>\n              );\n            }\n            if (isStepSkipped(index)) {\n              stepProps.completed = false;\n            }\n            return (\n              <Step key={label} {...stepProps}>\n                <StepLabel {...labelProps}>{label}</StepLabel>\n              </Step>\n            );\n          })}\n        </Stepper>\n        <MDBContainer className=\"mt-4\">\n          {activeStep === steps.length ? (\n            <React.Fragment>\n              <Typography sx={{ mt: 2, mb: 1 }}>\n                All steps completed - you&apos;re finished\n              </Typography>\n              <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                <Box sx={{ flex: \"1 1 auto\" }} />\n                <Button onClick={handleReset}>Zurücksetzen</Button>\n              </Box>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              {activeStep === 0 ? (\n                <>\n                  {/* <MDBInput\n                    className=\"my-4\"\n                    value={type}\n                    name=\"type\"\n                    id=\"documentType\"\n                    label=\"Dokumententyp\"\n                    onChange={(e) => setType(e.target.value)}\n                    type=\"text\"\n                  /> */}{\" \"}\n                  <form id=\"documentForm\" onSubmit={(e) => e.preventDefault()}>\n                    {props?.isZoll == true ? (\n                      <MDBInput\n                        className=\"my-4\"\n                        value={\"Zollbescheid\"}\n                        name=\"type\"\n                        id=\"documentType\"\n                        label=\"Dokumententyp\"\n                        disabled\n                        onChange={(e) => setType(e.target.value)}\n                        type=\"text\"\n                      />\n                    ) : (\n                      <MDBInput\n                        className=\"my-4\"\n                        value={type}\n                        name=\"type\"\n                        id=\"documentType\"\n                        label=\"Dokumententyp\"\n                        required\n                        onChange={(e) => setType(e.target.value)}\n                        type=\"text\"\n                      />\n                    )}\n\n                    <MDBInput\n                      wrapperClass=\"mb-4\"\n                      value={description}\n                      textarea\n                      name=\"description\"\n                      id=\"documentDescription\"\n                      rows={3}\n                      onChange={(e) => setDescription(e.target.value)}\n                      label=\"Beschreibung (optional)\"\n                    />\n                  </form>\n                  {type.toUpperCase() == \"RECHNUNG\" && (\n                    <p className=\"errmsg alert alert-danger\">\n                      Bezeichnung \"Rechnung\" nicht zulässig. Rechnungsformular\n                      verwenden.\n                    </p>\n                  )}\n                </>\n              ) : activeStep === 1 ? (\n                <>\n                  <form onSubmit={handleUpload}>\n                    <MDBFile\n                      className=\"my-4\"\n                      label=\"PDF-Dokument auswählen\"\n                      id=\"customFile\"\n                      onChange={(e) => setSelectedFile(e.target.files[0])}\n                    />\n                    {selectedFile === undefined || selectedFile == \"\" ? (\n                      <MDBBtn disabled type=\"submit\" block>\n                        Hochladen\n                      </MDBBtn>\n                    ) : uploadLoading == false ? (\n                      <MDBBtn type=\"submit\" block>\n                        Hochladen\n                      </MDBBtn>\n                    ) : (\n                      <MDBBtn type=\"submit\" block disabled>\n                        <MDBSpinner\n                          size=\"sm\"\n                          role=\"status\"\n                          tag=\"span\"\n                          className=\"me-2\"\n                        />\n                        Hochladen...\n                      </MDBBtn>\n                    )}\n                  </form>\n                  {fileUploadSuccess && (\n                    <Alert severity=\"success\" className=\"mt-4\">\n                      Dokument wurde verarbeitet. Weiter um Upload\n                      abzuschließen.\n                    </Alert>\n                  )}\n                </>\n              ) : (\n                <>\n                  <h5 className=\"mt-4\">Daten bestätigen:</h5>\n                  <p>\n                    <b>Hochgeladene Dokumentenart: </b>\n                    <br />\n                    {type}\n                  </p>\n                  <p>\n                    <b>Beschreibung: </b>\n                    <br />\n                    {description == \"\" ? (\n                      <i>Keine Beschreibung.</i>\n                    ) : (\n                      description\n                    )}\n                  </p>\n\n                  <p>\n                    <a\n                      href={fileLink}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      Link zur Datei\n                    </a>\n                  </p>\n                </>\n              )}\n              <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                <Button\n                  color=\"inherit\"\n                  disabled={activeStep === 0}\n                  onClick={handleBack}\n                  sx={{ mr: 1 }}\n                >\n                  Zurück\n                </Button>\n                <Box sx={{ flex: \"1 1 auto\" }} />\n                {isStepOptional(activeStep) && (\n                  <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\n                    Überspringen\n                  </Button>\n                )}\n\n                {activeStep === steps.length - 1 ? (\n                  <Button onClick={handleSubmit}>Abschicken</Button>\n                ) : activeStep == 1 && fileUploadSuccess == false ? (\n                  <Button disabled onClick={handleNext}>\n                    Weiter\n                  </Button>\n                ) : activeStep == 1 && fileUploadSuccess == true ? (\n                  <Button onClick={handleNext}>Weiter</Button>\n                ) : (\n                  <Button\n                    type=\"submit\"\n                    form=\"documentForm\"\n                    onClick={handleNext}\n                  >\n                    Weiter\n                  </Button>\n                )}\n              </Box>\n            </React.Fragment>\n          )}\n        </MDBContainer>\n      </Box>\n\n      <Backdrop\n        sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={openBackdrop}\n        onClick={handleCloseBackdrop}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </>\n  );\n}\n\nexport default OtherDocumentsForm;\n"]},"metadata":{},"sourceType":"module"}