{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Testseite2.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { MDBIcon } from \"mdb-react-ui-kit\";\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Test2 = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const names = ['Oliver Hansen', 'Van Henry', 'April Tucker', 'Ralph Hubbard', 'Omar Alexander', 'Carlos Abbott', 'Miriam Wagner', 'Bradley Wilkerson', 'Virginia Andrews', 'Kelly Snyder'];\n  const [personName, setPersonName] = useState([]);\n\n  const handleChangeMultiple = event => {\n    _s();\n\n    const {\n      options\n    } = event.target;\n    const value = [];\n    const axiosInstance = useAxiosPrivate();\n\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n\n    setPersonName(value);\n  };\n\n  _s(handleChangeMultiple, \"Cl8bBI0HPK8+a4x2NCUypeTN1Hs=\", false, function () {\n    return [useAxiosPrivate];\n  });\n\n  console.log(\"Hello World\");\n  /*     useEffect(() => {\n  \n          //Abruf des Link zur Datei\n          axiosInstance.get(\"documents\").then((res) => {\n            setDatei(res.data.names);\n            fileLink = res.data.file;\n          })\n      },[]); */\n\n  useEffect(() => {\n    console.log(personName);\n  }, [personName]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Hello World\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          m: 1,\n          minWidth: 120,\n          maxWidth: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          shrink: true,\n          htmlFor: \"select-multiple-native\",\n          children: \"Native\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          multiple: true,\n          native: true,\n          value: personName // @ts-ignore Typings are not considering `native`\n          ,\n          onChange: handleChangeMultiple,\n          label: \"Native\",\n          inputProps: {\n            id: 'select-multiple-native'\n          },\n          children: names.map(name => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: name,\n            children: name\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Test2, \"s8Pf04Cc9gdxXniVWU8czaIs4qg=\");\n\n_c = Test2;\nexport default Test2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test2\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Testseite2.jsx"],"names":["React","useEffect","useState","MDBIcon","InputLabel","FormControl","Select","useAxiosPrivate","Test2","names","personName","setPersonName","handleChangeMultiple","event","options","target","value","axiosInstance","i","l","length","selected","push","console","log","m","minWidth","maxWidth","id","map","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;;;AAIA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAAA;;AAChB,QAAMC,KAAK,GAAG,CACV,eADU,EAEV,WAFU,EAGV,cAHU,EAIV,eAJU,EAKV,gBALU,EAMV,eANU,EAOV,eAPU,EAQV,mBARU,EASV,kBATU,EAUV,cAVU,CAAd;AAaA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;;AACA,QAAMU,oBAAoB,GAAIC,KAAD,IAAW;AAAA;;AACxC,UAAM;AAAEC,MAAAA;AAAF,QAAcD,KAAK,CAACE,MAA1B;AACA,UAAMC,KAAK,GAAG,EAAd;AACA,UAAMC,aAAa,GAAGV,eAAe,EAArC;;AAEA,SAAK,IAAIW,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGL,OAAO,CAACM,MAA5B,EAAoCF,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,IAAI,CAAhD,EAAmD;AAC/C,UAAIJ,OAAO,CAACI,CAAD,CAAP,CAAWG,QAAf,EAAyB;AACrBL,QAAAA,KAAK,CAACM,IAAN,CAAWR,OAAO,CAACI,CAAD,CAAP,CAAWF,KAAtB;AACF;AACC;;AACDL,IAAAA,aAAa,CAACK,KAAD,CAAb;AACD,GAXL;;AAfgB,KAeVJ,oBAfU;AAAA,YAkBML,eAlBN;AAAA;;AA4BhBgB,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEIvB,EAAAA,SAAS,CAAC,MAAK;AACXsB,IAAAA,OAAO,CAACC,GAAR,CAAYd,UAAZ;AAEH,GAHQ,EAGP,CAACA,UAAD,CAHO,CAAT;AAKA,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,6BACI,QAAC,WAAD;AAAa,QAAA,EAAE,EAAE;AAAEe,UAAAA,CAAC,EAAE,CAAL;AAAQC,UAAAA,QAAQ,EAAE,GAAlB;AAAuBC,UAAAA,QAAQ,EAAE;AAAjC,SAAjB;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,MAAM,MAAlB;AAAmB,UAAA,OAAO,EAAC,wBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,MAAD;AACA,UAAA,QAAQ,MADR;AAEA,UAAA,MAAM,MAFN;AAGA,UAAA,KAAK,EAAEjB,UAHP,CAIA;AAJA;AAKA,UAAA,QAAQ,EAAEE,oBALV;AAMA,UAAA,KAAK,EAAC,QANN;AAOA,UAAA,UAAU,EAAE;AACRgB,YAAAA,EAAE,EAAE;AADI,WAPZ;AAAA,oBAWCnB,KAAK,CAACoB,GAAN,CAAWC,IAAD,iBACP;AAAmB,YAAA,KAAK,EAAEA,IAA1B;AAAA,sBACCA;AADD,aAAaA,IAAb;AAAA;AAAA;AAAA;AAAA,kBADH;AAXD;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAiCH,CA9ED;;IAAMtB,K;;KAAAA,K;AAgFN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { MDBIcon } from \"mdb-react-ui-kit\";\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\n\n\n\nconst Test2 = () => {\n    const names = [\n        'Oliver Hansen',\n        'Van Henry',\n        'April Tucker',\n        'Ralph Hubbard',\n        'Omar Alexander',\n        'Carlos Abbott',\n        'Miriam Wagner',\n        'Bradley Wilkerson',\n        'Virginia Andrews',\n        'Kelly Snyder',\n      ];\n\n    const [personName, setPersonName] = useState([]);\n    const handleChangeMultiple = (event) => {\n    const { options } = event.target;\n    const value = [];\n    const axiosInstance = useAxiosPrivate(); \n\n    for (let i = 0, l = options.length; i < l; i += 1) {\n        if (options[i].selected) {\n            value.push(options[i].value);\n         }\n          }\n          setPersonName(value);\n        };\n\n    console.log(\"Hello World\")\n\n\n/*     useEffect(() => {\n\n        //Abruf des Link zur Datei\n        axiosInstance.get(\"documents\").then((res) => {\n          setDatei(res.data.names);\n          fileLink = res.data.file;\n        })\n    },[]); */\n\n    useEffect(() =>{\n        console.log(personName)\n\n    },[personName])\n\n    return (\n        <>\n        <p> Hello World</p>\n        <div>\n            <FormControl sx={{ m: 1, minWidth: 120, maxWidth: 300 }}>\n                <InputLabel shrink htmlFor=\"select-multiple-native\">\n                Native\n                </InputLabel>\n                <Select\n                multiple\n                native\n                value={personName}\n                // @ts-ignore Typings are not considering `native`\n                onChange={handleChangeMultiple}\n                label=\"Native\"\n                inputProps={{\n                    id: 'select-multiple-native',\n                }}\n                >\n                {names.map((name) => (\n                    <option key={name} value={name}>\n                    {name}\n                    </option>\n                ))}\n                </Select>\n            </FormControl>\n    </div>\n        \n        \n        </>\n\n    );\n\n}\n\nexport default Test2;\n"]},"metadata":{},"sourceType":"module"}