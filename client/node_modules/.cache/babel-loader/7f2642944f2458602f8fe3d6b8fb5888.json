{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Transactions/TransactionForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBSwitch, MDBIcon } from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport { Link } from \"react-router-dom\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TransactionForm(props) {\n  _s();\n\n  const [checkImporteur, setCheckImporteur] = useState(false);\n  const [description, setDescription] = useState(\"\");\n  const [partnership, setPartnership] = useState(\"\");\n  const [partners, setPartners] = useState([]);\n  const [partnerCompany, setPartnerCompany] = useState();\n  const axiosPrivate = useAxiosPrivate();\n  const {\n    auth\n  } = useAuth();\n  useEffect(() => {\n    //lookup partner for checkbox\n    axiosPrivate.get(\"partnership/\").then(res => {\n      console.log(res.data);\n      setPartners(res.data);\n    }); //save current user company id for choosing importeur\n\n    /*     axiosPrivate.get(\"employee/\").then((res) => {\n          let id = res.data[0].company.eori_nr;\n          setUserCompany(id);\n        }); */\n  }, []);\n\n  function handleSubmit(e) {\n    console.log(auth.eori_nr);\n    console.log(partnerCompany);\n    let importeur = 1;\n\n    if (checkImporteur) {\n      importeur = auth.eori_nr;\n      console.log(\"importeur ist eigene Firma\");\n    } else {\n      importeur = partnerCompany;\n    }\n\n    console.log(\"Die Importfirma ist\", importeur);\n    e.preventDefault();\n    const newTransaction = {\n      description,\n      partnership,\n      importeur\n    };\n    console.log(newTransaction); //add transaction\n\n    axiosPrivate.post(\"/transactions/\", newTransaction).then(res => {\n      console.log(res.data);\n      props.setreload(!reload);\n    }).catch(error => {\n      console.error(\"There was an error!\", error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n        children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n          children: /*#__PURE__*/_jsxDEV(MDBInput, {\n            name: \"description\",\n            label: \"Beschreibung der Transaktion\",\n            type: \"text\",\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: \"Partner ausw\\xE4hlen:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n          children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              className: \"mt-1\",\n              disablePortal: true,\n              id: \"combo-box-partner\",\n              options: partners //choose name as label for ui\n              ,\n              getOptionLabel: option => option.partner.name //when changed, save choosen Partner\n              ,\n              onChange: (event, value) => {\n                setPartnership(value.id);\n                setPartnerCompany(value.partner.eori_nr);\n              },\n              sx: {\n                width: 320\n              },\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                label: \"Partner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/partners\",\n              children: /*#__PURE__*/_jsxDEV(MDBIcon, {\n                far: true,\n                icon: \"address-book\",\n                className: \"float-end mt-3 me-4\",\n                size: \"2x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            className: \"mt-3\",\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              onClick: () => setCheckImporteur(!checkImporteur)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this),\n            label: \"Ist ihre Firma der Importeur?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-grid mx-auto\",\n          children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n            type: \"submit\",\n            color: \"success\",\n            className: \"mt-4\",\n            children: \"Hinzuf\\xFCgen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(TransactionForm, \"Ko7ZwBgP6mIawByM4GWQBNYe7xA=\", false, function () {\n  return [useAxiosPrivate, useAuth];\n});\n\n_c = TransactionForm;\nexport default TransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Transactions/TransactionForm.jsx"],"names":["React","useEffect","useState","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","MDBSwitch","MDBIcon","useAxiosPrivate","Autocomplete","TextField","Checkbox","FormControlLabel","Link","useAuth","TransactionForm","props","checkImporteur","setCheckImporteur","description","setDescription","partnership","setPartnership","partners","setPartners","partnerCompany","setPartnerCompany","axiosPrivate","auth","get","then","res","console","log","data","handleSubmit","e","eori_nr","importeur","preventDefault","newTransaction","post","setreload","reload","catch","error","target","value","option","partner","name","event","id","width","params"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBSwitch,\n  MDBIcon,\n} from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\"; \nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport { Link } from \"react-router-dom\";\nimport useAuth from \"../../hooks/useAuth\";\n\nfunction TransactionForm(props) {\n  const [checkImporteur, setCheckImporteur] = useState(false);\n  const [description, setDescription] = useState(\"\");\n  const [partnership, setPartnership] = useState(\"\");\n  const [partners, setPartners] = useState([]);\n  const [partnerCompany, setPartnerCompany] = useState();\n  const axiosPrivate = useAxiosPrivate();\n  const {auth} = useAuth();\n\n\n  useEffect(() => {\n    //lookup partner for checkbox\n    axiosPrivate.get(\"partnership/\").then((res) => {\n      console.log(res.data);\n      setPartners(res.data);\n    });\n    //save current user company id for choosing importeur\n/*     axiosPrivate.get(\"employee/\").then((res) => {\n      let id = res.data[0].company.eori_nr;\n      setUserCompany(id);\n    }); */\n  }, []);\n\n  function handleSubmit(e) {\n    console.log(auth.eori_nr);\n    console.log(partnerCompany);\n    let importeur = 1;\n    if (checkImporteur) {\n      importeur = auth.eori_nr;\n      console.log(\"importeur ist eigene Firma\");\n    } else {\n      importeur = partnerCompany;\n    }\n    console.log(\"Die Importfirma ist\", importeur);\n    e.preventDefault();\n    const newTransaction = {\n      description,\n      partnership,\n      importeur,\n    };\n    console.log(newTransaction);\n    //add transaction\n    axiosPrivate\n      .post(\"/transactions/\", newTransaction)\n      .then((res) => {\n        console.log(res.data);\n        props.setreload(!reload)\n      })\n      .catch((error) => {\n        console.error(\"There was an error!\", error);\n      });\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <MDBContainer>\n          <MDBRow>\n            <MDBInput\n              name=\"description\"\n              label=\"Beschreibung der Transaktion\"\n              type=\"text\"\n              onChange={(e) => setDescription(e.target.value)}\n            />\n          </MDBRow>\n          <div className=\"mt-4\">Partner auswählen:</div>\n          <MDBRow>\n            <MDBCol>\n              <Autocomplete\n                className=\"mt-1\"\n                disablePortal\n                id=\"combo-box-partner\"\n                options={partners}\n                //choose name as label for ui\n                getOptionLabel={(option) => option.partner.name}\n                //when changed, save choosen Partner\n                onChange={(event, value) => {\n                  setPartnership(value.id);\n                  setPartnerCompany(value.partner.eori_nr);\n                }}\n                sx={{ width: 320 }}\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Partner\" />\n                )}\n              />\n            </MDBCol>\n            <MDBCol>\n              <Link to=\"/partners\">\n                <MDBIcon\n                  far\n                  icon=\"address-book\"\n                  className=\"float-end mt-3 me-4\"\n                  size=\"2x\"\n                />\n              </Link>\n            </MDBCol>\n          </MDBRow>\n\n          <MDBRow>\n            <FormControlLabel\n              className=\"mt-3\"\n              control={\n                <Checkbox onClick={() => setCheckImporteur(!checkImporteur)} />\n              }\n              label=\"Ist ihre Firma der Importeur?\"\n            />\n          </MDBRow>\n          <div className=\"d-grid mx-auto\">\n            <MDBBtn type=\"submit\" color=\"success\" className=\"mt-4\">\n              Hinzufügen\n            </MDBBtn>\n          </div>\n        </MDBContainer>\n      </form>\n    </>\n  );\n}\n\nexport default TransactionForm;\n"]},"metadata":{},"sourceType":"module"}