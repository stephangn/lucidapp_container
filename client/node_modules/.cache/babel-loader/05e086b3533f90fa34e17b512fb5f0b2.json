{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Transactions/TransactionForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBSwitch } from \"mdb-react-ui-kit\";\nimport axiosInstance from \"../../axiosApi\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\nimport Checkbox from '@mui/material/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TransactionForm() {\n  _s();\n\n  const [eori_nr, setEoriNr] = useState(\"\");\n  const [check, setCheck] = useState(false);\n  const [description, setDescription] = useState(\"\");\n  const [partner, setPartner] = useState(\"\");\n  const [partners, setPartners] = useState([]);\n  const top100Films = [{\n    label: 'The Godfather',\n    id: 1\n  }, {\n    label: 'Pulp Fiction',\n    id: 2\n  }];\n  /*   function onTagsChange (event, values) {\n      setPartner({\n        tags: values\n      }, () => {\n        // This will output an array of objects\n        // given by Autocompelte options property.\n        console.log(partner);\n      });\n    } */\n\n  useEffect(() => {\n    axiosInstance.get('partnership/').then(res => {\n      console.log(res.data);\n      setPartners(res.data);\n    });\n  }, []);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const newTransaction = {\n      eori_nr,\n      description,\n      partner\n    };\n    console.log(newTransaction); //firma hinzufügen \n\n    /*     axiosInstance\n          .post('/companies/', newCompany)\n          .then(console.log())\n          .catch(error => {\n              this.setState({ errorMessage: error.message });\n              console.error('There was an error!', error);\n          }).then(\n            axiosInstance\n            .post('/partnership/', {\"added_partner\":eori_nr})\n            .then(console.log())\n            .catch(error => {\n                this.setState({ errorMessage: error.message });\n                console.error('There was an error!', error);\n            })); */\n    //firma als partner hinterlegen\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n        children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n          className: \"my-3\",\n          name: \"eori_nr\",\n          label: \"EORI-Nr. Partner\",\n          type: \"number\",\n          onChange: e => setEoriNr(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n          className: \"mb-3\",\n          name: \"description\",\n          label: \"Beschreibung der Transaktion\",\n          type: \"text\",\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: this.state.isTrue,\n          onClick: () => setCheck(!check)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          disablePortal: true,\n          id: \"combo-box-partner\",\n          options: partners //choose name as label for ui\n          ,\n          getOptionLabel: option => option.partner.name //when changed, save choosen Partner\n          ,\n          onChange: (event, value) => setPartner(value.id),\n          sx: {\n            width: 300\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Partner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n          type: \"submit\",\n          color: \"success\",\n          children: \"Hinzuf\\xFCgen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(TransactionForm, \"Nfwh3S/sXmURtiWWrVVE0cRgjAU=\");\n\n_c = TransactionForm;\nexport default TransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Transactions/TransactionForm.jsx"],"names":["React","useEffect","useState","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","MDBSwitch","axiosInstance","Autocomplete","TextField","Checkbox","TransactionForm","eori_nr","setEoriNr","check","setCheck","description","setDescription","partner","setPartner","partners","setPartners","top100Films","label","id","get","then","res","console","log","data","handleSubmit","e","preventDefault","newTransaction","target","value","state","isTrue","option","name","event","width","params"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBSwitch,\n} from \"mdb-react-ui-kit\";\nimport axiosInstance from \"../../axiosApi\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\nimport Checkbox from '@mui/material/Checkbox';\n\n\nfunction TransactionForm() {\n\n  const [eori_nr, setEoriNr] = useState(\"\");\n  const [check, setCheck] = useState(false);  \n  const [description, setDescription] = useState(\"\");\n  const [partner, setPartner] = useState(\"\")\n  const [partners, setPartners] = useState([])\n  const top100Films = [\n    { label: 'The Godfather', id: 1 },\n    { label: 'Pulp Fiction', id: 2 },\n  ];\n\n/*   function onTagsChange (event, values) {\n    setPartner({\n      tags: values\n    }, () => {\n      // This will output an array of objects\n      // given by Autocompelte options property.\n      console.log(partner);\n    });\n  } */\n\n  useEffect(() => {\n    axiosInstance.get('partnership/').then((res) => {\n      console.log(res.data);\n      setPartners(res.data);\n    });\n  }, []);\n  function handleSubmit(e) {\n    e.preventDefault();\n    const newTransaction = {\n      eori_nr,\n      description,\n      partner,\n    }\n    console.log(newTransaction)\n    //firma hinzufügen \n/*     axiosInstance\n      .post('/companies/', newCompany)\n      .then(console.log())\n      .catch(error => {\n          this.setState({ errorMessage: error.message });\n          console.error('There was an error!', error);\n      }).then(\n        axiosInstance\n        .post('/partnership/', {\"added_partner\":eori_nr})\n        .then(console.log())\n        .catch(error => {\n            this.setState({ errorMessage: error.message });\n            console.error('There was an error!', error);\n        })); */\n      //firma als partner hinterlegen\n  };\n\n  return (\n    <>\n    <form onSubmit={handleSubmit}>\n      <MDBContainer>\n        <MDBInput\n          className=\"my-3\"\n          name=\"eori_nr\"\n          label=\"EORI-Nr. Partner\"\n          type=\"number\"\n          onChange={e => setEoriNr(e.target.value)}\n\n        />\n\n        <MDBInput\n          className=\"mb-3\"\n          name=\"description\"\n          label=\"Beschreibung der Transaktion\"\n          type=\"text\"\n          onChange={e => setDescription(e.target.value)}\n        />\n{/*         <MDBSwitch \n          id='flexSwitchCheckDefault' \n          label='Importeur?' \n          value='True'\n          onChange={e => setImporteur(e.target.value)}\n        /> */}\n        <Checkbox\n          checked={this.state.isTrue}\n          onClick={() => setCheck(!check)}\n        />\n        <Autocomplete\n            disablePortal\n            id=\"combo-box-partner\"\n            options={partners}\n            //choose name as label for ui\n            getOptionLabel={option => option.partner.name}\n            //when changed, save choosen Partner\n            onChange={(event, value) => setPartner(value.id)}\n            sx={{ width: 300 }}\n            renderInput={(params) => <TextField {...params} label=\"Partner\" />}\n        />\n\n        <MDBBtn type=\"submit\" color=\"success\">Hinzufügen</MDBBtn>\n\n      </MDBContainer>\n    </form>\n    </>\n  );\n}\n\nexport default TransactionForm;\n"]},"metadata":{},"sourceType":"module"}