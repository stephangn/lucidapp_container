{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Login.jsx\";\nimport React, { Component } from \"react\";\nimport { MDBInput, MDBCol, MDBRow, MDBContainer, MDBBtn } from \"mdb-react-ui-kit\";\nimport axiosInstance from \"../axiosApi.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    /*Nutzernamen und Passwort speichern*/\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      wrongLogin: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  /*Veränderungen im Eingabefeld für Passwort erkennen */\n\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n  /*Veründerungen bei Übermittlung angeben*/\n\n\n  handleSubmit(event) {\n    event.preventDefault();\n    /*try {\n            const response = axiosInstance.post('api/token/', {\n                username: this.state.username,\n                password: this.state.password\n            });\n            console.log(response.data)\n            axiosInstance.defaults.headers['Authorization'] = \"JWT \" + response.data.access;\n            localStorage.setItem('access_token', response.data.access);\n            localStorage.setItem('refresh_token', response.data.refresh);\n            return;\n        } catch (error) {\n            throw error;\n        }\n        */\n\n    axiosInstance.post(\"api/token/\", {\n      username: this.state.username,\n      password: this.state.password\n    }).then(response => {\n      axiosInstance.defaults.headers[\"Authorization\"] = \"JWT \" + response.data.access;\n      localStorage.setItem(\"access_token\", response.data.access);\n      localStorage.setItem(\"refresh_token\", response.data.refresh); //speichern von Nutzernamen und Firma im lokalen Speicher\n\n      localStorage.setItem(\"username\", response.data.user);\n      localStorage.setItem(\"company\", response.data.company);\n      alert(\"Login als \" + response.data.user + \" von der Firma \" + response.data.company);\n      window.location.reload(true);\n      return response.data; //Error Handling\n    }).catch(function (error) {\n      if (error.response) {\n        // Macht noch Probleme:\n        this.setState({\n          wrongLogin: true\n        }); // Request made and server responded\n\n        alert(\"Passwort oder Nutzername falsch\");\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        alert(\"Anfrage gemacht - Server antwortet nicht\");\n        console.log(error.request);\n      }\n    });\n  }\n\n  checkLogin() {\n    if (this.state.wrongLogin == true) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        children: \"Login-Daten inkorrekt.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MDBContainer, {\n        children: /*#__PURE__*/_jsxDEV(MDBRow, {\n          className: \"d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(MDBCol, {\n            className: \"col-md-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n                className: \"mb-4\",\n                type: \"username\",\n                id: \"form1Example1\",\n                label: \"Email address\",\n                name: \"username\",\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                className: \"mb-4\",\n                type: \"password\",\n                id: \"form1Example2\",\n                label: \"Password\",\n                name: \"password\",\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n                type: \"submit\",\n                value: \"Submit\",\n                children: \"Einloggen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), this.checkLogin()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Login.jsx"],"names":["React","Component","MDBInput","MDBCol","MDBRow","MDBContainer","MDBBtn","axiosInstance","Login","constructor","props","state","username","password","wrongLogin","handleChange","bind","handleSubmit","event","setState","target","name","value","preventDefault","post","then","response","defaults","headers","data","access","localStorage","setItem","refresh","user","company","alert","window","location","reload","catch","error","console","log","status","request","checkLogin","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  MDBInput,\n  MDBCol,\n  MDBRow,\n  MDBContainer,\n  MDBBtn,\n} from \"mdb-react-ui-kit\";\nimport axiosInstance from \"../axiosApi.js\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    /*Nutzernamen und Passwort speichern*/\n    this.state = { username: \"\", password: \"\", wrongLogin: true };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  /*Veränderungen im Eingabefeld für Passwort erkennen */\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  /*Veründerungen bei Übermittlung angeben*/\n  handleSubmit(event) {\n    event.preventDefault();\n    /*try {\n            const response = axiosInstance.post('api/token/', {\n                username: this.state.username,\n                password: this.state.password\n            });\n            console.log(response.data)\n            axiosInstance.defaults.headers['Authorization'] = \"JWT \" + response.data.access;\n            localStorage.setItem('access_token', response.data.access);\n            localStorage.setItem('refresh_token', response.data.refresh);\n            return;\n        } catch (error) {\n            throw error;\n        }\n        */\n    axiosInstance\n      .post(\"api/token/\", {\n        username: this.state.username,\n        password: this.state.password,\n      })\n      .then((response) => {\n        axiosInstance.defaults.headers[\"Authorization\"] =\n          \"JWT \" + response.data.access;\n        localStorage.setItem(\"access_token\", response.data.access);\n        localStorage.setItem(\"refresh_token\", response.data.refresh);\n        //speichern von Nutzernamen und Firma im lokalen Speicher\n        localStorage.setItem(\"username\", response.data.user);\n        localStorage.setItem(\"company\", response.data.company);\n        alert(\n          \"Login als \" +\n            response.data.user +\n            \" von der Firma \" +\n            response.data.company\n        );\n        window.location.reload(true);\n        return response.data;\n        //Error Handling\n      })\n      .catch(function (error) {\n        if (error.response) {\n          // Macht noch Probleme:\n          this.setState({ wrongLogin: true });\n          // Request made and server responded\n          alert(\"Passwort oder Nutzername falsch\");\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          alert(\"Anfrage gemacht - Server antwortet nicht\");\n\n          console.log(error.request);\n        }\n      });\n  }\n\n  checkLogin() {\n    if (this.state.wrongLogin == true) {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          Login-Daten inkorrekt.\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <MDBContainer>\n          <MDBRow className=\"d-flex justify-content-center\">\n            <MDBCol className=\"col-md-4\">\n              <form onSubmit={this.handleSubmit}>\n                <MDBInput\n                  className=\"mb-4\"\n                  type=\"username\"\n                  id=\"form1Example1\"\n                  label=\"Email address\"\n                  name=\"username\"\n                  onChange={this.handleChange}\n                />\n\n                <MDBInput\n                  className=\"mb-4\"\n                  type=\"password\"\n                  id=\"form1Example2\"\n                  label=\"Password\"\n                  name=\"password\"\n                  onChange={this.handleChange}\n                />\n\n                <MDBBtn type=\"submit\" value=\"Submit\">\n                  Einloggen\n                </MDBBtn>\n              </form>\n              <br />\n              {this.checkLogin()}\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n        <form></form>\n      </div>\n    );\n  }\n}\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}