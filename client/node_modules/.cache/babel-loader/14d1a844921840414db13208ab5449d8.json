{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/ZollDocuments/ZollDocumentTransaction.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardTitle, MDBCardFooter, MDBCardSubTitle, MDBCardText, MDBCol, MDBContainer, MDBRow, MDBPopover, MDBPopoverBody, MDBModal, MDBModalDialog, MDBModalContent, MDBModalHeader, MDBModalTitle, MDBModalBody, MDBModalFooter, MDBIcon } from \"mdb-react-ui-kit\";\nimport { Link } from \"react-router-dom\";\nimport { getZollanmeldung } from \"../../Web3Client.js\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate.js\";\nimport MuiAlert from \"@mui/material/Alert\"; // Snackbar Alert\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ZollDocumentTransaction(props) {\n  _s();\n\n  const axiosInstance = useAxiosPrivate();\n  const [verified, setVerified] = useState(props.declarationData.status_verificiation);\n  const [confirmation, setConfirmation] = useState(props.declarationData.status_confirmation);\n\n  async function abgleichBlockchain(_blockchain_zid) {\n    var crypto = require(\"crypto\");\n\n    console.log(\"Zollanmeldung ID:\" + _blockchain_zid);\n    console.log(props.declarationData);\n    await getZollanmeldung(_blockchain_zid) //blockchain Transaktion\n    .then(tx => {\n      console.log(\"Zollwert: \" + tx[0].zollwert + \", \" + (props.invoiceData.transport_costs + props.invoiceData.total_value)); //Abgleich Blockchain-Anwender\n\n      if (tx[0].gesamtbetrag == props.invoiceData.total_value && tx[0].zollwert == props.invoiceData.transport_costs + props.invoiceData.total_value && tx[0].lieferkosten == props.declarationData.invoice.transport_costs && tx[0].incoterms == props.declarationData.lieferbedingung && tx[0].exporteur == props.declarationData.exporteur.publickey && tx[0].importeur == props.declarationData.importeur.publickey && tx[0].zoll == props.declarationData.customs_office.publickey && tx[0].anmelder == props.declarationData.importeur.publickey && tx[1].gesamtbetrag == props.invoiceData.total_value && tx[1].waehrung == props.declarationData.invoice.currency && tx[1].exporteur == props.declarationData.exporteur.publickey && tx[1].importeur == props.declarationData.importeur.publickey && tx[1].datum == props.declarationData.invoice.issue_date && tx[1].rechnungsposten == crypto.createHash(\"sha512\").update(props.invoiceData.invoiceItem).digest(\"hex\") && tx[1].lieferkosten == props.declarationData.invoice.transport_costs) {\n        console.log(\"Verifikation: Daten sind korrekt\"); // props.setIsVerified(true);\n\n        axiosInstance.patch(\"declaration_auth/\" + props.declarationData.id + \"/\", {\n          status_verificiation: \"korrekt\"\n        });\n        props.handleCloseBackdrop();\n        props.setSnackbarSuccess(true);\n        props.setSnackbarMessage(\"Korrektheit der Daten wurde verifiziert.\");\n        props.handleOpenSnackbar();\n        setVerified(\"korrekt\");\n        props.setReload(!props.reload);\n        return true;\n      } else {\n        console.log(\"Verifikation: Fehler liegt vor\");\n        axiosInstance.patch(\"declaration_auth/\" + props.declarationData.id + \"/\", {\n          status_verificiation: \"inkorrekt\"\n        });\n        props.handleCloseBackdrop();\n        props.setSnackbarSuccess(false);\n        props.setSnackbarMessage(\"Warnung: Daten stimmen nicht mit Blockchain überein.\");\n        props.handleOpenSnackbar();\n        setVerified(\"inkorrekt\");\n        props.setReload(!props.reload);\n        return false;\n      }\n    }).catch(err => {\n      console.log(err);\n      props.handleCloseBackdrop();\n      props.setSnackbarSuccess(false);\n      props.setSnackbarMessage(\"Fehler bei Verifikation der Daten.\");\n      return false;\n    });\n  }\n\n  async function handleVerification() {\n    //setIsVerified(true)\n    props.handleToggleBackdrop();\n    abgleichBlockchain(props.declarationData.blockchain_zid).then(res => {\n      console.log(res);\n    });\n  }\n\n  function handleConfirmation() {\n    axiosInstance.patch(\"declaration_auth/\" + props.declarationData.id + \"/\", {\n      status_confirmation: \"bestätigt\"\n    }).then(res => {\n      console.log(\"Zollanmeldung bestätigt\");\n      toggleShowConfirmModal();\n      props.setReload(!props.reload); // Snackbar\n\n      props.setSnackbarSuccess(true);\n      props.setSnackbarMessage(\"Zollanmeldung bestätigt.\");\n      props.handleOpenSnackbar();\n      setConfirmation(\"bestätigt\");\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleReject() {\n    axiosInstance.patch(\"declaration_auth/\" + props.declarationData.id + \"/\", {\n      status_confirmation: \"abgelehnt\"\n    }).then(res => {\n      console.log(\"Zollanmeldung abgelehnt\");\n      toggleShowRejectModal();\n      props.setReload(!props.reload); // Snackbar\n\n      props.setSnackbarSuccess(false);\n      props.setSnackbarMessage(\"Zollanmeldung abgelehnt.\");\n      props.handleOpenSnackbar();\n      setConfirmation(\"abgelehnt\");\n    }).catch(err => {\n      console.log(err);\n    });\n  } // Reject Modal State\n\n\n  const [rejectModal, setRejectModal] = useState(false);\n\n  function toggleShowRejectModal() {\n    setRejectModal(!rejectModal);\n  } // Confirm Modal State\n\n\n  const [confirmModal, setConfirmModal] = useState(false);\n\n  function toggleShowConfirmModal() {\n    setConfirmModal(!confirmModal);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MDBCard, {\n      children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n        children: [/*#__PURE__*/_jsxDEV(MDBContainer, {\n          children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n            children: /*#__PURE__*/_jsxDEV(MDBCol, {\n              children: /*#__PURE__*/_jsxDEV(MDBCardTitle, {\n                children: props.declarationData.transaction.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBContainer, {\n          children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n            children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n              children: /*#__PURE__*/_jsxDEV(MDBCardText, {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Versender\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this), props.declarationData.exporteur.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 19\n                }, this), props.declarationData.exporteur.street, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 19\n                }, this), props.declarationData.exporteur.city_code, \" \", props.declarationData.exporteur.city, \",\", \" \", props.declarationData.exporteur.country_code]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n              children: /*#__PURE__*/_jsxDEV(MDBCardText, {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Empf\\xE4nger / Anmelder\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this), props.declarationData.importeur.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 19\n                }, this), props.declarationData.importeur.street, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 19\n                }, this), props.declarationData.importeur.city_code, \" \", props.declarationData.importeur.city, \",\", \" \", props.declarationData.importeur.country_code]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Anzahl Dokumente: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), props.numberDocuments + 2, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Verifikation: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), verified, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Status der Annmeldung: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this), props.declarationData.status_confirmation]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n            children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n              md: \"8\",\n              lg: \"9\",\n              children: [verified == \"ausstehend\" && confirmation == \"ausstehend\" ? /*#__PURE__*/_jsxDEV(MuiAlert, {\n                severity: \"info\",\n                sx: {\n                  my: 1\n                },\n                children: \"Neue Anmeldung liegt vor. Verifikation durchf\\xFChren um Zollanmeldung zu pr\\xFCfen und zu best\\xE4tigen.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this) : null, verified == \"korrekt\" && confirmation == \"ausstehend\" ? /*#__PURE__*/_jsxDEV(MuiAlert, {\n                severity: \"success\",\n                sx: {\n                  my: 2\n                },\n                children: \"Korrektheit der Zollanmeldung wurde durch Blockchain verifiziert. Annahme der Zollanmeldung ist m\\xF6glich.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this) : null, verified == \"inkorrekt\" && confirmation == \"ausstehend\" ? /*#__PURE__*/_jsxDEV(MuiAlert, {\n                severity: \"error\",\n                sx: {\n                  my: 2\n                },\n                children: \"Daten stimmen nicht mit Blockchain \\xFCberein und wurden m\\xF6glicherweise manipuliert. Pr\\xFCfung erforderlich!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this) : null, confirmation == \"bestätigt\" ? /*#__PURE__*/_jsxDEV(MuiAlert, {\n                severity: \"success\",\n                sx: {\n                  my: 1\n                },\n                children: \"Zollanmeldung angenommen.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this) : null, confirmation == \"abgelehnt\" ? /*#__PURE__*/_jsxDEV(MuiAlert, {\n                severity: \"error\",\n                sx: {\n                  my: 1\n                },\n                children: \"Zollanmeldung abgelehnt.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n              md: \"4\",\n              lg: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"float-end\",\n                children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n                  onClick: () => handleVerification(),\n                  className: \"my-3\",\n                  children: [/*#__PURE__*/_jsxDEV(MDBIcon, {\n                    size: \"lg\",\n                    className: \"me-2\",\n                    fas: true,\n                    icon: \"fingerprint\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 21\n                  }, this), \"Daten verifizieren\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), confirmation == \"ausstehend\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: verified !== \"ausstehend\" ? /*#__PURE__*/_jsxDEV(MDBRow, {\n              children: [/*#__PURE__*/_jsxDEV(MDBBtn, {\n                className: \"mx-3 mb-3\",\n                color: \"success\",\n                style: {\n                  width: 300\n                },\n                onClick: toggleShowConfirmModal,\n                children: \"Anmeldung Best\\xE4tigen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n                color: \"danger\",\n                className: \"mx-3 mb-3\",\n                style: {\n                  width: 300\n                },\n                onClick: toggleShowRejectModal,\n                children: \"Anmeldung Ablehnen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(MDBRow, {\n              children: [/*#__PURE__*/_jsxDEV(MDBBtn, {\n                disabled: true,\n                className: \"mx-3 mb-3\",\n                color: \"success\",\n                style: {\n                  width: 300\n                },\n                onClick: toggleShowConfirmModal,\n                children: \"Anmeldung Best\\xE4tigen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n                disabled: true,\n                color: \"danger\",\n                className: \"mx-3 mb-3\",\n                style: {\n                  width: 300\n                },\n                onClick: toggleShowRejectModal,\n                children: \"Anmeldung Ablehnen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, this)\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBCardFooter, {\n          children: /*#__PURE__*/_jsxDEV(MDBRow, {\n            children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n              md: \"4\",\n              children: [\"Hinzugef\\xFCgt: \", props.declarationData.transaction.date_added]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n              md: \"4\",\n              children: [\"Zuletzt aktualisiert:\", \" \", props.declarationData.transaction.date_processed]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBModal, {\n      show: rejectModal,\n      setShow: setRejectModal,\n      tabIndex: \"-1\",\n      children: /*#__PURE__*/_jsxDEV(MDBModalDialog, {\n        children: /*#__PURE__*/_jsxDEV(MDBModalContent, {\n          children: [/*#__PURE__*/_jsxDEV(MDBModalHeader, {\n            children: [/*#__PURE__*/_jsxDEV(MDBModalTitle, {\n              children: \"Anmeldung ablehnen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n              className: \"btn-close\",\n              color: \"none\",\n              onClick: toggleShowRejectModal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBModalBody, {\n            children: [\"Wollen Sie die Zollanmeldung\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: props.declarationData.transaction.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this), \" wirklich ablehnen? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 25\n            }, this), \"Diese Auswahl l\\xE4sst sich nicht r\\xFCckg\\xE4ngig machen.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBModalFooter, {\n            children: [/*#__PURE__*/_jsxDEV(MDBBtn, {\n              color: \"danger\",\n              onClick: handleReject,\n              children: \"Ablehnen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n              outline: true,\n              color: \"danger\",\n              onClick: toggleShowRejectModal,\n              children: \"Abbrechen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBModal, {\n      show: confirmModal,\n      setShow: setConfirmModal,\n      tabIndex: \"-1\",\n      children: /*#__PURE__*/_jsxDEV(MDBModalDialog, {\n        children: /*#__PURE__*/_jsxDEV(MDBModalContent, {\n          children: [/*#__PURE__*/_jsxDEV(MDBModalHeader, {\n            children: [/*#__PURE__*/_jsxDEV(MDBModalTitle, {\n              children: \"Anmeldung annehmen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n              className: \"btn-close\",\n              color: \"none\",\n              onClick: toggleShowConfirmModal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBModalBody, {\n            children: [\"Wollen Sie die Zollanmeldung\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: props.declarationData.transaction.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), \" wirklich annehmen? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 25\n            }, this), \"Diese Auswahl l\\xE4sst sich nicht r\\xFCckg\\xE4ngig machen.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBModalFooter, {\n            children: [/*#__PURE__*/_jsxDEV(MDBBtn, {\n              color: \"success\",\n              onClick: handleConfirmation,\n              children: \"Annehmen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n              outline: true,\n              color: \"danger\",\n              onClick: toggleShowConfirmModal,\n              children: \"Abbrechen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ZollDocumentTransaction, \"e5mAcwdGtvwvg+3YiazcWU4ONpE=\", false, function () {\n  return [useAxiosPrivate];\n});\n\n_c = ZollDocumentTransaction;\nexport default ZollDocumentTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"ZollDocumentTransaction\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/ZollDocuments/ZollDocumentTransaction.jsx"],"names":["React","useEffect","useState","MDBBtn","MDBCard","MDBCardBody","MDBCardTitle","MDBCardFooter","MDBCardSubTitle","MDBCardText","MDBCol","MDBContainer","MDBRow","MDBPopover","MDBPopoverBody","MDBModal","MDBModalDialog","MDBModalContent","MDBModalHeader","MDBModalTitle","MDBModalBody","MDBModalFooter","MDBIcon","Link","getZollanmeldung","useAxiosPrivate","MuiAlert","ZollDocumentTransaction","props","axiosInstance","verified","setVerified","declarationData","status_verificiation","confirmation","setConfirmation","status_confirmation","abgleichBlockchain","_blockchain_zid","crypto","require","console","log","then","tx","zollwert","invoiceData","transport_costs","total_value","gesamtbetrag","lieferkosten","invoice","incoterms","lieferbedingung","exporteur","publickey","importeur","zoll","customs_office","anmelder","waehrung","currency","datum","issue_date","rechnungsposten","createHash","update","invoiceItem","digest","patch","id","handleCloseBackdrop","setSnackbarSuccess","setSnackbarMessage","handleOpenSnackbar","setReload","reload","catch","err","handleVerification","handleToggleBackdrop","blockchain_zid","res","handleConfirmation","toggleShowConfirmModal","handleReject","toggleShowRejectModal","rejectModal","setRejectModal","confirmModal","setConfirmModal","transaction","description","name","street","city_code","city","country_code","numberDocuments","my","width","date_added","date_processed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,MADF,EAEEC,OAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,aALF,EAMEC,eANF,EAOEC,WAPF,EAQEC,MARF,EASEC,YATF,EAUEC,MAVF,EAWEC,UAXF,EAYEC,cAZF,EAaEC,QAbF,EAcEC,cAdF,EAeEC,eAfF,EAgBEC,cAhBF,EAiBEC,aAjBF,EAkBEC,YAlBF,EAmBEC,cAnBF,EAoBEC,OApBF,QAqBO,kBArBP;AAsBA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AAEA,OAAOC,QAAP,MAAqB,qBAArB,C,CACA;;;;;AAEA,SAASC,uBAAT,CAAiCC,KAAjC,EAAwC;AAAA;;AACtC,QAAMC,aAAa,GAAGJ,eAAe,EAArC;AAEA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CACtC0B,KAAK,CAACI,eAAN,CAAsBC,oBADgB,CAAxC;AAIA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCjC,QAAQ,CAC9C0B,KAAK,CAACI,eAAN,CAAsBI,mBADwB,CAAhD;;AAIA,iBAAeC,kBAAf,CAAkCC,eAAlC,EAAmD;AACjD,QAAIC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBJ,eAAlC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACI,eAAlB;AAEA,UAAMR,gBAAgB,CAACc,eAAD,CAAhB,CAAiC;AAAjC,KACHK,IADG,CACGC,EAAD,IAAQ;AACZH,MAAAA,OAAO,CAACC,GAAR,CACE,eACEE,EAAE,CAAC,CAAD,CAAF,CAAMC,QADR,GAEE,IAFF,IAGGjB,KAAK,CAACkB,WAAN,CAAkBC,eAAlB,GAAoCnB,KAAK,CAACkB,WAAN,CAAkBE,WAHzD,CADF,EADY,CAOZ;;AACA,UACEJ,EAAE,CAAC,CAAD,CAAF,CAAMK,YAAN,IAAsBrB,KAAK,CAACkB,WAAN,CAAkBE,WAAxC,IACAJ,EAAE,CAAC,CAAD,CAAF,CAAMC,QAAN,IACEjB,KAAK,CAACkB,WAAN,CAAkBC,eAAlB,GAAoCnB,KAAK,CAACkB,WAAN,CAAkBE,WAFxD,IAGAJ,EAAE,CAAC,CAAD,CAAF,CAAMM,YAAN,IAAsBtB,KAAK,CAACI,eAAN,CAAsBmB,OAAtB,CAA8BJ,eAHpD,IAIAH,EAAE,CAAC,CAAD,CAAF,CAAMQ,SAAN,IAAmBxB,KAAK,CAACI,eAAN,CAAsBqB,eAJzC,IAKAT,EAAE,CAAC,CAAD,CAAF,CAAMU,SAAN,IAAmB1B,KAAK,CAACI,eAAN,CAAsBsB,SAAtB,CAAgCC,SALnD,IAMAX,EAAE,CAAC,CAAD,CAAF,CAAMY,SAAN,IAAmB5B,KAAK,CAACI,eAAN,CAAsBwB,SAAtB,CAAgCD,SANnD,IAOAX,EAAE,CAAC,CAAD,CAAF,CAAMa,IAAN,IAAc7B,KAAK,CAACI,eAAN,CAAsB0B,cAAtB,CAAqCH,SAPnD,IAQAX,EAAE,CAAC,CAAD,CAAF,CAAMe,QAAN,IAAkB/B,KAAK,CAACI,eAAN,CAAsBwB,SAAtB,CAAgCD,SARlD,IASAX,EAAE,CAAC,CAAD,CAAF,CAAMK,YAAN,IAAsBrB,KAAK,CAACkB,WAAN,CAAkBE,WATxC,IAUAJ,EAAE,CAAC,CAAD,CAAF,CAAMgB,QAAN,IAAkBhC,KAAK,CAACI,eAAN,CAAsBmB,OAAtB,CAA8BU,QAVhD,IAWAjB,EAAE,CAAC,CAAD,CAAF,CAAMU,SAAN,IAAmB1B,KAAK,CAACI,eAAN,CAAsBsB,SAAtB,CAAgCC,SAXnD,IAYAX,EAAE,CAAC,CAAD,CAAF,CAAMY,SAAN,IAAmB5B,KAAK,CAACI,eAAN,CAAsBwB,SAAtB,CAAgCD,SAZnD,IAaAX,EAAE,CAAC,CAAD,CAAF,CAAMkB,KAAN,IAAelC,KAAK,CAACI,eAAN,CAAsBmB,OAAtB,CAA8BY,UAb7C,IAcAnB,EAAE,CAAC,CAAD,CAAF,CAAMoB,eAAN,IACEzB,MAAM,CACH0B,UADH,CACc,QADd,EAEGC,MAFH,CAEUtC,KAAK,CAACkB,WAAN,CAAkBqB,WAF5B,EAGGC,MAHH,CAGU,KAHV,CAfF,IAmBAxB,EAAE,CAAC,CAAD,CAAF,CAAMM,YAAN,IAAsBtB,KAAK,CAACI,eAAN,CAAsBmB,OAAtB,CAA8BJ,eApBtD,EAqBE;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EADA,CAEA;;AACAb,QAAAA,aAAa,CAACwC,KAAd,CACE,sBAAsBzC,KAAK,CAACI,eAAN,CAAsBsC,EAA5C,GAAiD,GADnD,EAEE;AAAErC,UAAAA,oBAAoB,EAAE;AAAxB,SAFF;AAIAL,QAAAA,KAAK,CAAC2C,mBAAN;AACA3C,QAAAA,KAAK,CAAC4C,kBAAN,CAAyB,IAAzB;AACA5C,QAAAA,KAAK,CAAC6C,kBAAN,CAAyB,0CAAzB;AACA7C,QAAAA,KAAK,CAAC8C,kBAAN;AACA3C,QAAAA,WAAW,CAAC,SAAD,CAAX;AAEAH,QAAAA,KAAK,CAAC+C,SAAN,CAAgB,CAAC/C,KAAK,CAACgD,MAAvB;AACA,eAAO,IAAP;AACD,OApCD,MAoCO;AACLnC,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACAb,QAAAA,aAAa,CAACwC,KAAd,CACE,sBAAsBzC,KAAK,CAACI,eAAN,CAAsBsC,EAA5C,GAAiD,GADnD,EAEE;AAAErC,UAAAA,oBAAoB,EAAE;AAAxB,SAFF;AAIAL,QAAAA,KAAK,CAAC2C,mBAAN;AACA3C,QAAAA,KAAK,CAAC4C,kBAAN,CAAyB,KAAzB;AACA5C,QAAAA,KAAK,CAAC6C,kBAAN,CACE,sDADF;AAGA7C,QAAAA,KAAK,CAAC8C,kBAAN;AACA3C,QAAAA,WAAW,CAAC,WAAD,CAAX;AAEAH,QAAAA,KAAK,CAAC+C,SAAN,CAAgB,CAAC/C,KAAK,CAACgD,MAAvB;AACA,eAAO,KAAP;AACD;AACF,KA9DG,EA+DHC,KA/DG,CA+DIC,GAAD,IAAS;AACdrC,MAAAA,OAAO,CAACC,GAAR,CAAYoC,GAAZ;AACAlD,MAAAA,KAAK,CAAC2C,mBAAN;AACA3C,MAAAA,KAAK,CAAC4C,kBAAN,CAAyB,KAAzB;AACA5C,MAAAA,KAAK,CAAC6C,kBAAN,CAAyB,oCAAzB;AACA,aAAO,KAAP;AACD,KArEG,CAAN;AAsED;;AAED,iBAAeM,kBAAf,GAAoC;AAClC;AACAnD,IAAAA,KAAK,CAACoD,oBAAN;AACA3C,IAAAA,kBAAkB,CAACT,KAAK,CAACI,eAAN,CAAsBiD,cAAvB,CAAlB,CAAyDtC,IAAzD,CAA+DuC,GAAD,IAAS;AACrEzC,MAAAA,OAAO,CAACC,GAAR,CAAYwC,GAAZ;AACD,KAFD;AAGD;;AAED,WAASC,kBAAT,GAA8B;AAC5BtD,IAAAA,aAAa,CACVwC,KADH,CACS,sBAAsBzC,KAAK,CAACI,eAAN,CAAsBsC,EAA5C,GAAiD,GAD1D,EAC+D;AAC3DlC,MAAAA,mBAAmB,EAAE;AADsC,KAD/D,EAIGO,IAJH,CAISuC,GAAD,IAAS;AACbzC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA0C,MAAAA,sBAAsB;AACtBxD,MAAAA,KAAK,CAAC+C,SAAN,CAAgB,CAAC/C,KAAK,CAACgD,MAAvB,EAHa,CAIb;;AACAhD,MAAAA,KAAK,CAAC4C,kBAAN,CAAyB,IAAzB;AACA5C,MAAAA,KAAK,CAAC6C,kBAAN,CAAyB,0BAAzB;AACA7C,MAAAA,KAAK,CAAC8C,kBAAN;AACAvC,MAAAA,eAAe,CAAC,WAAD,CAAf;AACD,KAbH,EAcG0C,KAdH,CAcUC,GAAD,IAAS;AACdrC,MAAAA,OAAO,CAACC,GAAR,CAAYoC,GAAZ;AACD,KAhBH;AAiBD;;AAED,WAASO,YAAT,GAAwB;AACtBxD,IAAAA,aAAa,CACVwC,KADH,CACS,sBAAsBzC,KAAK,CAACI,eAAN,CAAsBsC,EAA5C,GAAiD,GAD1D,EAC+D;AAC3DlC,MAAAA,mBAAmB,EAAE;AADsC,KAD/D,EAIGO,IAJH,CAISuC,GAAD,IAAS;AACbzC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA4C,MAAAA,qBAAqB;AACrB1D,MAAAA,KAAK,CAAC+C,SAAN,CAAgB,CAAC/C,KAAK,CAACgD,MAAvB,EAHa,CAIb;;AACAhD,MAAAA,KAAK,CAAC4C,kBAAN,CAAyB,KAAzB;AACA5C,MAAAA,KAAK,CAAC6C,kBAAN,CAAyB,0BAAzB;AACA7C,MAAAA,KAAK,CAAC8C,kBAAN;AACAvC,MAAAA,eAAe,CAAC,WAAD,CAAf;AACD,KAbH,EAcG0C,KAdH,CAcUC,GAAD,IAAS;AACdrC,MAAAA,OAAO,CAACC,GAAR,CAAYoC,GAAZ;AACD,KAhBH;AAiBD,GAtIqC,CAwItC;;;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCtF,QAAQ,CAAC,KAAD,CAA9C;;AAEA,WAASoF,qBAAT,GAAiC;AAC/BE,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACD,GA7IqC,CA+ItC;;;AACA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCxF,QAAQ,CAAC,KAAD,CAAhD;;AAEA,WAASkF,sBAAT,GAAkC;AAChCM,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,OAAD;AAAA,6BACE,QAAC,WAAD;AAAA,gCACE,QAAC,YAAD;AAAA,kCACE,QAAC,MAAD;AAAA,mCACE,QAAC,MAAD;AAAA,qCACE,QAAC,YAAD;AAAA,0BACG7D,KAAK,CAACI,eAAN,CAAsB2D,WAAtB,CAAkCC;AADrC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,YAAD;AAAA,kCACE,QAAC,MAAD;AAAA,oCACE,QAAC,MAAD;AAAA,qCACE,QAAC,WAAD;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA,wBAFF,EAGGhE,KAAK,CAACI,eAAN,CAAsBsB,SAAtB,CAAgCuC,IAHnC,eAIE;AAAA;AAAA;AAAA;AAAA,wBAJF,EAKGjE,KAAK,CAACI,eAAN,CAAsBsB,SAAtB,CAAgCwC,MALnC,eAME;AAAA;AAAA;AAAA;AAAA,wBANF,EAOGlE,KAAK,CAACI,eAAN,CAAsBsB,SAAtB,CAAgCyC,SAPnC,EAO8C,GAP9C,EAQGnE,KAAK,CAACI,eAAN,CAAsBsB,SAAtB,CAAgC0C,IARnC,OAQ0C,GAR1C,EASGpE,KAAK,CAACI,eAAN,CAAsBsB,SAAtB,CAAgC2C,YATnC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAcE,QAAC,MAAD;AAAA,qCACE,QAAC,WAAD;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA,wBAFF,EAGGrE,KAAK,CAACI,eAAN,CAAsBwB,SAAtB,CAAgCqC,IAHnC,eAIE;AAAA;AAAA;AAAA;AAAA,wBAJF,EAKGjE,KAAK,CAACI,eAAN,CAAsBwB,SAAtB,CAAgCsC,MALnC,eAME;AAAA;AAAA;AAAA;AAAA,wBANF,EAOGlE,KAAK,CAACI,eAAN,CAAsBwB,SAAtB,CAAgCuC,SAPnC,EAO8C,GAP9C,EAQGnE,KAAK,CAACI,eAAN,CAAsBwB,SAAtB,CAAgCwC,IARnC,OAQ0C,GAR1C,EASGpE,KAAK,CAACI,eAAN,CAAsBwB,SAAtB,CAAgCyC,YATnC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAdF,eA2BE,QAAC,MAAD;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAGGrE,KAAK,CAACsE,eAAN,GAAwB,CAH3B,eAIE;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE;AAAA;AAAA;AAAA;AAAA,sBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,EAQGpE,QARH,eASE;AAAA;AAAA;AAAA;AAAA,sBATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF,EAWGF,KAAK,CAACI,eAAN,CAAsBI,mBAXzB;AAAA;AAAA;AAAA;AAAA;AAAA,oBA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eA0CE;AAAA;AAAA;AAAA;AAAA,kBA1CF,eA2CE,QAAC,MAAD;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,EAAE,EAAC,GAAX;AAAe,cAAA,EAAE,EAAC,GAAlB;AAAA,yBACGN,QAAQ,IAAI,YAAZ,IAA4BI,YAAY,IAAI,YAA5C,gBACC,QAAC,QAAD;AAAU,gBAAA,QAAQ,EAAC,MAAnB;AAA0B,gBAAA,EAAE,EAAE;AAAEiE,kBAAAA,EAAE,EAAE;AAAN,iBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,GAKG,IANN,EAOGrE,QAAQ,IAAI,SAAZ,IAAyBI,YAAY,IAAI,YAAzC,gBACC,QAAC,QAAD;AAAU,gBAAA,QAAQ,EAAC,SAAnB;AAA6B,gBAAA,EAAE,EAAE;AAAEiE,kBAAAA,EAAE,EAAE;AAAN,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,GAKG,IAZN,EAaGrE,QAAQ,IAAI,WAAZ,IAA2BI,YAAY,IAAI,YAA3C,gBACC,QAAC,QAAD;AAAU,gBAAA,QAAQ,EAAC,OAAnB;AAA2B,gBAAA,EAAE,EAAE;AAAEiE,kBAAAA,EAAE,EAAE;AAAN,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,GAKG,IAlBN,EAmBGjE,YAAY,IAAI,WAAhB,gBACC,QAAC,QAAD;AAAU,gBAAA,QAAQ,EAAC,SAAnB;AAA6B,gBAAA,EAAE,EAAE;AAAEiE,kBAAAA,EAAE,EAAE;AAAN,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,GAIG,IAvBN,EAwBGjE,YAAY,IAAI,WAAhB,gBACC,QAAC,QAAD;AAAU,gBAAA,QAAQ,EAAC,OAAnB;AAA2B,gBAAA,EAAE,EAAE;AAAEiE,kBAAAA,EAAE,EAAE;AAAN,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,GAIG,IA5BN;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eA+BE,QAAC,MAAD;AAAQ,cAAA,EAAE,EAAC,GAAX;AAAe,cAAA,EAAE,EAAC,GAAlB;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,WAAf;AAAA,uCAIE,QAAC,MAAD;AAAQ,kBAAA,OAAO,EAAE,MAAMpB,kBAAkB,EAAzC;AAA6C,kBAAA,SAAS,EAAC,MAAvD;AAAA,0CACE,QAAC,OAAD;AACE,oBAAA,IAAI,EAAC,IADP;AAEE,oBAAA,SAAS,EAAC,MAFZ;AAGE,oBAAA,GAAG,MAHL;AAIE,oBAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,0BADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3CF,EA4FG7C,YAAY,IAAI,YAAhB,iBACC;AAAA,sBACGJ,QAAQ,KAAK,YAAb,gBACC,QAAC,MAAD;AAAA,sCACE,QAAC,MAAD;AACE,gBAAA,SAAS,EAAC,WADZ;AAEE,gBAAA,KAAK,EAAC,SAFR;AAGE,gBAAA,KAAK,EAAE;AAAEsE,kBAAAA,KAAK,EAAE;AAAT,iBAHT;AAIE,gBAAA,OAAO,EAAEhB,sBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eASE,QAAC,MAAD;AACE,gBAAA,KAAK,EAAC,QADR;AAEE,gBAAA,SAAS,EAAC,WAFZ;AAGE,gBAAA,KAAK,EAAE;AAAEgB,kBAAAA,KAAK,EAAE;AAAT,iBAHT;AAIE,gBAAA,OAAO,EAAEd,qBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,gBAoBC,QAAC,MAAD;AAAA,sCACE,QAAC,MAAD;AACE,gBAAA,QAAQ,MADV;AAEE,gBAAA,SAAS,EAAC,WAFZ;AAGE,gBAAA,KAAK,EAAC,SAHR;AAIE,gBAAA,KAAK,EAAE;AAAEc,kBAAAA,KAAK,EAAE;AAAT,iBAJT;AAKE,gBAAA,OAAO,EAAEhB,sBALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAUE,QAAC,MAAD;AACE,gBAAA,QAAQ,MADV;AAEE,gBAAA,KAAK,EAAC,QAFR;AAGE,gBAAA,SAAS,EAAC,WAHZ;AAIE,gBAAA,KAAK,EAAE;AAAEgB,kBAAAA,KAAK,EAAE;AAAT,iBAJT;AAKE,gBAAA,OAAO,EAAEd,qBALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AArBJ,2BA7FJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAqJE,QAAC,aAAD;AAAA,iCACE,QAAC,MAAD;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,EAAE,EAAC,GAAX;AAAA,6CACgB1D,KAAK,CAACI,eAAN,CAAsB2D,WAAtB,CAAkCU,UADlD;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,MAAD;AAAQ,cAAA,EAAE,EAAC,GAAX;AAAA,kDACwB,GADxB,EAEGzE,KAAK,CAACI,eAAN,CAAsB2D,WAAtB,CAAkCW,cAFrC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBArJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAsKE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEf,WAAhB;AAA6B,MAAA,OAAO,EAAEC,cAAtC;AAAsD,MAAA,QAAQ,EAAC,IAA/D;AAAA,6BACE,QAAC,cAAD;AAAA,+BACE,QAAC,eAAD;AAAA,kCACE,QAAC,cAAD;AAAA,oCACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD;AACE,cAAA,SAAS,EAAC,WADZ;AAEE,cAAA,KAAK,EAAC,MAFR;AAGE,cAAA,OAAO,EAAEF;AAHX;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eASE,QAAC,YAAD;AAAA,uDAC+B,GAD/B,eAEE;AAAA,wBAAI1D,KAAK,CAACI,eAAN,CAAsB2D,WAAtB,CAAkCC;AAAtC;AAAA;AAAA;AAAA;AAAA,oBAFF,uCAGY;AAAA;AAAA;AAAA;AAAA,oBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,eAgBE,QAAC,cAAD;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,QAAd;AAAuB,cAAA,OAAO,EAAEP,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,MAAD;AAAQ,cAAA,OAAO,MAAf;AAAgB,cAAA,KAAK,EAAC,QAAtB;AAA+B,cAAA,OAAO,EAAEC,qBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAtKF,eAqME,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEG,YAAhB;AAA8B,MAAA,OAAO,EAAEC,eAAvC;AAAwD,MAAA,QAAQ,EAAC,IAAjE;AAAA,6BACE,QAAC,cAAD;AAAA,+BACE,QAAC,eAAD;AAAA,kCACE,QAAC,cAAD;AAAA,oCACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD;AACE,cAAA,SAAS,EAAC,WADZ;AAEE,cAAA,KAAK,EAAC,MAFR;AAGE,cAAA,OAAO,EAAEN;AAHX;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eASE,QAAC,YAAD;AAAA,uDAC+B,GAD/B,eAEE;AAAA,wBAAIxD,KAAK,CAACI,eAAN,CAAsB2D,WAAtB,CAAkCC;AAAtC;AAAA;AAAA;AAAA;AAAA,oBAFF,uCAGY;AAAA;AAAA;AAAA;AAAA,oBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,eAgBE,QAAC,cAAD;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAwB,cAAA,OAAO,EAAET,kBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,MAAD;AAAQ,cAAA,OAAO,MAAf;AAAgB,cAAA,KAAK,EAAC,QAAtB;AAA+B,cAAA,OAAO,EAAEC,sBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YArMF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqOD;;GA3XQzD,uB;UACeF,e;;;KADfE,uB;AA6XT,eAAeA,uBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardFooter,\n  MDBCardSubTitle,\n  MDBCardText,\n  MDBCol,\n  MDBContainer,\n  MDBRow,\n  MDBPopover,\n  MDBPopoverBody,\n  MDBModal,\n  MDBModalDialog,\n  MDBModalContent,\n  MDBModalHeader,\n  MDBModalTitle,\n  MDBModalBody,\n  MDBModalFooter,\n  MDBIcon,\n} from \"mdb-react-ui-kit\";\nimport { Link } from \"react-router-dom\";\nimport { getZollanmeldung } from \"../../Web3Client.js\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate.js\";\n\nimport MuiAlert from \"@mui/material/Alert\";\n// Snackbar Alert\n\nfunction ZollDocumentTransaction(props) {\n  const axiosInstance = useAxiosPrivate();\n\n  const [verified, setVerified] = useState(\n    props.declarationData.status_verificiation\n  );\n\n  const [confirmation, setConfirmation] = useState(\n    props.declarationData.status_confirmation\n  );\n\n  async function abgleichBlockchain(_blockchain_zid) {\n    var crypto = require(\"crypto\");\n    console.log(\"Zollanmeldung ID:\" + _blockchain_zid);\n    console.log(props.declarationData);\n\n    await getZollanmeldung(_blockchain_zid)//blockchain Transaktion\n      .then((tx) => {\n        console.log(\n          \"Zollwert: \" +\n            tx[0].zollwert +\n            \", \" +\n            (props.invoiceData.transport_costs + props.invoiceData.total_value)\n        );\n        //Abgleich Blockchain-Anwender\n        if (\n          tx[0].gesamtbetrag == props.invoiceData.total_value &&\n          tx[0].zollwert ==\n            props.invoiceData.transport_costs + props.invoiceData.total_value &&\n          tx[0].lieferkosten == props.declarationData.invoice.transport_costs &&\n          tx[0].incoterms == props.declarationData.lieferbedingung &&\n          tx[0].exporteur == props.declarationData.exporteur.publickey &&\n          tx[0].importeur == props.declarationData.importeur.publickey &&\n          tx[0].zoll == props.declarationData.customs_office.publickey &&\n          tx[0].anmelder == props.declarationData.importeur.publickey &&\n          tx[1].gesamtbetrag == props.invoiceData.total_value &&\n          tx[1].waehrung == props.declarationData.invoice.currency &&\n          tx[1].exporteur == props.declarationData.exporteur.publickey &&\n          tx[1].importeur == props.declarationData.importeur.publickey &&\n          tx[1].datum == props.declarationData.invoice.issue_date &&\n          tx[1].rechnungsposten ==\n            crypto\n              .createHash(\"sha512\")\n              .update(props.invoiceData.invoiceItem)\n              .digest(\"hex\") &&\n          tx[1].lieferkosten == props.declarationData.invoice.transport_costs\n        ) {\n          console.log(\"Verifikation: Daten sind korrekt\");\n          // props.setIsVerified(true);\n          axiosInstance.patch(\n            \"declaration_auth/\" + props.declarationData.id + \"/\",\n            { status_verificiation: \"korrekt\" }\n          );\n          props.handleCloseBackdrop();\n          props.setSnackbarSuccess(true);\n          props.setSnackbarMessage(\"Korrektheit der Daten wurde verifiziert.\");\n          props.handleOpenSnackbar();\n          setVerified(\"korrekt\");\n\n          props.setReload(!props.reload);\n          return true;\n        } else {\n          console.log(\"Verifikation: Fehler liegt vor\");\n          axiosInstance.patch(\n            \"declaration_auth/\" + props.declarationData.id + \"/\",\n            { status_verificiation: \"inkorrekt\" }\n          );\n          props.handleCloseBackdrop();\n          props.setSnackbarSuccess(false);\n          props.setSnackbarMessage(\n            \"Warnung: Daten stimmen nicht mit Blockchain überein.\"\n          );\n          props.handleOpenSnackbar();\n          setVerified(\"inkorrekt\");\n\n          props.setReload(!props.reload);\n          return false;\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        props.handleCloseBackdrop();\n        props.setSnackbarSuccess(false);\n        props.setSnackbarMessage(\"Fehler bei Verifikation der Daten.\");\n        return false;\n      });\n  }\n\n  async function handleVerification() {\n    //setIsVerified(true)\n    props.handleToggleBackdrop();\n    abgleichBlockchain(props.declarationData.blockchain_zid).then((res) => {\n      console.log(res);\n    });\n  }\n\n  function handleConfirmation() {\n    axiosInstance\n      .patch(\"declaration_auth/\" + props.declarationData.id + \"/\", {\n        status_confirmation: \"bestätigt\",\n      })\n      .then((res) => {\n        console.log(\"Zollanmeldung bestätigt\");\n        toggleShowConfirmModal();\n        props.setReload(!props.reload);\n        // Snackbar\n        props.setSnackbarSuccess(true);\n        props.setSnackbarMessage(\"Zollanmeldung bestätigt.\");\n        props.handleOpenSnackbar();\n        setConfirmation(\"bestätigt\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleReject() {\n    axiosInstance\n      .patch(\"declaration_auth/\" + props.declarationData.id + \"/\", {\n        status_confirmation: \"abgelehnt\",\n      })\n      .then((res) => {\n        console.log(\"Zollanmeldung abgelehnt\");\n        toggleShowRejectModal();\n        props.setReload(!props.reload);\n        // Snackbar\n        props.setSnackbarSuccess(false);\n        props.setSnackbarMessage(\"Zollanmeldung abgelehnt.\");\n        props.handleOpenSnackbar();\n        setConfirmation(\"abgelehnt\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // Reject Modal State\n  const [rejectModal, setRejectModal] = useState(false);\n\n  function toggleShowRejectModal() {\n    setRejectModal(!rejectModal);\n  }\n\n  // Confirm Modal State\n  const [confirmModal, setConfirmModal] = useState(false);\n\n  function toggleShowConfirmModal() {\n    setConfirmModal(!confirmModal);\n  }\n\n  return (\n    <div>\n      <MDBCard>\n        <MDBCardBody>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol>\n                <MDBCardTitle>\n                  {props.declarationData.transaction.description}\n                </MDBCardTitle>\n              </MDBCol>\n            </MDBRow>\n            <br />\n          </MDBContainer>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol>\n                <MDBCardText>\n                  <b>Versender</b>\n                  <br />\n                  {props.declarationData.exporteur.name}\n                  <br />\n                  {props.declarationData.exporteur.street}\n                  <br />\n                  {props.declarationData.exporteur.city_code}{\" \"}\n                  {props.declarationData.exporteur.city},{\" \"}\n                  {props.declarationData.exporteur.country_code}\n                </MDBCardText>\n              </MDBCol>\n              <MDBCol>\n                <MDBCardText>\n                  <b>Empfänger / Anmelder</b>\n                  <br />\n                  {props.declarationData.importeur.name}\n                  <br />\n                  {props.declarationData.importeur.street}\n                  <br />\n                  {props.declarationData.importeur.city_code}{\" \"}\n                  {props.declarationData.importeur.city},{\" \"}\n                  {props.declarationData.importeur.country_code}\n                </MDBCardText>\n              </MDBCol>\n              <MDBCol>\n                <b>Anzahl Dokumente: </b>\n                {/* +2 wegen Zollanmeldungs u. Rechnung */}\n                {props.numberDocuments + 2}\n                <br />\n                <br />\n                <b>Verifikation: </b>\n                {/* {props.declarationData.status_verificiation} */}\n                {verified}\n                <br />\n                <b>Status der Annmeldung: </b>\n                {props.declarationData.status_confirmation}\n              </MDBCol>\n            </MDBRow>\n            <br />\n            <MDBRow>\n              <MDBCol md=\"8\" lg=\"9\">\n                {verified == \"ausstehend\" && confirmation == \"ausstehend\" ? (\n                  <MuiAlert severity=\"info\" sx={{ my: 1 }}>\n                    Neue Anmeldung liegt vor. Verifikation durchführen um\n                    Zollanmeldung zu prüfen und zu bestätigen.\n                  </MuiAlert>\n                ) : null}\n                {verified == \"korrekt\" && confirmation == \"ausstehend\" ? (\n                  <MuiAlert severity=\"success\" sx={{ my: 2 }}>\n                    Korrektheit der Zollanmeldung wurde durch Blockchain\n                    verifiziert. Annahme der Zollanmeldung ist möglich.\n                  </MuiAlert>\n                ) : null}\n                {verified == \"inkorrekt\" && confirmation == \"ausstehend\" ? (\n                  <MuiAlert severity=\"error\" sx={{ my: 2 }}>\n                    Daten stimmen nicht mit Blockchain überein und wurden\n                    möglicherweise manipuliert. Prüfung erforderlich!\n                  </MuiAlert>\n                ) : null}\n                {confirmation == \"bestätigt\" ? (\n                  <MuiAlert severity=\"success\" sx={{ my: 1 }}>\n                    Zollanmeldung angenommen.\n                  </MuiAlert>\n                ) : null}\n                {confirmation == \"abgelehnt\" ? (\n                  <MuiAlert severity=\"error\" sx={{ my: 1 }}>\n                    Zollanmeldung abgelehnt.\n                  </MuiAlert>\n                ) : null}\n              </MDBCol>\n              <MDBCol md=\"4\" lg=\"3\">\n                <div className=\"float-end\">\n                  {/* {props.isVerified ? (\n                    <MDBBtn className=\"my-3\">Daten sind verifiziert</MDBBtn>\n                  ) : ( */}\n                  <MDBBtn onClick={() => handleVerification()} className=\"my-3\">\n                    <MDBIcon\n                      size=\"lg\"\n                      className=\"me-2\"\n                      fas\n                      icon=\"fingerprint\"\n                    />\n                    Daten verifizieren\n                  </MDBBtn>\n                  {/* )} */}\n                </div>\n              </MDBCol>\n            </MDBRow>\n            {confirmation == \"ausstehend\" && (\n              <>\n                {verified !== \"ausstehend\" ? (\n                  <MDBRow>\n                    <MDBBtn\n                      className=\"mx-3 mb-3\"\n                      color=\"success\"\n                      style={{ width: 300 }}\n                      onClick={toggleShowConfirmModal}\n                    >\n                      Anmeldung Bestätigen\n                    </MDBBtn>\n                    <MDBBtn\n                      color=\"danger\"\n                      className=\"mx-3 mb-3\"\n                      style={{ width: 300 }}\n                      onClick={toggleShowRejectModal}\n                    >\n                      Anmeldung Ablehnen\n                    </MDBBtn>\n                  </MDBRow>\n                ) : (\n                  <MDBRow>\n                    <MDBBtn\n                      disabled\n                      className=\"mx-3 mb-3\"\n                      color=\"success\"\n                      style={{ width: 300 }}\n                      onClick={toggleShowConfirmModal}\n                    >\n                      Anmeldung Bestätigen\n                    </MDBBtn>\n                    <MDBBtn\n                      disabled\n                      color=\"danger\"\n                      className=\"mx-3 mb-3\"\n                      style={{ width: 300 }}\n                      onClick={toggleShowRejectModal}\n                    >\n                      Anmeldung Ablehnen\n                    </MDBBtn>\n                  </MDBRow>\n                )}\n              </>\n            )}\n          </MDBContainer>\n          <MDBCardFooter>\n            <MDBRow>\n              <MDBCol md=\"4\">\n                Hinzugefügt: {props.declarationData.transaction.date_added}\n              </MDBCol>\n              <MDBCol md=\"4\">\n                Zuletzt aktualisiert:{\" \"}\n                {props.declarationData.transaction.date_processed}\n              </MDBCol>\n            </MDBRow>\n          </MDBCardFooter>\n        </MDBCardBody>\n      </MDBCard>\n\n      {/* Modal Anmeldung ablehnen */}\n      <MDBModal show={rejectModal} setShow={setRejectModal} tabIndex=\"-1\">\n        <MDBModalDialog>\n          <MDBModalContent>\n            <MDBModalHeader>\n              <MDBModalTitle>Anmeldung ablehnen</MDBModalTitle>\n              <MDBBtn\n                className=\"btn-close\"\n                color=\"none\"\n                onClick={toggleShowRejectModal}\n              ></MDBBtn>\n            </MDBModalHeader>\n            <MDBModalBody>\n              Wollen Sie die Zollanmeldung{\" \"}\n              <i>{props.declarationData.transaction.description}</i> wirklich\n              ablehnen? <br />\n              Diese Auswahl lässt sich nicht rückgängig machen.\n            </MDBModalBody>\n\n            <MDBModalFooter>\n              <MDBBtn color=\"danger\" onClick={handleReject}>\n                Ablehnen\n              </MDBBtn>\n              <MDBBtn outline color=\"danger\" onClick={toggleShowRejectModal}>\n                Abbrechen\n              </MDBBtn>\n            </MDBModalFooter>\n          </MDBModalContent>\n        </MDBModalDialog>\n      </MDBModal>\n\n      {/* Modal Anmeldung annehmen */}\n      <MDBModal show={confirmModal} setShow={setConfirmModal} tabIndex=\"-1\">\n        <MDBModalDialog>\n          <MDBModalContent>\n            <MDBModalHeader>\n              <MDBModalTitle>Anmeldung annehmen</MDBModalTitle>\n              <MDBBtn\n                className=\"btn-close\"\n                color=\"none\"\n                onClick={toggleShowConfirmModal}\n              ></MDBBtn>\n            </MDBModalHeader>\n            <MDBModalBody>\n              Wollen Sie die Zollanmeldung{\" \"}\n              <i>{props.declarationData.transaction.description}</i> wirklich\n              annehmen? <br />\n              Diese Auswahl lässt sich nicht rückgängig machen.\n            </MDBModalBody>\n\n            <MDBModalFooter>\n              <MDBBtn color=\"success\" onClick={handleConfirmation}>\n                Annehmen\n              </MDBBtn>\n              <MDBBtn outline color=\"danger\" onClick={toggleShowConfirmModal}>\n                Abbrechen\n              </MDBBtn>\n            </MDBModalFooter>\n          </MDBModalContent>\n        </MDBModalDialog>\n      </MDBModal>\n    </div>\n  );\n}\n\nexport default ZollDocumentTransaction;\n"]},"metadata":{},"sourceType":"module"}