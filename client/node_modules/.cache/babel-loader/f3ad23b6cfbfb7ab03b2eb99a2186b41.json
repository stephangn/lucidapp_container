{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Test.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { MDBContainer, MDBBtn, MDBRow, MDBCol } from \"mdb-react-ui-kit\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport Box from \"@mui/material/Box\";\nimport { init, createRechnung, createZollanmeldung, getZollanmeldung } from \"../Web3Client\";\nimport { TableSortLabel } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Test() {\n  _s();\n\n  // Autocomplete Optionen\n  const options = [\"Option A\", \"Option B\"]; // Autocomplete Input State\n\n  const [inputValue, setInputValue] = React.useState({\n    autocomplete: \"\"\n  }); // State der Felder\n\n  const [fieldValue, setFieldValue] = React.useState({\n    select: \"\",\n    autocomplete: \"\",\n    fieldA: \"\",\n    fieldB: \"\"\n  }); // State über fehlende Inputs\n\n  const [inputMissingError, setInputMissingError] = React.useState({\n    select: false,\n    fieldA: false,\n    fieldB: false,\n    autocomplete: false\n  }); // State über falsche Inputs\n\n  const [inputWrongError, setInputWrongError] = React.useState({\n    fieldA: false,\n    fieldB: false\n  });\n\n  function rechnungErstellen() {\n    let total = 2;\n    createRechnung(total.toString(), \"0xbd4f99F9133149b9e29E0E2d9733aeBb41e1cB9f\", \"Eur\", \"10.12.15\", \"Rechnungsposten\", \"Transportkosten\").then(tx => {\n      console.log(\"Transaktion erfolgreich: \" + tx);\n    }).catch(err => {\n      console.log(\"Transaktion fehlgeschlagen: \" + \"  \" + err);\n    });\n  }\n\n  function zErstellen() {\n    createZollanmeldung(\"0xe24D91818F5F92B4969867A8164d4E27D4336a99\", 13, \"60300\", \"Muss heile sein\").then(tx => {\n      console.log(tx);\n      alert(\"Zollanmeldung klappt\");\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function zBestaetigen() {\n    getZollanmeldung(22).then(tx => {\n      console.log(tx[0]);\n      console.log(tx[1]);\n      alert(tx[0].gesamtbetrag);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function rBestaetigen() {} // FieldChange für Select und Zahlen-Inputfelder\n\n\n  function handleFieldChange(event) {\n    const name = event.target.name;\n    const value = event.target.value; // Validierung: nur Zahlen\n\n    if (isNaN(value)) {\n      setInputWrongError({ ...inputWrongError,\n        [name]: true\n      });\n    } else {\n      setInputWrongError({ ...inputWrongError,\n        [name]: false\n      });\n    }\n\n    setFieldValue({ ...fieldValue,\n      [name]: value\n    });\n    setInputMissingError({ ...inputMissingError,\n      [name]: false\n    });\n  } // Validierung auf Eingabe - hier nur Pflichtfelder\n\n\n  function handleSubmit() {\n    let errorObject = inputMissingError;\n\n    if (fieldValue.select === null || fieldValue.select == \"\") {\n      errorObject = { ...errorObject,\n        select: true\n      };\n    }\n\n    if (fieldValue.autocomplete === null || fieldValue.autocomplete == \"\") {\n      errorObject = { ...errorObject,\n        autocomplete: true\n      };\n    }\n\n    if (fieldValue.fieldA === null || fieldValue.fieldA == \"\") {\n      errorObject = { ...errorObject,\n        fieldA: true\n      };\n    }\n\n    if (fieldValue.fieldB === null || fieldValue.fieldB == \"\") {\n      errorObject = { ...errorObject,\n        fieldB: true\n      };\n    }\n\n    setInputMissingError(errorObject);\n    console.log(fieldValue);\n    return;\n  }\n\n  function handleSubmit2() {\n    rechnungErstellen();\n  }\n\n  function handleSubmit3() {\n    zErstellen();\n  }\n\n  function handleSubmit4() {\n    zBestaetigen();\n  }\n\n  function handleSubmit5() {\n    rBestaetigen();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Testgel\\xE4nde\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: `value: ${fieldValue.autocomplete !== null ? `'${fieldValue.autocomplete}'` : \"null\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: `inputValue: '${inputValue.autocomplete}'`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n        children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-simple-select-label\",\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              sx: {\n                minWidth: 120,\n                maxWidth: 300\n              },\n              name: \"select\",\n              labelId: \"demo-simple-select-label\",\n              id: \"demo-simple-select\",\n              value: fieldValue.select,\n              label: \"Select\",\n              error: inputMissingError.select,\n              onChange: event => handleFieldChange(event),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"Nichts\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 1,\n                children: \"Option 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 20,\n                children: \"Option 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 30,\n                children: \"Option 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), inputMissingError.select ? /*#__PURE__*/_jsxDEV(FormHelperText, {\n              error: true,\n              children: \"Pflichtfeld\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            value: fieldValue.autocomplete,\n            name: \"autocomplete\",\n            onChange: (event, newValue) => {\n              setFieldValue({ ...fieldValue,\n                autocomplete: newValue\n              });\n              setInputMissingError({ ...inputMissingError,\n                autocomplete: false\n              });\n            },\n            inputValue: inputValue.autocomplete,\n            onInputChange: (event, newInputValue) => {\n              setInputValue({ ...inputValue,\n                autocomplete: newInputValue\n              });\n            },\n            id: \"controllable-states-demo\",\n            options: options,\n            sx: {\n              width: 300\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              label: \"Option w\\xE4hlen\",\n              error: inputMissingError.autocomplete,\n              helperText: inputMissingError.autocomplete ? \"Pflichtfeld\" : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"fieldA\",\n            name: \"fieldA\",\n            label: \"Feld A\",\n            variant: \"outlined\",\n            error: inputMissingError.fieldA || inputWrongError.fieldA,\n            helperText: inputMissingError.fieldA ? \"Pflichtfeld\" : inputWrongError.fieldA ? \"Zahl eingeben\" : null,\n            onChange: event => handleFieldChange(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"fieldB\",\n            name: \"fieldB\",\n            label: \"Feld B\",\n            variant: \"outlined\",\n            error: inputMissingError.fieldB || inputWrongError.fieldB,\n            helperText: inputMissingError.fieldB ? \"Pflichtfeld\" : inputWrongError.fieldB ? \"Zahl eingeben\" : null,\n            onChange: event => handleFieldChange(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n      onClick: () => handleSubmit(),\n      color: \"primary\",\n      className: \"mt-4\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n      onClick: () => handleSubmit2(),\n      color: \"primary\",\n      className: \"mt-4\",\n      children: \"Rechnung\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n      onClick: () => handleSubmit3(),\n      color: \"primary\",\n      className: \"mt-4\",\n      children: \"Zollanmeldung\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n      onClick: () => handleSubmit4(),\n      color: \"primary\",\n      className: \"mt-4\",\n      children: \"Zollanmeldung best\\xE4tigen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n      onClick: () => handleSubmit5(),\n      color: \"primary\",\n      className: \"mt-4\",\n      children: \"Rechnung best\\xE4tigen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Test, \"oWGZJh5sY8kfA5STslMDAbFErS8=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Test.jsx"],"names":["React","useState","MDBContainer","MDBBtn","MDBRow","MDBCol","TextField","Autocomplete","InputLabel","MenuItem","FormControl","Select","SelectChangeEvent","FormHelperText","Box","init","createRechnung","createZollanmeldung","getZollanmeldung","TableSortLabel","Test","options","inputValue","setInputValue","autocomplete","fieldValue","setFieldValue","select","fieldA","fieldB","inputMissingError","setInputMissingError","inputWrongError","setInputWrongError","rechnungErstellen","total","toString","then","tx","console","log","catch","err","zErstellen","alert","zBestaetigen","gesamtbetrag","rBestaetigen","handleFieldChange","event","name","target","value","isNaN","handleSubmit","errorObject","handleSubmit2","handleSubmit3","handleSubmit4","handleSubmit5","minWidth","maxWidth","newValue","newInputValue","width","params"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { MDBContainer, MDBBtn, MDBRow, MDBCol } from \"mdb-react-ui-kit\";\n\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\n\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport Box from \"@mui/material/Box\";\nimport { init, createRechnung, createZollanmeldung, getZollanmeldung } from \"../Web3Client\";\nimport { TableSortLabel } from \"@mui/material\";\n\nfunction Test() {\n  // Autocomplete Optionen\n  const options = [\"Option A\", \"Option B\"];\n  // Autocomplete Input State\n  const [inputValue, setInputValue] = React.useState({ autocomplete: \"\" });\n\n  // State der Felder\n  const [fieldValue, setFieldValue] = React.useState({\n    select: \"\",\n    autocomplete: \"\",\n    fieldA: \"\",\n    fieldB: \"\",\n  });\n\n  // State über fehlende Inputs\n  const [inputMissingError, setInputMissingError] = React.useState({\n    select: false,\n    fieldA: false,\n    fieldB: false,\n    autocomplete: false,\n  });\n\n  // State über falsche Inputs\n  const [inputWrongError, setInputWrongError] = React.useState({\n    fieldA: false,\n    fieldB: false,\n  });\n\n  function rechnungErstellen(){\n    let total=2; \n  createRechnung(total.toString(), \"0xbd4f99F9133149b9e29E0E2d9733aeBb41e1cB9f\" , \"Eur\", \"10.12.15\", \"Rechnungsposten\", \"Transportkosten\")\n  .then((tx) => {\n    console.log(\"Transaktion erfolgreich: \" + tx);\n  })\n  .catch((err) => {\n    console.log(\"Transaktion fehlgeschlagen: \"+ \"  \" + err);\n  });\n}\n\nfunction zErstellen(){\n  createZollanmeldung(\"0xe24D91818F5F92B4969867A8164d4E27D4336a99\", 13, \"60300\", \"Muss heile sein\")\n  .then((tx) => {\n    console.log(tx);\n    alert(\"Zollanmeldung klappt\");\n  })\n  .catch((err) => {\n    console.log(err);\n  });\n}\n\nfunction zBestaetigen(){\n  getZollanmeldung(22)\n  .then((tx) => {\n    console.log(tx[0]);\n    console.log(tx[1]);\n    alert(tx[0].gesamtbetrag);\n  })\n  .catch((err) => {\n    console.log(err);\n  });\n}\n\nfunction rBestaetigen(){\n\n}\n  // FieldChange für Select und Zahlen-Inputfelder\n  function handleFieldChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    // Validierung: nur Zahlen\n    if (isNaN(value)) {\n      setInputWrongError({ ...inputWrongError, [name]: true });\n    } else {\n      setInputWrongError({ ...inputWrongError, [name]: false });\n    }\n\n    setFieldValue({ ...fieldValue, [name]: value });\n    setInputMissingError({ ...inputMissingError, [name]: false });\n  }\n\n  // Validierung auf Eingabe - hier nur Pflichtfelder\n  function handleSubmit() {\n    let errorObject = inputMissingError;\n\n    if (fieldValue.select === null || fieldValue.select == \"\") {\n      errorObject = { ...errorObject, select: true };\n    }\n\n    if (fieldValue.autocomplete === null || fieldValue.autocomplete == \"\") {\n      errorObject = { ...errorObject, autocomplete: true };\n    }\n    if (fieldValue.fieldA === null || fieldValue.fieldA == \"\") {\n      errorObject = { ...errorObject, fieldA: true };\n    }\n    if (fieldValue.fieldB === null || fieldValue.fieldB == \"\") {\n      errorObject = { ...errorObject, fieldB: true };\n    }\n\n    setInputMissingError(errorObject);\n    console.log(fieldValue);\n    return;\n  }\n  function handleSubmit2() {\n    rechnungErstellen();\n  }\n  function handleSubmit3() {\n    zErstellen();\n  }\n  function handleSubmit4() {\n    zBestaetigen();\n  }\n  function handleSubmit5() {\n    rBestaetigen();\n  }\n  return (\n    <div>\n      <h1>Testgelände</h1>\n      <div>\n        <div>{`value: ${\n          fieldValue.autocomplete !== null\n            ? `'${fieldValue.autocomplete}'`\n            : \"null\"\n        }`}</div>\n        <div>{`inputValue: '${inputValue.autocomplete}'`}</div>\n        <br />\n\n        <MDBRow>\n          <MDBCol>\n            <FormControl>\n              <InputLabel id=\"demo-simple-select-label\">Age</InputLabel>\n              <Select\n                sx={{ minWidth: 120, maxWidth: 300 }}\n                name=\"select\"\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={fieldValue.select}\n                label=\"Select\"\n                error={inputMissingError.select}\n                onChange={(event) => handleFieldChange(event)}\n              >\n                <MenuItem value=\"\">\n                  <em>Nichts</em>\n                </MenuItem>\n                <MenuItem value={1}>Option 1</MenuItem>\n                <MenuItem value={20}>Option 2</MenuItem>\n                <MenuItem value={30}>Option 3</MenuItem>\n              </Select>\n              {inputMissingError.select ? (\n                <FormHelperText error={true}>Pflichtfeld</FormHelperText>\n              ) : null}\n            </FormControl>\n          </MDBCol>\n          <MDBCol>\n            <Autocomplete\n              value={fieldValue.autocomplete}\n              name=\"autocomplete\"\n              onChange={(event, newValue) => {\n                setFieldValue({ ...fieldValue, autocomplete: newValue });\n                setInputMissingError({\n                  ...inputMissingError,\n                  autocomplete: false,\n                });\n              }}\n              inputValue={inputValue.autocomplete}\n              onInputChange={(event, newInputValue) => {\n                setInputValue({ ...inputValue, autocomplete: newInputValue });\n              }}\n              id=\"controllable-states-demo\"\n              options={options}\n              sx={{ width: 300 }}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Option wählen\"\n                  error={inputMissingError.autocomplete}\n                  helperText={\n                    inputMissingError.autocomplete ? \"Pflichtfeld\" : null\n                  }\n                />\n              )}\n            />\n          </MDBCol>\n          <MDBCol>\n            <TextField\n              id=\"fieldA\"\n              name=\"fieldA\"\n              label=\"Feld A\"\n              variant=\"outlined\"\n              error={inputMissingError.fieldA || inputWrongError.fieldA}\n              helperText={\n                inputMissingError.fieldA\n                  ? \"Pflichtfeld\"\n                  : inputWrongError.fieldA\n                  ? \"Zahl eingeben\"\n                  : null\n              }\n              onChange={(event) => handleFieldChange(event)}\n            />\n          </MDBCol>\n          <MDBCol>\n            <TextField\n              id=\"fieldB\"\n              name=\"fieldB\"\n              label=\"Feld B\"\n              variant=\"outlined\"\n              error={inputMissingError.fieldB || inputWrongError.fieldB}\n              helperText={\n                inputMissingError.fieldB\n                  ? \"Pflichtfeld\"\n                  : inputWrongError.fieldB\n                  ? \"Zahl eingeben\"\n                  : null\n              }\n              onChange={(event) => handleFieldChange(event)}\n            />\n          </MDBCol>\n        </MDBRow>\n      </div>\n\n      <MDBBtn onClick={() => handleSubmit()} color=\"primary\" className=\"mt-4\">\n        Submit\n      </MDBBtn>\n      <MDBBtn onClick={() => handleSubmit2()} color=\"primary\" className=\"mt-4\">\n        Rechnung\n      </MDBBtn>\n      <MDBBtn onClick={() => handleSubmit3()} color=\"primary\" className=\"mt-4\">\n        Zollanmeldung\n      </MDBBtn>\n      <MDBBtn onClick={() => handleSubmit4()} color=\"primary\" className=\"mt-4\">\n        Zollanmeldung bestätigen\n      </MDBBtn>\n      <MDBBtn onClick={() => handleSubmit5()} color=\"primary\" className=\"mt-4\">\n        Rechnung bestätigen\n      </MDBBtn>\n    </div>\n  );\n}\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}