{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Documents/DocumentCard.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBCardHeader, MDBCardFooter, MDBBtn } from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport CardModal from \"./CardModal\";\nimport useAuth from \"../../hooks/useAuth\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DocumentCard(props) {\n  _s();\n\n  const axiosInstance = useAxiosPrivate();\n  const {\n    auth\n  } = useAuth();\n  const [datei, setDatei] = useState([]);\n  let fileLink = null;\n  const {\n    showConfirmation,\n    setshowConfirmation\n  } = useState(false);\n  const author_company = props.author_company;\n  useEffect(() => {\n    //Abruf des Link zur Datei\n    axiosInstance.get(\"file/3\").then(res => {\n      setDatei(res.data);\n      fileLink = res.data.file;\n      console.log(author_company + auth.company);\n      console.log(props.confirmed);\n      setshowConfirmation(true);\n\n      if (props.confirmed == true) {\n        setshowConfirmation(false);\n        console.log(\"bereits best채tigt, confirm auf True\");\n      } else if (author_company == auth.company) {\n        console.log(\"Firmen sind ungleich- Confirm auf False\");\n      } else {\n        setshowConfirmation(true);\n        console.log(\"Confirm auf True\");\n      }\n    }); //Abruf des Link zur Datei\n  }, []);\n  useEffect(() => {}, []);\n\n  const confirmDocument = e => {\n    axiosInstance.update(\"invoice/\" + props.id, {\n      confirmed: true\n    });\n  }; // State f체r \"Dokument anzeigen\" Modal\n\n\n  const [showDocumentModal, setShowDocumentModal] = useState(false); // Funktion f체r Manipulation von Modal (als props weitergereicht)\n\n  function toggleShowDocumentModal() {\n    setShowDocumentModal(!showDocumentModal);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MDBCard, {\n      className: \"h-100\",\n      style: {\n        maxWidth: \"22rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MDBCardHeader, {\n        children: [\"Hochgeladen von: \", props.author, \" - \", props.author_company]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBCardBody, {\n        children: [/*#__PURE__*/_jsxDEV(MDBCardTitle, {\n          children: props.type + \" \" + \"(\" + props.documentDate + \")\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBCardText, {\n          children: props.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n          outline: true,\n          onClick: toggleShowDocumentModal,\n          children: \"Anzeigen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), showConfirmation ? /*#__PURE__*/_jsxDEV(MDBBtn, {\n          outline: true,\n          onClick: confirmDocument,\n          children: \"Freigeben\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n          outline: true,\n          onClick: toggleShowDocumentModal,\n          children: \"L\\xF6schen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBCardFooter, {\n        className: \"text-muted\",\n        children: [\"Hochgeladen am: Test: \", props.uploadDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardModal, {\n      basicModal: showDocumentModal,\n      setBasicModal: setShowDocumentModal,\n      toggleShow: toggleShowDocumentModal,\n      title: props.title,\n      description: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DocumentCard, \"y8U1KvEzDv1K3GiodZKLWKYHSkk=\", false, function () {\n  return [useAxiosPrivate, useAuth];\n});\n\n_c = DocumentCard;\nexport default DocumentCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DocumentCard\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Documents/DocumentCard.jsx"],"names":["React","useState","useEffect","MDBCard","MDBCardBody","MDBCardTitle","MDBCardText","MDBCardHeader","MDBCardFooter","MDBBtn","useAxiosPrivate","CardModal","useAuth","axios","DocumentCard","props","axiosInstance","auth","datei","setDatei","fileLink","showConfirmation","setshowConfirmation","author_company","get","then","res","data","file","console","log","company","confirmed","confirmDocument","e","update","id","showDocumentModal","setShowDocumentModal","toggleShowDocumentModal","maxWidth","author","type","documentDate","description","uploadDate","title"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport {\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardText,\n  MDBCardHeader,\n  MDBCardFooter,\n  MDBBtn,\n} from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport CardModal from \"./CardModal\";\nimport useAuth from \"../../hooks/useAuth\";\nimport axios from \"axios\";\n\nfunction DocumentCard(props) {\n\n  const axiosInstance = useAxiosPrivate();\n  const { auth } = useAuth();\n  const [datei, setDatei] = useState([]);\n  let fileLink = null;\n  const {showConfirmation, setshowConfirmation} = useState(false);\n  const author_company = props.author_company;\n\n  useEffect(() => {\n\n    //Abruf des Link zur Datei\n    axiosInstance.get(\"file/3\").then((res) => {\n      setDatei(res.data);\n      fileLink = res.data.file;\n    console.log(author_company + auth.company)\n    console.log(props.confirmed)\n    setshowConfirmation(true);\n\n    if (props.confirmed == true) {\n      setshowConfirmation(false);\n      console.log(\"bereits best채tigt, confirm auf True\")\n    } else if (author_company == auth.company) {\n        console.log(\"Firmen sind ungleich- Confirm auf False\")\n    } else {\n        setshowConfirmation(true);\n        console.log(\"Confirm auf True\")\n    }\n    });\n\n    \n    //Abruf des Link zur Datei\n  }, []);\n\n  useEffect(() => {\n\n    \n\n  }, []);\n\n  const confirmDocument = (e) => {\n    axiosInstance.update(\"invoice/\" + props.id, {\n      confirmed: true, \n    })\n  }\n\n  // State f체r \"Dokument anzeigen\" Modal\n  const [showDocumentModal, setShowDocumentModal] = useState(false);\n  // Funktion f체r Manipulation von Modal (als props weitergereicht)\n  function toggleShowDocumentModal() {\n    setShowDocumentModal(!showDocumentModal);\n  }\n  \n  return (\n    <>\n      <MDBCard className=\"h-100\" style={{ maxWidth: \"22rem\" }}>\n        <MDBCardHeader>Hochgeladen von: {props.author} - {props.author_company}</MDBCardHeader>\n        <MDBCardBody>\n          <MDBCardTitle>\n            {props.type + \" \" + \"(\" + props.documentDate + \")\"}\n          </MDBCardTitle>\n          <MDBCardText>{props.description}</MDBCardText>\n          <MDBBtn outline onClick={toggleShowDocumentModal}>\n            Anzeigen\n          </MDBBtn>\n      {showConfirmation ? <MDBBtn outline onClick={confirmDocument}>\n            Freigeben\n          </MDBBtn>\n          : <br/>\n      }\n\n          <MDBBtn outline onClick={toggleShowDocumentModal}>\n            L철schen\n          </MDBBtn>\n        </MDBCardBody>\n        <MDBCardFooter className=\"text-muted\">\n          Hochgeladen am: Test: {props.uploadDate}\n        </MDBCardFooter>\n      </MDBCard>\n      <CardModal\n        basicModal={showDocumentModal}\n        setBasicModal={setShowDocumentModal}\n        toggleShow={toggleShowDocumentModal}\n        title={props.title}\n        description={props.description}\n      />\n    </>\n  );\n}\n\nexport default DocumentCard;\n"]},"metadata":{},"sourceType":"module"}