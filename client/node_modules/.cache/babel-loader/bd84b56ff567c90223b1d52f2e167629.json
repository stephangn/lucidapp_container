{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Dashboard/NotifcationToast.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBCardHeader, MDBCardFooter, MDBBtn } from \"mdb-react-ui-kit\";\nimport Toast from \"react-bootstrap/Toast\";\nimport axiosInstance from \"../../axiosApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NotificationToast(props) {\n  _s();\n\n  var timestamp = new Date(props.alert.timestamp);\n  const [notificationText, setNotificationText] = useState(\"\");\n  const [notificationObject, setNotificationObject] = useState(\"\");\n  const [showB, setShowB] = useState(true);\n\n  const toggleShowB = () => setShowB(!showB);\n\n  useEffect(() => {\n    var _props$alert, _props$alert3;\n\n    console.log(props.alert.target_content_type);\n\n    if (((_props$alert = props.alert) === null || _props$alert === void 0 ? void 0 : _props$alert.target_content_type) == \"10\") {\n      var _props$alert2;\n\n      setNotificationText((_props$alert2 = props.alert) === null || _props$alert2 === void 0 ? void 0 : _props$alert2.description);\n      setNotificationObject(\"Partnerschaftsanfrage\");\n    } else if (((_props$alert3 = props.alert) === null || _props$alert3 === void 0 ? void 0 : _props$alert3.target_content_type) == \"11\") {\n      var _props$alert4;\n\n      const text = (_props$alert4 = props.alert) === null || _props$alert4 === void 0 ? void 0 : _props$alert4.description;\n      setNotificationText(text);\n      setNotificationObject(`Auftrags-ID ${props.alert.target_object_id}`);\n    } else {\n      var _props$alert5;\n\n      const text = \"sonstige Benachrichtigung\";\n      setNotificationText((_props$alert5 = props.alert) === null || _props$alert5 === void 0 ? void 0 : _props$alert5.description);\n      setNotificationObject(\"Allgemeine Benachrichtigung\");\n    }\n  }, [alert]);\n\n  const markasread = () => {\n    var _props$alerts;\n\n    return axiosInstance.patch(\"/alerts/\" + ((_props$alerts = props.alerts) === null || _props$alerts === void 0 ? void 0 : _props$alerts.id), {\n      \"unread\": false\n    }).then(res => {}).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Toast, {\n    className: \"mb-2\",\n    bg: \"light\",\n    style: {\n      width: \"100%\"\n    },\n    onClose: toggleShowB,\n    show: showB,\n    children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        className: \"me-auto\",\n        children: notificationObject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: timestamp.toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n      children: notificationText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NotificationToast, \"34r4IAYPqr87ZvDEB4UsNZ4MoRc=\");\n\n_c = NotificationToast;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationToast\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Dashboard/NotifcationToast.jsx"],"names":["React","useState","useEffect","MDBCard","MDBCardBody","MDBCardTitle","MDBCardText","MDBCardHeader","MDBCardFooter","MDBBtn","Toast","axiosInstance","NotificationToast","props","timestamp","Date","alert","notificationText","setNotificationText","notificationObject","setNotificationObject","showB","setShowB","toggleShowB","console","log","target_content_type","description","text","target_object_id","markasread","patch","alerts","id","then","res","catch","err","width","toLocaleString"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport {\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardText,\n  MDBCardHeader,\n  MDBCardFooter,\n  MDBBtn,\n} from \"mdb-react-ui-kit\";\nimport Toast from \"react-bootstrap/Toast\";\nimport axiosInstance from \"../../axiosApi\";\n\nexport default function NotificationToast(props) {\n    var timestamp = new Date(props.alert.timestamp)\n    const [notificationText, setNotificationText] = useState(\"\")\n    const [notificationObject, setNotificationObject] = useState(\"\")\n\n    const [showB, setShowB] = useState(true);\n  \n    const toggleShowB = () => setShowB(!showB);\n\n    useEffect(() =>{\n        console.log(props.alert.target_content_type)\n        if (props.alert?.target_content_type==\"10\") {\n            setNotificationText(props.alert?.description)\n            setNotificationObject(\"Partnerschaftsanfrage\")\n        } else if (props.alert?.target_content_type==\"11\"){\n            const text= props.alert?.description\n            setNotificationText(text)\n            setNotificationObject(`Auftrags-ID ${props.alert.target_object_id}`)\n\n        } else {\n            const text = \"sonstige Benachrichtigung\"\n            setNotificationText(props.alert?.description)\n            setNotificationObject(\"Allgemeine Benachrichtigung\")\n        }\n    }, [alert])\n\n    const markasread = () => (\n      axiosInstance.patch(\"/alerts/\" + props.alerts?.id,{\n        \"unread\":false\n      }).then((res) => {\n\n      }).catch((err) => {\n        console.log(err)\n      })\n      \n\n    )\n\n\n    return (\n    <Toast\n        className=\"mb-2\"\n        bg=\"light\"\n        style={{ width: \"100%\" }}\n        onClose={toggleShowB} \n        show={showB}\n      >\n        <Toast.Header>\n          <strong className=\"me-auto\">{notificationObject}</strong>\n          <small>{timestamp.toLocaleString()}</small>\n        </Toast.Header>\n        <Toast.Body>\n          {notificationText}\n        </Toast.Body>\n      </Toast>\n\n\n\n    )\n}"]},"metadata":{},"sourceType":"module"}