{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Transactions.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./css/LoadingSpinner.css\";\nimport { MDBBtn, MDBContainer, MDBCol, MDBRow, MDBIcon, MDBSpinner } from \"mdb-react-ui-kit\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport Transaction from \"../components/Transactions/Transaction\";\nimport { useParams } from \"react-router-dom\";\nimport TransactionModal from \"../components/Transactions/TransactionModal\";\nimport Form from \"react-bootstrap/Form\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport { TextRotateUpRounded } from \"@mui/icons-material\"; // Snackbar-Alert\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef(_c = function Alert(props, ref) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Alert;\n\nfunction Transactions() {\n  _s();\n\n  var _partnership$partner;\n\n  const [transactionsData, setTransactionsData] = useState([]);\n  const [documentsData, setDocumentsData] = useState([]);\n  const [declarationData, setDeclarationData] = useState([]);\n  const [loaded, setLoaded] = useState(false); // Reload-State: DB-Call wird mittels useEffect wiederholt, sobald\n  // ein neuer Auftrag hinzugefügt wurde\n\n  const [reload, setreload] = useState(false); // State für Ladeanimation\n\n  const [isLoading, setIsLoading] = useState(true);\n  const axiosInstance = useAxiosPrivate();\n  const [isFilterView, setIsFilterView] = useState(false);\n  const [partnership, setPartnership] = useState();\n  const {\n    partnershipID\n  } = useParams();\n  useEffect(async () => {\n    var link;\n\n    if (partnershipID) {\n      link = \"transactions/?partnership=\" + partnershipID;\n      setIsFilterView(true);\n      await axiosInstance.get(\"partnership/\" + partnershipID + \"/\").then(res => {\n        setPartnership(res.data);\n      });\n    } else {\n      link = \"transactions/\";\n    }\n\n    axiosInstance.get(link).then(res => {\n      // Daten werden erst sortiert nach \"dateUpdatedDesc\"\n      // und danach im State gespeichert\n      const initialSort = [].concat(res.data).sort((a, b) => a.timestamp_added > b.timestamp_added ? -1 : 1);\n      setTransactionsData(initialSort);\n    });\n    setIsLoading(false);\n  }, [reload]);\n  useLocation(); // Dokumente abrufen\n\n  useEffect(() => {\n    axiosInstance.get(\"documents/\").then(res => {\n      setDocumentsData(res.data);\n    });\n  }, []); // Zollanmeldungen abrufen\n\n  useEffect(() => {\n    axiosInstance.get(\"declaration/\").then(res => {\n      setDeclarationData(res.data);\n      console.log(res.data);\n    });\n  }, []); // Sortieralgorithmen\n\n  function sortDescriptionAsc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.description.toUpperCase() > b.description.toUpperCase() ? -1 : 1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDescriptionDesc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.description.toUpperCase() > b.description.toUpperCase() ? 1 : -1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedAsc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.timestamp_added > b.timestamp_added ? 1 : -1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedDesc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.timestamp_added > b.timestamp_added ? -1 : 1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedAsc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.timestamp_processed > b.timestamp_processed ? 1 : -1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedDesc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.timestamp_processed > b.timestamp_processed ? -1 : 1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortTransactions(event) {\n    if (event.target.value === \"DescriptionAsc\") {\n      sortDescriptionAsc();\n      return;\n    }\n\n    if (event.target.value === \"DescriptionDesc\") {\n      sortDescriptionDesc();\n      return;\n    }\n\n    if (event.target.value === \"UpdatedAsc\") {\n      sortDateUpdatedAsc();\n      return;\n    }\n\n    if (event.target.value === \"UpdatedDesc\") {\n      sortDateUpdatedDesc();\n      return;\n    }\n\n    if (event.target.value === \"AddedAsc\") {\n      sortDateAddedAsc();\n      return;\n    }\n\n    if (event.target.value === \"AddedDesc\") {\n      sortDateAddedDesc();\n      return;\n    }\n  } // Snackbar-Alert Rückmeldung\n  // State: Geöffnet (true) / Geschlossen (false)\n\n\n  const [openSnackbar, setOpenSnackbar] = useState(false); // State: Succcess (true) / Error (false)\n\n  const [snackbarSuccess, setSnackbarSuccess] = useState(true); // State: Snackbar Nachricht\n\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\"); // Öffnen der Snackbar\n\n  const handleOpenSnackbar = () => {\n    setOpenSnackbar(true);\n  }; // Schließen der Snackbar\n\n\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenSnackbar(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loadingSpinner\",\n      children: /*#__PURE__*/_jsxDEV(MDBSpinner, {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"L\\xE4dt..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MDBContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Auftr\\xE4ge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), isFilterView && /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Daten sind gefiltert \", partnership === null || partnership === void 0 ? void 0 : (_partnership$partner = partnership.partner) === null || _partnership$partner === void 0 ? void 0 : _partnership$partner.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"my-3 navbar navbar-expand-lg navbar-light bg-light\",\n          children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(MDBRow, {\n                children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n                    style: {\n                      width: 270\n                    },\n                    className: \"me-3\",\n                    onChange: event => sortTransactions(event),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"UpdatedDesc\",\n                      children: \"Zuletzt ge\\xE4ndert absteigend \\uD83E\\uDC17\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"UpdatedAsc\",\n                      children: \"Zuletzt ge\\xE4ndert aufsteigend \\uD83E\\uDC15\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"DescriptionDesc\",\n                      children: \"Beschreibung absteigend \\uD83E\\uDC17\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"DescriptionAsc\",\n                      children: \"Beschreibung aufsteigend \\uD83E\\uDC15\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"AddedDesc\",\n                      children: \"Hinzugef\\xFCgt am absteigend \\uD83E\\uDC17\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"AddedAsc\",\n                      children: \"Hinzugef\\xFCgt am aufsteigend \\uD83E\\uDC15\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 23\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mt-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: [transactionsData.length, \" Auftr\\xE4ge\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 238,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TransactionModal, {\n              setreload: setreload,\n              reload: reload,\n              handleOpenSnackbar: handleOpenSnackbar,\n              handleCloseSnackbar: handleCloseSnackbar,\n              setSnackbarSuccess: setSnackbarSuccess,\n              setSnackbarMessage: setSnackbarMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), transactionsData.map(transactionData => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Transaction, {\n            id: transactionData.id,\n            title: transactionData.description,\n            added: transactionData.date_added,\n            exportAddress: transactionData.partnership.partner.name,\n            exportStreet: transactionData.partnership.partner.street,\n            exportCity: transactionData.partnership.partner.city,\n            exportCountry: transactionData.partnership.partner.country_code,\n            importAddress: transactionData.importAddress,\n            importStreet: transactionData.importStreet,\n            importCity: transactionData.importCity,\n            importCountry: transactionData.importCountry,\n            stakeholderCount: transactionData.stakeholderCount,\n            lastChange: transactionData.date_processed,\n            status: transactionData.status,\n            importeur: transactionData.importeur,\n            timestamp_added: transactionData.timestamp_added,\n            timestamp_processed: transactionData.timestamp_processed,\n            documentsData: documentsData,\n            declarationData: declarationData\n          }, transactionData.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"right\"\n        },\n        open: openSnackbar,\n        autoHideDuration: 6000,\n        onClose: handleCloseSnackbar,\n        className: \"mt-5\",\n        children: snackbarSuccess == true ? /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseSnackbar,\n          severity: \"success\",\n          sx: {\n            width: \"100%\"\n          },\n          children: snackbarMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseSnackbar,\n          severity: \"error\",\n          sx: {\n            width: \"100%\"\n          },\n          children: snackbarMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Transactions, \"mzcleqIuRhYI+ufycEEdCw9xO3g=\", true, function () {\n  return [useAxiosPrivate, useParams];\n});\n\n_c3 = Transactions;\nexport default Transactions;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"Transactions\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Transactions.jsx"],"names":["React","useState","useEffect","MDBBtn","MDBContainer","MDBCol","MDBRow","MDBIcon","MDBSpinner","Snackbar","MuiAlert","Transaction","useParams","TransactionModal","Form","useAxiosPrivate","TextRotateUpRounded","Alert","forwardRef","props","ref","Transactions","transactionsData","setTransactionsData","documentsData","setDocumentsData","declarationData","setDeclarationData","loaded","setLoaded","reload","setreload","isLoading","setIsLoading","axiosInstance","isFilterView","setIsFilterView","partnership","setPartnership","partnershipID","link","get","then","res","data","initialSort","concat","sort","a","b","timestamp_added","useLocation","console","log","sortDescriptionAsc","myData","description","toUpperCase","sortDescriptionDesc","sortDateAddedAsc","sortDateAddedDesc","sortDateUpdatedAsc","timestamp_processed","sortDateUpdatedDesc","sortTransactions","event","target","value","openSnackbar","setOpenSnackbar","snackbarSuccess","setSnackbarSuccess","snackbarMessage","setSnackbarMessage","handleOpenSnackbar","handleCloseSnackbar","reason","partner","name","width","length","map","transactionData","id","date_added","street","city","country_code","importAddress","importStreet","importCity","importCountry","stakeholderCount","date_processed","status","importeur","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./css/LoadingSpinner.css\";\nimport {\n  MDBBtn,\n  MDBContainer,\n  MDBCol,\n  MDBRow,\n  MDBIcon,\n  MDBSpinner,\n} from \"mdb-react-ui-kit\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport Transaction from \"../components/Transactions/Transaction\";\nimport { useParams } from \"react-router-dom\";\nimport TransactionModal from \"../components/Transactions/TransactionModal\";\nimport Form from \"react-bootstrap/Form\";\n\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport { TextRotateUpRounded } from \"@mui/icons-material\";\n\n// Snackbar-Alert\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nfunction Transactions() {\n  const [transactionsData, setTransactionsData] = useState([]);\n  const [documentsData, setDocumentsData] = useState([]);\n  const [declarationData, setDeclarationData] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  // Reload-State: DB-Call wird mittels useEffect wiederholt, sobald\n  // ein neuer Auftrag hinzugefügt wurde\n  const [reload, setreload] = useState(false);\n\n  // State für Ladeanimation\n  const [isLoading, setIsLoading] = useState(true);\n\n  const axiosInstance = useAxiosPrivate();\n  const [isFilterView, setIsFilterView] = useState(false);\n  const [partnership, setPartnership] = useState();\n\n  const { partnershipID } = useParams();\n\n  useEffect(async () => {\n    var link;\n    if (partnershipID) {\n      link = \"transactions/?partnership=\" + partnershipID;\n      setIsFilterView(true);\n      await axiosInstance\n        .get(\"partnership/\" + partnershipID + \"/\")\n        .then((res) => {\n          setPartnership(res.data);\n        });\n    } else {\n      link = \"transactions/\";\n    }\n\n    axiosInstance.get(link).then((res) => {\n      // Daten werden erst sortiert nach \"dateUpdatedDesc\"\n      // und danach im State gespeichert\n      const initialSort = []\n        .concat(res.data)\n        .sort((a, b) => (a.timestamp_added > b.timestamp_added ? -1 : 1));\n      setTransactionsData(initialSort);\n    });\n    setIsLoading(false);\n  }, [reload]);\n\n  useLocation();\n\n  // Dokumente abrufen\n  useEffect(() => {\n    axiosInstance.get(\"documents/\").then((res) => {\n      setDocumentsData(res.data);\n    });\n  }, []);\n\n  // Zollanmeldungen abrufen\n  useEffect(() => {\n    axiosInstance.get(\"declaration/\").then((res) => {\n      setDeclarationData(res.data);\n      console.log(res.data);\n    });\n  }, []);\n\n  // Sortieralgorithmen\n  function sortDescriptionAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) =>\n        a.description.toUpperCase() > b.description.toUpperCase() ? -1 : 1\n      );\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDescriptionDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) =>\n        a.description.toUpperCase() > b.description.toUpperCase() ? 1 : -1\n      );\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.timestamp_added > b.timestamp_added ? 1 : -1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.timestamp_added > b.timestamp_added ? -1 : 1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.timestamp_processed > b.timestamp_processed ? 1 : -1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.timestamp_processed > b.timestamp_processed ? -1 : 1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortTransactions(event) {\n    if (event.target.value === \"DescriptionAsc\") {\n      sortDescriptionAsc();\n      return;\n    }\n    if (event.target.value === \"DescriptionDesc\") {\n      sortDescriptionDesc();\n      return;\n    }\n    if (event.target.value === \"UpdatedAsc\") {\n      sortDateUpdatedAsc();\n      return;\n    }\n    if (event.target.value === \"UpdatedDesc\") {\n      sortDateUpdatedDesc();\n      return;\n    }\n    if (event.target.value === \"AddedAsc\") {\n      sortDateAddedAsc();\n      return;\n    }\n    if (event.target.value === \"AddedDesc\") {\n      sortDateAddedDesc();\n      return;\n    }\n  }\n\n  // Snackbar-Alert Rückmeldung\n  // State: Geöffnet (true) / Geschlossen (false)\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  // State: Succcess (true) / Error (false)\n  const [snackbarSuccess, setSnackbarSuccess] = useState(true);\n  // State: Snackbar Nachricht\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n\n  // Öffnen der Snackbar\n  const handleOpenSnackbar = () => {\n    setOpenSnackbar(true);\n  };\n\n  // Schließen der Snackbar\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"loadingSpinner\">\n          <MDBSpinner>\n            <span className=\"visually-hidden\">Lädt..</span>\n          </MDBSpinner>\n        </div>\n      ) : (\n        <div>\n          <MDBContainer>\n            <h3>Aufträge</h3>\n            {isFilterView && (\n              <h4>Daten sind gefiltert {partnership?.partner?.name}</h4>\n            )}\n\n            <nav className=\"my-3 navbar navbar-expand-lg navbar-light bg-light\">\n              <MDBContainer>\n                <div>\n                  <MDBRow>\n                    <MDBCol>\n                      <Form.Select\n                        style={{\n                          width: 270,\n                        }}\n                        className=\"me-3\"\n                        onChange={(event) => sortTransactions(event)}\n                      >\n                        <option value={\"UpdatedDesc\"}>\n                          Zuletzt geändert absteigend &#129047;\n                        </option>\n                        <option value={\"UpdatedAsc\"}>\n                          Zuletzt geändert aufsteigend &#129045;\n                        </option>\n                        <option value={\"DescriptionDesc\"}>\n                          Beschreibung absteigend &#129047;\n                        </option>\n                        <option value={\"DescriptionAsc\"}>\n                          Beschreibung aufsteigend &#129045;\n                        </option>\n                        <option value={\"AddedDesc\"}>\n                          Hinzugefügt am absteigend &#129047;\n                        </option>\n                        <option value={\"AddedAsc\"}>\n                          Hinzugefügt am aufsteigend &#129045;\n                        </option>\n                      </Form.Select>{\" \"}\n                    </MDBCol>\n                    <MDBCol>\n                      <div className=\"mt-2\">\n                        <b>{transactionsData.length} Aufträge</b>\n                      </div>\n                    </MDBCol>\n                  </MDBRow>\n                </div>\n                <TransactionModal\n                  setreload={setreload}\n                  reload={reload}\n                  handleOpenSnackbar={handleOpenSnackbar}\n                  handleCloseSnackbar={handleCloseSnackbar}\n                  setSnackbarSuccess={setSnackbarSuccess}\n                  setSnackbarMessage={setSnackbarMessage}\n                />\n              </MDBContainer>\n            </nav>\n            {transactionsData.map((transactionData) => (\n              <React.Fragment>\n                <Transaction\n                  key={transactionData.id}\n                  id={transactionData.id}\n                  title={transactionData.description}\n                  added={transactionData.date_added}\n                  exportAddress={transactionData.partnership.partner.name}\n                  exportStreet={transactionData.partnership.partner.street}\n                  exportCity={transactionData.partnership.partner.city}\n                  exportCountry={\n                    transactionData.partnership.partner.country_code\n                  }\n                  importAddress={transactionData.importAddress}\n                  importStreet={transactionData.importStreet}\n                  importCity={transactionData.importCity}\n                  importCountry={transactionData.importCountry}\n                  stakeholderCount={transactionData.stakeholderCount}\n                  lastChange={transactionData.date_processed}\n                  status={transactionData.status}\n                  importeur={transactionData.importeur}\n                  timestamp_added={transactionData.timestamp_added}\n                  timestamp_processed={transactionData.timestamp_processed}\n                  documentsData={documentsData}\n                  declarationData={declarationData}\n                />\n                <br />\n              </React.Fragment>\n            ))}\n          </MDBContainer>\n          <Snackbar\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            open={openSnackbar}\n            autoHideDuration={6000}\n            onClose={handleCloseSnackbar}\n            className=\"mt-5\"\n          >\n            {snackbarSuccess == true ? (\n              <Alert\n                onClose={handleCloseSnackbar}\n                severity=\"success\"\n                sx={{ width: \"100%\" }}\n              >\n                {snackbarMessage}\n              </Alert>\n            ) : (\n              <Alert\n                onClose={handleCloseSnackbar}\n                severity=\"error\"\n                sx={{ width: \"100%\" }}\n              >\n                {snackbarMessage}\n              </Alert>\n            )}\n          </Snackbar>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Transactions;\n"]},"metadata":{},"sourceType":"module"}