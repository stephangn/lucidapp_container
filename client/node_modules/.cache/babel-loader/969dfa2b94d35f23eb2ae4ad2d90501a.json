{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Documents/OtherDocumentsForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { MDBInput, MDBFile, MDBBtn } from \"mdb-react-ui-kit\";\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardSubTitle, MDBCardText, MDBCardLink } from 'mdb-react-ui-kit';\nimport axiosInstance from \"../../axiosApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst steps = [\"Dokument beschreiben\", \"Dokument hochladen\", \"BestÃ¤tigen\"];\n\nfunction OtherDocumentsForm() {\n  _s();\n\n  const [type, setType] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  /*   const [fileID, setFileID] = React.useState();\n   */\n\n  const [issueDate, setIssueDate] = React.useState(\"\");\n  let fileID = 1;\n  let filelink = \"testlink\";\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const [selectedFile, setSelectedFile] = React.useState(null);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    console.log(type);\n    console.log(description);\n    axiosInstance.post(\"/file/\", formData).then(res => {\n      alert(\"File Upload success\");\n      console.log(res.data.id);\n      fileID = res.data.id;\n      filelink = res.data.file;\n      console.log(fileID);\n    }).catch(err => console.log(err.response));\n  }\n\n  const isStepOptional = step => {\n    return step === 1;\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      children: steps.map((label, index) => {\n        const stepProps = {};\n        const labelProps = {};\n\n        if (isStepOptional(index)) {\n          labelProps.optional = /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            children: \"Optional\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this);\n        }\n\n        if (isStepSkipped(index)) {\n          stepProps.completed = false;\n        }\n\n        return /*#__PURE__*/_jsxDEV(Step, { ...stepProps,\n          children: /*#__PURE__*/_jsxDEV(StepLabel, { ...labelProps,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), activeStep === steps.length ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mt: 2,\n          mb: 1\n        },\n        children: \"All steps completed - you're finished\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          pt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flex: \"1 1 auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleReset,\n          children: \"Zur\\xFCcksetzen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [activeStep === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n          className: \"my-4\",\n          name: \"type\",\n          id: \"documentType\",\n          label: \"Dokumententyp\",\n          onChange: e => setType(e.target.value),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n          wrapperClass: \"mb-4\",\n          textarea: true,\n          name: \"description\",\n          id: \"documentDescription\",\n          rows: 3,\n          onChange: e => setDescription(e.target.value),\n          label: \"Beschreibung (optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : activeStep === 1 ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(MDBFile, {\n          className: \"my-4\",\n          label: \"Dokument ausw\\xE4hlen\",\n          id: \"customFile\",\n          onChange: e => setSelectedFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n          type: \"submit\",\n          block: true,\n          children: \"Hochladen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"mt-4\",\n          children: \"Daten best\\xE4tigen:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(MDBCard, {\n          children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n            children: [/*#__PURE__*/_jsxDEV(MDBCardTitle, {\n              children: [\"Hochgeladene Dokumentenart: \", type]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(MDBCardText, {\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(MDBCardLink, {\n              href: filelink,\n              children: \"Link zur Datei\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 58\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          pt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          disabled: activeStep === 0,\n          onClick: handleBack,\n          sx: {\n            mr: 1\n          },\n          children: \"Zur\\xFCck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flex: \"1 1 auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), isStepOptional(activeStep) && /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          onClick: handleSkip,\n          sx: {\n            mr: 1\n          },\n          children: \"\\xDCberspringen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleNext,\n          children: activeStep === steps.length - 1 ? \"Abschicken\" : \"Weiter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OtherDocumentsForm, \"xZYDwRZok+mSarkSx8q0wumzVWY=\");\n\n_c = OtherDocumentsForm;\nexport default OtherDocumentsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OtherDocumentsForm\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Documents/OtherDocumentsForm.jsx"],"names":["React","Box","Stepper","Step","StepLabel","Button","Typography","MDBInput","MDBFile","MDBBtn","MDBCard","MDBCardBody","MDBCardTitle","MDBCardSubTitle","MDBCardText","MDBCardLink","axiosInstance","steps","OtherDocumentsForm","type","setType","useState","description","setDescription","issueDate","setIssueDate","fileID","filelink","activeStep","setActiveStep","skipped","setSkipped","Set","selectedFile","setSelectedFile","handleSubmit","e","preventDefault","formData","FormData","append","console","log","post","then","res","alert","data","id","file","catch","err","response","isStepOptional","step","isStepSkipped","has","handleNext","newSkipped","values","delete","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","handleReset","width","map","label","index","stepProps","labelProps","optional","completed","length","mt","mb","display","flexDirection","pt","flex","target","value","files","mr"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { MDBInput, MDBFile, MDBBtn } from \"mdb-react-ui-kit\";\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardSubTitle, MDBCardText, MDBCardLink } from 'mdb-react-ui-kit';\nimport axiosInstance from \"../../axiosApi\";\n\nconst steps = [\"Dokument beschreiben\", \"Dokument hochladen\", \"BestÃ¤tigen\"];\n\nfunction OtherDocumentsForm() {\n\n  const [type, setType] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n/*   const [fileID, setFileID] = React.useState();\n */  const [issueDate, setIssueDate] = React.useState(\"\");\n  let fileID = 1\n  let filelink = \"testlink\"\n\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n\n  const [selectedFile, setSelectedFile] = React.useState(null);\n  function handleSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    console.log(type)\n    console.log(description)\n    axiosInstance\n      .post(\"/file/\", formData)\n      .then((res) => {\n        alert(\"File Upload success\");\n        console.log(res.data.id);\n        fileID = res.data.id;\n        filelink = res.data.file;\n        console.log(fileID);\n      })\n      .catch((err) => console.log(err.response));\n  }\n\n  const isStepOptional = (step) => {\n    return step === 1;\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          if (isStepOptional(index)) {\n            labelProps.optional = (\n              <Typography variant=\"caption\">Optional</Typography>\n            );\n          }\n          if (isStepSkipped(index)) {\n            stepProps.completed = false;\n          }\n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel {...labelProps}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      {activeStep === steps.length ? (\n        <React.Fragment>\n          <Typography sx={{ mt: 2, mb: 1 }}>\n            All steps completed - you&apos;re finished\n          </Typography>\n          <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n            <Box sx={{ flex: \"1 1 auto\" }} />\n            <Button onClick={handleReset}>ZurÃ¼cksetzen</Button>\n          </Box>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          {activeStep === 0 ? (\n            <>\n              <MDBInput\n                className=\"my-4\"\n                name=\"type\"\n                id=\"documentType\"\n                label=\"Dokumententyp\"\n                onChange={(e) => setType(e.target.value)}\n                type=\"text\"\n              />\n              <MDBInput\n                wrapperClass=\"mb-4\"\n                textarea\n                name=\"description\"\n                id=\"documentDescription\"\n                rows={3}\n                onChange={(e) => setDescription(e.target.value)}\n                label=\"Beschreibung (optional)\"\n              />\n            </>\n          ) : activeStep === 1 ? (\n            <form onSubmit={handleSubmit}>\n              <MDBFile\n                className=\"my-4\"\n                label=\"Dokument auswÃ¤hlen\"\n                id=\"customFile\"\n                onChange={(e) => setSelectedFile(e.target.files[0])}\n              />\n\n              <MDBBtn type=\"submit\" block>\n                Hochladen\n              </MDBBtn>\n            </form>\n          ) : (\n            <><h4 className=\"mt-4\">Daten bestÃ¤tigen:</h4><MDBCard>\n                    <MDBCardBody>\n                      <MDBCardTitle>Hochgeladene Dokumentenart: {type}</MDBCardTitle>\n                      <MDBCardText>\n                         {description}\n                      </MDBCardText>\n                      <MDBCardLink href={filelink}>Link zur Datei</MDBCardLink>\n                    </MDBCardBody>\n                  </MDBCard></>\n\n          )}\n          <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n            <Button\n              color=\"inherit\"\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              sx={{ mr: 1 }}\n            >\n              ZurÃ¼ck\n            </Button>\n            <Box sx={{ flex: \"1 1 auto\" }} />\n            {isStepOptional(activeStep) && (\n              <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\n                Ãberspringen\n              </Button>\n            )}\n\n            <Button onClick={handleNext}>\n              {activeStep === steps.length - 1 ? \"Abschicken\" : \"Weiter\"}\n            </Button>\n          </Box>\n        </React.Fragment>\n      )}\n    </Box>\n  );\n}\n\nexport default OtherDocumentsForm;\n"]},"metadata":{},"sourceType":"module"}