{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Transactions/TransactionForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBSwitch } from \"mdb-react-ui-kit\";\nimport axiosInstance from \"../../axiosApi\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TransactionForm() {\n  _s();\n\n  const [eori_nr, setEoriNr] = useState(\"\");\n  const [importeur, setImporteur] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [partner, setPartner] = useState(\"\");\n  const [partners, setPartners] = useState([]);\n  const top100Films = [{\n    label: 'The Godfather',\n    id: 1\n  }, {\n    label: 'Pulp Fiction',\n    id: 2\n  }];\n  /*   function onTagsChange (event, values) {\n      setPartner({\n        tags: values\n      }, () => {\n        // This will output an array of objects\n        // given by Autocompelte options property.\n        console.log(partner);\n      });\n    } */\n\n  useEffect(() => {\n    axiosInstance.get('partnership/').then(res => {\n      console.log(res.data);\n      setPartners(res.data);\n    });\n  }, []);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const newTransaction = {\n      eori_nr,\n      importeur,\n      description,\n      partner\n    };\n    console.log(newTransaction); //firma hinzufÃ¼gen \n\n    /*     axiosInstance\n          .post('/companies/', newCompany)\n          .then(console.log())\n          .catch(error => {\n              this.setState({ errorMessage: error.message });\n              console.error('There was an error!', error);\n          }).then(\n            axiosInstance\n            .post('/partnership/', {\"added_partner\":eori_nr})\n            .then(console.log())\n            .catch(error => {\n                this.setState({ errorMessage: error.message });\n                console.error('There was an error!', error);\n            })); */\n    //firma als partner hinterlegen\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n        children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n          className: \"my-3\",\n          name: \"eori_nr\",\n          label: \"EORI-Nr. Partner\",\n          type: \"number\",\n          onChange: e => setEoriNr(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n          className: \"mb-3\",\n          name: \"rolle\",\n          label: \"Importeur?\",\n          type: \"text\",\n          onChange: e => setImporteur(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n          className: \"mb-3\",\n          name: \"description\",\n          label: \"Beschreibung der Transaktion\",\n          type: \"text\",\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MDBSwitch, {\n          id: \"flexSwitchCheckDefault\",\n          label: \"Importeur?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          disablePortal: true,\n          id: \"combo-box-partner\",\n          options: partners //choose name as label for ui\n          ,\n          getOptionLabel: option => option.partner.name //when changed, save choosen Partner\n          ,\n          onChange: (event, value) => setPartner(value.id),\n          sx: {\n            width: 300\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Partner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n          type: \"submit\",\n          color: \"success\",\n          children: \"Hinzuf\\xFCgen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(TransactionForm, \"6vXScsye3uYziFD/G6Evtr0fgfc=\");\n\n_c = TransactionForm;\nexport default TransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Transactions/TransactionForm.jsx"],"names":["React","useEffect","useState","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","MDBSwitch","axiosInstance","Autocomplete","TextField","TransactionForm","eori_nr","setEoriNr","importeur","setImporteur","description","setDescription","partner","setPartner","partners","setPartners","top100Films","label","id","get","then","res","console","log","data","handleSubmit","e","preventDefault","newTransaction","target","value","option","name","event","width","params"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBSwitch,\n} from \"mdb-react-ui-kit\";\nimport axiosInstance from \"../../axiosApi\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\n\n\nfunction TransactionForm() {\n\n  const [eori_nr, setEoriNr] = useState(\"\");\n  const [importeur, setImporteur] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [partner, setPartner] = useState(\"\")\n  const [partners, setPartners] = useState([])\n  const top100Films = [\n    { label: 'The Godfather', id: 1 },\n    { label: 'Pulp Fiction', id: 2 },\n  ];\n\n/*   function onTagsChange (event, values) {\n    setPartner({\n      tags: values\n    }, () => {\n      // This will output an array of objects\n      // given by Autocompelte options property.\n      console.log(partner);\n    });\n  } */\n\n  useEffect(() => {\n    axiosInstance.get('partnership/').then((res) => {\n      console.log(res.data);\n      setPartners(res.data);\n    });\n  }, []);\n  function handleSubmit(e) {\n    e.preventDefault();\n    const newTransaction = {\n      eori_nr,\n      importeur,\n      description,\n      partner,\n    }\n    console.log(newTransaction)\n    //firma hinzufÃ¼gen \n/*     axiosInstance\n      .post('/companies/', newCompany)\n      .then(console.log())\n      .catch(error => {\n          this.setState({ errorMessage: error.message });\n          console.error('There was an error!', error);\n      }).then(\n        axiosInstance\n        .post('/partnership/', {\"added_partner\":eori_nr})\n        .then(console.log())\n        .catch(error => {\n            this.setState({ errorMessage: error.message });\n            console.error('There was an error!', error);\n        })); */\n      //firma als partner hinterlegen\n  };\n\n  return (\n    <>\n    <form onSubmit={handleSubmit}>\n      <MDBContainer>\n        <MDBInput\n          className=\"my-3\"\n          name=\"eori_nr\"\n          label=\"EORI-Nr. Partner\"\n          type=\"number\"\n          onChange={e => setEoriNr(e.target.value)}\n\n        />\n        <MDBInput\n          className=\"mb-3\"\n          name=\"rolle\"\n          label=\"Importeur?\"\n          type=\"text\"\n          onChange={e => setImporteur(e.target.value)}\n        />\n        <MDBInput\n          className=\"mb-3\"\n          name=\"description\"\n          label=\"Beschreibung der Transaktion\"\n          type=\"text\"\n          onChange={e => setDescription(e.target.value)}\n        />\n        <MDBSwitch id='flexSwitchCheckDefault' label='Importeur?' />\n        <Autocomplete\n            disablePortal\n            id=\"combo-box-partner\"\n            options={partners}\n            //choose name as label for ui\n            getOptionLabel={option => option.partner.name}\n            //when changed, save choosen Partner\n            onChange={(event, value) => setPartner(value.id)}\n            sx={{ width: 300 }}\n            renderInput={(params) => <TextField {...params} label=\"Partner\" />}\n        />\n\n        <MDBBtn type=\"submit\" color=\"success\">HinzufÃ¼gen</MDBBtn>\n\n      </MDBContainer>\n    </form>\n    </>\n  );\n}\n\nexport default TransactionForm;\n"]},"metadata":{},"sourceType":"module"}