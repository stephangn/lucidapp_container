{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Partners/PartnerForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PartnerForm() {\n  _s();\n\n  const [eori_nr, setEoriNr] = useState(\"\");\n  const [companies, setCompanies] = useState([]);\n  const [requestedCompany, setrequestedCompany] = useState(\"\");\n  const axiosPrivate = useAxiosPrivate();\n  const [testRerender, setTestRerender] = useState(false);\n  const [notFound, setNotFound] = useState(false); //useffect Abfragen der Firmemliste\n\n  /*   useEffect(() => {\n      axiosPrivate.get(\"companies/\").then((res) => {\n        console.log(res.data);\n        setCompanies(res.data);\n      });\n    \n    }, [testRerender])\n  \n    //Debugging \n    useEffect(() => {\n      console.log(companies)\n    \n    }, [companies]) */\n\n  function handleEORISearch() {\n    axiosPrivate.get(`companies/${eori_nr}/`).then(res => {\n      console.log(res.data);\n      setCompanies(res.data);\n    }).catch(err => {\n      setNotFound(true);\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault(); //firma hinzufügen\n\n    console.log('added partner: ' + requestedCompany);\n    axiosPrivate.post(\"/partnership/\", {\n      added_partner: requestedCompany\n    }).then(console.log(requestedCompany), alert('Partner angefragt'), setTestRerender(true)).catch(error => {\n      console.error(\"There was an error!\", error);\n    }); //firma als partner hinterlegen\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n      children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n        className: \"my-3\",\n        name: \"eori_nr\",\n        label: \"EORI-Nr.\",\n        type: \"number\",\n        onChange: e => setEoriNr(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n        className: \"mt-3\",\n        type: \"search\",\n        color: \"info\",\n        onClick: e => handleEORISearch(),\n        children: \"Firmen suchen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), notFound && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" EORI-NR nicht gefunden, bitte erneut probieren\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n          className: \"mt-3\",\n          type: \"submit\",\n          onClick: e => handleSubmit(e),\n          color: \"success\",\n          children: \"Anfrage abschicken\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(PartnerForm, \"dkEwcM1TEa0o1X5GX1nbhdn92xw=\", false, function () {\n  return [useAxiosPrivate];\n});\n\n_c = PartnerForm;\nexport default PartnerForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PartnerForm\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Partners/PartnerForm.jsx"],"names":["React","useState","useEffect","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","useAxiosPrivate","Autocomplete","TextField","axios","PartnerForm","eori_nr","setEoriNr","companies","setCompanies","requestedCompany","setrequestedCompany","axiosPrivate","testRerender","setTestRerender","notFound","setNotFound","handleEORISearch","get","then","res","console","log","data","catch","err","handleSubmit","e","preventDefault","post","added_partner","alert","error","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,YADF,EAEEC,MAFF,EAGEC,MAHF,EAIEC,QAJF,EAKEC,MALF,QAMO,kBANP;AAOA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAIA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBb,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACgB,gBAAD,EAAmBC,mBAAnB,IAA0CjB,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAMkB,YAAY,GAAGX,eAAe,EAApC;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACqB,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,KAAD,CAAxC,CANqB,CASrB;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,WAASuB,gBAAT,GAA6B;AAC3BL,IAAAA,YAAY,CAACM,GAAb,CAAkB,aAAYZ,OAAQ,GAAtC,EAA0Ca,IAA1C,CAAgDC,GAAD,IAAS;AACtDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAd,MAAAA,YAAY,CAACW,GAAG,CAACG,IAAL,CAAZ;AACD,KAHD,EAGGC,KAHH,CAGUC,GAAD,IAAS;AAChBT,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KALD;AAOD;;AAGD,WAASU,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF,GADuB,CAEvB;;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBZ,gBAAhC;AACAE,IAAAA,YAAY,CACTiB,IADH,CACQ,eADR,EACyB;AAAEC,MAAAA,aAAa,EAAEpB;AAAjB,KADzB,EAEGS,IAFH,CAGIE,OAAO,CAACC,GAAR,CAAYZ,gBAAZ,CAHJ,EAIIqB,KAAK,CAAC,mBAAD,CAJT,EAKIjB,eAAe,CAAC,IAAD,CALnB,EAOGU,KAPH,CAOUQ,KAAD,IAAW;AAChBX,MAAAA,OAAO,CAACW,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACD,KATH,EAJuB,CAevB;AACD;;AAED,sBACE;AAAA,2BACI,QAAC,YAAD;AAAA,8BAkBE,QAAC,QAAD;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,KAAK,EAAC,UAHR;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,QAAQ,EAAGL,CAAD,IAAOpB,SAAS,CAACoB,CAAC,CAACM,MAAF,CAASC,KAAV;AAL5B;AAAA;AAAA;AAAA;AAAA,cAlBF,eA0BI,QAAC,MAAD;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,OAAO,EAAGP,CAAD,IAAOV,gBAAgB,EAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BJ,EAkCGF,QAAQ,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlCf,eAqCE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,MAAlB;AAAyB,UAAA,IAAI,EAAC,QAA9B;AAAuC,UAAA,OAAO,EAAGY,CAAD,IAAOD,YAAY,CAACC,CAAD,CAAnE;AAAwE,UAAA,KAAK,EAAC,SAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cArCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADF;AA+CD;;GArGQtB,W;UAIcJ,e;;;KAJdI,W;AAuGT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n} from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport axios from \"axios\";\n\n\n\nfunction PartnerForm() {\n  const [eori_nr, setEoriNr] = useState(\"\");\n  const [companies, setCompanies] = useState([]);\n  const [requestedCompany, setrequestedCompany] = useState(\"\")\n  const axiosPrivate = useAxiosPrivate();\n  const [testRerender, setTestRerender] = useState(false);\n  const [notFound, setNotFound] = useState(false);\n\n\n  //useffect Abfragen der Firmemliste\n\n/*   useEffect(() => {\n    axiosPrivate.get(\"companies/\").then((res) => {\n      console.log(res.data);\n      setCompanies(res.data);\n    });\n  \n  }, [testRerender])\n\n  //Debugging \n  useEffect(() => {\n    console.log(companies)\n  \n  }, [companies]) */\n  \n  function handleEORISearch () {\n    axiosPrivate.get(`companies/${eori_nr}/`).then((res) => {\n      console.log(res.data);\n      setCompanies(res.data);\n    }).catch((err) => {\n      setNotFound(true)\n    });\n\n  }\n\n  \n  function handleSubmit(e) {\n    e.preventDefault();\n    //firma hinzufügen\n    console.log('added partner: ' + requestedCompany)\n    axiosPrivate\n      .post(\"/partnership/\", { added_partner: requestedCompany })\n      .then(\n        console.log(requestedCompany),\n        alert('Partner angefragt'),\n        setTestRerender(true),\n        )\n      .catch((error) => {\n        console.error(\"There was an error!\", error);\n      })\n      \n    //firma als partner hinterlegen\n  }\n\n  return (\n    <>\n        <MDBContainer>\n{/*           <Autocomplete\n                  className=\"mt-1\"\n                  disablePortal\n                  id=\"combo-box-companies\"\n                  options={companies}\n                  //choose name as label for ui\n                  getOptionLabel={(option) => option.name}\n                  //when changed, save choosen Partner\n                  onChange={(event, value) => {\n                    setrequestedCompany(value.eori_nr);\n                  }}\n                  sx={{ width: 320 }}\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"Empfänger der Partnerschaftsanfrage\" />\n                  )}\n                /> */}\n\n          <MDBInput\n            className=\"my-3\"\n            name=\"eori_nr\"\n            label=\"EORI-Nr.\"\n            type=\"number\"\n            onChange={(e) => setEoriNr(e.target.value)}\n          />  \n\n            <MDBBtn \n              className=\"mt-3\"\n              type=\"search\"\n              color=\"info\"\n              onClick={(e) => handleEORISearch()}\n            >\n              Firmen suchen\n            </MDBBtn>\n          {notFound && <p> EORI-NR nicht gefunden, bitte erneut probieren</p> }\n                \n\n          <div className=\"d-grid mx-auto\">\n            <MDBBtn className=\"mt-3\" type=\"submit\" onClick={(e) => handleSubmit(e)} color=\"success\">\n              Anfrage abschicken\n            </MDBBtn>\n          </div>\n        </MDBContainer>\n    </>\n  );\n}\n\nexport default PartnerForm;\n"]},"metadata":{},"sourceType":"module"}