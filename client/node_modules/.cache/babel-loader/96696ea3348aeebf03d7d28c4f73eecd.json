{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axiosInstance from \"../axiosApi\";\nimport useAuth from \"./useAuth\"; //Anfragen eines neuen Access Token mithilfe des im lokalen Speicher beim Mithilfe des abgelegtens Refresh Token\n\nconst useRefreshToken = () => {\n  _s();\n\n  const {\n    setAuth\n  } = useAuth();\n  const refreshToken = localStorage.getItem(\"refresh_token\");\n\n  const refresh = async () => {\n    //console.log(`Neuer Access token wird angefordert. Genutzter Refresh Token ${refreshToken}`);\n    //Refresh Token an Server für neuen Access Token\n    const response = await axiosInstance.post('/api/token/refresh/', JSON.stringify({\n      refresh: refreshToken\n    }));\n    setAuth(prev => {\n      //console.log(JSON.stringify(prev));\n      //console.log(`New AccessToken received : ${response.data.access}`);\n      return { ...prev,\n        accessToken: response.data.access\n      };\n    });\n    return response.data.access;\n  };\n\n  return refresh;\n};\n\n_s(useRefreshToken, \"ULyvyk72gQF34wX4GH57egc/0Yo=\", false, function () {\n  return [useAuth];\n});\n\nexport default useRefreshToken;","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/hooks/useRefreshToken.js"],"names":["axiosInstance","useAuth","useRefreshToken","setAuth","refreshToken","localStorage","getItem","refresh","response","post","JSON","stringify","prev","accessToken","data","access"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAcF,OAAO,EAA3B;AACA,QAAMG,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAArB;;AACA,QAAMC,OAAO,GAAG,YAAW;AACvB;AACY;AAEZ,UAAMC,QAAQ,GAAG,MAAMR,aAAa,CAACS,IAAd,CAAmB,qBAAnB,EACnBC,IAAI,CAACC,SAAL,CAAe;AAACJ,MAAAA,OAAO,EAAEH;AAAV,KAAf,CADmB,CAAvB;AAIAD,IAAAA,OAAO,CAACS,IAAI,IAAI;AACZ;AACA;AACA,aAAO,EACH,GAAGA,IADA;AAIHC,QAAAA,WAAW,EAAEL,QAAQ,CAACM,IAAT,CAAcC;AAJxB,OAAP;AAMH,KATM,CAAP;AAUA,WAAOP,QAAQ,CAACM,IAAT,CAAcC,MAArB;AACH,GAnBD;;AAoBF,SAAOR,OAAP;AAED,CAzBD;;GAAML,e;UACkBD,O;;;AA0BxB,eAAeC,eAAf","sourcesContent":["import axiosInstance from \"../axiosApi\"\nimport useAuth from \"./useAuth\"\n\n//Anfragen eines neuen Access Token mithilfe des im lokalen Speicher beim Mithilfe des abgelegtens Refresh Token\n\nconst useRefreshToken = () => {\n    const { setAuth } = useAuth();\n    const refreshToken = localStorage.getItem(\"refresh_token\");\n    const refresh = async() => {\n        //console.log(`Neuer Access token wird angefordert. Genutzter Refresh Token ${refreshToken}`);\n                    //Refresh Token an Server für neuen Access Token\n\n        const response = await axiosInstance.post('/api/token/refresh/', \n            JSON.stringify({refresh: refreshToken}),\n        );\n    \n        setAuth(prev => {\n            //console.log(JSON.stringify(prev));\n            //console.log(`New AccessToken received : ${response.data.access}`);\n            return {\n                ...prev,\n\n\n                accessToken: response.data.access\n            }\n        });\n        return response.data.access; \n    }\n  return refresh\n\n}\n\nexport default useRefreshToken"]},"metadata":{},"sourceType":"module"}