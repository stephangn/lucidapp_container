{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { MDBContainer, MDBRow, MDBBtn, MDBCol, MDBBadge } from \"mdb-react-ui-kit\";\nimport { TextField } from \"@mui/material\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport Partner from \"../components/Partners/Partner\";\nimport Transaction from \"../components/Transactions/Transaction\";\nimport { Divider } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search(props) {\n  _s();\n\n  const axiosInstance = useAxiosPrivate();\n  const [query, setQuery] = useState(\"\");\n  const [resultsTransaction, setResultsTransactions] = useState([]);\n  const [resultsPartnerships, setResultsPartnerships] = useState([]);\n  const [documentsData, setDocumentsData] = useState([]);\n  const [declarationData, setDeclarationData] = useState([]);\n  useEffect(() => {\n    console.log(query);\n  }, [query]); //Bisher Suche nur nach Transaktionen\n\n  function handleSearch(queryset) {\n    axiosInstance.get('transactions/?search=' + queryset).then(res => {\n      console.log(res);\n      setResultsTransactions(res.data);\n    });\n    axiosInstance.get('partnership/?search=' + queryset).then(res => {\n      console.log(res);\n      setResultsPartnerships(res.data);\n    });\n    console.log(\"hier steht eine suche mit dem suchwort\" + queryset); // Dokumente abrufen\n\n    axiosInstance.get(\"documents/\").then(res => {\n      setDocumentsData(res.data);\n    }); // Zollanmeldungen abrufen\n\n    axiosInstance.get(\"declaration/\").then(res => {\n      setDeclarationData(res.data);\n      console.log(res.data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n      children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Suche\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n        children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: \"mb-3\",\n            sx: {\n              minWidth: 550,\n              maxWidth: 550\n            },\n            id: \"suchbegriff\",\n            name: \"suchbegriff\",\n            label: \"Suchbegriff\",\n            variant: \"outlined\",\n            onChange: event => setQuery(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n          children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n            onClick: () => handleSearch(query),\n            children: \" Abschicken\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Suche nach Auftr\\xE4gen/Partnern mit folgendem Begriff enthalten: \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: query\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 74\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MDBBadge, {\n        pill: true,\n        className: \"ms-3\",\n        children: resultsPartnerships.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Rechnungsdokumente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(MDBBadge, {\n        pill: true,\n        className: \"ms-3\",\n        children: resultsTransaction.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Sonstige Dokumente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        textAlign: \"left\",\n        className: \"mt-5 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Ergebnisse f\\xFCr Auftr\\xE4ge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n        children: [resultsTransaction.map(transactionData => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Transaction, {\n            id: transactionData.id,\n            title: transactionData.description,\n            added: transactionData.date_added,\n            exportAddress: transactionData.partnership.partner.name,\n            exportStreet: transactionData.partnership.partner.street,\n            exportCity: transactionData.partnership.partner.city,\n            exportCountry: transactionData.partnership.partner.country_code,\n            importAddress: transactionData.importAddress,\n            importStreet: transactionData.importStreet,\n            importCity: transactionData.importCity,\n            importCountry: transactionData.importCountry,\n            stakeholderCount: transactionData.stakeholderCount,\n            lastChange: transactionData.date_processed,\n            status: transactionData.status,\n            timestamp_added: transactionData.timestamp_added,\n            timestamp_processed: transactionData.timestamp_processed,\n            documentsData: documentsData,\n            declarationData: declarationData\n          }, transactionData.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)), /*#__PURE__*/_jsxDEV(Divider, {\n          textAlign: \"left\",\n          className: \"mt-5 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Ergebnisse f\\xFCr Partnerschaften\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this), resultsPartnerships.map(partner => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Partner, {\n            id: partner.partner.eori_nr,\n            id_relation: partner.id,\n            title: partner.partner.name,\n            added: partner.date_added,\n            addressStreet: partner.partner.street,\n            addressCity: partner.partner.city,\n            addressCountry: partner.partner.country_code,\n            email: partner.partner.email,\n            phone: partner.partner.phone,\n            eori: partner.partner.eori_nr\n          }, partner.partner.eori_nr, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"s9CsouaBH800btXgUjss+S4ZmzY=\", false, function () {\n  return [useAxiosPrivate];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Search.jsx"],"names":["React","useEffect","useState","MDBContainer","MDBRow","MDBBtn","MDBCol","MDBBadge","TextField","useAxiosPrivate","Partner","Transaction","Divider","Search","props","axiosInstance","query","setQuery","resultsTransaction","setResultsTransactions","resultsPartnerships","setResultsPartnerships","documentsData","setDocumentsData","declarationData","setDeclarationData","console","log","handleSearch","queryset","get","then","res","data","minWidth","maxWidth","event","target","value","length","map","transactionData","id","description","date_added","partnership","partner","name","street","city","country_code","importAddress","importStreet","importCity","importCountry","stakeholderCount","date_processed","status","timestamp_added","timestamp_processed","eori_nr","email","phone"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { MDBContainer, MDBRow, MDBBtn, MDBCol, MDBBadge} from \"mdb-react-ui-kit\";\nimport { TextField } from \"@mui/material\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport Partner from \"../components/Partners/Partner\";\nimport Transaction from \"../components/Transactions/Transaction\";\nimport { Divider } from \"@mui/material\";\n\nfunction Search(props) {\n\n  const axiosInstance = useAxiosPrivate()\n\n  const [query, setQuery] = useState(\"\")\n\n  const [resultsTransaction, setResultsTransactions] = useState([])\n\n  const [resultsPartnerships, setResultsPartnerships] = useState([])\n  const [documentsData, setDocumentsData] = useState([]);\n  const [declarationData, setDeclarationData] = useState([]);\n\n\n\n  useEffect(()=> {\n    console.log(query)\n  }, [query])\n\n\n  //Bisher Suche nur nach Transaktionen\n  function handleSearch(queryset) {\n    axiosInstance.get('transactions/?search=' + queryset).then((res) => {\n      console.log(res)\n     setResultsTransactions(res.data)\n    })\n    axiosInstance.get('partnership/?search=' + queryset).then((res) => {\n      console.log(res)\n     setResultsPartnerships(res.data)\n    })\n    console.log(\"hier steht eine suche mit dem suchwort\" + queryset)\n      // Dokumente abrufen\n\n      axiosInstance.get(\"documents/\").then((res) => {\n        setDocumentsData(res.data);\n\n      })\n  // Zollanmeldungen abrufen\n\n    axiosInstance.get(\"declaration/\").then((res) => {\n      setDeclarationData(res.data);\n      console.log(res.data);\n    });\n\n  }\n  \n  return (\n    <div>\n      <MDBContainer>\n      <MDBRow>\n        <h3>Suche</h3>\n      </MDBRow>\n      <MDBRow>\n        <MDBCol>\n        <TextField\n            className=\"mb-3\"\n            sx={{ minWidth: 550, maxWidth: 550 }}\n            id=\"suchbegriff\"\n            name=\"suchbegriff\"\n            label=\"Suchbegriff\"\n            variant=\"outlined\"\n            onChange={(event) => setQuery(event.target.value)}\n          />\n        </MDBCol>\n        <MDBCol>\n          <MDBBtn\n                onClick={() => handleSearch(query)}\n          > Abschicken</MDBBtn>\n        </MDBCol>\n      </MDBRow>\n      <MDBRow>\n        <h5>\n          Suche nach Aufträgen/Partnern mit folgendem Begriff enthalten: <i>{query}</i>\n        </h5>\n\n      </MDBRow>\n      <MDBBadge pill className=\"ms-3\">\n                    {resultsPartnerships.length}\n                  </MDBBadge>{\" \"}\n                  <b>Rechnungsdokumente</b>\n                  <MDBBadge pill className=\"ms-3\">\n                    {resultsTransaction.length}\n                  </MDBBadge>{\" \"}\n                  <b>Sonstige Dokumente</b>\n      <Divider textAlign=\"left\" className=\"mt-5 mb-4\">\n                  <h5>Ergebnisse für Aufträge</h5>\n      </Divider>\n      <MDBRow>\n      {resultsTransaction.map((transactionData) => (\n          <React.Fragment>\n            <Transaction\n              key={transactionData.id}\n              id={transactionData.id}\n              title={transactionData.description}\n              added={transactionData.date_added}\n              exportAddress={transactionData.partnership.partner.name}\n              exportStreet={transactionData.partnership.partner.street}\n              exportCity={transactionData.partnership.partner.city}\n              exportCountry={transactionData.partnership.partner.country_code}\n              importAddress={transactionData.importAddress}\n              importStreet={transactionData.importStreet}\n              importCity={transactionData.importCity}\n              importCountry={transactionData.importCountry}\n              stakeholderCount={transactionData.stakeholderCount}\n              lastChange={transactionData.date_processed}\n              status={transactionData.status}\n              timestamp_added={transactionData.timestamp_added}\n              timestamp_processed={transactionData.timestamp_processed}\n              documentsData={documentsData}\n              declarationData={declarationData}\n            />\n            <br />\n          </React.Fragment>\n        ))}\n        \n        <Divider textAlign=\"left\" className=\"mt-5 mb-4\">\n                  <h5>Ergebnisse für Partnerschaften</h5>\n      </Divider>\n          {resultsPartnerships.map((partner) => (\n              <React.Fragment>\n                <Partner\n                  key={partner.partner.eori_nr}\n                  id={partner.partner.eori_nr}\n                  id_relation={partner.id}\n                  title={partner.partner.name}\n                  added={partner.date_added}\n                  addressStreet={partner.partner.street}\n                  addressCity={partner.partner.city}\n                  addressCountry={partner.partner.country_code}\n                  email={partner.partner.email}\n                  phone={partner.partner.phone}\n                  eori={partner.partner.eori_nr}\n                />\n                <br />\n              </React.Fragment>\n            ))}\n\n      </MDBRow>\n\n      </MDBContainer>\n    </div>\n  );\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}