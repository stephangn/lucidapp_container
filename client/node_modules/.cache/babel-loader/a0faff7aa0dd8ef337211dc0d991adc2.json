{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Partners.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./css/LoadingSpinner.css\";\nimport { MDBContainer, MDBCol, MDBRow, MDBSpinner } from \"mdb-react-ui-kit\";\nimport Partner from \"../components/Partners/Partner\";\nimport PartnersModal from \"../components/Partners/PartnersModal\";\nimport axiosInstance from \"../axiosApi\";\nimport PartnerRequests from \"../components/Partners/PartnerRequests\";\nimport { Form } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { Snackbar } from \"@mui/material\";\nimport MuiAlert from \"@mui/material/Alert\"; // Snackbar-Alert\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef(_c = function Alert(props, ref) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Alert;\n\nfunction Partners() {\n  _s();\n\n  const [partners, setPartners] = useState();\n  const [isLoading, setIsLoading] = useState(true); // Für useEffect Aktualisierung bei neuem Partner\n\n  const [newPartner, setNewPartner] = useState(false);\n  const [reload, setReload] = useState(false);\n  useEffect(async () => {\n    const link = \"/partnership/?is_archived=false&confirmed=true\";\n    await axiosInstance.get(link).then(res => {\n      //console.log(res.data);\n      setPartners(res.data);\n      setIsLoading(false);\n    });\n  }, [newPartner, reload]); // -- Snackbar-Alert Rückmeldung --\n  // State: Geöffnet (true) / Geschlossen (false)\n\n  const [openSnackbar, setOpenSnackbar] = useState(false); // State: Succcess (true) / Error (false)\n\n  const [snackbarSuccess, setSnackbarSuccess] = useState(true); // State: Snackbar Nachricht\n\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\"); //State für Reload\n  // Öffnen der Snackbar\n\n  const handleOpenSnackbar = () => {\n    setOpenSnackbar(true);\n  }; // Schließen der Snackbar\n\n\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenSnackbar(false);\n  }; // Sortier-Algorithmen\n\n\n  function sortPartners(event) {\n    if (event.target.value === \"DescriptionAsc\") {\n      sortDescriptionAsc();\n      return;\n    }\n\n    if (event.target.value === \"DescriptionDesc\") {\n      sortDescriptionDesc();\n      return;\n    }\n\n    if (event.target.value === \"AddedAsc\") {\n      sortDateAddedAsc();\n      return;\n    }\n\n    if (event.target.value === \"AddedDesc\") {\n      sortDateAddedDesc();\n      return;\n    }\n  }\n\n  function sortDescriptionAsc() {\n    const myData = [].concat(partners).sort((a, b) => a.partner.name.toUpperCase() > b.partner.name.toUpperCase() ? -1 : 1);\n    setPartners(myData);\n  }\n\n  function sortDescriptionDesc() {\n    const myData = [].concat(partners).sort((a, b) => a.partner.name.toUpperCase() > b.partner.name.toUpperCase() ? 1 : -1);\n    setPartners(myData);\n  }\n\n  function sortDateAddedAsc() {\n    const myData = [].concat(partners).sort((a, b) => a.timestamp_added > b.timestamp_added ? 1 : -1);\n    setPartners(myData);\n  }\n\n  function sortDateAddedDesc() {\n    const myData = [].concat(partners).sort((a, b) => a.timestamp_added > b.timestamp_added ? -1 : 1);\n    setPartners(myData);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loadingSpinner\",\n      children: /*#__PURE__*/_jsxDEV(MDBSpinner, {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"L\\xE4dt..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MDBContainer, {\n        children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n          children: /*#__PURE__*/_jsxDEV(MDBCol, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Handelsbeziehungen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PartnerRequests, {\n          setSnackbarSuccess: setSnackbarSuccess,\n          setSnackbarMessage: setSnackbarMessage,\n          handleOpenSnackbar: handleOpenSnackbar,\n          handleCloseSnackbar: handleCloseSnackbar,\n          setNewPartner: setNewPartner,\n          newPartner: newPartner,\n          reload: reload,\n          setReload: setReload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"my-3 navbar navbar-expand-lg navbar-light bg-light\",\n          children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n            children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n              children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n                  style: {\n                    width: 270\n                  },\n                  className: \"me-3\",\n                  onChange: event => sortPartners(event),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"AddedDesc\",\n                    children: \"Hinzugef\\xFCgt am absteigend\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"AddedAsc\",\n                    children: \"Hinzugef\\xFCgt am aufsteigend\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"DescriptionDesc\",\n                    children: \"Beschreibung absteigend\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"DescriptionAsc\",\n                    children: \"Beschreibung aufsteigend\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 21\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: [partners.length, \" Partner\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(PartnersModal, {\n              partnerships: partners,\n              handleOpenSnackbar: handleOpenSnackbar,\n              handleCloseSnackbar: handleCloseSnackbar,\n              setSnackbarSuccess: setSnackbarSuccess,\n              setSnackbarMessage: setSnackbarMessage,\n              newPartner: newPartner,\n              setNewPartner: setNewPartner\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), partners.map(partner => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Partner, {\n            id: partner.partner.eori_nr,\n            id_relation: partner.id,\n            title: partner.partner.name,\n            added: partner.date_added,\n            addressName: \"Bedeutung des Feldes?\",\n            addressStreet: partner.partner.street,\n            addressCity: partner.partner.city,\n            addressCountry: partner.partner.country_code,\n            email: partner.partner.email,\n            phone: partner.partner.phone,\n            eori: partner.partner.eori_nr // Snackbar States\n            ,\n            setSnackbarSuccess: setSnackbarSuccess,\n            setSnackbarMessage: setSnackbarMessage,\n            handleOpenSnackbar: handleOpenSnackbar,\n            handleCloseSnackbar: handleCloseSnackbar // Reload States\n            ,\n            reload: reload,\n            setReload: setReload\n          }, partner.partner.eori_nr, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"right\"\n        },\n        open: openSnackbar,\n        autoHideDuration: 6000,\n        onClose: handleCloseSnackbar,\n        className: \"mt-5\",\n        children: snackbarSuccess == true ? /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseSnackbar,\n          severity: \"success\",\n          sx: {\n            width: \"100%\"\n          },\n          children: snackbarMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseSnackbar,\n          severity: \"error\",\n          sx: {\n            width: \"100%\"\n          },\n          children: snackbarMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Partners, \"9mveiiezEhktPgRMu2Ze1fzfMug=\");\n\n_c3 = Partners;\nexport default Partners;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"Partners\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Partners.jsx"],"names":["React","MDBContainer","MDBCol","MDBRow","MDBSpinner","Partner","PartnersModal","axiosInstance","PartnerRequests","Form","useState","useEffect","Snackbar","MuiAlert","Alert","forwardRef","props","ref","Partners","partners","setPartners","isLoading","setIsLoading","newPartner","setNewPartner","reload","setReload","link","get","then","res","data","openSnackbar","setOpenSnackbar","snackbarSuccess","setSnackbarSuccess","snackbarMessage","setSnackbarMessage","handleOpenSnackbar","handleCloseSnackbar","event","reason","sortPartners","target","value","sortDescriptionAsc","sortDescriptionDesc","sortDateAddedAsc","sortDateAddedDesc","myData","concat","sort","a","b","partner","name","toUpperCase","timestamp_added","width","length","map","eori_nr","id","date_added","street","city","country_code","email","phone","vertical","horizontal"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./css/LoadingSpinner.css\";\nimport { MDBContainer, MDBCol, MDBRow, MDBSpinner } from \"mdb-react-ui-kit\";\nimport Partner from \"../components/Partners/Partner\";\nimport PartnersModal from \"../components/Partners/PartnersModal\";\nimport axiosInstance from \"../axiosApi\";\nimport PartnerRequests from \"../components/Partners/PartnerRequests\";\n\nimport { Form } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { Snackbar } from \"@mui/material\";\nimport MuiAlert from \"@mui/material/Alert\";\n\n// Snackbar-Alert\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nfunction Partners() {\n  const [partners, setPartners] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Für useEffect Aktualisierung bei neuem Partner\n  const [newPartner, setNewPartner] = useState(false);\n  const [reload, setReload] = useState(false);\n\n  useEffect(async () => {\n    const link = \"/partnership/?is_archived=false&confirmed=true\";\n    await axiosInstance.get(link).then((res) => {\n      //console.log(res.data);\n      setPartners(res.data);\n      setIsLoading(false);\n    });\n  }, [newPartner, reload]);\n\n  // -- Snackbar-Alert Rückmeldung --\n  // State: Geöffnet (true) / Geschlossen (false)\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  // State: Succcess (true) / Error (false)\n  const [snackbarSuccess, setSnackbarSuccess] = useState(true);\n  // State: Snackbar Nachricht\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n\n  //State für Reload\n\n  // Öffnen der Snackbar\n  const handleOpenSnackbar = () => {\n    setOpenSnackbar(true);\n  };\n\n  // Schließen der Snackbar\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenSnackbar(false);\n  };\n\n  // Sortier-Algorithmen\n\n  function sortPartners(event) {\n    if (event.target.value === \"DescriptionAsc\") {\n      sortDescriptionAsc();\n      return;\n    }\n    if (event.target.value === \"DescriptionDesc\") {\n      sortDescriptionDesc();\n      return;\n    }\n    if (event.target.value === \"AddedAsc\") {\n      sortDateAddedAsc();\n      return;\n    }\n    if (event.target.value === \"AddedDesc\") {\n      sortDateAddedDesc();\n      return;\n    }\n  }\n\n  function sortDescriptionAsc() {\n    const myData = []\n      .concat(partners)\n      .sort((a, b) =>\n        a.partner.name.toUpperCase() > b.partner.name.toUpperCase() ? -1 : 1\n      );\n    setPartners(myData);\n  }\n\n  function sortDescriptionDesc() {\n    const myData = []\n      .concat(partners)\n      .sort((a, b) =>\n        a.partner.name.toUpperCase() > b.partner.name.toUpperCase() ? 1 : -1\n      );\n    setPartners(myData);\n  }\n\n  function sortDateAddedAsc() {\n    const myData = []\n      .concat(partners)\n      .sort((a, b) => (a.timestamp_added > b.timestamp_added ? 1 : -1));\n    setPartners(myData);\n  }\n\n  function sortDateAddedDesc() {\n    const myData = []\n      .concat(partners)\n      .sort((a, b) => (a.timestamp_added > b.timestamp_added ? -1 : 1));\n    setPartners(myData);\n  }\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"loadingSpinner\">\n          <MDBSpinner>\n            <span className=\"visually-hidden\">Lädt..</span>\n          </MDBSpinner>\n        </div>\n      ) : (\n        <div>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol>\n                <h3>Handelsbeziehungen</h3>\n              </MDBCol>\n            </MDBRow>\n            <br />\n            <PartnerRequests\n              setSnackbarSuccess={setSnackbarSuccess}\n              setSnackbarMessage={setSnackbarMessage}\n              handleOpenSnackbar={handleOpenSnackbar}\n              handleCloseSnackbar={handleCloseSnackbar}\n              setNewPartner={setNewPartner}\n              newPartner={newPartner}\n              reload={reload}\n              setReload={setReload}\n            />\n\n            <nav className=\"my-3 navbar navbar-expand-lg navbar-light bg-light\">\n              <MDBContainer>\n                <MDBRow>\n                  <MDBCol>\n                    <Form.Select\n                      style={{\n                        width: 270,\n                      }}\n                      className=\"me-3\"\n                      onChange={(event) => sortPartners(event)}\n                    >\n                      <option value={\"AddedDesc\"}>\n                        Hinzugefügt am absteigend\n                      </option>\n                      <option value={\"AddedAsc\"}>\n                        Hinzugefügt am aufsteigend\n                      </option>\n                      <option value={\"DescriptionDesc\"}>\n                        Beschreibung absteigend\n                      </option>\n                      <option value={\"DescriptionAsc\"}>\n                        Beschreibung aufsteigend\n                      </option>\n                    </Form.Select>{\" \"}\n                  </MDBCol>\n                  <MDBCol>\n                    <div className=\"mt-2\">\n                      <b>{partners.length} Partner</b>\n                    </div>\n                  </MDBCol>\n                </MDBRow>\n\n                <PartnersModal\n                  partnerships={partners}\n                  handleOpenSnackbar={handleOpenSnackbar}\n                  handleCloseSnackbar={handleCloseSnackbar}\n                  setSnackbarSuccess={setSnackbarSuccess}\n                  setSnackbarMessage={setSnackbarMessage}\n                  newPartner={newPartner}\n                  setNewPartner={setNewPartner}\n                />\n                {/* <TransactionModal setreload={setreload} reload={reload} /> */}\n              </MDBContainer>\n            </nav>\n            {partners.map((partner) => (\n              <React.Fragment>\n                <Partner\n                  key={partner.partner.eori_nr}\n                  id={partner.partner.eori_nr}\n                  id_relation={partner.id}\n                  title={partner.partner.name}\n                  added={partner.date_added}\n                  addressName=\"Bedeutung des Feldes?\"\n                  addressStreet={partner.partner.street}\n                  addressCity={partner.partner.city}\n                  addressCountry={partner.partner.country_code}\n                  email={partner.partner.email}\n                  phone={partner.partner.phone}\n                  eori={partner.partner.eori_nr}\n                  // Snackbar States\n                  setSnackbarSuccess={setSnackbarSuccess}\n                  setSnackbarMessage={setSnackbarMessage}\n                  handleOpenSnackbar={handleOpenSnackbar}\n                  handleCloseSnackbar={handleCloseSnackbar}\n                  // Reload States\n                  reload={reload}\n                  setReload={setReload}\n                />\n                <br />\n              </React.Fragment>\n            ))}\n          </MDBContainer>\n          <Snackbar\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            open={openSnackbar}\n            autoHideDuration={6000}\n            onClose={handleCloseSnackbar}\n            className=\"mt-5\"\n          >\n            {snackbarSuccess == true ? (\n              <Alert\n                onClose={handleCloseSnackbar}\n                severity=\"success\"\n                sx={{ width: \"100%\" }}\n              >\n                {snackbarMessage}\n              </Alert>\n            ) : (\n              <Alert\n                onClose={handleCloseSnackbar}\n                severity=\"error\"\n                sx={{ width: \"100%\" }}\n              >\n                {snackbarMessage}\n              </Alert>\n            )}\n          </Snackbar>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Partners;\n"]},"metadata":{},"sourceType":"module"}