{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/login_new.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useRef, useState, useEffect } from 'react';\nimport axiosInstance from '../axiosApi';\nimport useAuth from '../hooks/useAuth';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { MDBInput, MDBCol, MDBRow, MDBContainer, MDBBtn } from \"mdb-react-ui-kit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LOGIN_URL = '/api/token/';\n\nconst LoginNew = () => {\n  _s();\n\n  var _location$state, _location$state$from;\n\n  /*   const userRef = useRef();\n    const errRef = useRef(); */\n  const {\n    setAuth\n  } = useAuth();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || \"/\";\n  const [user, setUser] = useState('');\n  const [pwd, setPwd] = useState('');\n  const [errMsg, setErrMsg] = useState('');\n  const [sucess, setSucess] = useState(false);\n  /*   useEffect(() => {\n      userRef.current.focus();\n    }, []) */\n\n  useEffect(() => {\n    setErrMsg('');\n  }, [user, pwd]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      var _response$data, _response$data2, _response$data3, _response$data4, _response$data5;\n\n      const response = await axiosInstance.post(LOGIN_URL, JSON.stringify({\n        username: user,\n        password: pwd\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(JSON.stringify(response === null || response === void 0 ? void 0 : response.data));\n      const accessToken = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.access;\n      const roles = response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.roles;\n      const company = response === null || response === void 0 ? void 0 : (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.company; //Speichern der Daten für künftige Anfragen \n\n      localStorage.setItem(\"access_token\", accessToken);\n      localStorage.setItem(\"refresh_token\", response === null || response === void 0 ? void 0 : (_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : _response$data4.refresh); //speichern von Nutzernamen und Firma im lokalen Speicher\n\n      localStorage.setItem(\"username\", response === null || response === void 0 ? void 0 : (_response$data5 = response.data) === null || _response$data5 === void 0 ? void 0 : _response$data5.user);\n      localStorage.setItem(\"company\", company);\n      setAuth({\n        user,\n        pwd,\n        roles,\n        company,\n        accessToken\n      });\n      setUser('');\n      setPwd('');\n      setSucess(true);\n      console.log(from);\n      navigate(from, {\n        replace: true\n      });\n    } catch (err) {\n      var _err$response, _err$response2;\n\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrMsg('Der Server antwortet nicht');\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 400) {\n        setErrMsg('Bitte alle Felder befüllen');\n      } else if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401) {\n        setErrMsg('Falsche Login-Daten');\n      } else {\n        setErrMsg('Allgemeiner Fehler');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: sucess ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Du bist eingeloggt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Zur Startseite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n          children: /*#__PURE__*/_jsxDEV(MDBRow, {\n            className: \"d-flex justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(MDBCol, {\n              className: \"col-md-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n                  className: \"mb-4\",\n                  type: \"username\",\n                  id: \"username\",\n                  label: \"Nutzername\",\n                  name: \"username\",\n                  onChange: e => setUser(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                  className: \"mb-4\",\n                  type: \"password\",\n                  id: \"password\",\n                  label: \"Passwort\",\n                  name: \"password\",\n                  onChange: e => setPwd(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n                  type: \"submit\",\n                  value: \"Submit\",\n                  children: \"Einloggen\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: errMsg ? \"errmsg alert alert-danger\" : \"offscreen\",\n                \"aria-live\": \"assertive\",\n                children: errMsg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(LoginNew, \"2BIv2mdF1tob9uDFXUXCgzs6cK8=\", false, function () {\n  return [useAuth, useNavigate, useLocation];\n});\n\n_c = LoginNew;\nexport default LoginNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginNew\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/login_new.jsx"],"names":["React","useRef","useState","useEffect","axiosInstance","useAuth","Link","useNavigate","useLocation","MDBInput","MDBCol","MDBRow","MDBContainer","MDBBtn","LOGIN_URL","LoginNew","setAuth","navigate","location","from","state","pathname","user","setUser","pwd","setPwd","errMsg","setErrMsg","sucess","setSucess","handleSubmit","e","preventDefault","response","post","JSON","stringify","username","password","headers","console","log","data","accessToken","access","roles","company","localStorage","setItem","refresh","replace","err","status","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useRef, useState, useEffect } from 'react';\nimport axiosInstance from '../axiosApi';\nimport useAuth from '../hooks/useAuth';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\n\n\nimport {\n  MDBInput,\n  MDBCol,\n  MDBRow,\n  MDBContainer,\n  MDBBtn,\n} from \"mdb-react-ui-kit\";\n\nconst LOGIN_URL = '/api/token/';\n\nconst LoginNew = () => {\n  \n/*   const userRef = useRef();\n  const errRef = useRef(); */\n\n  const  { setAuth } = useAuth();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from?.pathname || \"/\";\n\n  \n  const [user, setUser] = useState(''); \n  const [pwd, setPwd] = useState(''); \n  const [errMsg, setErrMsg] = useState(''); \n  const [sucess, setSucess] = useState(false);\n  \n/*   useEffect(() => {\n    userRef.current.focus();\n  }, []) */\n  \n\n  useEffect(() => {\n    setErrMsg('');\n  }, [user, pwd])\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await axiosInstance.post(\n                            LOGIN_URL, \n                            JSON.stringify({username: user,password: pwd}),\n                            {\n                              headers: {'Content-Type':'application/json'},\n                            }\n                      );\n      console.log(JSON.stringify(response?.data));\n      const accessToken = response?.data?.access;\n      const roles =  response?.data?.roles; \n      const company =  response?.data?.company; \n      \n      //Speichern der Daten für künftige Anfragen \n\n      localStorage.setItem(\"access_token\", accessToken);\n      localStorage.setItem(\"refresh_token\", response?.data?.refresh);\n      //speichern von Nutzernamen und Firma im lokalen Speicher\n      localStorage.setItem(\"username\", response?.data?.user);\n      localStorage.setItem(\"company\", company);\n      setAuth({user,pwd,roles, company, accessToken}); \n      setUser('');\n      setPwd('');\n      setSucess(true);\n      console.log(from)\n      navigate(from, { replace: true });\n\n    } catch (err) {\n      if (!err?.response) {\n              setErrMsg('Der Server antwortet nicht');\n          } else if (err.response?.status === 400) {\n              setErrMsg('Bitte alle Felder befüllen');\n          } else if (err.response?.status === 401) {\n              setErrMsg('Falsche Login-Daten');\n          } else {\n              setErrMsg('Allgemeiner Fehler');\n        }\n\n\n    }\n\n\n  }\n\n  \n\n  return (\n    <>\n      {sucess ? (\n          <section>\n              <h1> Du bist eingeloggt</h1>\n              <br />\n              <p>\n                <a href=\"#\">Zur Startseite</a>\n              </p>\n          </section>\n\n      ):(\n    <section> \n      <div>\n{/*         <div className=\"alert alert-danger\" role=\"alert\">{errMsg}\n        </div>\n */}        \n          <MDBContainer>\n            <MDBRow className=\"d-flex justify-content-center\">\n              <MDBCol className=\"col-md-4\">\n              <form onSubmit={handleSubmit}>\n                  <MDBInput\n                    className=\"mb-4\"\n                    type=\"username\"\n                    id=\"username\"\n                    label=\"Nutzername\"\n                    name=\"username\"\n\n                    onChange={(e) => setUser(e.target.value)}\n                  />\n\n                  <MDBInput\n                    className=\"mb-4\"\n                    type=\"password\"\n                    id=\"password\"\n                    label=\"Passwort\"\n                    name=\"password\"\n                    onChange={(e) => setPwd(e.target.value)}\n                  />\n\n                  <MDBBtn type=\"submit\" value=\"Submit\">\n                    Einloggen\n                  </MDBBtn>\n                </form>\n                <br />\n                <p className={errMsg ? \"errmsg alert alert-danger\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\n\n              </MDBCol>\n \n            </MDBRow>\n          </MDBContainer> \n      </div>\n    </section>\n      )}\n    </>      \n  )\n  }\n\nexport default LoginNew"]},"metadata":{},"sourceType":"module"}