{"ast":null,"code":"import _asyncToGenerator from\"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/node_modules/@babel/runtime/regenerator/index.js\";import{Outlet}from\"react-router-dom\";import{useState,useEffect}from\"react\";import useRefreshToken from\"../hooks/useRefreshToken\";import useAuth from\"../hooks/useAuth\";import{MDBSpinner}from\"mdb-react-ui-kit\";import useDataUpdate from\"../hooks/useDataUpdate\";import\"../pages/css/LoadingSpinner.css\";//Nutzer bleibt eingeloggt, sofern er sich nicht auslogt oder den Refresh Token im lokalen Speicher löscht \nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PersistLogin=function PersistLogin(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var refresh=useRefreshToken();var _useAuth=useAuth(),auth=_useAuth.auth,setAuth=_useAuth.setAuth;var dataUpdate=useDataUpdate();useEffect(function(){var isMounted=true;//Sofern Nutzer zurückgekehrt werden Daten neu abgerufen \nvar verifyRefreshToken=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return dataUpdate();case 3:_context.next=5;return refresh();case 5:_context.next=9;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);case 9:_context.prev=9;isMounted&&setIsLoading(false);return _context.finish(9);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,7,9,12]]);}));return function verifyRefreshToken(){return _ref.apply(this,arguments);};}();!(auth!==null&&auth!==void 0&&auth.accessToken)?verifyRefreshToken():setIsLoading(false);return function(){return isMounted=false;};},[]);//Nur für Debugging und die Anzeige der aktuellen Status:\n/*     useEffect(() => {\n        console.log(`isLoading: ${isLoading}`)\n        console.log(`aT: ${JSON.stringify(auth?.accessToken)}`)\n    }, [isLoading]) */return/*#__PURE__*/_jsx(_Fragment,{children:isLoading?/*#__PURE__*/_jsx(\"div\",{className:\"loadingSpinner\",children:/*#__PURE__*/_jsx(MDBSpinner,{children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"L\\xE4dt..\"})})}):/*#__PURE__*/_jsx(Outlet,{})});};export default PersistLogin;","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/PersistLogin.js"],"names":["Outlet","useState","useEffect","useRefreshToken","useAuth","MDBSpinner","useDataUpdate","PersistLogin","isLoading","setIsLoading","refresh","auth","setAuth","dataUpdate","isMounted","verifyRefreshToken","accessToken"],"mappings":"kcAAA,OAASA,MAAT,KAAuB,kBAAvB,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,eAAP,KAA4B,0BAA5B,CACA,MAAOC,CAAAA,OAAP,KAAoB,kBAApB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,aAAP,KAA0B,wBAA1B,CACA,MAAO,iCAAP,CAEA;gGAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,cAAkCN,QAAQ,CAAC,IAAD,CAA1C,wCAAOO,SAAP,eAAkBC,YAAlB,eACA,GAAMC,CAAAA,OAAO,CAAGP,eAAe,EAA/B,CACA,aAA0BC,OAAO,EAAjC,CAAQO,IAAR,UAAQA,IAAR,CAAcC,OAAd,UAAcA,OAAd,CACA,GAAMC,CAAAA,UAAU,CAAGP,aAAa,EAAhC,CAEAJ,SAAS,CAAC,UAAM,CACd,GAAIY,CAAAA,SAAS,CAAG,IAAhB,CAEA;AAEA,GAAMC,CAAAA,kBAAkB,0FAAG,yKAGjBF,CAAAA,UAAU,EAHO,8BAIjBH,CAAAA,OAAO,EAJU,6GAQvBI,SAAS,EAAIL,YAAY,CAAC,KAAD,CAAzB,CARuB,mGAAH,kBAAlBM,CAAAA,kBAAkB,0CAAxB,CAYA,EAACJ,IAAD,SAACA,IAAD,WAACA,IAAI,CAAEK,WAAP,EAAqBD,kBAAkB,EAAvC,CAA4CN,YAAY,CAAC,KAAD,CAAxD,CAEA,MAAO,kBAAOK,CAAAA,SAAS,CAAG,KAAnB,EAAP,CACD,CApBQ,CAoBN,EApBM,CAAT,CAsBA;AAEA;AACF;AACA;AACA,sBAEE,mBACE,yBACGN,SAAS,cACR,YAAK,SAAS,CAAC,gBAAf,uBACE,KAAC,UAAD,wBACE,aAAM,SAAS,CAAC,iBAAhB,uBADF,EADF,EADQ,cAOR,KAAC,MAAD,IARJ,EADF,CAaD,CAhDD,CAkDA,cAAeD,CAAAA,YAAf","sourcesContent":["import { Outlet } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport useRefreshToken from \"../hooks/useRefreshToken\";\nimport useAuth from \"../hooks/useAuth\";\nimport { MDBSpinner } from \"mdb-react-ui-kit\";\nimport useDataUpdate from \"../hooks/useDataUpdate\";\nimport \"../pages/css/LoadingSpinner.css\";\n\n//Nutzer bleibt eingeloggt, sofern er sich nicht auslogt oder den Refresh Token im lokalen Speicher löscht \n\nconst PersistLogin = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const refresh = useRefreshToken();\n  const { auth, setAuth } = useAuth();\n  const dataUpdate = useDataUpdate();\n\n  useEffect(() => {\n    let isMounted = true;\n\n    //Sofern Nutzer zurückgekehrt werden Daten neu abgerufen \n\n    const verifyRefreshToken = async () => {\n      //console.log(\"Verify Refresh token called\");\n      try {\n        await dataUpdate();\n        await refresh();\n      } catch (err) {\n        //console.error(err);\n      } finally {\n        isMounted && setIsLoading(false);\n      }\n    };\n\n    !auth?.accessToken ? verifyRefreshToken() : setIsLoading(false);\n\n    return () => (isMounted = false);\n  }, []);\n\n  //Nur für Debugging und die Anzeige der aktuellen Status:\n\n  /*     useEffect(() => {\n        console.log(`isLoading: ${isLoading}`)\n        console.log(`aT: ${JSON.stringify(auth?.accessToken)}`)\n    }, [isLoading]) */\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"loadingSpinner\">\n          <MDBSpinner>\n            <span className=\"visually-hidden\">Lädt..</span>\n          </MDBSpinner>\n        </div>\n      ) : (\n        <Outlet />\n      )}\n    </>\n  );\n};\n\nexport default PersistLogin;\n"]},"metadata":{},"sourceType":"module"}