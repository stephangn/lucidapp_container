{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/DocumentsNew.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport { MDBContainer, MDBBtn, MDBRow, MDBCol, MDBSpinner, MDBBadge, MDBCard, MDBCardHeader, MDBCardBody, MDBCardFooter } from \"mdb-react-ui-kit\";\nimport Divider from \"@mui/material/Divider\";\nimport DocumentsModal from \"../components/Documents/DocumentsModal\";\nimport ImporteurDocumentsModal from \"../components/Documents/ImporteurDocumentsModal\";\nimport DocumentTransaction from \"../components/Documents/DocumentTransaction\";\nimport DocumentCard from \"../components/Documents/DocumentCard\";\nimport DeclarationCard from \"../components/Documents/DeclarationCard\";\nimport DocumentBreadcrump from \"../components/Documents/DocumentBreadcrumb\";\nimport useAuth from \"../hooks/useAuth\";\nimport { rootShouldForwardProp } from \"@mui/material/styles/styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DocumentsNew(props) {\n  _s();\n\n  // Allgemeine Auftragsinformationen\n  const [transactionData, setTransactionData] = useState([]); // Informationen der hochgeladenen Dokumente\n\n  const [documentsData, setDocumentsData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const axiosInstance = useAxiosPrivate();\n  const [isImporteur, setIsImporteur] = useState(false);\n  const [isDeclaration, setIsDeclaration] = useState();\n  const [declarationData, setDeclarationData] = useState();\n  const [totalValue, setTotalValue] = useState(true);\n  const [invoiceData, setInvoiceData] = useState(); // Anzahl Dokumente\n\n  const [numberInvoiceDocumentes, setNumberInvoiceDocuments] = useState(0);\n  const [numberOtherDocumentes, setNumberOtherDocuments] = useState(0); // State für \"Dokument hinzufügen\" Modal\n\n  const [addDocumentModal, setAddDocumentModal] = useState(false); // Funktion für Manipulation von Modal (als props weitergereicht)\n\n  function toggleAddDocumentModal() {\n    setAddDocumentModal(!addDocumentModal);\n  } // Speichern der Transaktions-ID aus URL\n\n\n  const {\n    transactionId\n  } = useParams();\n  const {\n    auth\n  } = useAuth();\n  useEffect(async () => {\n    await axiosInstance.get(`transactions/` + transactionId).then(res => {\n      //console.log(res.data);\n      setTransactionData(res.data);\n\n      if (auth.eori_nr == res.data.importeur) {\n        setIsImporteur(true);\n      }\n    });\n    console.log(transactionData);\n    await axiosInstance.get(`documents/?transaction=` + transactionId).then(res => {\n      //console.log(res.data);\n      setDocumentsData(res.data); //console.log(documentsData);\n    });\n    await axiosInstance.get(`declaration_auth/?transaction=` + transactionId).then(res => {\n      console.log(res.data.length);\n\n      if (res.data.length > 0) {\n        console.log(\"Zollanmeldung liegt vor\");\n        setIsDeclaration(true);\n        setDeclarationData(res.data[0]);\n      }\n    });\n    await axiosInstance.get('invoice/' + declarationData.invoice + '/').then(res => {\n      setTotalValue(res.data.total_value); //console.log(res.data.total_value)\n\n      setInvoiceData(res.data);\n    }); //console.log(documentsData);\n\n    setIsLoading(false);\n  }, []); // Anzahl Rechnungs+Zolldokumente call(a) und sonstige Dokumente call(b)\n\n  function numberInvoiceDocuments(alternative) {\n    let invoiceAndCustoms = 0;\n    let other = 0;\n\n    for (let i = 0; i < documentsData.length; i++) {\n      if (documentsData[i].type == \"Rechnung\" || documentsData[i].type == \"Zoll\") {\n        invoiceAndCustoms += 1;\n      } else {\n        other += 1;\n      }\n    }\n\n    if (alternative == \"a\") {\n      return invoiceAndCustoms;\n    }\n\n    if (alternative == \"b\") {\n      return other;\n    }\n\n    return;\n  } // (Sonstige) Dokumente verifizieren Button\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(MDBSpinner, {\n      grow: true,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"visually-hidden\",\n        children: \"L\\xE4dt..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(MDBContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Dokumente (neu)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), isImporteur == true ? /*#__PURE__*/_jsxDEV(ImporteurDocumentsModal, {\n        basicModal: addDocumentModal,\n        setBasicModal: setAddDocumentModal,\n        toggleShow: toggleAddDocumentModal,\n        transactionData: transactionData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(DocumentsModal, {\n        basicModal: addDocumentModal,\n        setBasicModal: setAddDocumentModal,\n        toggleShow: toggleAddDocumentModal,\n        transactionData: transactionData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DocumentBreadcrump, {\n        transactionId: transactionId\n      }, transactionId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DocumentTransaction, {\n        description: transactionData.description,\n        dateAdded: transactionData.date_added,\n        dateProcessed: transactionData.date_processed,\n        status: transactionData.status,\n        street: transactionData.partnership.partner.street,\n        cityCode: transactionData.partnership.partner.city_code,\n        countryCode: transactionData.partnership.partner.country_code,\n        city: transactionData.partnership.partner.city,\n        name: transactionData.partnership.partner.name,\n        id: transactionData.id,\n        blockchain_rid: transactionData.blockchain_id,\n        transactionData: transactionData,\n        isImporteur: isImporteur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"my-3 navbar navbar-expand-lg navbar-light bg-light\",\n        children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [isDeclaration ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(MDBBadge, {\n                pill: true,\n                children: 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Zollanmeldung\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 48\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(MDBBadge, {\n                pill: true,\n                children: 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Zollanmeldung\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 51\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(MDBBadge, {\n              pill: true,\n              className: \"ms-3\",\n              children: numberInvoiceDocuments(\"a\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Rechnungsdokumente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MDBBadge, {\n              pill: true,\n              className: \"ms-3\",\n              children: numberInvoiceDocuments(\"b\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Sonstige Dokumente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n            outline: true,\n            className: \"float-end\",\n            color: \"success\",\n            onClick: toggleAddDocumentModal,\n            children: \"Dokument hinzuf\\xFCgen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), isDeclaration && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Divider, {\n          textAlign: \"left\",\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Zollanmeldung\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeclarationCard, {\n          anmeldeArt: declarationData.anmeldeArt //gesamtbetrag ={totalValue}\n          ,\n          bearbeitendeDienststelle: declarationData.customs_office.name,\n          lieferkosten: declarationData.invoice.transport_costs,\n          documentId: documentsData.documentId,\n          anmelderName: declarationData.importeur.name,\n          issue_date: declarationData.date_added\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Divider, {\n        textAlign: \"left\",\n        className: \"mt-5 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Rechnungsdokumente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n        className: \"row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\",\n        children: documentsData.map(documentData => documentData.type == \"Rechnung\" && /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(MDBCol, {\n            children: /*#__PURE__*/_jsxDEV(DocumentCard, {\n              id: documentData.id,\n              author_company: documentData.owner.employee.company.name,\n              author: documentData.owner.username,\n              type: documentData.type,\n              description: documentData.description,\n              documentDate: documentData.issue_date,\n              uploadDate: documentData.upload_date,\n              blockchain_did: documentData.blockchain_did,\n              file: documentData.file,\n              confirmed: documentData.confirmed\n            }, documentData.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        textAlign: \"left\",\n        className: \"mt-5 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Sonstige Dokumente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n        className: \"row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\",\n        children: documentsData.map(documentData => documentData.type !== \"Rechnung\" && /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(MDBCol, {\n            children: /*#__PURE__*/_jsxDEV(DocumentCard, {\n              id: documentData.id,\n              author: documentData.author,\n              type: documentData.type,\n              description: documentData.description,\n              documentDate: documentData.issue_date,\n              uploadDate: documentData.upload_date,\n              file: documentData.file,\n              confirmed: documentData.confirmed,\n              blockchain_did: documentData.blockchain_id\n            }, documentData.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(DocumentsNew, \"gxFK7pBnM5r3awBPU2dHMM8meWA=\", false, function () {\n  return [useAxiosPrivate, useParams, useAuth];\n});\n\n_c = DocumentsNew;\nexport default DocumentsNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"DocumentsNew\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/DocumentsNew.jsx"],"names":["React","useEffect","useState","useParams","useAxiosPrivate","MDBContainer","MDBBtn","MDBRow","MDBCol","MDBSpinner","MDBBadge","MDBCard","MDBCardHeader","MDBCardBody","MDBCardFooter","Divider","DocumentsModal","ImporteurDocumentsModal","DocumentTransaction","DocumentCard","DeclarationCard","DocumentBreadcrump","useAuth","rootShouldForwardProp","DocumentsNew","props","transactionData","setTransactionData","documentsData","setDocumentsData","isLoading","setIsLoading","axiosInstance","isImporteur","setIsImporteur","isDeclaration","setIsDeclaration","declarationData","setDeclarationData","totalValue","setTotalValue","invoiceData","setInvoiceData","numberInvoiceDocumentes","setNumberInvoiceDocuments","numberOtherDocumentes","setNumberOtherDocuments","addDocumentModal","setAddDocumentModal","toggleAddDocumentModal","transactionId","auth","get","then","res","data","eori_nr","importeur","console","log","length","invoice","total_value","numberInvoiceDocuments","alternative","invoiceAndCustoms","other","i","type","description","date_added","date_processed","status","partnership","partner","street","city_code","country_code","city","name","id","blockchain_id","anmeldeArt","customs_office","transport_costs","documentId","map","documentData","owner","employee","company","username","issue_date","upload_date","blockchain_did","file","confirmed","author"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport {\n  MDBContainer,\n  MDBBtn,\n  MDBRow,\n  MDBCol,\n  MDBSpinner,\n  MDBBadge,\n  MDBCard,\n  MDBCardHeader,\n  MDBCardBody,\n  MDBCardFooter,\n} from \"mdb-react-ui-kit\";\nimport Divider from \"@mui/material/Divider\";\n\nimport DocumentsModal from \"../components/Documents/DocumentsModal\";\nimport ImporteurDocumentsModal from \"../components/Documents/ImporteurDocumentsModal\";\nimport DocumentTransaction from \"../components/Documents/DocumentTransaction\";\nimport DocumentCard from \"../components/Documents/DocumentCard\";\nimport DeclarationCard from \"../components/Documents/DeclarationCard\";\nimport DocumentBreadcrump from \"../components/Documents/DocumentBreadcrumb\";\nimport useAuth from \"../hooks/useAuth\";\nimport { rootShouldForwardProp } from \"@mui/material/styles/styled\";\n\nfunction DocumentsNew(props) {\n  // Allgemeine Auftragsinformationen\n  const [transactionData, setTransactionData] = useState([]);\n\n  // Informationen der hochgeladenen Dokumente\n  const [documentsData, setDocumentsData] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const axiosInstance = useAxiosPrivate();\n\n  const [isImporteur, setIsImporteur] = useState(false);\n\n  const [isDeclaration, setIsDeclaration] = useState()\n  const [declarationData, setDeclarationData] = useState()\n  const [totalValue, setTotalValue] = useState(true);\n  const [invoiceData, setInvoiceData] = useState()\n\n  // Anzahl Dokumente\n  const [numberInvoiceDocumentes, setNumberInvoiceDocuments] = useState(0);\n  const [numberOtherDocumentes, setNumberOtherDocuments] = useState(0);\n\n  // State für \"Dokument hinzufügen\" Modal\n  const [addDocumentModal, setAddDocumentModal] = useState(false);\n  // Funktion für Manipulation von Modal (als props weitergereicht)\n  function toggleAddDocumentModal() {\n    setAddDocumentModal(!addDocumentModal);\n  }\n\n  // Speichern der Transaktions-ID aus URL\n  const { transactionId } = useParams();\n  const { auth } = useAuth();\n\n  useEffect(async () => {\n    await axiosInstance.get(`transactions/` + transactionId).then((res) => {\n      //console.log(res.data);\n      setTransactionData(res.data);\n      if (auth.eori_nr == res.data.importeur) {\n        setIsImporteur(true);\n      }\n    });\n    console.log(transactionData);\n    await axiosInstance.get(`documents/?transaction=` + transactionId).then((res) => {\n      //console.log(res.data);\n      setDocumentsData(res.data);\n      //console.log(documentsData);\n    });\n\n    await axiosInstance.get(`declaration_auth/?transaction=` + transactionId).then((res) => {\n      console.log(res.data.length);\n      if (res.data.length > 0) {\n        console.log(\"Zollanmeldung liegt vor\")\n        setIsDeclaration(true)\n        setDeclarationData(res.data[0])\n        \n      }  });\n\n    await axiosInstance.get('invoice/' + declarationData.invoice + '/').then((res) => {\n        setTotalValue(res.data.total_value)\n        //console.log(res.data.total_value)\n        setInvoiceData(res.data)\n      })\n      //console.log(documentsData);\n\n    setIsLoading(false);\n\n  }, []);\n\n  // Anzahl Rechnungs+Zolldokumente call(a) und sonstige Dokumente call(b)\n  function numberInvoiceDocuments(alternative) {\n    let invoiceAndCustoms = 0;\n    let other = 0;\n    for (let i = 0; i < documentsData.length; i++) {\n      if (\n        documentsData[i].type == \"Rechnung\" ||\n        documentsData[i].type == \"Zoll\"\n      ) {\n        invoiceAndCustoms += 1;\n      } else {\n        other += 1;\n      }\n    }\n    if (alternative == \"a\") {\n      return invoiceAndCustoms;\n    }\n    if (alternative == \"b\") {\n      return other;\n    }\n    return;\n  }\n\n  // (Sonstige) Dokumente verifizieren Button\n\n\n  return (\n    <>\n      {isLoading ? (\n        <MDBSpinner grow>\n          <span className=\"visually-hidden\">Lädt..</span>\n        </MDBSpinner>\n      ) : (\n        <MDBContainer>\n          <h3>Dokumente (neu)</h3>\n          {isImporteur == true ? (\n            <ImporteurDocumentsModal\n              basicModal={addDocumentModal}\n              setBasicModal={setAddDocumentModal}\n              toggleShow={toggleAddDocumentModal}\n              transactionData={transactionData}\n            />\n          ) : (\n            <DocumentsModal\n              basicModal={addDocumentModal}\n              setBasicModal={setAddDocumentModal}\n              toggleShow={toggleAddDocumentModal}\n              transactionData={transactionData}\n            />\n          )}\n\n          <DocumentBreadcrump\n            key={transactionId}\n            transactionId={transactionId}\n          />\n          <DocumentTransaction\n            description={transactionData.description}\n            dateAdded={transactionData.date_added}\n            dateProcessed={transactionData.date_processed}\n            status={transactionData.status}\n            street={transactionData.partnership.partner.street}\n            cityCode={transactionData.partnership.partner.city_code}\n            countryCode={transactionData.partnership.partner.country_code}\n            city={transactionData.partnership.partner.city}\n            name={transactionData.partnership.partner.name}\n            id={transactionData.id}\n            blockchain_rid={transactionData.blockchain_id}\n            transactionData={transactionData}\n            isImporteur={isImporteur}\n          />\n\n          {/* Navleiste mit Anzahl der Dokumente */}\n          <nav className=\"my-3 navbar navbar-expand-lg navbar-light bg-light\">\n            <MDBContainer>\n              <div>\n                {isDeclaration ? (\n                <><MDBBadge pill>{1}</MDBBadge><b>Zollanmeldung</b></>\n                ):(<><MDBBadge pill>{0}</MDBBadge><b>Zollanmeldung</b></>)}\n                <MDBBadge pill className=\"ms-3\">\n                  {numberInvoiceDocuments(\"a\")}\n                </MDBBadge>{\" \"}\n                <b>Rechnungsdokumente</b>\n                <MDBBadge pill className=\"ms-3\">\n                  {numberInvoiceDocuments(\"b\")}\n                </MDBBadge>{\" \"}\n                <b>Sonstige Dokumente</b>\n              </div>\n              <MDBBtn\n                outline\n                className=\"float-end\"\n                color=\"success\"\n                onClick={toggleAddDocumentModal}\n              >\n                Dokument hinzufügen\n              </MDBBtn>\n            </MDBContainer>\n          </nav>\n\n          {/* Auflistung der Rechnungsdokumente */}\n          {isDeclaration && \n\n          <><Divider textAlign=\"left\" className=\"mb-4\">\n\n                <h5>Zollanmeldung</h5>\n              </Divider><DeclarationCard\n                  anmeldeArt ={declarationData.anmeldeArt}\n                  //gesamtbetrag ={totalValue}\n                  bearbeitendeDienststelle ={declarationData.customs_office.name}\n                  lieferkosten ={declarationData.invoice.transport_costs}\n                  documentId={documentsData.documentId}\n                  anmelderName = {declarationData.importeur.name}\n                  issue_date = {declarationData.date_added}\n                  \n                  /></>\n          }\n          <Divider textAlign=\"left\" className=\"mt-5 mb-4\">\n            <h5>Rechnungsdokumente</h5>\n          </Divider>\n          <MDBRow className=\"row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\">\n            {documentsData.map(\n              (documentData) =>\n                documentData.type == \"Rechnung\" && (\n                  <React.Fragment>\n                    <MDBCol>\n                      <DocumentCard\n                        key={documentData.id}\n                        id={documentData.id}\n                        author_company={\n                          documentData.owner.employee.company.name\n                        }\n                        author={documentData.owner.username}\n                        type={documentData.type}\n                        description={documentData.description}\n                        documentDate={documentData.issue_date}\n                        uploadDate={documentData.upload_date}\n                        blockchain_did = {documentData.blockchain_did}\n                        file={documentData.file}\n                        confirmed={documentData.confirmed}\n                      />\n                    </MDBCol>\n                  </React.Fragment>\n                )\n            )}\n          </MDBRow>\n\n          {/* Auflistung der sontigen Dokumente */}\n\n          <Divider textAlign=\"left\" className=\"mt-5 mb-4\">\n            <h5>Sonstige Dokumente</h5>\n          </Divider>\n          <MDBRow className=\"row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\">\n            {documentsData.map(\n              (documentData) =>\n                documentData.type !== \"Rechnung\" && (\n                  <React.Fragment>\n                    <MDBCol>\n                      <DocumentCard\n                        key={documentData.id}\n                        id={documentData.id}\n                        author={documentData.author}\n                        type={documentData.type}\n                        description={documentData.description}\n                        documentDate={documentData.issue_date}\n                        uploadDate={documentData.upload_date}\n                        file={documentData.file}\n                        confirmed={documentData.confirmed}\n                        blockchain_did={documentData.blockchain_id}\n                      />\n                    </MDBCol>\n                  </React.Fragment>\n                )\n            )}\n          </MDBRow>\n        </MDBContainer>\n      )}\n    </>\n  );\n}\n\nexport default DocumentsNew;\n"]},"metadata":{},"sourceType":"module"}