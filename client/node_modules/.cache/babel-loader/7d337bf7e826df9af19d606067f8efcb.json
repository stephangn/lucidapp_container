{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Zoll/ZollTransactions.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { MDBBtn, MDBContainer, MDBCol, MDBRow, MDBIcon } from \"mdb-react-ui-kit\";\nimport Transaction from \"../../components/Transactions/Transaction\";\nimport { useParams } from \"react-router-dom\";\nimport TransactionModal from \"../../components/Transactions/TransactionModal\";\nimport Form from \"react-bootstrap/Form\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport { TextRotateUpRounded } from \"@mui/icons-material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ZollTransactions() {\n  _s();\n\n  const [transactionsData, setTransactionsData] = useState([]);\n  const [reload, setreload] = useState(false);\n  const axiosInstance = useAxiosPrivate();\n  useEffect(() => {\n    axiosInstance.get(\"declaration_auth/?customs_office=1\").then(res => {\n      setTransactionsData(res.data.transaction);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [reload]); // Sortieralgorithmen\n\n  function sortDescriptionAsc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.description > b.description ? -1 : 1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDescriptionDesc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.description > b.description ? 1 : -1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedAsc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.date_added > b.date_added ? 1 : -1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedDesc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.date_added > b.date_added ? -1 : 1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedAsc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.date_processed > b.date_processed ? 1 : -1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedDesc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.date_processed > b.date_processed ? -1 : 1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortTransactions(event) {\n    if (event.target.value === \"DescriptionAsc\") {\n      sortDescriptionAsc();\n      return;\n    }\n\n    if (event.target.value === \"DescriptionDesc\") {\n      sortDescriptionDesc();\n      return;\n    }\n\n    if (event.target.value === \"UpdatedAsc\") {\n      sortDateUpdatedAsc();\n      return;\n    }\n\n    if (event.target.value === \"UpdatedDesc\") {\n      sortDateUpdatedDesc();\n      return;\n    }\n\n    if (event.target.value === \"AddedAsc\") {\n      sortDateAddedAsc();\n      return;\n    }\n\n    if (event.target.value === \"AddedDesc\") {\n      sortDateAddedDesc();\n      return;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Zollanmeldungen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"my-3 navbar navbar-expand-lg navbar-light bg-light\",\n        children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n            style: {\n              minWidth: 250,\n              maxWidth: 250\n            },\n            onChange: event => sortTransactions(event),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"UpdatedDesc\",\n              children: \"Zuletzt ge\\xE4ndert \\uD83E\\uDC17\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"UpdatedAsc\",\n              children: \"Zuletzt ge\\xE4ndert aufsteigend \\uD83E\\uDC15\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"DescriptionDesc\",\n              children: \"Beschreibung absteigend \\uD83E\\uDC17\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"DescriptionAsc\",\n              children: \"Beschreibung aufsteigend \\uD83E\\uDC15\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"AddedDesc\",\n              children: \"Hinzugef\\xFCgt am absteigend \\uD83E\\uDC17\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"AddedAsc\",\n              children: \"Hinzugef\\xFCgt am aufsteigend \\uD83E\\uDC15\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"float-left\",\n            children: [transactionsData.length, \" Auftr\\xE4ge\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TransactionModal, {\n            setreload: setreload,\n            reload: reload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), transactionsData.map(transactionData => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Transaction, {\n          id: transactionsData.id,\n          title: transactionsData.description,\n          added: transactionsData.date_added,\n          exportAddress: transactionsData.partnership.partner.name,\n          exportStreet: transactionsData.partnership.partner.street,\n          exportCity: transactionsData.partnership.partner.city,\n          exportCountry: transactionsData.partnership.partner.country_code,\n          importAddress: transactionsData.importAddress,\n          importStreet: transactionsData.importStreet,\n          importCity: transactionsData.importCity,\n          importCountry: transactionsData.importCountry,\n          stakeholderCount: transactionsData.stakeholderCount,\n          lastChange: transactionsData.date_processed\n        }, transactionsData.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ZollTransactions, \"U58JghQ1ps33ygTl9vNsp+X54vY=\", false, function () {\n  return [useAxiosPrivate];\n});\n\n_c = ZollTransactions;\nexport default ZollTransactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"ZollTransactions\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Zoll/ZollTransactions.jsx"],"names":["React","useState","useEffect","MDBBtn","MDBContainer","MDBCol","MDBRow","MDBIcon","Transaction","useParams","TransactionModal","Form","useAxiosPrivate","TextRotateUpRounded","ZollTransactions","transactionsData","setTransactionsData","reload","setreload","axiosInstance","get","then","res","data","transaction","catch","err","console","log","sortDescriptionAsc","myData","concat","sort","a","b","description","sortDescriptionDesc","sortDateAddedAsc","date_added","sortDateAddedDesc","sortDateUpdatedAsc","date_processed","sortDateUpdatedDesc","sortTransactions","event","target","value","minWidth","maxWidth","length","map","transactionData","id","partnership","partner","name","street","city","country_code","importAddress","importStreet","importCity","importCountry","stakeholderCount"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  MDBBtn,\n  MDBContainer,\n  MDBCol,\n  MDBRow,\n  MDBIcon,\n} from \"mdb-react-ui-kit\";\nimport Transaction from \"../../components/Transactions/Transaction\";\nimport { useParams } from \"react-router-dom\";\nimport TransactionModal from \"../../components/Transactions/TransactionModal\";\nimport Form from \"react-bootstrap/Form\";\n\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport { TextRotateUpRounded } from \"@mui/icons-material\";\n\nfunction ZollTransactions() {\n  const [transactionsData, setTransactionsData] = useState([]);\n  const [reload, setreload] = useState(false);\n\n  const axiosInstance = useAxiosPrivate();\n\n  useEffect(() => {\n    axiosInstance.get(\"declaration_auth/?customs_office=1\").then((res) => {\n      setTransactionsData(res.data.transaction);\n    }).catch ((err) => {\n      console.log(err)\n    });\n  }, [reload]);\n\n  // Sortieralgorithmen\n  function sortDescriptionAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.description > b.description ? -1 : 1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDescriptionDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.description > b.description ? 1 : -1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.date_added > b.date_added ? 1 : -1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.date_added > b.date_added ? -1 : 1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.date_processed > b.date_processed ? 1 : -1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.date_processed > b.date_processed ? -1 : 1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortTransactions(event) {\n    if (event.target.value === \"DescriptionAsc\") {\n      sortDescriptionAsc();\n      return;\n    }\n    if (event.target.value === \"DescriptionDesc\") {\n      sortDescriptionDesc();\n      return;\n    }\n    if (event.target.value === \"UpdatedAsc\") {\n      sortDateUpdatedAsc();\n      return;\n    }\n    if (event.target.value === \"UpdatedDesc\") {\n      sortDateUpdatedDesc();\n      return;\n    }\n    if (event.target.value === \"AddedAsc\") {\n      sortDateAddedAsc();\n      return;\n    }\n    if (event.target.value === \"AddedDesc\") {\n      sortDateAddedDesc();\n      return;\n    }\n  }\n\n  return (\n    <div>\n      <MDBContainer>\n        <h3>Zollanmeldungen</h3>\n\n        <nav className=\"my-3 navbar navbar-expand-lg navbar-light bg-light\">\n          <MDBContainer>\n            <Form.Select\n              style={{\n                minWidth: 250,\n                maxWidth: 250,\n              }}\n              onChange={(event) => sortTransactions(event)}\n            >\n              <option value={\"UpdatedDesc\"}>Zuletzt geändert 🠗</option>\n              <option value={\"UpdatedAsc\"}>\n                Zuletzt geändert aufsteigend 🠕\n              </option>\n              <option value={\"DescriptionDesc\"}>\n                Beschreibung absteigend 🠗\n              </option>\n              <option value={\"DescriptionAsc\"}>\n                Beschreibung aufsteigend 🠕\n              </option>\n              <option value={\"AddedDesc\"}>Hinzugefügt am absteigend 🠗</option>\n              <option value={\"AddedAsc\"}>Hinzugefügt am aufsteigend 🠕</option>\n            </Form.Select>{\" \"}\n            <div className=\"float-left\">{transactionsData.length} Aufträge</div>\n            <TransactionModal setreload={setreload} reload={reload} />\n          </MDBContainer>\n        </nav>\n        {transactionsData.map((transactionData) => (\n          <React.Fragment>\n            <Transaction\n              key={transactionsData.id}\n              id={transactionsData.id}\n              title={transactionsData.description}\n              added={transactionsData.date_added}\n              exportAddress={transactionsData.partnership.partner.name}\n              exportStreet={transactionsData.partnership.partner.street}\n              exportCity={transactionsData.partnership.partner.city}\n              exportCountry={transactionsData.partnership.partner.country_code}\n              importAddress={transactionsData.importAddress}\n              importStreet={transactionsData.importStreet}\n              importCity={transactionsData.importCity}\n              importCountry={transactionsData.importCountry}\n              stakeholderCount={transactionsData.stakeholderCount}\n              lastChange={transactionsData.date_processed}\n            />\n            <br />\n          </React.Fragment>\n        ))}\n      </MDBContainer>\n    </div>\n  );\n}\n\nexport default ZollTransactions;\n"]},"metadata":{},"sourceType":"module"}