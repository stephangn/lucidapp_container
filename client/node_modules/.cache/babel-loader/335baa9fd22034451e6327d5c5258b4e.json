{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/requireAuth.js\",\n    _s = $RefreshSig$();\n\nimport { useLocation, Navigate, Outlet } from \"react-router-dom\";\nimport useAuth from \"../hooks/useAuth\";\nimport useDataUpdate from \"../hooks/useDataUpdate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RequireAuth = _ref => {\n  _s();\n\n  let {\n    allowedRoles\n  } = _ref;\n  const {\n    auth\n  } = useAuth();\n  const location = useLocation();\n  const dataUpdate = useDataUpdate();\n\n  if (auth.accessToken && !auth.role) {\n    console.log(\"hier liegt das Problem\");\n    console.log(\"Aber neue Daten kommen\");\n  }\n\n  useEffect(() => {\n    let isMounted = true;\n\n    const getfirstDataSet = async () => {\n      console.log(\"Verify Refresh token called\");\n\n      try {\n        await dataUpdate();\n      } catch (err) {\n        console.error(err);\n      } finally {\n        isMounted && setIsLoading(false);\n      }\n    }; // Avoids unwanted call to verifyRefreshToken\n    //Verify Refresh Token funktionen nur aufrufen, wenn auth state nicht vorhanden ist\n\n\n    !(auth !== null && auth !== void 0 && auth.role) ? getfirstDataSet() : setIsLoading(false);\n    return () => isMounted = false;\n  }, []);\n  /*     console.log(auth?.user);\n      console.log(`Die aktuelle Rolle ist ${auth?.role}`)\n      console.log(allowedRoles) */\n\n  return isLoading ? /*#__PURE__*/_jsxDEV(MDBSpinner, {\n    grow: true,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"visually-hidden\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 17\n  }, this) : //wenn AccessToken vorhanden Seite anzeigen, ansonsten login\n  allowedRoles !== null && allowedRoles !== void 0 && allowedRoles.includes(auth === null || auth === void 0 ? void 0 : auth.role) ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 27\n  }, this) : auth !== null && auth !== void 0 && auth.username ? /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/unauthorized\",\n    state: {\n      from: location\n    },\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 31\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    state: {\n      from: location\n    },\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 31\n  }, this);\n};\n\n_s(RequireAuth, \"C1nPEW41wYhRl1ik5sRI2wpIpwM=\", false, function () {\n  return [useAuth, useLocation, useDataUpdate];\n});\n\n_c = RequireAuth;\nexport default RequireAuth;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequireAuth\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/requireAuth.js"],"names":["useLocation","Navigate","Outlet","useAuth","useDataUpdate","RequireAuth","allowedRoles","auth","location","dataUpdate","accessToken","role","console","log","useEffect","isMounted","getfirstDataSet","err","error","setIsLoading","isLoading","includes","username","from"],"mappings":";;;AAAA,SAAUA,WAAV,EAAuBC,QAAvB,EAAgCC,MAAhC,QAA6C,kBAA7C;AAEA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;;;AAIA,MAAMC,WAAW,GAAI,QAAoB;AAAA;;AAAA,MAAnB;AAACC,IAAAA;AAAD,GAAmB;AACrC,QAAM;AAACC,IAAAA;AAAD,MAASJ,OAAO,EAAtB;AACA,QAAMK,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,UAAU,GAAGL,aAAa,EAAhC;;AAEA,MAAIG,IAAI,CAACG,WAAL,IAAoB,CAACH,IAAI,CAACI,IAA9B,EAAoC;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH;;AACDC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIC,SAAS,GAAG,IAAhB;;AAEA,UAAMC,eAAe,GAAG,YAAY;AAChCJ,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;;AACA,UAAI;AACA,cAAMJ,UAAU,EAAhB;AACH,OAFD,CAGA,OAAOQ,GAAP,EAAY;AACRL,QAAAA,OAAO,CAACM,KAAR,CAAcD,GAAd;AACH,OALD,SAMO;AACHF,QAAAA,SAAS,IAAII,YAAY,CAAC,KAAD,CAAzB;AACH;AACJ,KAXD,CAHY,CAeZ;AACA;;;AACA,MAACZ,IAAD,aAACA,IAAD,eAACA,IAAI,CAAEI,IAAP,IAAcK,eAAe,EAA7B,GAAkCG,YAAY,CAAC,KAAD,CAA9C;AAEA,WAAO,MAAMJ,SAAS,GAAG,KAAzB;AACH,GApBQ,EAoBN,EApBM,CAAT;AAsBJ;AACA;AACA;;AAEI,SAEIK,SAAS,gBACD,QAAC,UAAD;AAAY,IAAA,IAAI,MAAhB;AAAA,2BACI;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADC,GAKT;AACQd,EAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,IAAAA,YAAY,CAAEe,QAAd,CAAwBd,IAAxB,aAAwBA,IAAxB,uBAAwBA,IAAI,CAAEI,IAA9B,iBACU,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UADV,GAEUJ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,IAAAA,IAAI,CAAEe,QAAN,gBACI,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC,eAAb;AAA6B,IAAA,KAAK,EAAE;AAACC,MAAAA,IAAI,EAACf;AAAN,KAApC;AAAqD,IAAA,OAAO;AAA5D;AAAA;AAAA;AAAA;AAAA,UADJ,gBAEI,QAAC,QAAD;AAAU,IAAA,EAAE,EAAG,QAAf;AAAwB,IAAA,KAAK,EAAE;AAACe,MAAAA,IAAI,EAACf;AAAN,KAA/B;AAAgD,IAAA,OAAO;AAAvD;AAAA;AAAA;AAAA;AAAA,UAZ1B;AAgBH,CAnDD;;GAAMH,W;UACaF,O,EACEH,W,EACEI,a;;;KAHjBC,W;AAqDN,eAAeA,WAAf","sourcesContent":["import  { useLocation, Navigate,Outlet} from \"react-router-dom\";\n\nimport useAuth from \"../hooks/useAuth\";\nimport useDataUpdate from \"../hooks/useDataUpdate\";\n\n\n\nconst RequireAuth =  ({allowedRoles}) => {\n    const {auth} = useAuth();\n    const location = useLocation();\n    const dataUpdate = useDataUpdate(); \n    \n    if (auth.accessToken && !auth.role)Â {\n        console.log(\"hier liegt das Problem\")\n        console.log(\"Aber neue Daten kommen\")\n    }\n    useEffect(() => {\n        let isMounted = true; \n\n        const getfirstDataSet = async () => {\n            console.log(\"Verify Refresh token called\")\n            try {\n                await dataUpdate();\n            }        \n            catch (err) {\n                console.error(err);\n            }\n            finally{\n                isMounted && setIsLoading(false);\n            }\n        }\n        // Avoids unwanted call to verifyRefreshToken\n        //Verify Refresh Token funktionen nur aufrufen, wenn auth state nicht vorhanden ist\n        !auth?.role?  getfirstDataSet() : setIsLoading(false);\n\n        return () => isMounted = false;\n    }, [])\n\n/*     console.log(auth?.user);\n    console.log(`Die aktuelle Rolle ist ${auth?.role}`)\n    console.log(allowedRoles) */\n    \n    return (\n        \n        isLoading\n            ?   <MDBSpinner grow>\n                    <span className='visually-hidden'>Loading...</span>\n                </MDBSpinner>\n                : \n        //wenn AccessToken vorhanden Seite anzeigen, ansonsten login\n                allowedRoles?.includes( auth?.role)\n                        ? <Outlet/> \n                        : auth?.username \n                            ? <Navigate to=\"/unauthorized\" state={{from:location}} replace />\n                            : <Navigate to = \"/login\" state={{from:location}} replace />\n        \n    )\n\n}\n\nexport default RequireAuth;"]},"metadata":{},"sourceType":"module"}