{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Partners/PartnerForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PartnerForm(props) {\n  _s();\n\n  const [eori_nr, setEoriNr] = useState(\"\");\n  const [companies, setCompanies] = useState([]);\n  const [requestedCompany, setrequestedCompany] = useState(\"\");\n  const axiosPrivate = useAxiosPrivate();\n  const [testRerender, setTestRerender] = useState(false);\n  const [notFound, setNotFound] = useState(false);\n  const [isCurrentPartnership, setIsCurrentPartnership] = useState(false);\n  const [partnerships, setPartnerships] = useState(); //useffect Abfragen der Firmemliste\n\n  useEffect(() => {\n    axiosPrivate.get(\"partnership/\").then(res => {\n      console.log(res.data);\n      setPartnerships(res.data);\n    });\n  }, [testRerender]); //Debugging \n\n  useEffect(() => {\n    console.log(companies);\n  }, [companies]);\n\n  async function handleEORISearch() {\n    //Leeren wenn neu gesucht wird\n    setCompanies();\n    setNotFound(false);\n    await axiosPrivate.get(`companies/${eori_nr}/`).then(res => {\n      console.log(res.data);\n      setCompanies(res.data);\n      console.log(partnerships);\n      console.log(res.data.eori_nr);\n      isCurrentPartnership(false);\n\n      if (partnerships.some(partnerships => partnerships.partner.eori_nr == res.data.eori_nr)) {\n        setIsCurrentPartnership(true);\n        console.log(\"Partnerschaft exisitiert bereits\");\n      }\n    }).catch(err => {\n      console.log(err);\n      setNotFound(true);\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault(); //firma hinzufÃ¼gen\n\n    console.log('added partner: ' + companies.eori_nr);\n    axiosPrivate.post(\"/partnership/\", {\n      added_partner: companies.eori_nr\n    }).then(alert('Partner angefragt'), setTestRerender(true)).catch(error => {\n      console.error(\"There was an error!\", error);\n    }); //firma als partner hinterlegen\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n      children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n        className: \"my-3\",\n        name: \"eori_nr\",\n        label: \"EORI-Nr.\",\n        type: \"number\",\n        onChange: e => setEoriNr(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n        className: \"mt-3\",\n        type: \"search\",\n        color: \"info\",\n        onClick: e => handleEORISearch(),\n        children: \"Firmen suchen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), notFound && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" EORI-NR nicht gefunden, bitte erneut probieren\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 24\n      }, this), (companies === null || companies === void 0 ? void 0 : companies.name) != undefined && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Treffer: \", companies === null || companies === void 0 ? void 0 : companies.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 47\n      }, this), isCurrentPartnership ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Eine Partnerschaft existiert mit diesem Unternehmen bereits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n          className: \"mt-3\",\n          type: \"submit\",\n          onClick: e => handleSubmit(e),\n          color: \"success\",\n          children: \"Anfrage stellen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(PartnerForm, \"Q9V+td3fxdHTDu9yAFeCXU44SUY=\", false, function () {\n  return [useAxiosPrivate];\n});\n\n_c = PartnerForm;\nexport default PartnerForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PartnerForm\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Partners/PartnerForm.jsx"],"names":["React","useState","useEffect","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","useAxiosPrivate","PartnerForm","props","eori_nr","setEoriNr","companies","setCompanies","requestedCompany","setrequestedCompany","axiosPrivate","testRerender","setTestRerender","notFound","setNotFound","isCurrentPartnership","setIsCurrentPartnership","partnerships","setPartnerships","get","then","res","console","log","data","handleEORISearch","some","partner","catch","err","handleSubmit","e","preventDefault","post","added_partner","alert","error","target","value","name","undefined"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n} from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\n\n\n\n\nfunction PartnerForm(props) {\n  const [eori_nr, setEoriNr] = useState(\"\");\n  const [companies, setCompanies] = useState([]);\n  const [requestedCompany, setrequestedCompany] = useState(\"\")\n  const axiosPrivate = useAxiosPrivate();\n  const [testRerender, setTestRerender] = useState(false);\n  const [notFound, setNotFound] = useState(false);\n  const [isCurrentPartnership, setIsCurrentPartnership] = useState(false);\n  const [partnerships, setPartnerships] = useState()\n\n\n\n  //useffect Abfragen der Firmemliste\n\n  useEffect(() => {\n    axiosPrivate.get(\"partnership/\").then((res) => {\n      console.log(res.data);\n      setPartnerships(res.data);\n    });\n  \n  }, [testRerender])\n\n  //Debugging \n  useEffect(() => {\n    console.log(companies)\n  \n  }, [companies]) \n  \n  async function handleEORISearch () {\n    //Leeren wenn neu gesucht wird\n    setCompanies()\n    setNotFound(false)\n    await axiosPrivate.get(`companies/${eori_nr}/`).then((res) => {\n      console.log(res.data);\n      setCompanies(res.data);\n      console.log(partnerships)\n      console.log(res.data.eori_nr)\n      isCurrentPartnership(false)\n      if (partnerships.some(partnerships => partnerships.partner.eori_nr == res.data.eori_nr)){\n        setIsCurrentPartnership(true)\n        console.log(\"Partnerschaft exisitiert bereits\")\n      }\n    }).catch((err) => {\n      console.log(err)\n      setNotFound(true)\n    });\n  }\n\n  \n  function handleSubmit(e) {\n    e.preventDefault();\n    //firma hinzufÃ¼gen\n    console.log('added partner: ' + companies.eori_nr)\n    axiosPrivate\n      .post(\"/partnership/\", { added_partner: companies.eori_nr })\n      .then(\n        alert('Partner angefragt'),\n        setTestRerender(true),\n        )\n      .catch((error) => {\n        console.error(\"There was an error!\", error);\n      })\n      \n    //firma als partner hinterlegen\n  }\n\n  return (\n    <>\n        <MDBContainer>\n{/*           <Autocomplete\n                  className=\"mt-1\"\n                  disablePortal\n                  id=\"combo-box-companies\"\n                  options={companies}\n                  //choose name as label for ui\n                  getOptionLabel={(option) => option.name}\n                  //when changed, save choosen Partner\n                  onChange={(event, value) => {\n                    setrequestedCompany(value.eori_nr);\n                  }}\n                  sx={{ width: 320 }}\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"EmpfÃ¤nger der Partnerschaftsanfrage\" />\n                  )}\n                /> */}\n\n          <MDBInput\n            className=\"my-3\"\n            name=\"eori_nr\"\n            label=\"EORI-Nr.\"\n            type=\"number\"\n            onChange={(e) => setEoriNr(e.target.value)}\n          />  \n\n            <MDBBtn \n              className=\"mt-3\"\n              type=\"search\"\n              color=\"info\"\n              onClick={(e) => handleEORISearch()}\n            >\n              Firmen suchen\n            </MDBBtn>\n          {notFound && <p> EORI-NR nicht gefunden, bitte erneut probieren</p> }\n          { (companies?.name != undefined) && <p> Treffer: {companies?.name}</p> \n          }\n          {isCurrentPartnership ? (\n            <p> Eine Partnerschaft existiert mit diesem Unternehmen bereits</p>\n          ): (\n            <div className=\"d-grid mx-auto\">\n            <MDBBtn className=\"mt-3\" type=\"submit\" onClick={(e) => handleSubmit(e)} color=\"success\">\n              Anfrage stellen\n            </MDBBtn>\n          </div>\n          )}\n\n\n\n        </MDBContainer>\n    </>\n  );\n}\n\nexport default PartnerForm;\n"]},"metadata":{},"sourceType":"module"}