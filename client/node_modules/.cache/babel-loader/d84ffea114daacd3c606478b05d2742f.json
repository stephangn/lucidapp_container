{"ast":null,"code":"import _objectSpread from\"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/node_modules/@babel/runtime/regenerator/index.js\";import axiosInstance from\"../axiosApi\";import useAuth from\"./useAuth\";//Anfragen eines neuen Access Token mithilfe des im lokalen Speicher beim Mithilfe des abgelegtens Refresh Token\nvar useRefreshToken=function useRefreshToken(){var _useAuth=useAuth(),setAuth=_useAuth.setAuth;var refreshToken=localStorage.getItem(\"refresh_token\");var refresh=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axiosInstance.post('/api/token/refresh/',JSON.stringify({refresh:refreshToken}));case 2:response=_context.sent;setAuth(function(prev){//console.log(JSON.stringify(prev));\n//console.log(`New AccessToken received : ${response.data.access}`);\nreturn _objectSpread(_objectSpread({},prev),{},{accessToken:response.data.access});});return _context.abrupt(\"return\",response.data.access);case 5:case\"end\":return _context.stop();}}},_callee);}));return function refresh(){return _ref.apply(this,arguments);};}();return refresh;};export default useRefreshToken;","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/hooks/useRefreshToken.js"],"names":["axiosInstance","useAuth","useRefreshToken","setAuth","refreshToken","localStorage","getItem","refresh","post","JSON","stringify","response","prev","accessToken","data","access"],"mappings":"icAAA,MAAOA,CAAAA,aAAP,KAA0B,aAA1B,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CAEA;AAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC1B,aAAoBD,OAAO,EAA3B,CAAQE,OAAR,UAAQA,OAAR,CACA,GAAMC,CAAAA,YAAY,CAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAArB,CACA,GAAMC,CAAAA,OAAO,0FAAG,sKAIWP,CAAAA,aAAa,CAACQ,IAAd,CAAmB,qBAAnB,CACnBC,IAAI,CAACC,SAAL,CAAe,CAACH,OAAO,CAAEH,YAAV,CAAf,CADmB,CAJX,QAINO,QAJM,eAQZR,OAAO,CAAC,SAAAS,IAAI,CAAI,CACZ;AACA;AACA,sCACOA,IADP,MAIIC,WAAW,CAAEF,QAAQ,CAACG,IAAT,CAAcC,MAJ/B,GAMH,CATM,CAAP,CARY,gCAkBLJ,QAAQ,CAACG,IAAT,CAAcC,MAlBT,wDAAH,kBAAPR,CAAAA,OAAO,0CAAb,CAoBF,MAAOA,CAAAA,OAAP,CAED,CAzBD,CA2BA,cAAeL,CAAAA,eAAf","sourcesContent":["import axiosInstance from \"../axiosApi\"\nimport useAuth from \"./useAuth\"\n\n//Anfragen eines neuen Access Token mithilfe des im lokalen Speicher beim Mithilfe des abgelegtens Refresh Token\n\nconst useRefreshToken = () => {\n    const { setAuth } = useAuth();\n    const refreshToken = localStorage.getItem(\"refresh_token\");\n    const refresh = async() => {\n        //console.log(`Neuer Access token wird angefordert. Genutzter Refresh Token ${refreshToken}`);\n                    //Refresh Token an Server fÃ¼r neuen Access Token\n\n        const response = await axiosInstance.post('/api/token/refresh/', \n            JSON.stringify({refresh: refreshToken}),\n        );\n    \n        setAuth(prev => {\n            //console.log(JSON.stringify(prev));\n            //console.log(`New AccessToken received : ${response.data.access}`);\n            return {\n                ...prev,\n\n\n                accessToken: response.data.access\n            }\n        });\n        return response.data.access; \n    }\n  return refresh\n\n}\n\nexport default useRefreshToken"]},"metadata":{},"sourceType":"module"}