{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Declaration.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\"; // Unterformulare\n\nimport AllgemeineAngaben from \"../components/Declaration/AllgemeineAngaben\";\nimport Adressdaten from \"../components/Declaration/Adressdaten\";\nimport Lieferdaten from \"../components/Declaration/Lieferdaten\";\nimport Rechnungsdaten from \"../components/Declaration/Rechnungsdaten\";\nimport { MDBContainer } from \"mdb-react-ui-kit\"; // Stepper\n\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Declaration() {\n  _s();\n\n  // Stepper-Logik\n  const steps = [\"Allgemeine Angaben\", \"Adressdaten\", \"Lieferdaten\", \"Rechnungsdaten\"];\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set()); // (Kein Step ist optional)\n\n  const isStepOptional = step => {\n    return;\n  }; //Abfrage der voreingestellten Daten\n\n\n  const transactionId = 2;\n  const [transactionData, setTransactionData] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const axiosInstance = useAxiosPrivate();\n  useEffect(() => {\n    axiosInstance.get(`transactions/` + transactionId).then(res => {\n      console.log(res.data);\n      setTransactionData(res.data);\n      setIsLoading(false);\n    });\n    console.log(transactionData);\n    setFieldValue(prev => {\n      return { ...prev,\n        auftragsnummer: transactionData.id\n      };\n    });\n  }, []);\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const handleSubmit = () => {\n    console.log(fieldValue);\n    return;\n  }; // -- DATENFELDER --\n  // State des Inhalts der Felder\n\n\n  const [fieldValue, setFieldValue] = React.useState({\n    // Allgemeine Angaben\n    auftragsnummer: \"\",\n    bearbeitendeDienststelle: \"\",\n    anmeldungArt: \"\",\n    geschaeftArt: \"\",\n    zahlungArt: \"\",\n    // Adressdaten Versender\n    eoriVersender: \"\",\n    nameVersender: \"\",\n    vornameVersender: \"\",\n    firmaVersender: \"\",\n    strasseVersender: \"\",\n    plzVersender: \"\",\n    ortVersender: \"\",\n    staatVersender: \"\",\n    telefonVersender: \"\",\n    emailVersender: \"\",\n    // Adressdaten Anmelder\n    eoriAnmelder: \"\",\n    nameAnmelder: \"\",\n    vornameAnmelder: \"\",\n    firmaAnmelder: \"\",\n    strasseAnmelder: \"\",\n    plzAnmelder: \"\",\n    ortAnmelder: \"\",\n    staatAnmelder: \"\",\n    telefonAnmelder: \"\",\n    emailAnmelder: \"\",\n    // Lieferdaten\n    ausfuhrland: \"\",\n    bestimmungsland: \"\",\n    bestimmungsbundesland: \"\",\n    befoerderungsmittel: \"\",\n    lieferbedingung: \"\",\n    lieferort: \"\",\n    warenort: \"\",\n    //Rechnungsdaten\n    datumRechnung: \"\",\n    gesamtbetrag: \"\",\n    waehrung: \"\"\n  }); // State über fehlende Eingaben\n\n  const [inputMissingError, setInputMissingError] = React.useState({\n    // Allgemeine Angaben\n    auftragsnummer: false,\n    bearbeitendeDienststelle: false,\n    anmeldungArt: false,\n    geschaeftArt: false,\n    zahlungArt: false,\n    // Adressdaten Versender\n    eoriVersender: false,\n    nameVersender: false,\n    vornameVersender: false,\n    firmaVersender: false,\n    strasseVersender: false,\n    plzVersender: false,\n    ortVersender: false,\n    staatVersender: false,\n    telefonVersender: false,\n    emailVersender: false,\n    // Adressdaten Anmelder\n    eoriAnmelder: false,\n    nameAnmelder: false,\n    vornameAnmelder: false,\n    firmaAnmelder: false,\n    strasseAnmelder: false,\n    plzAnmelder: false,\n    ortAnmelder: false,\n    staatAnmelder: false,\n    telefonAnmelder: false,\n    emailAnmelder: false,\n    // Lieferdaten\n    ausfuhrland: false,\n    bestimmungsland: false,\n    bestimmungsbundesland: false,\n    befoerderungsmittel: false,\n    lieferbedingung: false,\n    lieferort: false,\n    warenort: false\n  }); // State über falsche Inputs (müssen Zahlen sein)\n\n  const [inputWrongError, setInputWrongError] = React.useState({\n    auftragsnummer: false,\n    eoriVersender: false,\n    plzVersender: false,\n    eoriAnmelder: false,\n    plsAnmelder: false\n  }); // FieldChange für Select und String-Felder\n\n  function handleFieldChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    setFieldValue({ ...fieldValue,\n      [name]: value\n    });\n    setInputMissingError({ ...inputMissingError,\n      [name]: false\n    });\n  } // FieldChange für Zahlen-Inputfelder\n\n\n  function handleNumberFieldChange(event) {\n    const name = event.target.name;\n    const value = event.target.value; // Validierung: nur Zahlen\n\n    if (isNaN(value)) {\n      setInputWrongError({ ...inputWrongError,\n        [name]: true\n      });\n    } else {\n      setInputWrongError({ ...inputWrongError,\n        [name]: false\n      });\n    }\n\n    setFieldValue({ ...fieldValue,\n      [name]: value\n    });\n    setInputMissingError({ ...inputMissingError,\n      [name]: false\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Zollanmeldung\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Stepper, {\n          className: \"mb-3\",\n          activeStep: activeStep,\n          children: steps.map((label, index) => {\n            const stepProps = {};\n            const labelProps = {};\n\n            if (isStepOptional(index)) {\n              labelProps.optional = /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                children: \"Optional\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this);\n            }\n\n            if (isStepSkipped(index)) {\n              stepProps.completed = false;\n            }\n\n            return /*#__PURE__*/_jsxDEV(Step, { ...stepProps,\n              children: /*#__PURE__*/_jsxDEV(StepLabel, { ...labelProps,\n                children: label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this)\n            }, label, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), activeStep === steps.length ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 2,\n              mb: 1\n            },\n            children: \"All steps completed - you're finished\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              pt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flex: \"1 1 auto\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleReset,\n              children: \"Zur\\xFCcksetzen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [activeStep === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n              children: /*#__PURE__*/_jsxDEV(AllgemeineAngaben, {\n                fieldValue: fieldValue,\n                setFieldValue: setFieldValue,\n                inputMissingError: inputMissingError,\n                setInputMissingError: setInputMissingError,\n                inputWrongError: inputWrongError,\n                setInputWrongError: setInputWrongError,\n                handleFieldChange: handleFieldChange,\n                handleNumberFieldChange: handleNumberFieldChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this)\n          }, void 0, false) : activeStep === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n              children: /*#__PURE__*/_jsxDEV(Adressdaten, {\n                fieldValue: fieldValue,\n                setFieldValue: setFieldValue,\n                inputMissingError: inputMissingError,\n                setInputMissingError: setInputMissingError,\n                inputWrongError: inputWrongError,\n                setInputWrongError: setInputWrongError,\n                handleFieldChange: handleFieldChange,\n                handleNumberFieldChange: handleNumberFieldChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this)\n          }, void 0, false) : activeStep === 2 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n              children: /*#__PURE__*/_jsxDEV(Lieferdaten, {\n                fieldValue: fieldValue,\n                setFieldValue: setFieldValue,\n                inputMissingError: inputMissingError,\n                setInputMissingError: setInputMissingError,\n                inputWrongError: inputWrongError,\n                setInputWrongError: setInputWrongError,\n                handleFieldChange: handleFieldChange,\n                handleNumberFieldChange: handleNumberFieldChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n              children: /*#__PURE__*/_jsxDEV(Rechnungsdaten, {\n                fieldValue: fieldValue,\n                setFieldValue: setFieldValue,\n                inputMissingError: inputMissingError,\n                setInputMissingError: setInputMissingError,\n                inputWrongError: inputWrongError,\n                setInputWrongError: setInputWrongError,\n                handleFieldChange: handleFieldChange,\n                handleNumberFieldChange: handleNumberFieldChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 19\n            }, this)\n          }, void 0, false), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              pt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"inherit\",\n              disabled: activeStep === 0,\n              onClick: handleBack,\n              sx: {\n                mr: 1\n              },\n              children: \"Zur\\xFCck\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flex: \"1 1 auto\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this), isStepOptional(activeStep) && /*#__PURE__*/_jsxDEV(Button, {\n              color: \"inherit\",\n              onClick: handleSkip,\n              sx: {\n                mr: 1\n              },\n              children: \"\\xDCberspringen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 19\n            }, this), activeStep === steps.length - 1 ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSubmit,\n              children: \"Abschicken\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleNext,\n              children: \"Weiter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Declaration, \"+OZCxdE/kh0laQ5txCCVe2SgKjw=\", false, function () {\n  return [useAxiosPrivate];\n});\n\n_c = Declaration;\nexport default Declaration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Declaration\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Declaration.jsx"],"names":["React","useState","useEffect","useAxiosPrivate","AllgemeineAngaben","Adressdaten","Lieferdaten","Rechnungsdaten","MDBContainer","Box","Stepper","Step","StepLabel","Button","Typography","Declaration","steps","activeStep","setActiveStep","skipped","setSkipped","Set","isStepOptional","step","transactionId","transactionData","setTransactionData","isLoading","setIsLoading","axiosInstance","get","then","res","console","log","data","setFieldValue","prev","auftragsnummer","id","isStepSkipped","has","handleNext","newSkipped","values","delete","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","handleReset","handleSubmit","fieldValue","bearbeitendeDienststelle","anmeldungArt","geschaeftArt","zahlungArt","eoriVersender","nameVersender","vornameVersender","firmaVersender","strasseVersender","plzVersender","ortVersender","staatVersender","telefonVersender","emailVersender","eoriAnmelder","nameAnmelder","vornameAnmelder","firmaAnmelder","strasseAnmelder","plzAnmelder","ortAnmelder","staatAnmelder","telefonAnmelder","emailAnmelder","ausfuhrland","bestimmungsland","bestimmungsbundesland","befoerderungsmittel","lieferbedingung","lieferort","warenort","datumRechnung","gesamtbetrag","waehrung","inputMissingError","setInputMissingError","inputWrongError","setInputWrongError","plsAnmelder","handleFieldChange","event","name","target","value","handleNumberFieldChange","isNaN","width","map","label","index","stepProps","labelProps","optional","completed","length","mt","mb","display","flexDirection","pt","flex","mr"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\n\n// Unterformulare\nimport AllgemeineAngaben from \"../components/Declaration/AllgemeineAngaben\";\nimport Adressdaten from \"../components/Declaration/Adressdaten\";\nimport Lieferdaten from \"../components/Declaration/Lieferdaten\";\nimport Rechnungsdaten from \"../components/Declaration/Rechnungsdaten\";\n\nimport { MDBContainer } from \"mdb-react-ui-kit\";\n\n// Stepper\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\n\nfunction Declaration() {\n  // Stepper-Logik\n  const steps = [\n    \"Allgemeine Angaben\",\n    \"Adressdaten\",\n    \"Lieferdaten\",\n    \"Rechnungsdaten\",\n  ];\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n\n  // (Kein Step ist optional)\n  const isStepOptional = (step) => {\n    return;\n  };\n\n\n  //Abfrage der voreingestellten Daten\n  const transactionId = 2; \n  const [transactionData, setTransactionData] = useState();\n  \n  const [isLoading, setIsLoading] = useState(true);\n\n  const axiosInstance = useAxiosPrivate();\n\n\n  useEffect(() => {\n    axiosInstance.get(`transactions/` + transactionId).then((res) => {\n      console.log(res.data);\n      setTransactionData(res.data);\n      setIsLoading(false)\n    });\n    console.log(transactionData)\n\n    setFieldValue(prev => {\n      return {\n          ...prev,\n          auftragsnummer: transactionData.id,\n\n\n      }\n    });\n  }, []);\n\n  \n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const handleSubmit = () => {\n    console.log(fieldValue);\n    return;\n  };\n\n\n\n  // -- DATENFELDER --\n\n  // State des Inhalts der Felder\n  const [fieldValue, setFieldValue] = React.useState({\n    // Allgemeine Angaben\n    auftragsnummer:\"\",\n    bearbeitendeDienststelle: \"\",\n    anmeldungArt: \"\",\n    geschaeftArt: \"\",\n    zahlungArt: \"\",\n    // Adressdaten Versender\n    eoriVersender: \"\",\n    nameVersender: \"\",\n    vornameVersender: \"\",\n    firmaVersender: \"\",\n    strasseVersender: \"\",\n    plzVersender: \"\",\n    ortVersender: \"\",\n    staatVersender: \"\",\n    telefonVersender: \"\",\n    emailVersender: \"\",\n    // Adressdaten Anmelder\n    eoriAnmelder: \"\",\n    nameAnmelder: \"\",\n    vornameAnmelder: \"\",\n    firmaAnmelder: \"\",\n    strasseAnmelder: \"\",\n    plzAnmelder: \"\",\n    ortAnmelder: \"\",\n    staatAnmelder: \"\",\n    telefonAnmelder: \"\",\n    emailAnmelder: \"\",\n    // Lieferdaten\n    ausfuhrland: \"\",\n    bestimmungsland: \"\",\n    bestimmungsbundesland: \"\",\n    befoerderungsmittel: \"\",\n    lieferbedingung: \"\",\n    lieferort: \"\",\n    warenort: \"\",\n    //Rechnungsdaten\n    datumRechnung: \"\",\n    gesamtbetrag: \"\",\n    waehrung: \"\",\n  });\n\n  // State über fehlende Eingaben\n  const [inputMissingError, setInputMissingError] = React.useState({\n    // Allgemeine Angaben\n    auftragsnummer: false,\n    bearbeitendeDienststelle: false,\n    anmeldungArt: false,\n    geschaeftArt: false,\n    zahlungArt: false,\n    // Adressdaten Versender\n    eoriVersender: false,\n    nameVersender: false,\n    vornameVersender: false,\n    firmaVersender: false,\n    strasseVersender: false,\n    plzVersender: false,\n    ortVersender: false,\n    staatVersender: false,\n    telefonVersender: false,\n    emailVersender: false,\n    // Adressdaten Anmelder\n    eoriAnmelder: false,\n    nameAnmelder: false,\n    vornameAnmelder: false,\n    firmaAnmelder: false,\n    strasseAnmelder: false,\n    plzAnmelder: false,\n    ortAnmelder: false,\n    staatAnmelder: false,\n    telefonAnmelder: false,\n    emailAnmelder: false,\n    // Lieferdaten\n    ausfuhrland: false,\n    bestimmungsland: false,\n    bestimmungsbundesland: false,\n    befoerderungsmittel: false,\n    lieferbedingung: false,\n    lieferort: false,\n    warenort: false,\n  });\n\n  // State über falsche Inputs (müssen Zahlen sein)\n  const [inputWrongError, setInputWrongError] = React.useState({\n    auftragsnummer: false,\n    eoriVersender: false,\n    plzVersender: false,\n    eoriAnmelder: false,\n    plsAnmelder: false,\n  });\n\n  // FieldChange für Select und String-Felder\n  function handleFieldChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    setFieldValue({ ...fieldValue, [name]: value });\n    setInputMissingError({ ...inputMissingError, [name]: false });\n  }\n\n  // FieldChange für Zahlen-Inputfelder\n  function handleNumberFieldChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    // Validierung: nur Zahlen\n    if (isNaN(value)) {\n      setInputWrongError({ ...inputWrongError, [name]: true });\n    } else {\n      setInputWrongError({ ...inputWrongError, [name]: false });\n    }\n\n    setFieldValue({ ...fieldValue, [name]: value });\n    setInputMissingError({ ...inputMissingError, [name]: false });\n  }\n\n  return (\n    <>\n      <h3>Zollanmeldung</h3>\n      <br />\n\n      <div>\n        <Box sx={{ width: \"100%\" }}>\n          <Stepper className=\"mb-3\" activeStep={activeStep}>\n            {steps.map((label, index) => {\n              const stepProps = {};\n              const labelProps = {};\n              if (isStepOptional(index)) {\n                labelProps.optional = (\n                  <Typography variant=\"caption\">Optional</Typography>\n                );\n              }\n              if (isStepSkipped(index)) {\n                stepProps.completed = false;\n              }\n              return (\n                <Step key={label} {...stepProps}>\n                  <StepLabel {...labelProps}>{label}</StepLabel>\n                </Step>\n              );\n            })}\n          </Stepper>\n          {activeStep === steps.length ? (\n            <React.Fragment>\n              <Typography sx={{ mt: 2, mb: 1 }}>\n                All steps completed - you&apos;re finished\n              </Typography>\n              <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                <Box sx={{ flex: \"1 1 auto\" }} />\n                <Button onClick={handleReset}>Zurücksetzen</Button>\n              </Box>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              {activeStep === 0 ? (\n                <>\n                  <MDBContainer>\n                    <AllgemeineAngaben\n                      fieldValue={fieldValue}\n                      setFieldValue={setFieldValue}\n                      inputMissingError={inputMissingError}\n                      setInputMissingError={setInputMissingError}\n                      inputWrongError={inputWrongError}\n                      setInputWrongError={setInputWrongError}\n                      handleFieldChange={handleFieldChange}\n                      handleNumberFieldChange={handleNumberFieldChange}\n                    />\n                  </MDBContainer>\n                </>\n              ) : activeStep === 1 ? (\n                <>\n                  <MDBContainer>\n                    <Adressdaten\n                      fieldValue={fieldValue}\n                      setFieldValue={setFieldValue}\n                      inputMissingError={inputMissingError}\n                      setInputMissingError={setInputMissingError}\n                      inputWrongError={inputWrongError}\n                      setInputWrongError={setInputWrongError}\n                      handleFieldChange={handleFieldChange}\n                      handleNumberFieldChange={handleNumberFieldChange}\n                    />\n                  </MDBContainer>\n                </>\n              ) : activeStep === 2 ? (\n                <>\n                  <MDBContainer>\n                    <Lieferdaten\n                      fieldValue={fieldValue}\n                      setFieldValue={setFieldValue}\n                      inputMissingError={inputMissingError}\n                      setInputMissingError={setInputMissingError}\n                      inputWrongError={inputWrongError}\n                      setInputWrongError={setInputWrongError}\n                      handleFieldChange={handleFieldChange}\n                      handleNumberFieldChange={handleNumberFieldChange}\n                    />\n                  </MDBContainer>\n                </>\n              ) : (\n                <>\n                  <MDBContainer>\n                    <Rechnungsdaten\n                      fieldValue={fieldValue}\n                      setFieldValue={setFieldValue}\n                      inputMissingError={inputMissingError}\n                      setInputMissingError={setInputMissingError}\n                      inputWrongError={inputWrongError}\n                      setInputWrongError={setInputWrongError}\n                      handleFieldChange={handleFieldChange}\n                      handleNumberFieldChange={handleNumberFieldChange}\n                    />\n                  </MDBContainer>\n                </>\n              )}\n              <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                <Button\n                  color=\"inherit\"\n                  disabled={activeStep === 0}\n                  onClick={handleBack}\n                  sx={{ mr: 1 }}\n                >\n                  Zurück\n                </Button>\n                <Box sx={{ flex: \"1 1 auto\" }} />\n                {isStepOptional(activeStep) && (\n                  <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\n                    Überspringen\n                  </Button>\n                )}\n\n                {activeStep === steps.length - 1 ? (\n                  <Button onClick={handleSubmit}>Abschicken</Button>\n                ) : (\n                  <Button onClick={handleNext}>Weiter</Button>\n                )}\n              </Box>\n              <br />\n              <br />\n              <br />\n            </React.Fragment>\n          )}\n        </Box>\n      </div>\n    </>\n  );\n}\n\nexport default Declaration;\n"]},"metadata":{},"sourceType":"module"}