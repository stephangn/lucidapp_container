{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Transactions/Transaction.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from \"react\";\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardTitle, MDBCardSubTitle, MDBCardText, MDBCol, MDBContainer, MDBRow, MDBIcon, MDBCardFooter, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBDropdownLink, MDBModal, MDBModalDialog, MDBModalContent, MDBModalHeader, MDBModalTitle, MDBModalBody, MDBModalFooter, MDBInput } from \"mdb-react-ui-kit\";\nimport Inbound from \"../../icons/inbound.png\";\nimport Outbound from \"../../icons/outbound.png\";\nimport { Link } from \"react-router-dom\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { ConstructionOutlined } from \"@mui/icons-material\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Transaction(props) {\n  _s();\n\n  const {\n    auth\n  } = useAuth(); // State: Importeur oder Exporteur\n\n  const [isImporteur, setIsImporteur] = useState(false); // State: Anzahl Dokumente\n\n  const [numberDocuments, setNumberDocuments] = useState(0); // State: Anzahl Rechnungen\n\n  const [numberInvoices, setNumberInvoices] = useState(0); // State: Zollanmeldung vorhanden\n\n  const [declarationExists, setDeclarationExists] = useState(false);\n  const axiosInstance = useAxiosPrivate(); // Funktion überprüft ob Importeur oder Exporteur\n\n  useEffect(() => {\n    if (auth.eori_nr == props.importeur) {\n      setIsImporteur(true);\n    }\n  }); // Abgleich Anzahl Dokumente für Transaktion\n\n  useEffect(() => {\n    let documents = props.documentsData;\n    let anzahlDokumente = 0;\n    let anzahlRechnungen = 0;\n\n    if (documents.length !== 0) {\n      for (let i in documents) {\n        if (documents[i].transaction == props.id) {\n          // Wenn Dokument Transaktion angehört summiere Dokumente\n          anzahlDokumente += 1; // Wenn Dokument == Rechnung summmiere Rechnungen\n\n          if (documents[i].type == \"Rechnung\") {\n            anzahlRechnungen += 1;\n          }\n        }\n      }\n\n      setNumberDocuments(anzahlDokumente);\n      setNumberInvoices(anzahlRechnungen);\n    }\n  }, [props.documentsData]); // Prüfen ob Zollanmeldung vorliegt\n\n  useEffect(() => {\n    let declaration = props.declarationData;\n    let anmeldungVorhanden = false;\n\n    if (declaration.length !== 0) {\n      for (let i in declaration) {\n        if (declaration[i].transaction == props.id) {\n          // Wenn Anmeldung Transaktion angehört setze auf true\n          anmeldungVorhanden = true;\n        }\n      }\n\n      setDeclarationExists(anmeldungVorhanden);\n    }\n  }, [props.declarationData]); // Delete Modal State\n\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  function toggleShowDeleteModal() {\n    setDeleteModal(!deleteModal);\n  } // Hier Delete-Request an DB\n  // Transaktions-ID ist 'props.id'\n\n\n  function deleteTransaction() {\n    console.log(props.id);\n    axiosInstance.delete(\"transactions/\" + props.id + \"/\").then(res => {\n      console.log(\"Transaktion gelöscht\");\n    }).catch(err => {\n      console.log(err);\n    });\n  } // Edit Modal State\n\n\n  const [editModal, setEditModal] = useState(false);\n\n  function toggleShowEditModal() {\n    setEditModal(!editModal);\n  } // In die Funktion Post-Request für aktualisierte Beschreibung\n  // Beschreibung ist 'description' ; Transaktions-ID ist 'props.id'\n\n\n  const [description, setDescription] = useState(props.title);\n\n  function handleEditSubmit(e) {\n    e.preventDefault();\n    console.log(description);\n    axiosInstance.patch(\"transactions/\" + props.id + \"/\", {\n      description: description\n    }).then(res => {\n      console.log(\"Transaktion geändert\");\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MDBCard, {\n      children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n        children: [/*#__PURE__*/_jsxDEV(MDBContainer, {\n          children: [/*#__PURE__*/_jsxDEV(MDBCardTitle, {\n            children: [isImporteur ? \"Import: \" : \"Export: \", props.title, /*#__PURE__*/_jsxDEV(MDBDropdown, {\n              className: \"float-end\",\n              children: [/*#__PURE__*/_jsxDEV(MDBDropdownToggle, {\n                outline: true,\n                children: /*#__PURE__*/_jsxDEV(MDBIcon, {\n                  size: \"lg\",\n                  fas: true,\n                  icon: \"edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MDBDropdownMenu, {\n                children: [/*#__PURE__*/_jsxDEV(MDBDropdownItem, {\n                  children: /*#__PURE__*/_jsxDEV(MDBDropdownLink, {\n                    onClick: toggleShowEditModal,\n                    children: [/*#__PURE__*/_jsxDEV(MDBIcon, {\n                      className: \"me-2\",\n                      fas: true,\n                      icon: \"edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 23\n                    }, this), \"Bearbeiten\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MDBDropdownItem, {\n                  children: /*#__PURE__*/_jsxDEV(MDBDropdownLink, {\n                    onClick: toggleShowDeleteModal,\n                    children: [/*#__PURE__*/_jsxDEV(MDBIcon, {\n                      className: \"me-2\",\n                      fas: true,\n                      icon: \"trash-alt\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 23\n                    }, this), \"L\\xF6schen\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBCardSubTitle, {\n            children: [\"Hinzugef\\xFCgt am: \", props.added, \" (\", props.timestamp_added.slice(11, 19), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBContainer, {\n          children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n            children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n              sm: \"2\",\n              className: \"d-flex justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                style: {\n                  width: \"100px\",\n                  height: \"100px\"\n                },\n                src: isImporteur ? Inbound : Outbound\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n              sm: \"5\",\n              children: /*#__PURE__*/_jsxDEV(MDBCardText, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: [\"Handelspartner\", isImporteur && \" (Exporteur)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 19\n                }, this), props.exportAddress, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, this), props.exportStreet, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this), props.exportCity, \", \", props.exportCountry]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n              sm: \"5\",\n              children: /*#__PURE__*/_jsxDEV(MDBCardText, {\n                className: \"mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Dokumente insgesamt: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this), numberDocuments, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Rechnungsdokumente: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 19\n                }, this), numberInvoices, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Zollanmeldung: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this), declarationExists ? \"liegt vor\" : \"ausstehend\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Zollbescheid: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 19\n                }, this), \"ausstehend (STATISCH)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n            children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n              md: \"8\",\n              lg: \"8\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-warning\",\n                role: \"alert\",\n                children: [\"Status: \", props.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n              md: \"4\",\n              lg: \"4\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                style: {\n                  display: \"block\",\n                  margin: \"1rem 0\"\n                },\n                to: \"/transactions/\" + props.id.toString(),\n                params: {\n                  title: \"Hello\"\n                },\n                children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n                  className: \"float-end\",\n                  children: \"Dokumente anzeigen\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 19\n                }, this)\n              }, props.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBCardFooter, {\n          children: [\"Zuletzt aktualisiert: \", props.lastChange, \" (\", props.timestamp_processed.slice(11, 19), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBModal, {\n      show: deleteModal,\n      setShow: setDeleteModal,\n      tabIndex: \"-1\",\n      children: /*#__PURE__*/_jsxDEV(MDBModalDialog, {\n        children: /*#__PURE__*/_jsxDEV(MDBModalContent, {\n          children: [/*#__PURE__*/_jsxDEV(MDBModalHeader, {\n            children: [/*#__PURE__*/_jsxDEV(MDBModalTitle, {\n              children: \"Auftrag entfernen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n              className: \"btn-close\",\n              color: \"none\",\n              onClick: toggleShowDeleteModal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBModalBody, {\n            children: [\"Wollen sie den Auftrag \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\"\\\"\", props.title, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 38\n            }, this), \" wirklich entfernen? Dieser Vorgang l\\xE4sst sich nicht r\\xFCckg\\xE4ngig machen.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBModalFooter, {\n            children: [/*#__PURE__*/_jsxDEV(MDBBtn, {\n              color: \"danger\",\n              onClick: toggleShowDeleteModal,\n              children: \"Nicht entfernen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n              outline: true,\n              color: \"danger\",\n              onClick: deleteTransaction,\n              children: \"Entfernen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBModal, {\n      show: editModal,\n      setShow: setEditModal,\n      children: /*#__PURE__*/_jsxDEV(MDBModalDialog, {\n        children: /*#__PURE__*/_jsxDEV(MDBModalContent, {\n          children: [/*#__PURE__*/_jsxDEV(MDBModalHeader, {\n            children: [/*#__PURE__*/_jsxDEV(MDBModalTitle, {\n              children: \"Auftrag umbenennen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n              className: \"btn-close\",\n              color: \"none\",\n              onClick: toggleShowEditModal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBModalBody, {\n            children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleEditSubmit,\n                children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n                  name: \"description\",\n                  label: \"Beschreibung der Transaktion\",\n                  type: \"text\",\n                  className: \"mt-2\",\n                  onChange: e => setDescription(e.target.value),\n                  value: description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n                  children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n                    type: \"submit\",\n                    color: \"success\",\n                    className: \"mt-4 mb-2\",\n                    children: \"Speichern\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBModalFooter, {\n            children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n              color: \"danger\",\n              onClick: toggleShowEditModal,\n              children: \"Abbrechen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Transaction, \"Ys/uMCk6M7FsxgOAYqnItKYQp2Q=\", false, function () {\n  return [useAuth, useAxiosPrivate];\n});\n\n_c = Transaction;\nexport default Transaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transaction\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Transactions/Transaction.jsx"],"names":["React","Component","useEffect","useState","MDBBtn","MDBCard","MDBCardBody","MDBCardTitle","MDBCardSubTitle","MDBCardText","MDBCol","MDBContainer","MDBRow","MDBIcon","MDBCardFooter","MDBDropdown","MDBDropdownToggle","MDBDropdownMenu","MDBDropdownItem","MDBDropdownLink","MDBModal","MDBModalDialog","MDBModalContent","MDBModalHeader","MDBModalTitle","MDBModalBody","MDBModalFooter","MDBInput","Inbound","Outbound","Link","useAuth","ConstructionOutlined","useAxiosPrivate","axios","Transaction","props","auth","isImporteur","setIsImporteur","numberDocuments","setNumberDocuments","numberInvoices","setNumberInvoices","declarationExists","setDeclarationExists","axiosInstance","eori_nr","importeur","documents","documentsData","anzahlDokumente","anzahlRechnungen","length","i","transaction","id","type","declaration","declarationData","anmeldungVorhanden","deleteModal","setDeleteModal","toggleShowDeleteModal","deleteTransaction","console","log","delete","then","res","catch","err","editModal","setEditModal","toggleShowEditModal","description","setDescription","title","handleEditSubmit","e","preventDefault","patch","added","timestamp_added","slice","width","height","exportAddress","exportStreet","exportCity","exportCountry","status","display","margin","toString","lastChange","timestamp_processed","target","value"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\nimport {\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardSubTitle,\n  MDBCardText,\n  MDBCol,\n  MDBContainer,\n  MDBRow,\n  MDBIcon,\n  MDBCardFooter,\n  MDBDropdown,\n  MDBDropdownToggle,\n  MDBDropdownMenu,\n  MDBDropdownItem,\n  MDBDropdownLink,\n  MDBModal,\n  MDBModalDialog,\n  MDBModalContent,\n  MDBModalHeader,\n  MDBModalTitle,\n  MDBModalBody,\n  MDBModalFooter,\n  MDBInput,\n} from \"mdb-react-ui-kit\";\nimport Inbound from \"../../icons/inbound.png\";\nimport Outbound from \"../../icons/outbound.png\";\n\nimport { Link } from \"react-router-dom\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { ConstructionOutlined } from \"@mui/icons-material\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport axios from \"axios\";\n\nfunction Transaction(props) {\n  const { auth } = useAuth();\n\n  // State: Importeur oder Exporteur\n  const [isImporteur, setIsImporteur] = useState(false);\n\n  // State: Anzahl Dokumente\n  const [numberDocuments, setNumberDocuments] = useState(0);\n\n  // State: Anzahl Rechnungen\n  const [numberInvoices, setNumberInvoices] = useState(0);\n\n  // State: Zollanmeldung vorhanden\n  const [declarationExists, setDeclarationExists] = useState(false);\n  const axiosInstance = useAxiosPrivate();\n\n  // Funktion überprüft ob Importeur oder Exporteur\n  useEffect(() => {\n    if (auth.eori_nr == props.importeur) {\n      setIsImporteur(true);\n    }\n  });\n\n  // Abgleich Anzahl Dokumente für Transaktion\n  useEffect(() => {\n    let documents = props.documentsData;\n    let anzahlDokumente = 0;\n    let anzahlRechnungen = 0;\n    if (documents.length !== 0) {\n      for (let i in documents) {\n        if (documents[i].transaction == props.id) {\n          // Wenn Dokument Transaktion angehört summiere Dokumente\n          anzahlDokumente += 1;\n          // Wenn Dokument == Rechnung summmiere Rechnungen\n          if (documents[i].type == \"Rechnung\") {\n            anzahlRechnungen += 1;\n          }\n        }\n      }\n      setNumberDocuments(anzahlDokumente);\n      setNumberInvoices(anzahlRechnungen);\n    }\n  }, [props.documentsData]);\n\n  // Prüfen ob Zollanmeldung vorliegt\n  useEffect(() => {\n    let declaration = props.declarationData;\n    let anmeldungVorhanden = false;\n    if (declaration.length !== 0) {\n      for (let i in declaration) {\n        if (declaration[i].transaction == props.id) {\n          // Wenn Anmeldung Transaktion angehört setze auf true\n          anmeldungVorhanden = true;\n        }\n      }\n      setDeclarationExists(anmeldungVorhanden);\n    }\n  }, [props.declarationData]);\n\n  // Delete Modal State\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  function toggleShowDeleteModal() {\n    setDeleteModal(!deleteModal);\n  }\n\n  // Hier Delete-Request an DB\n  // Transaktions-ID ist 'props.id'\n  function deleteTransaction() {\n    console.log(props.id);\n    axiosInstance\n      .delete(\"transactions/\" + props.id + \"/\")\n      .then((res) => {\n        console.log(\"Transaktion gelöscht\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // Edit Modal State\n  const [editModal, setEditModal] = useState(false);\n\n  function toggleShowEditModal() {\n    setEditModal(!editModal);\n  }\n\n  // In die Funktion Post-Request für aktualisierte Beschreibung\n  // Beschreibung ist 'description' ; Transaktions-ID ist 'props.id'\n  const [description, setDescription] = useState(props.title);\n\n  function handleEditSubmit(e) {\n    e.preventDefault();\n    console.log(description);\n    axiosInstance\n      .patch(\"transactions/\" + props.id + \"/\", { description: description })\n      .then((res) => {\n        console.log(\"Transaktion geändert\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  return (\n    <div>\n      <MDBCard>\n        <MDBCardBody>\n          <MDBContainer>\n            <MDBCardTitle>\n              {isImporteur ? \"Import: \" : \"Export: \"}\n              {props.title}\n              {/* <MDBIcon className=\"float-end\" size=\"lg\" fas icon=\"ellipsis-h\" /> */}\n              <MDBDropdown className=\"float-end\">\n                <MDBDropdownToggle outline>\n                  <MDBIcon size=\"lg\" fas icon=\"edit\" />\n                </MDBDropdownToggle>\n                <MDBDropdownMenu>\n                  <MDBDropdownItem>\n                    <MDBDropdownLink onClick={toggleShowEditModal}>\n                      <MDBIcon className=\"me-2\" fas icon=\"edit\" />\n                      Bearbeiten\n                    </MDBDropdownLink>\n                  </MDBDropdownItem>\n                  <MDBDropdownItem>\n                    <MDBDropdownLink onClick={toggleShowDeleteModal}>\n                      <MDBIcon className=\"me-2\" fas icon=\"trash-alt\" />\n                      Löschen\n                    </MDBDropdownLink>\n                  </MDBDropdownItem>\n                </MDBDropdownMenu>\n              </MDBDropdown>\n            </MDBCardTitle>\n\n            <MDBCardSubTitle>\n              Hinzugefügt am: {props.added} (\n              {props.timestamp_added.slice(11, 19)})\n            </MDBCardSubTitle>\n            <br />\n          </MDBContainer>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol sm=\"2\" className=\"d-flex justify-content-center\">\n                <img\n                  style={{ width: \"100px\", height: \"100px\" }}\n                  src={isImporteur ? Inbound : Outbound}\n                />\n\n                {/* <MDBIcon fas icon=\"clipboard-list\" size=\"4x\" className=\"mt-3\" /> */}\n              </MDBCol>\n              <MDBCol sm=\"5\">\n                <MDBCardText className=\"mb-3\">\n                  <b>Handelspartner{isImporteur && \" (Exporteur)\"}</b>\n                  <br />\n                  {props.exportAddress}\n                  <br />\n                  {props.exportStreet}\n                  <br />\n                  {props.exportCity}, {props.exportCountry}\n                </MDBCardText>\n              </MDBCol>\n              <MDBCol sm=\"5\">\n                <MDBCardText className=\"mb-2\">\n                  <b>Dokumente insgesamt: </b>\n                  {numberDocuments}\n                  <br />\n                  <b>Rechnungsdokumente: </b>\n                  {numberInvoices}\n                  <br />\n                  <b>Zollanmeldung: </b>\n                  {declarationExists ? \"liegt vor\" : \"ausstehend\"}\n                  <br />\n                  <b>Zollbescheid: </b>ausstehend (STATISCH)\n                </MDBCardText>\n              </MDBCol>\n            </MDBRow>\n            <br />\n            <MDBRow>\n              <MDBCol md=\"8\" lg=\"8\">\n                <div className=\"alert alert-warning\" role=\"alert\">\n                  Status: {props.status}\n                </div>\n              </MDBCol>\n              <MDBCol md=\"4\" lg=\"4\">\n                <Link\n                  style={{ display: \"block\", margin: \"1rem 0\" }}\n                  to={\"/transactions/\" + props.id.toString()}\n                  key={props.id}\n                  params={{ title: \"Hello\" }}\n                >\n                  <MDBBtn className=\"float-end\">Dokumente anzeigen</MDBBtn>\n                </Link>\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n          <MDBCardFooter>\n            Zuletzt aktualisiert: {props.lastChange} (\n            {props.timestamp_processed.slice(11, 19)})\n          </MDBCardFooter>\n        </MDBCardBody>\n      </MDBCard>\n\n      {/* Delete Modal */}\n      <MDBModal show={deleteModal} setShow={setDeleteModal} tabIndex=\"-1\">\n        <MDBModalDialog>\n          <MDBModalContent>\n            <MDBModalHeader>\n              <MDBModalTitle>Auftrag entfernen</MDBModalTitle>\n              <MDBBtn\n                className=\"btn-close\"\n                color=\"none\"\n                onClick={toggleShowDeleteModal}\n              ></MDBBtn>\n            </MDBModalHeader>\n            <MDBModalBody>\n              Wollen sie den Auftrag <b>\"{props.title}\"</b> wirklich entfernen?\n              Dieser Vorgang lässt sich nicht rückgängig machen.\n            </MDBModalBody>\n\n            <MDBModalFooter>\n              <MDBBtn color=\"danger\" onClick={toggleShowDeleteModal}>\n                Nicht entfernen\n              </MDBBtn>\n              <MDBBtn outline color=\"danger\" onClick={deleteTransaction}>\n                Entfernen\n              </MDBBtn>\n            </MDBModalFooter>\n          </MDBModalContent>\n        </MDBModalDialog>\n      </MDBModal>\n\n      {/* Edit Modal */}\n      <MDBModal show={editModal} setShow={setEditModal}>\n        <MDBModalDialog>\n          <MDBModalContent>\n            <MDBModalHeader>\n              <MDBModalTitle>Auftrag umbenennen</MDBModalTitle>\n              <MDBBtn\n                className=\"btn-close\"\n                color=\"none\"\n                onClick={toggleShowEditModal}\n              ></MDBBtn>\n            </MDBModalHeader>\n            <MDBModalBody>\n              <MDBContainer>\n                <form onSubmit={handleEditSubmit}>\n                  <MDBInput\n                    name=\"description\"\n                    label=\"Beschreibung der Transaktion\"\n                    type=\"text\"\n                    className=\"mt-2\"\n                    onChange={(e) => setDescription(e.target.value)}\n                    value={description}\n                  />\n                  <MDBRow>\n                    <MDBBtn type=\"submit\" color=\"success\" className=\"mt-4 mb-2\">\n                      Speichern\n                    </MDBBtn>\n                  </MDBRow>\n                </form>\n              </MDBContainer>\n            </MDBModalBody>\n\n            <MDBModalFooter>\n              <MDBBtn color=\"danger\" onClick={toggleShowEditModal}>\n                Abbrechen\n              </MDBBtn>\n            </MDBModalFooter>\n          </MDBModalContent>\n        </MDBModalDialog>\n      </MDBModal>\n    </div>\n  );\n}\n\nexport default Transaction;\n"]},"metadata":{},"sourceType":"module"}