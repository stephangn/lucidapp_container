{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/DocumentsNew.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport \"./css/LoadingSpinner.css\";\nimport { MDBContainer, MDBBtn, MDBRow, MDBCol, MDBSpinner, MDBBadge, MDBIcon } from \"mdb-react-ui-kit\";\nimport Divider from \"@mui/material/Divider\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport DocumentsModal from \"../components/Documents/DocumentsModal\";\nimport ImporteurDocumentsModal from \"../components/Documents/ImporteurDocumentsModal\";\nimport DocumentTransaction from \"../components/Documents/DocumentTransaction\";\nimport DocumentCard from \"../components/Documents/DocumentCard\";\nimport DeclarationCard from \"../components/Documents/DeclarationCard\";\nimport DocumentBreadcrump from \"../components/Documents/DocumentBreadcrumb\";\nimport useAuth from \"../hooks/useAuth\"; // Snackbar-Alert\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef(_c = function Alert(props, ref) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Alert;\n\nfunction DocumentsNew(props) {\n  _s();\n\n  // Für Rückkehr von Zollanmeldung\n  let location = useLocation();\n  let declarationLocationState = location.state;\n  console.log(declarationLocationState); // Auslösen des Snackbar-Alerts bei Rückerkehr von Zollanmeldung\n\n  useEffect(() => {\n    console.log(declarationLocationState);\n\n    if (declarationLocationState !== null) {\n      setSnackbarSuccess(declarationLocationState.success);\n      setSnackbarMessage(declarationLocationState.message);\n      handleOpenSnackbar();\n    }\n  }, [declarationLocationState]); // Allgemeine Auftragsinformationen\n\n  const [transactionData, setTransactionData] = useState([]); // Informationen der hochgeladenen Dokumente\n\n  const [documentsData, setDocumentsData] = useState([]); // State für Ladeanimation\n\n  const [isLoading, setIsLoading] = useState(true);\n  const axiosInstance = useAxiosPrivate(); // Derzeitiger User ist Importeur oder Exporteur\n\n  const [isImporteur, setIsImporteur] = useState(false); // State wird in Document Upload Modal weitergereicht.\n  // Löst useEffect aus, sobald neues Dokument hochgeladen wurde.\n\n  const [newDocument, setNewDocument] = useState(false);\n  const [isDeclaration, setIsDeclaration] = useState(false);\n  const [declarationData, setDeclarationData] = useState();\n  const [totalValue, setTotalValue] = useState(true);\n  const [invoiceData, setInvoiceData] = useState();\n  const [isInvoice, setIsInvoice] = useState(); // Anzahl Dokumente\n\n  const [numberInvoiceDocuments, setNumberInvoiceDocuments] = useState(0);\n  const [numberOtherDocuments, setNumberOtherDocuments] = useState(0); // State für \"Dokument hinzufügen\" Modal\n\n  const [addDocumentModal, setAddDocumentModal] = useState(false); // Funktion für Manipulation von Modal (als props weitergereicht)\n\n  function toggleAddDocumentModal() {\n    setAddDocumentModal(!addDocumentModal);\n  } // Speichern der Transaktions-ID aus URL\n\n\n  const {\n    transactionId\n  } = useParams();\n  const {\n    auth\n  } = useAuth(); // DB Call\n\n  useEffect(async () => {\n    await axiosInstance.get(`transactions/` + transactionId).then(res => {\n      //console.log(res.data);\n      setTransactionData(res.data);\n\n      if (auth.eori_nr == res.data.importeur) {\n        setIsImporteur(true);\n      }\n    });\n    console.log(transactionData);\n    await axiosInstance.get(`documents/?transaction=` + transactionId).then(res => {\n      //console.log(res.data);\n      setDocumentsData(res.data);\n    });\n    await axiosInstance.get(`declaration_auth/?transaction=` + transactionId).then(res => {\n      console.log(res.data.length);\n\n      if (res.data[0]) {\n        axiosInstance.get(\"invoice/\" + res.data[0].invoice.id + \"/\").then(resInvoice => {\n          setTotalValue(resInvoice.data.total_value); //console.log(res.data.total_value)\n\n          setInvoiceData(resInvoice.data);\n          setIsInvoice(true);\n        }).catch(err => {\n          console.log(\"Keine Rechnung vorhanden\");\n          setIsInvoice(false);\n        });\n      } else {\n        setIsInvoice(false);\n      }\n\n      if (res.data.length > 0) {\n        console.log(\"Zollanmeldung liegt vor\");\n        setIsDeclaration(true);\n        setDeclarationData(res.data[0]);\n      }\n    });\n    setIsLoading(false);\n  }, [newDocument]); // Wenn neues Dokument hinzugefügt wird GET-Request erneut ausgeführt\n  // Summiert Anzahl von Dokumenten,\n  // immer wenn sich documentsData verändert\n\n  useEffect(() => {\n    let invoices = 0;\n    let other = 0;\n\n    for (let i = 0; i < documentsData.length; i++) {\n      if (documentsData[i].type == \"Rechnung\") {\n        invoices += 1;\n      } else {\n        other += 1;\n      }\n    }\n\n    setNumberInvoiceDocuments(invoices);\n    setNumberOtherDocuments(other);\n  }, [documentsData]); // -- Snackbar-Alert Rückmeldung --\n  // State: Geöffnet (true) / Geschlossen (false)\n\n  const [openSnackbar, setOpenSnackbar] = useState(false); // State: Succcess (true) / Error (false)\n\n  const [snackbarSuccess, setSnackbarSuccess] = useState(true); // State: Snackbar Nachricht\n\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\"); // Öffnen der Snackbar\n\n  const handleOpenSnackbar = () => {\n    setOpenSnackbar(true);\n  }; // Schließen der Snackbar\n\n\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenSnackbar(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loadingSpinner\",\n      children: /*#__PURE__*/_jsxDEV(MDBSpinner, {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"L\\xE4dt..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MDBContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Dokumente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), isImporteur == true ? /*#__PURE__*/_jsxDEV(ImporteurDocumentsModal // Modal\n        , {\n          addDocumentModal: addDocumentModal,\n          setAddDocumentModal: setAddDocumentModal,\n          toggleAddDocumentModal: toggleAddDocumentModal,\n          transactionData: transactionData // Update State bei neuem Dokument\n          ,\n          newDocument: newDocument,\n          setNewDocument: setNewDocument // Snackbar\n          ,\n          handleOpenSnackbar: handleOpenSnackbar,\n          handleCloseSnackbar: handleCloseSnackbar,\n          setSnackbarSuccess: setSnackbarSuccess,\n          setSnackbarMessage: setSnackbarMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(DocumentsModal // Modal\n        , {\n          addDocumentModal: addDocumentModal,\n          setAddDocumentModal: setAddDocumentModal,\n          toggleAddDocumentModal: toggleAddDocumentModal,\n          transactionData: transactionData // Update State bei neuem Dokument\n          ,\n          newDocument: newDocument,\n          setNewDocument: setNewDocument // Snackbar\n          ,\n          handleOpenSnackbar: handleOpenSnackbar,\n          handleCloseSnackbar: handleCloseSnackbar,\n          setSnackbarSuccess: setSnackbarSuccess,\n          setSnackbarMessage: setSnackbarMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(DocumentBreadcrump, {\n          transactionId: transactionId\n        }, transactionId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DocumentTransaction, {\n          description: transactionData.description,\n          dateAdded: transactionData.date_added,\n          dateProcessed: transactionData.date_processed,\n          status: transactionData.status,\n          street: transactionData.partnership.partner.street,\n          cityCode: transactionData.partnership.partner.city_code,\n          countryCode: transactionData.partnership.partner.country_code,\n          city: transactionData.partnership.partner.city,\n          name: transactionData.partnership.partner.name,\n          id: transactionData.id,\n          blockchain_rid: transactionData.blockchain_id,\n          transactionData: transactionData,\n          isImporteur: isImporteur,\n          numberInvoiceDocuments: numberInvoiceDocuments,\n          numberOtherDocuments: numberOtherDocuments,\n          isDeclaration: isDeclaration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"my-3 navbar navbar-expand-lg navbar-light bg-light\",\n          children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [isDeclaration ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(MDBBadge, {\n                  pill: true,\n                  className: \"ms-3\",\n                  children: 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 23\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Zollanmeldung\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(MDBBadge, {\n                  pill: true,\n                  className: \"ms-3\",\n                  children: 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 23\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Zollanmeldung\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(MDBBadge, {\n                pill: true,\n                className: \"ms-3\",\n                children: numberInvoiceDocuments\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Rechnungsdokumente\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MDBBadge, {\n                pill: true,\n                className: \"ms-3\",\n                children: numberOtherDocuments\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Sonstige Dokumente\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n              className: \"float-end\",\n              color: \"success\",\n              onClick: toggleAddDocumentModal,\n              children: [/*#__PURE__*/_jsxDEV(MDBIcon, {\n                size: \"lg\",\n                className: \"me-2\",\n                fas: true,\n                icon: \"plus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this), \"Dokument hinzuf\\xFCgen\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), isDeclaration && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Divider, {\n            textAlign: \"left\",\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Zollanmeldung\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DeclarationCard, {\n            anmeldeArt: declarationData.anmeldeArt,\n            gesamtbetrag: totalValue,\n            bearbeitendeDienststelle: declarationData.customs_office.name,\n            lieferkosten: declarationData.invoice.transport_costs,\n            documentId: documentsData.documentId,\n            anmelderName: declarationData.importeur.name,\n            issue_date: declarationData.date_added\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), numberInvoiceDocuments !== 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Divider, {\n            textAlign: \"left\",\n            className: \"mt-5 mb-4\",\n            children: numberInvoiceDocuments == 1 ? /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Rechnungsdokument\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Rechnungsdokumente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(MDBRow, {\n            children: documentsData.map(documentData => documentData.type == \"Rechnung\" && /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(MDBCol, {\n                className: \"mb-4 d-flex justify-content-center\",\n                children: /*#__PURE__*/_jsxDEV(DocumentCard, {\n                  id: documentData.id,\n                  author_company: documentData.owner.employee.company.name,\n                  author: documentData.owner.username,\n                  type: documentData.type,\n                  description: documentData.description,\n                  documentDate: documentData.issue_date,\n                  uploadDate: documentData.upload_date,\n                  blockchain_did: documentData.blockchain_did,\n                  file: documentData.file,\n                  confirmed: documentData.confirmed\n                }, documentData.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), numberOtherDocuments !== 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Divider, {\n            textAlign: \"left\",\n            className: \"mt-5 mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Sonstige Dokumente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n            children: documentsData.map(documentData => documentData.type !== \"Rechnung\" && /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(MDBCol, {\n                className: \"mb-4 d-flex justify-content-center\",\n                children: /*#__PURE__*/_jsxDEV(DocumentCard, {\n                  id: documentData.id,\n                  author: documentData.author,\n                  type: documentData.type,\n                  description: documentData.description,\n                  documentDate: documentData.issue_date,\n                  uploadDate: documentData.upload_date,\n                  file: documentData.file,\n                  confirmed: documentData.confirmed,\n                  blockchain_did: documentData.blockchain_id\n                }, documentData.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), isDeclaration == false && numberInvoiceDocuments == 0 && numberOtherDocuments == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center justify-content-center \",\n          style: {\n            height: \"400px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              color: \"grey\"\n            },\n            children: \"Es liegen noch keine Dokumente vor.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: \"top\",\n          horizontal: \"right\"\n        },\n        open: openSnackbar,\n        autoHideDuration: 6000,\n        onClose: handleCloseSnackbar,\n        className: \"mt-5\",\n        children: snackbarSuccess == true ? /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseSnackbar,\n          severity: \"success\",\n          sx: {\n            width: \"100%\"\n          },\n          children: snackbarMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseSnackbar,\n          severity: \"error\",\n          sx: {\n            width: \"100%\"\n          },\n          children: snackbarMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s(DocumentsNew, \"lI8uOmWSdfGE0NRV9iUsTv6fXGo=\", false, function () {\n  return [useLocation, useAxiosPrivate, useParams, useAuth];\n});\n\n_c3 = DocumentsNew;\nexport default DocumentsNew;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"DocumentsNew\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/DocumentsNew.jsx"],"names":["React","useEffect","useState","useParams","useLocation","useAxiosPrivate","MDBContainer","MDBBtn","MDBRow","MDBCol","MDBSpinner","MDBBadge","MDBIcon","Divider","Snackbar","MuiAlert","DocumentsModal","ImporteurDocumentsModal","DocumentTransaction","DocumentCard","DeclarationCard","DocumentBreadcrump","useAuth","Alert","forwardRef","props","ref","DocumentsNew","location","declarationLocationState","state","console","log","setSnackbarSuccess","success","setSnackbarMessage","message","handleOpenSnackbar","transactionData","setTransactionData","documentsData","setDocumentsData","isLoading","setIsLoading","axiosInstance","isImporteur","setIsImporteur","newDocument","setNewDocument","isDeclaration","setIsDeclaration","declarationData","setDeclarationData","totalValue","setTotalValue","invoiceData","setInvoiceData","isInvoice","setIsInvoice","numberInvoiceDocuments","setNumberInvoiceDocuments","numberOtherDocuments","setNumberOtherDocuments","addDocumentModal","setAddDocumentModal","toggleAddDocumentModal","transactionId","auth","get","then","res","data","eori_nr","importeur","length","invoice","id","resInvoice","total_value","catch","err","invoices","other","i","type","openSnackbar","setOpenSnackbar","snackbarSuccess","snackbarMessage","handleCloseSnackbar","event","reason","description","date_added","date_processed","status","partnership","partner","street","city_code","country_code","city","name","blockchain_id","anmeldeArt","customs_office","transport_costs","documentId","map","documentData","owner","employee","company","username","issue_date","upload_date","blockchain_did","file","confirmed","author","height","color","vertical","horizontal","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAO,0BAAP;AACA,SACEC,YADF,EAEEC,MAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,UALF,EAMEC,QANF,EAOEC,OAPF,QAQO,kBARP;AASA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,uBAAP,MAAoC,iDAApC;AACA,OAAOC,mBAAP,MAAgC,6CAAhC;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,eAAP,MAA4B,yCAA5B;AACA,OAAOC,kBAAP,MAA+B,4CAA/B;AACA,OAAOC,OAAP,MAAoB,kBAApB,C,CAEA;;;;AACA,MAAMC,KAAK,gBAAGvB,KAAK,CAACwB,UAAN,MAAiB,SAASD,KAAT,CAAeE,KAAf,EAAsBC,GAAtB,EAA2B;AACxD,sBAAO,QAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,GAAG,EAAEA,GAA7B;AAAkC,IAAA,OAAO,EAAC,QAA1C;AAAA,OAAuDD;AAAvD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFa,CAAd;MAAMF,K;;AAIN,SAASI,YAAT,CAAsBF,KAAtB,EAA6B;AAAA;;AAC3B;AACA,MAAIG,QAAQ,GAAGxB,WAAW,EAA1B;AACA,MAAIyB,wBAAwB,GAAGD,QAAQ,CAACE,KAAxC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,wBAAZ,EAJ2B,CAM3B;;AACA5B,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,OAAO,CAACC,GAAR,CAAYH,wBAAZ;;AACA,QAAIA,wBAAwB,KAAK,IAAjC,EAAuC;AACrCI,MAAAA,kBAAkB,CAACJ,wBAAwB,CAACK,OAA1B,CAAlB;AACAC,MAAAA,kBAAkB,CAACN,wBAAwB,CAACO,OAA1B,CAAlB;AACAC,MAAAA,kBAAkB;AACnB;AACF,GAPQ,EAON,CAACR,wBAAD,CAPM,CAAT,CAP2B,CAgB3B;;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCrC,QAAQ,CAAC,EAAD,CAAtD,CAjB2B,CAmB3B;;AACA,QAAM,CAACsC,aAAD,EAAgBC,gBAAhB,IAAoCvC,QAAQ,CAAC,EAAD,CAAlD,CApB2B,CAsB3B;;AACA,QAAM,CAACwC,SAAD,EAAYC,YAAZ,IAA4BzC,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAM0C,aAAa,GAAGvC,eAAe,EAArC,CAzB2B,CA2B3B;;AACA,QAAM,CAACwC,WAAD,EAAcC,cAAd,IAAgC5C,QAAQ,CAAC,KAAD,CAA9C,CA5B2B,CA8B3B;AACA;;AACA,QAAM,CAAC6C,WAAD,EAAcC,cAAd,IAAgC9C,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM,CAAC+C,aAAD,EAAgBC,gBAAhB,IAAoChD,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACiD,eAAD,EAAkBC,kBAAlB,IAAwClD,QAAQ,EAAtD;AACA,QAAM,CAACmD,UAAD,EAAaC,aAAb,IAA8BpD,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACqD,WAAD,EAAcC,cAAd,IAAgCtD,QAAQ,EAA9C;AACA,QAAM,CAACuD,SAAD,EAAYC,YAAZ,IAA4BxD,QAAQ,EAA1C,CAtC2B,CAwC3B;;AACA,QAAM,CAACyD,sBAAD,EAAyBC,yBAAzB,IAAsD1D,QAAQ,CAAC,CAAD,CAApE;AACA,QAAM,CAAC2D,oBAAD,EAAuBC,uBAAvB,IAAkD5D,QAAQ,CAAC,CAAD,CAAhE,CA1C2B,CA4C3B;;AACA,QAAM,CAAC6D,gBAAD,EAAmBC,mBAAnB,IAA0C9D,QAAQ,CAAC,KAAD,CAAxD,CA7C2B,CA8C3B;;AACA,WAAS+D,sBAAT,GAAkC;AAChCD,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACD,GAjD0B,CAmD3B;;;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAoB/D,SAAS,EAAnC;AACA,QAAM;AAAEgE,IAAAA;AAAF,MAAW7C,OAAO,EAAxB,CArD2B,CAuD3B;;AACArB,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAM2C,aAAa,CAACwB,GAAd,CAAmB,eAAD,GAAkBF,aAApC,EAAmDG,IAAnD,CAAyDC,GAAD,IAAS;AACrE;AACA/B,MAAAA,kBAAkB,CAAC+B,GAAG,CAACC,IAAL,CAAlB;;AACA,UAAIJ,IAAI,CAACK,OAAL,IAAgBF,GAAG,CAACC,IAAJ,CAASE,SAA7B,EAAwC;AACtC3B,QAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,KANK,CAAN;AAOAf,IAAAA,OAAO,CAACC,GAAR,CAAYM,eAAZ;AACA,UAAMM,aAAa,CAChBwB,GADG,CACE,yBAAD,GAA4BF,aAD7B,EAEHG,IAFG,CAEGC,GAAD,IAAS;AACb;AACA7B,MAAAA,gBAAgB,CAAC6B,GAAG,CAACC,IAAL,CAAhB;AACD,KALG,CAAN;AAOA,UAAM3B,aAAa,CAChBwB,GADG,CACE,gCAAD,GAAmCF,aADpC,EAEHG,IAFG,CAEGC,GAAD,IAAS;AACbvC,MAAAA,OAAO,CAACC,GAAR,CAAYsC,GAAG,CAACC,IAAJ,CAASG,MAArB;;AACA,UAAIJ,GAAG,CAACC,IAAJ,CAAS,CAAT,CAAJ,EAAiB;AACf3B,QAAAA,aAAa,CACVwB,GADH,CACO,aAAaE,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAYI,OAAZ,CAAoBC,EAAjC,GAAsC,GAD7C,EAEGP,IAFH,CAESQ,UAAD,IAAgB;AACpBvB,UAAAA,aAAa,CAACuB,UAAU,CAACN,IAAX,CAAgBO,WAAjB,CAAb,CADoB,CAEpB;;AACAtB,UAAAA,cAAc,CAACqB,UAAU,CAACN,IAAZ,CAAd;AACAb,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,SAPH,EAQGqB,KARH,CAQUC,GAAD,IAAS;AACdjD,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA0B,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,SAXH;AAYD,OAbD,MAaO;AACLA,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AACD,UAAIY,GAAG,CAACC,IAAJ,CAASG,MAAT,GAAkB,CAAtB,EAAyB;AACvB3C,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAkB,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,QAAAA,kBAAkB,CAACkB,GAAG,CAACC,IAAJ,CAAS,CAAT,CAAD,CAAlB;AACD;AACF,KAzBG,CAAN;AA2BA5B,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GA5CQ,EA4CN,CAACI,WAAD,CA5CM,CAAT,CAxD2B,CAqG3B;AAEA;AACA;;AACA9C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgF,QAAQ,GAAG,CAAf;AACA,QAAIC,KAAK,GAAG,CAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG3C,aAAa,CAACkC,MAAlC,EAA0CS,CAAC,EAA3C,EAA+C;AAC7C,UAAI3C,aAAa,CAAC2C,CAAD,CAAb,CAAiBC,IAAjB,IAAyB,UAA7B,EAAyC;AACvCH,QAAAA,QAAQ,IAAI,CAAZ;AACD,OAFD,MAEO;AACLC,QAAAA,KAAK,IAAI,CAAT;AACD;AACF;;AACDtB,IAAAA,yBAAyB,CAACqB,QAAD,CAAzB;AACAnB,IAAAA,uBAAuB,CAACoB,KAAD,CAAvB;AACD,GAZQ,EAYN,CAAC1C,aAAD,CAZM,CAAT,CAzG2B,CAuH3B;AACA;;AACA,QAAM,CAAC6C,YAAD,EAAeC,eAAf,IAAkCpF,QAAQ,CAAC,KAAD,CAAhD,CAzH2B,CA0H3B;;AACA,QAAM,CAACqF,eAAD,EAAkBtD,kBAAlB,IAAwC/B,QAAQ,CAAC,IAAD,CAAtD,CA3H2B,CA4H3B;;AACA,QAAM,CAACsF,eAAD,EAAkBrD,kBAAlB,IAAwCjC,QAAQ,CAAC,EAAD,CAAtD,CA7H2B,CA+H3B;;AACA,QAAMmC,kBAAkB,GAAG,MAAM;AAC/BiD,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAFD,CAhI2B,CAoI3B;;;AACA,QAAMG,mBAAmB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7C,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AAEDL,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAND;;AAQA,sBACE;AAAA,cACG5C,SAAS,gBACR;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE,QAAC,UAAD;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADQ,gBAOR;AAAA,8BACE,QAAC,YAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAGGG,WAAW,IAAI,IAAf,gBACC,QAAC,uBAAD,CACE;AADF;AAEE,UAAA,gBAAgB,EAAEkB,gBAFpB;AAGE,UAAA,mBAAmB,EAAEC,mBAHvB;AAIE,UAAA,sBAAsB,EAAEC,sBAJ1B;AAKE,UAAA,eAAe,EAAE3B,eALnB,CAME;AANF;AAOE,UAAA,WAAW,EAAES,WAPf;AAQE,UAAA,cAAc,EAAEC,cARlB,CASE;AATF;AAUE,UAAA,kBAAkB,EAAEX,kBAVtB;AAWE,UAAA,mBAAmB,EAAEoD,mBAXvB;AAYE,UAAA,kBAAkB,EAAExD,kBAZtB;AAaE,UAAA,kBAAkB,EAAEE;AAbtB;AAAA;AAAA;AAAA;AAAA,gBADD,gBAiBC,QAAC,cAAD,CACE;AADF;AAEE,UAAA,gBAAgB,EAAE4B,gBAFpB;AAGE,UAAA,mBAAmB,EAAEC,mBAHvB;AAIE,UAAA,sBAAsB,EAAEC,sBAJ1B;AAKE,UAAA,eAAe,EAAE3B,eALnB,CAME;AANF;AAOE,UAAA,WAAW,EAAES,WAPf;AAQE,UAAA,cAAc,EAAEC,cARlB,CASE;AATF;AAUE,UAAA,kBAAkB,EAAEX,kBAVtB;AAWE,UAAA,mBAAmB,EAAEoD,mBAXvB;AAYE,UAAA,kBAAkB,EAAExD,kBAZtB;AAaE,UAAA,kBAAkB,EAAEE;AAbtB;AAAA;AAAA;AAAA;AAAA,gBApBJ,eAoCE,QAAC,kBAAD;AAEE,UAAA,aAAa,EAAE+B;AAFjB,WACOA,aADP;AAAA;AAAA;AAAA;AAAA,gBApCF,eAwCE,QAAC,mBAAD;AACE,UAAA,WAAW,EAAE5B,eAAe,CAACsD,WAD/B;AAEE,UAAA,SAAS,EAAEtD,eAAe,CAACuD,UAF7B;AAGE,UAAA,aAAa,EAAEvD,eAAe,CAACwD,cAHjC;AAIE,UAAA,MAAM,EAAExD,eAAe,CAACyD,MAJ1B;AAKE,UAAA,MAAM,EAAEzD,eAAe,CAAC0D,WAAhB,CAA4BC,OAA5B,CAAoCC,MAL9C;AAME,UAAA,QAAQ,EAAE5D,eAAe,CAAC0D,WAAhB,CAA4BC,OAA5B,CAAoCE,SANhD;AAOE,UAAA,WAAW,EAAE7D,eAAe,CAAC0D,WAAhB,CAA4BC,OAA5B,CAAoCG,YAPnD;AAQE,UAAA,IAAI,EAAE9D,eAAe,CAAC0D,WAAhB,CAA4BC,OAA5B,CAAoCI,IAR5C;AASE,UAAA,IAAI,EAAE/D,eAAe,CAAC0D,WAAhB,CAA4BC,OAA5B,CAAoCK,IAT5C;AAUE,UAAA,EAAE,EAAEhE,eAAe,CAACsC,EAVtB;AAWE,UAAA,cAAc,EAAEtC,eAAe,CAACiE,aAXlC;AAYE,UAAA,eAAe,EAAEjE,eAZnB;AAaE,UAAA,WAAW,EAAEO,WAbf;AAcE,UAAA,sBAAsB,EAAEc,sBAd1B;AAeE,UAAA,oBAAoB,EAAEE,oBAfxB;AAgBE,UAAA,aAAa,EAAEZ;AAhBjB;AAAA;AAAA;AAAA;AAAA,gBAxCF,eA2DE;AAAK,UAAA,SAAS,EAAC,oDAAf;AAAA,iCACE,QAAC,YAAD;AAAA,oCACE;AAAA,yBACGA,aAAa,gBACZ;AAAA,wCACE,QAAC,QAAD;AAAU,kBAAA,IAAI,MAAd;AAAe,kBAAA,SAAS,EAAC,MAAzB;AAAA,4BACG;AADH;AAAA;AAAA;AAAA;AAAA,wBADF,EAGc,GAHd,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA,8BADY,gBAQZ;AAAA,wCACE,QAAC,QAAD;AAAU,kBAAA,IAAI,MAAd;AAAe,kBAAA,SAAS,EAAC,MAAzB;AAAA,4BACG;AADH;AAAA;AAAA;AAAA;AAAA,wBADF,EAGc,GAHd,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA,8BATJ,eAgBE,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAe,gBAAA,SAAS,EAAC,MAAzB;AAAA,0BACGU;AADH;AAAA;AAAA;AAAA;AAAA,sBAhBF,EAkBc,GAlBd,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnBF,eAoBE,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAe,gBAAA,SAAS,EAAC,MAAzB;AAAA,0BACGE;AADH;AAAA;AAAA;AAAA;AAAA,sBApBF,EAsBc,GAtBd,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eA0BE,QAAC,MAAD;AACE,cAAA,SAAS,EAAC,WADZ;AAEE,cAAA,KAAK,EAAC,SAFR;AAGE,cAAA,OAAO,EAAEI,sBAHX;AAAA,sCAKE,QAAC,OAAD;AAAS,gBAAA,IAAI,EAAC,IAAd;AAAmB,gBAAA,SAAS,EAAC,MAA7B;AAAoC,gBAAA,GAAG,MAAvC;AAAwC,gBAAA,IAAI,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA3DF,EAiGGhB,aAAa,iBACZ;AAAA,kCACE,QAAC,OAAD;AAAS,YAAA,SAAS,EAAC,MAAnB;AAA0B,YAAA,SAAS,EAAC,MAApC;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,eAAD;AACE,YAAA,UAAU,EAAEE,eAAe,CAACqD,UAD9B;AAEE,YAAA,YAAY,EAAEnD,UAFhB;AAGE,YAAA,wBAAwB,EAAEF,eAAe,CAACsD,cAAhB,CAA+BH,IAH3D;AAIE,YAAA,YAAY,EAAEnD,eAAe,CAACwB,OAAhB,CAAwB+B,eAJxC;AAKE,YAAA,UAAU,EAAElE,aAAa,CAACmE,UAL5B;AAME,YAAA,YAAY,EAAExD,eAAe,CAACsB,SAAhB,CAA0B6B,IAN1C;AAOE,YAAA,UAAU,EAAEnD,eAAe,CAAC0C;AAP9B;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,wBAlGJ,EAmHGlC,sBAAsB,KAAK,CAA3B,iBACC;AAAA,kCACE,QAAC,OAAD;AAAS,YAAA,SAAS,EAAC,MAAnB;AAA0B,YAAA,SAAS,EAAC,WAApC;AAAA,sBACGA,sBAAsB,IAAI,CAA1B,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,kBADF,EAOa,GAPb,eAQE,QAAC,MAAD;AAAA,sBACGnB,aAAa,CAACoE,GAAd,CACEC,YAAD,IACEA,YAAY,CAACzB,IAAb,IAAqB,UAArB,iBACE,QAAC,KAAD,CAAO,QAAP;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAC,oCAAlB;AAAA,uCACE,QAAC,YAAD;AAEE,kBAAA,EAAE,EAAEyB,YAAY,CAACjC,EAFnB;AAGE,kBAAA,cAAc,EACZiC,YAAY,CAACC,KAAb,CAAmBC,QAAnB,CAA4BC,OAA5B,CAAoCV,IAJxC;AAME,kBAAA,MAAM,EAAEO,YAAY,CAACC,KAAb,CAAmBG,QAN7B;AAOE,kBAAA,IAAI,EAAEJ,YAAY,CAACzB,IAPrB;AAQE,kBAAA,WAAW,EAAEyB,YAAY,CAACjB,WAR5B;AASE,kBAAA,YAAY,EAAEiB,YAAY,CAACK,UAT7B;AAUE,kBAAA,UAAU,EAAEL,YAAY,CAACM,WAV3B;AAWE,kBAAA,cAAc,EAAEN,YAAY,CAACO,cAX/B;AAYE,kBAAA,IAAI,EAAEP,YAAY,CAACQ,IAZrB;AAaE,kBAAA,SAAS,EAAER,YAAY,CAACS;AAb1B,mBACOT,YAAY,CAACjC,EADpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAHL;AADH;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA,wBApHJ,EA0JGf,oBAAoB,KAAK,CAAzB,iBACC;AAAA,kCACE,QAAC,OAAD;AAAS,YAAA,SAAS,EAAC,MAAnB;AAA0B,YAAA,SAAS,EAAC,WAApC;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AAAA,sBACGrB,aAAa,CAACoE,GAAd,CACEC,YAAD,IACEA,YAAY,CAACzB,IAAb,KAAsB,UAAtB,iBACE,QAAC,KAAD,CAAO,QAAP;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAC,oCAAlB;AAAA,uCACE,QAAC,YAAD;AAEE,kBAAA,EAAE,EAAEyB,YAAY,CAACjC,EAFnB;AAGE,kBAAA,MAAM,EAAEiC,YAAY,CAACU,MAHvB;AAIE,kBAAA,IAAI,EAAEV,YAAY,CAACzB,IAJrB;AAKE,kBAAA,WAAW,EAAEyB,YAAY,CAACjB,WAL5B;AAME,kBAAA,YAAY,EAAEiB,YAAY,CAACK,UAN7B;AAOE,kBAAA,UAAU,EAAEL,YAAY,CAACM,WAP3B;AAQE,kBAAA,IAAI,EAAEN,YAAY,CAACQ,IARrB;AASE,kBAAA,SAAS,EAAER,YAAY,CAACS,SAT1B;AAUE,kBAAA,cAAc,EAAET,YAAY,CAACN;AAV/B,mBACOM,YAAY,CAACjC,EADpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAHL;AADH;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,wBA3JJ,EA0LG3B,aAAa,IAAI,KAAjB,IACDU,sBAAsB,IAAI,CADzB,IAEDE,oBAAoB,IAAI,CAFvB,gBAGC;AACE,UAAA,SAAS,EAAC,mDADZ;AAEE,UAAA,KAAK,EAAE;AACL2D,YAAAA,MAAM,EAAE;AADH,WAFT;AAAA,iCAME;AACE,YAAA,KAAK,EAAE;AACLC,cAAAA,KAAK,EAAE;AADF,aADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,gBAHD,GAiBG,IA3MN;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA8ME,QAAC,QAAD;AACE,QAAA,YAAY,EAAE;AAAEC,UAAAA,QAAQ,EAAE,KAAZ;AAAmBC,UAAAA,UAAU,EAAE;AAA/B,SADhB;AAEE,QAAA,IAAI,EAAEtC,YAFR;AAGE,QAAA,gBAAgB,EAAE,IAHpB;AAIE,QAAA,OAAO,EAAEI,mBAJX;AAKE,QAAA,SAAS,EAAC,MALZ;AAAA,kBAOGF,eAAe,IAAI,IAAnB,gBACC,QAAC,KAAD;AACE,UAAA,OAAO,EAAEE,mBADX;AAEE,UAAA,QAAQ,EAAC,SAFX;AAGE,UAAA,EAAE,EAAE;AAAEmC,YAAAA,KAAK,EAAE;AAAT,WAHN;AAAA,oBAKGpC;AALH;AAAA;AAAA;AAAA;AAAA,gBADD,gBASC,QAAC,KAAD;AACE,UAAA,OAAO,EAAEC,mBADX;AAEE,UAAA,QAAQ,EAAC,OAFX;AAGE,UAAA,EAAE,EAAE;AAAEmC,YAAAA,KAAK,EAAE;AAAT,WAHN;AAAA,oBAKGpC;AALH;AAAA;AAAA;AAAA;AAAA;AAhBJ;AAAA;AAAA;AAAA;AAAA,cA9MF;AAAA;AARJ,mBADF;AAoPD;;GAjYQ7D,Y;UAEQvB,W,EAuBOC,e,EA2BIF,S,EACTmB,O;;;MArDVK,Y;AAmYT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport \"./css/LoadingSpinner.css\";\nimport {\n  MDBContainer,\n  MDBBtn,\n  MDBRow,\n  MDBCol,\n  MDBSpinner,\n  MDBBadge,\n  MDBIcon,\n} from \"mdb-react-ui-kit\";\nimport Divider from \"@mui/material/Divider\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\n\nimport DocumentsModal from \"../components/Documents/DocumentsModal\";\nimport ImporteurDocumentsModal from \"../components/Documents/ImporteurDocumentsModal\";\nimport DocumentTransaction from \"../components/Documents/DocumentTransaction\";\nimport DocumentCard from \"../components/Documents/DocumentCard\";\nimport DeclarationCard from \"../components/Documents/DeclarationCard\";\nimport DocumentBreadcrump from \"../components/Documents/DocumentBreadcrumb\";\nimport useAuth from \"../hooks/useAuth\";\n\n// Snackbar-Alert\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nfunction DocumentsNew(props) {\n  // Für Rückkehr von Zollanmeldung\n  let location = useLocation();\n  let declarationLocationState = location.state;\n  console.log(declarationLocationState);\n\n  // Auslösen des Snackbar-Alerts bei Rückerkehr von Zollanmeldung\n  useEffect(() => {\n    console.log(declarationLocationState);\n    if (declarationLocationState !== null) {\n      setSnackbarSuccess(declarationLocationState.success);\n      setSnackbarMessage(declarationLocationState.message);\n      handleOpenSnackbar();\n    }\n  }, [declarationLocationState]);\n\n  // Allgemeine Auftragsinformationen\n  const [transactionData, setTransactionData] = useState([]);\n\n  // Informationen der hochgeladenen Dokumente\n  const [documentsData, setDocumentsData] = useState([]);\n\n  // State für Ladeanimation\n  const [isLoading, setIsLoading] = useState(true);\n\n  const axiosInstance = useAxiosPrivate();\n\n  // Derzeitiger User ist Importeur oder Exporteur\n  const [isImporteur, setIsImporteur] = useState(false);\n\n  // State wird in Document Upload Modal weitergereicht.\n  // Löst useEffect aus, sobald neues Dokument hochgeladen wurde.\n  const [newDocument, setNewDocument] = useState(false);\n\n  const [isDeclaration, setIsDeclaration] = useState(false);\n  const [declarationData, setDeclarationData] = useState();\n  const [totalValue, setTotalValue] = useState(true);\n  const [invoiceData, setInvoiceData] = useState();\n  const [isInvoice, setIsInvoice] = useState();\n\n  // Anzahl Dokumente\n  const [numberInvoiceDocuments, setNumberInvoiceDocuments] = useState(0);\n  const [numberOtherDocuments, setNumberOtherDocuments] = useState(0);\n\n  // State für \"Dokument hinzufügen\" Modal\n  const [addDocumentModal, setAddDocumentModal] = useState(false);\n  // Funktion für Manipulation von Modal (als props weitergereicht)\n  function toggleAddDocumentModal() {\n    setAddDocumentModal(!addDocumentModal);\n  }\n\n  // Speichern der Transaktions-ID aus URL\n  const { transactionId } = useParams();\n  const { auth } = useAuth();\n\n  // DB Call\n  useEffect(async () => {\n    await axiosInstance.get(`transactions/` + transactionId).then((res) => {\n      //console.log(res.data);\n      setTransactionData(res.data);\n      if (auth.eori_nr == res.data.importeur) {\n        setIsImporteur(true);\n      }\n    });\n    console.log(transactionData);\n    await axiosInstance\n      .get(`documents/?transaction=` + transactionId)\n      .then((res) => {\n        //console.log(res.data);\n        setDocumentsData(res.data);\n      });\n\n    await axiosInstance\n      .get(`declaration_auth/?transaction=` + transactionId)\n      .then((res) => {\n        console.log(res.data.length);\n        if (res.data[0]) {\n          axiosInstance\n            .get(\"invoice/\" + res.data[0].invoice.id + \"/\")\n            .then((resInvoice) => {\n              setTotalValue(resInvoice.data.total_value);\n              //console.log(res.data.total_value)\n              setInvoiceData(resInvoice.data);\n              setIsInvoice(true);\n            })\n            .catch((err) => {\n              console.log(\"Keine Rechnung vorhanden\");\n              setIsInvoice(false);\n            });\n        } else {\n          setIsInvoice(false);\n        }\n        if (res.data.length > 0) {\n          console.log(\"Zollanmeldung liegt vor\");\n          setIsDeclaration(true);\n          setDeclarationData(res.data[0]);\n        }\n      });\n\n    setIsLoading(false);\n  }, [newDocument]);\n  // Wenn neues Dokument hinzugefügt wird GET-Request erneut ausgeführt\n\n  // Summiert Anzahl von Dokumenten,\n  // immer wenn sich documentsData verändert\n  useEffect(() => {\n    let invoices = 0;\n    let other = 0;\n    for (let i = 0; i < documentsData.length; i++) {\n      if (documentsData[i].type == \"Rechnung\") {\n        invoices += 1;\n      } else {\n        other += 1;\n      }\n    }\n    setNumberInvoiceDocuments(invoices);\n    setNumberOtherDocuments(other);\n  }, [documentsData]);\n\n  // -- Snackbar-Alert Rückmeldung --\n  // State: Geöffnet (true) / Geschlossen (false)\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  // State: Succcess (true) / Error (false)\n  const [snackbarSuccess, setSnackbarSuccess] = useState(true);\n  // State: Snackbar Nachricht\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n\n  // Öffnen der Snackbar\n  const handleOpenSnackbar = () => {\n    setOpenSnackbar(true);\n  };\n\n  // Schließen der Snackbar\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"loadingSpinner\">\n          <MDBSpinner>\n            <span className=\"visually-hidden\">Lädt..</span>\n          </MDBSpinner>\n        </div>\n      ) : (\n        <>\n          <MDBContainer>\n            <h3>Dokumente</h3>\n            {/* Dokumenten Modal */}\n            {isImporteur == true ? (\n              <ImporteurDocumentsModal\n                // Modal\n                addDocumentModal={addDocumentModal}\n                setAddDocumentModal={setAddDocumentModal}\n                toggleAddDocumentModal={toggleAddDocumentModal}\n                transactionData={transactionData}\n                // Update State bei neuem Dokument\n                newDocument={newDocument}\n                setNewDocument={setNewDocument}\n                // Snackbar\n                handleOpenSnackbar={handleOpenSnackbar}\n                handleCloseSnackbar={handleCloseSnackbar}\n                setSnackbarSuccess={setSnackbarSuccess}\n                setSnackbarMessage={setSnackbarMessage}\n              />\n            ) : (\n              <DocumentsModal\n                // Modal\n                addDocumentModal={addDocumentModal}\n                setAddDocumentModal={setAddDocumentModal}\n                toggleAddDocumentModal={toggleAddDocumentModal}\n                transactionData={transactionData}\n                // Update State bei neuem Dokument\n                newDocument={newDocument}\n                setNewDocument={setNewDocument}\n                // Snackbar\n                handleOpenSnackbar={handleOpenSnackbar}\n                handleCloseSnackbar={handleCloseSnackbar}\n                setSnackbarSuccess={setSnackbarSuccess}\n                setSnackbarMessage={setSnackbarMessage}\n              />\n            )}\n            <DocumentBreadcrump\n              key={transactionId}\n              transactionId={transactionId}\n            />\n            <DocumentTransaction\n              description={transactionData.description}\n              dateAdded={transactionData.date_added}\n              dateProcessed={transactionData.date_processed}\n              status={transactionData.status}\n              street={transactionData.partnership.partner.street}\n              cityCode={transactionData.partnership.partner.city_code}\n              countryCode={transactionData.partnership.partner.country_code}\n              city={transactionData.partnership.partner.city}\n              name={transactionData.partnership.partner.name}\n              id={transactionData.id}\n              blockchain_rid={transactionData.blockchain_id}\n              transactionData={transactionData}\n              isImporteur={isImporteur}\n              numberInvoiceDocuments={numberInvoiceDocuments}\n              numberOtherDocuments={numberOtherDocuments}\n              isDeclaration={isDeclaration}\n            />\n            {/* Navleiste mit Anzahl der Dokumente */}\n            <nav className=\"my-3 navbar navbar-expand-lg navbar-light bg-light\">\n              <MDBContainer>\n                <div>\n                  {isDeclaration ? (\n                    <>\n                      <MDBBadge pill className=\"ms-3\">\n                        {1}\n                      </MDBBadge>{\" \"}\n                      <b>Zollanmeldung</b>\n                    </>\n                  ) : (\n                    <>\n                      <MDBBadge pill className=\"ms-3\">\n                        {0}\n                      </MDBBadge>{\" \"}\n                      <b>Zollanmeldung</b>\n                    </>\n                  )}\n                  <MDBBadge pill className=\"ms-3\">\n                    {numberInvoiceDocuments}\n                  </MDBBadge>{\" \"}\n                  <b>Rechnungsdokumente</b>\n                  <MDBBadge pill className=\"ms-3\">\n                    {numberOtherDocuments}\n                  </MDBBadge>{\" \"}\n                  <b>Sonstige Dokumente</b>\n                </div>\n                <MDBBtn\n                  className=\"float-end\"\n                  color=\"success\"\n                  onClick={toggleAddDocumentModal}\n                >\n                  <MDBIcon size=\"lg\" className=\"me-2\" fas icon=\"plus\" />\n                  Dokument hinzufügen\n                </MDBBtn>\n              </MDBContainer>\n            </nav>\n            {/* Auflistung der Rechnungsdokumente */}\n            {isDeclaration && (\n              <>\n                <Divider textAlign=\"left\" className=\"mb-4\">\n                  <h5>Zollanmeldung</h5>\n                </Divider>\n                <DeclarationCard\n                  anmeldeArt={declarationData.anmeldeArt}\n                  gesamtbetrag={totalValue}\n                  bearbeitendeDienststelle={declarationData.customs_office.name}\n                  lieferkosten={declarationData.invoice.transport_costs}\n                  documentId={documentsData.documentId}\n                  anmelderName={declarationData.importeur.name}\n                  issue_date={declarationData.date_added}\n                />\n              </>\n            )}\n\n            {/* Auflistung der Rechnungsdokumente */}\n            {numberInvoiceDocuments !== 0 && (\n              <>\n                <Divider textAlign=\"left\" className=\"mt-5 mb-4\">\n                  {numberInvoiceDocuments == 1 ? (\n                    <h5>Rechnungsdokument</h5>\n                  ) : (\n                    <h5>Rechnungsdokumente</h5>\n                  )}\n                </Divider>{\" \"}\n                <MDBRow>\n                  {documentsData.map(\n                    (documentData) =>\n                      documentData.type == \"Rechnung\" && (\n                        <React.Fragment>\n                          <MDBCol className=\"mb-4 d-flex justify-content-center\">\n                            <DocumentCard\n                              key={documentData.id}\n                              id={documentData.id}\n                              author_company={\n                                documentData.owner.employee.company.name\n                              }\n                              author={documentData.owner.username}\n                              type={documentData.type}\n                              description={documentData.description}\n                              documentDate={documentData.issue_date}\n                              uploadDate={documentData.upload_date}\n                              blockchain_did={documentData.blockchain_did}\n                              file={documentData.file}\n                              confirmed={documentData.confirmed}\n                            />\n                          </MDBCol>\n                        </React.Fragment>\n                      )\n                  )}\n                </MDBRow>\n              </>\n            )}\n\n            {/* Auflistung der sonstigen Dokumente */}\n            {numberOtherDocuments !== 0 && (\n              <>\n                <Divider textAlign=\"left\" className=\"mt-5 mb-4\">\n                  <h5>Sonstige Dokumente</h5>\n                </Divider>\n                <MDBRow>\n                  {documentsData.map(\n                    (documentData) =>\n                      documentData.type !== \"Rechnung\" && (\n                        <React.Fragment>\n                          <MDBCol className=\"mb-4 d-flex justify-content-center\">\n                            <DocumentCard\n                              key={documentData.id}\n                              id={documentData.id}\n                              author={documentData.author}\n                              type={documentData.type}\n                              description={documentData.description}\n                              documentDate={documentData.issue_date}\n                              uploadDate={documentData.upload_date}\n                              file={documentData.file}\n                              confirmed={documentData.confirmed}\n                              blockchain_did={documentData.blockchain_id}\n                            />\n                          </MDBCol>\n                        </React.Fragment>\n                      )\n                  )}\n                </MDBRow>\n              </>\n            )}\n\n            {/* Fals 0 Dokumente vorliegen */}\n            {isDeclaration == false &&\n            numberInvoiceDocuments == 0 &&\n            numberOtherDocuments == 0 ? (\n              <div\n                className=\"d-flex align-items-center justify-content-center \"\n                style={{\n                  height: \"400px\",\n                }}\n              >\n                <h4\n                  style={{\n                    color: \"grey\",\n                  }}\n                >\n                  Es liegen noch keine Dokumente vor.\n                </h4>\n              </div>\n            ) : null}\n          </MDBContainer>\n          <Snackbar\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            open={openSnackbar}\n            autoHideDuration={6000}\n            onClose={handleCloseSnackbar}\n            className=\"mt-5\"\n          >\n            {snackbarSuccess == true ? (\n              <Alert\n                onClose={handleCloseSnackbar}\n                severity=\"success\"\n                sx={{ width: \"100%\" }}\n              >\n                {snackbarMessage}\n              </Alert>\n            ) : (\n              <Alert\n                onClose={handleCloseSnackbar}\n                severity=\"error\"\n                sx={{ width: \"100%\" }}\n              >\n                {snackbarMessage}\n              </Alert>\n            )}\n          </Snackbar>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default DocumentsNew;\n"]},"metadata":{},"sourceType":"module"}