{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/ZollDocuments/ZollDocumentTransaction.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardTitle, MDBCardFooter, MDBCardSubTitle, MDBCardText, MDBCol, MDBContainer, MDBRow, MDBPopover, MDBPopoverBody } from \"mdb-react-ui-kit\";\nimport { Link } from \"react-router-dom\";\nimport { getZollanmeldung } from \"../../Web3Client.js\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate.js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ZollDocumentTransaction(props) {\n  _s();\n\n  const axiosInstance = useAxiosPrivate();\n  useEffect(() => {\n    if (props.declarationData.status != \"PE\") {\n      props.setIsVerified(true);\n    }\n  }, []);\n\n  async function abgleichBlockchain(_blockchain_zid) {\n    var crypto = require('crypto');\n\n    console.log(\"Zollanmeldung ID:\" + _blockchain_zid);\n    console.log(props.declarationData);\n    await getZollanmeldung(_blockchain_zid).then(tx => {\n      console.log(tx);\n      console.log(\"Gesamtbetrag Zollanmeldung: \" + tx[0].gesamtbetrag + \", \" + props.invoiceData.total_value);\n      console.log(\"Zollwert: \" + tx[0].zollwert + \", \" + (props.invoiceData.transport_costs + props.invoiceData.total_value));\n      console.log(\"Lieferbedingungen: \" + tx[0].incoterms + \", \" + props.declarationData.lieferbedingung);\n      console.log(\"Exporteur : \" + tx[0].exporteur + \", \" + props.declarationData.exporteur.publickey);\n      console.log(\"Importeur: \" + tx[0].importeur + \", \" + props.declarationData.importeur.publickey);\n      console.log(\"Zoll: \" + tx[0].zoll + \", \" + props.declarationData.customs_office.publickey);\n      console.log(\"Anmelder (Importeur): \" + tx[0].anmelder + \", \" + props.declarationData.importeur.publickey);\n      console.log(\"Gesamtbetrag Rechnung: \" + tx[1].gesamtbetrag + \", \" + props.invoiceData.total_value);\n      console.log(\"Währung: \" + tx[1].waehrung + \", \" + props.declarationData.invoice.currency);\n      console.log(\"Exporteur Rechnung: \" + tx[1].exporteur + \", \" + props.declarationData.exporteur.publickey);\n      console.log(\"Importeur Rechnung: \" + tx[1].importeur + \", \" + props.declarationData.importeur.publickey);\n      console.log(\"Rechnungsdatum: \" + tx[1].datum + \", \" + props.declarationData.invoice.issue_date); //console.log(\"Hash RPosten: \"+tx[1].rechnungsposten+\", \"+ crypto.createHash('sha512').update(props.declarationData.invoice.invoiceItems).digest('hex'))\n\n      console.log(\"Lieferkosten: \" + tx[1].lieferkosten + \", \" + props.declarationData.invoice.transport_costs);\n\n      if (tx[0].gesamtbetrag == props.invoiceData.total_value && tx[0].zollwert == props.invoiceData.transport_costs + props.invoiceData.total_value && tx[0].lieferkosten == props.declarationData.invoice.transport_costs && tx[0].incoterms == props.declarationData.lieferbedingung && tx[0].exporteur == props.declarationData.exporteur.publickey && tx[0].importeur == props.declarationData.importeur.publickey && tx[0].zoll == props.declarationData.customs_office.publickey && tx[0].anmelder == props.declarationData.importeur.publickey && tx[1].gesamtbetrag == props.invoiceData.total_value && tx[1].waehrung == props.declarationData.invoice.currency && tx[1].exporteur == props.declarationData.exporteur.publickey && tx[1].importeur == props.declarationData.importeur.publickey && tx[1].datum == props.declarationData.invoice.issue_date //&& tx[1].rechnungsposten== crypto.createHash('sha512').update(props.declarationData.invoice.invoiceItems).digest('hex')\n      && tx[1].lieferkosten == props.declarationData.invoice.transport_costs) {\n        console.log(\"Alles tutti\");\n        return true;\n      } else {\n        console.log(\"Fehler liegt vor\");\n        return false;\n      }\n    }).catch(err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n  useEffect(() => {\n    //console.log(props.isVerified)\n    if (props.isVerified) {\n      props.setOpen(true); //console.log(\"Verifiziert\")\n      //hier würde Transaktion verifiziert werden\n      //axiosInstance.patch('declaration_auth/' + props.declarationData.id + '/', {'status': 'VF'})\n    }\n  }, [props.isVerified]);\n\n  async function handleVerification() {\n    //setIsVerified(true)\n    abgleichBlockchain(props.declarationData.blockchain_zid).then(res => {\n      props.setIsVerified(true);\n    });\n  }\n\n  function handleConfirmation() {\n    axiosInstance.patch('declaration_auth/' + props.declarationData.id + '/', {\n      'status': 'AC'\n    });\n  }\n\n  function handleReject() {\n    axiosInstance.patch('declaration_auth/' + props.declarationData.id + '/', {\n      'status': 'RJ'\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MDBCard, {\n      children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n        children: [/*#__PURE__*/_jsxDEV(MDBContainer, {\n          children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n            children: /*#__PURE__*/_jsxDEV(MDBCol, {\n              children: /*#__PURE__*/_jsxDEV(MDBCardTitle, {\n                children: props.declarationData.transaction.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBContainer, {\n          children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n            children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n              children: /*#__PURE__*/_jsxDEV(MDBCardText, {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Versender\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this), props.declarationData.exporteur.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this), props.declarationData.exporteur.street, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this), props.declarationData.exporteur.city_code, \" \", props.declarationData.exporteur.city, \",\", \" \", props.declarationData.exporteur.country_code]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n              children: /*#__PURE__*/_jsxDEV(MDBCardText, {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Empf\\xE4nger / Anmelder\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this), props.declarationData.importeur.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this), props.declarationData.importeur.street, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 19\n                }, this), props.declarationData.importeur.city_code, \" \", props.declarationData.importeur.city, \", \", props.declarationData.importeur.country_code]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Anzahl Dokumente: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this), props.numberDocuments, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Verifikation: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this), \"Ausstehend (STATISCH)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Zollbescheid: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), \"Ausstehend (STATISCH)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n            children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n              md: \"8\",\n              lg: \"9\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-warning\",\n                role: \"alert\",\n                children: [\"Status: \", props.declarationData.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n              md: \"4\",\n              lg: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"float-end\",\n                children: props.isVerified ? /*#__PURE__*/_jsxDEV(MDBBtn, {\n                  className: \"my-3\",\n                  children: \"Daten sind verifiziert\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(MDBBtn, {\n                  onClick: () => handleVerification(),\n                  className: \"my-3\",\n                  children: \"Daten verifizieren\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n            children: [/*#__PURE__*/_jsxDEV(MDBBtn, {\n              className: \"mx-3 mb-3\",\n              color: \"success\",\n              style: {\n                width: 300\n              },\n              onClick: () => handleConfirmation(),\n              disabled: true,\n              children: \"Anmeldung Best\\xE4tigen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n              color: \"danger\",\n              className: \"mx-3 mb-3\",\n              style: {\n                width: 300\n              },\n              disabled: true,\n              onClick: () => handleReject(),\n              children: \"Anmeldung Ablehnen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBCardFooter, {\n          children: /*#__PURE__*/_jsxDEV(MDBRow, {\n            children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n              md: \"4\",\n              children: [\"Hinzugef\\xFCgt: \", props.declarationData.transaction.date_added]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n              md: \"4\",\n              children: [\"Zuletzt aktualisiert:\", \" \", props.declarationData.transaction.date_processed]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ZollDocumentTransaction, \"6l9C7kP773Y1g7Z6r2YB1oIHigE=\", false, function () {\n  return [useAxiosPrivate];\n});\n\n_c = ZollDocumentTransaction;\nexport default ZollDocumentTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"ZollDocumentTransaction\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/ZollDocuments/ZollDocumentTransaction.jsx"],"names":["React","useEffect","useState","MDBBtn","MDBCard","MDBCardBody","MDBCardTitle","MDBCardFooter","MDBCardSubTitle","MDBCardText","MDBCol","MDBContainer","MDBRow","MDBPopover","MDBPopoverBody","Link","getZollanmeldung","useAxiosPrivate","axios","ZollDocumentTransaction","props","axiosInstance","declarationData","status","setIsVerified","abgleichBlockchain","_blockchain_zid","crypto","require","console","log","then","tx","gesamtbetrag","invoiceData","total_value","zollwert","transport_costs","incoterms","lieferbedingung","exporteur","publickey","importeur","zoll","customs_office","anmelder","waehrung","invoice","currency","datum","issue_date","lieferkosten","catch","err","isVerified","setOpen","handleVerification","blockchain_zid","res","handleConfirmation","patch","id","handleReject","transaction","description","name","street","city_code","city","country_code","numberDocuments","width","date_added","date_processed"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardFooter,\n  MDBCardSubTitle,\n  MDBCardText,\n  MDBCol,\n  MDBContainer,\n  MDBRow,\n  MDBPopover,\n  MDBPopoverBody,\n} from \"mdb-react-ui-kit\";\nimport { Link } from \"react-router-dom\";\nimport { getZollanmeldung } from \"../../Web3Client.js\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate.js\";\nimport axios from \"axios\";\n\n\n\n\n\nfunction ZollDocumentTransaction(props) {\n\n\n  const axiosInstance = useAxiosPrivate()\n\n\n\n  useEffect(() => {\n    if (props.declarationData.status!=\"PE\") {\n      props.setIsVerified(true)\n    }\n  }, [])\n\n\n  async function abgleichBlockchain(_blockchain_zid) {\n\n    var crypto = require('crypto');  \n    console.log(\"Zollanmeldung ID:\" + _blockchain_zid);\n    console.log(props.declarationData)\n    \n    await getZollanmeldung(_blockchain_zid)\n    .then((tx) => {\n      console.log(tx)\n      console.log(\"Gesamtbetrag Zollanmeldung: \"+tx[0].gesamtbetrag+\", \"+props.invoiceData.total_value)\n      console.log(\"Zollwert: \"+tx[0].zollwert +\", \"+ (props.invoiceData.transport_costs + props.invoiceData.total_value))\n      console.log(\"Lieferbedingungen: \"+tx[0].incoterms+\", \"+ props.declarationData.lieferbedingung)\n      console.log(\"Exporteur : \"+tx[0].exporteur+\", \"+ props.declarationData.exporteur.publickey)\n      console.log(\"Importeur: \"+tx[0].importeur+\", \"+ props.declarationData.importeur.publickey)\n      console.log(\"Zoll: \"+tx[0].zoll+\", \"+ props.declarationData.customs_office.publickey)\n      console.log(\"Anmelder (Importeur): \"+tx[0].anmelder+\", \"+ props.declarationData.importeur.publickey)\n      console.log(\"Gesamtbetrag Rechnung: \"+tx[1].gesamtbetrag+\", \"+ props.invoiceData.total_value)\n      console.log(\"Währung: \"+tx[1].waehrung+\", \"+ props.declarationData.invoice.currency)\n      console.log(\"Exporteur Rechnung: \"+tx[1].exporteur+\", \"+ props.declarationData.exporteur.publickey)\n      console.log(\"Importeur Rechnung: \"+tx[1].importeur+\", \"+ props.declarationData.importeur.publickey)\n      console.log(\"Rechnungsdatum: \"+tx[1].datum+\", \"+ props.declarationData.invoice.issue_date)\n      //console.log(\"Hash RPosten: \"+tx[1].rechnungsposten+\", \"+ crypto.createHash('sha512').update(props.declarationData.invoice.invoiceItems).digest('hex'))\n      console.log(\"Lieferkosten: \"+tx[1].lieferkosten+\", \"+ props.declarationData.invoice.transport_costs)\n      if(tx[0].gesamtbetrag==props.invoiceData.total_value\n        && tx[0].zollwert== (props.invoiceData.transport_costs + props.invoiceData.total_value)\n        && tx[0].lieferkosten== props.declarationData.invoice.transport_costs\n        && tx[0].incoterms== props.declarationData.lieferbedingung\n        && tx[0].exporteur== props.declarationData.exporteur.publickey\n        && tx[0].importeur== props.declarationData.importeur.publickey\n        && tx[0].zoll== props.declarationData.customs_office.publickey\n        && tx[0].anmelder== props.declarationData.importeur.publickey\n        && tx[1].gesamtbetrag== props.invoiceData.total_value\n        && tx[1].waehrung== props.declarationData.invoice.currency\n        && tx[1].exporteur== props.declarationData.exporteur.publickey\n        && tx[1].importeur== props.declarationData.importeur.publickey\n        && tx[1].datum== props.declarationData.invoice.issue_date\n        //&& tx[1].rechnungsposten== crypto.createHash('sha512').update(props.declarationData.invoice.invoiceItems).digest('hex')\n        && tx[1].lieferkosten== props.declarationData.invoice.transport_costs\n        ){\n          console.log(\"Alles tutti\")\n\n          return true;\n      }\n      else{\n        console.log(\"Fehler liegt vor\")\n        return false;}\n    })\n    .catch((err) => {\n      console.log(err);\n      return false;\n    });\n  }\n\n  useEffect(() => {\n    //console.log(props.isVerified)\n    if (props.isVerified) {\n      props.setOpen(true)\n      //console.log(\"Verifiziert\")\n      //hier würde Transaktion verifiziert werden\n      //axiosInstance.patch('declaration_auth/' + props.declarationData.id + '/', {'status': 'VF'})\n    }\n  }, [props.isVerified])\n\n  async function handleVerification() {\n    //setIsVerified(true)\n    abgleichBlockchain(props.declarationData.blockchain_zid).then((res) => { props.setIsVerified(true)})\n     }\n\n\n  function handleConfirmation() {\n    axiosInstance.patch('declaration_auth/' + props.declarationData.id + '/', {'status': 'AC'})\n  }\n\n  function handleReject() {\n    axiosInstance.patch('declaration_auth/' + props.declarationData.id + '/', {'status': 'RJ'})\n  }\n  \n  return (\n    <div>\n      <MDBCard>\n        <MDBCardBody>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol>\n                <MDBCardTitle>\n                  {props.declarationData.transaction.description}\n                </MDBCardTitle>\n              </MDBCol>\n            </MDBRow>\n            <br />\n          </MDBContainer>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol>\n                <MDBCardText>\n                  <b>Versender</b>\n                  <br />\n                  {props.declarationData.exporteur.name}\n                  <br />\n                  {props.declarationData.exporteur.street}\n                  <br />\n                  {props.declarationData.exporteur.city_code}{\" \"}\n                  {props.declarationData.exporteur.city},{\" \"}\n                  {props.declarationData.exporteur.country_code}\n                </MDBCardText>\n              </MDBCol>\n              <MDBCol>\n                <MDBCardText>\n                  <b>Empfänger / Anmelder</b>\n                  <br />\n                  {props.declarationData.importeur.name}\n                  <br />\n                  {props.declarationData.importeur.street}\n                  <br />\n                  {props.declarationData.importeur.city_code} {props.declarationData.importeur.city}, {props.declarationData.importeur.country_code}\n                </MDBCardText>\n              </MDBCol>\n              <MDBCol>\n                <b>Anzahl Dokumente: </b>\n                {props.numberDocuments}\n                <br />\n                <br />\n                <b>Verifikation: </b>Ausstehend (STATISCH)\n                <br />\n                <b>Zollbescheid: </b>Ausstehend (STATISCH)\n              </MDBCol>\n            </MDBRow>\n            <br />\n            <MDBRow>\n              <MDBCol md=\"8\" lg=\"9\">\n                <div className=\"alert alert-warning\" role=\"alert\">\n                  Status: {props.declarationData.status}\n                </div>\n              </MDBCol>\n              <MDBCol md=\"4\" lg=\"3\">\n                <div className=\"float-end\">\n                  {props.isVerified ? (\n                      <MDBBtn  className=\"my-3\">\n                      Daten sind verifiziert\n                    </MDBBtn> ) : (\n                  <MDBBtn onClick={() => handleVerification()} className=\"my-3\">\n                    Daten verifizieren\n                  </MDBBtn>\n                    )}\n                </div>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow>\n              <MDBBtn\n                className=\"mx-3 mb-3\"\n                color=\"success\"\n                style={{ width: 300 }}\n                onClick={() => handleConfirmation()}\n                disabled\n              >\n                Anmeldung Bestätigen\n              </MDBBtn>\n              <MDBBtn\n                color=\"danger\"\n                className=\"mx-3 mb-3\"\n                style={{ width: 300 }}\n                disabled\n                onClick={() => handleReject()}\n              >\n                Anmeldung Ablehnen\n              </MDBBtn>\n            </MDBRow>\n          </MDBContainer>\n          <MDBCardFooter>\n            <MDBRow>\n              <MDBCol md=\"4\">\n                Hinzugefügt: {props.declarationData.transaction.date_added}\n              </MDBCol>\n              <MDBCol md=\"4\">\n                Zuletzt aktualisiert:{\" \"}\n                {props.declarationData.transaction.date_processed}\n              </MDBCol>\n            </MDBRow>\n          </MDBCardFooter>\n        </MDBCardBody>\n      </MDBCard>\n    </div>\n  );\n}\n\nexport default ZollDocumentTransaction;\n"]},"metadata":{},"sourceType":"module"}