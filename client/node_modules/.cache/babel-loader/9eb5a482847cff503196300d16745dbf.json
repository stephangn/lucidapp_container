{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Transactions.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { MDBBtn, MDBContainer, MDBCol, MDBRow, MDBIcon } from \"mdb-react-ui-kit\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport Transaction from \"../components/Transactions/Transaction\";\nimport { useParams } from \"react-router-dom\";\nimport TransactionModal from \"../components/Transactions/TransactionModal\";\nimport Form from \"react-bootstrap/Form\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport { TextRotateUpRounded } from \"@mui/icons-material\"; // Snackbar-Alert\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef(_c = function Alert(props, ref) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Alert;\n\nfunction Transactions() {\n  _s();\n\n  const [transactionsData, setTransactionsData] = useState([]);\n  const [documentsData, setDocumentsData] = useState([]);\n  const [declarationData, setDeclarationData] = useState([]);\n  const [loaded, setLoaded] = useState(false); // Reload-State: DB-Call wird mittels useEffect wiederholt, sobald\n  // ein neuer Auftrag hinzugefügt wurde\n\n  const [reload, setreload] = useState(false);\n  const axiosInstance = useAxiosPrivate();\n  const [isFilterView, setIsFilterView] = useState(false);\n  const [partnership, setPartnership] = useState();\n  const {\n    partnershipID\n  } = useParams();\n  useEffect(() => {\n    var link;\n\n    if (partnershipID) {\n      link = \"transactions/?partnership=\" + partnershipID;\n      setIsFilterView(true);\n    } else {\n      link = \"transactions/\";\n    }\n\n    axiosInstance.get(\"partnership/\" + partnershipID + \"/\").then(res => {\n      setPartnership(res.data);\n    });\n    axiosInstance.get(link).then(res => {\n      // Daten werden erst sortiert nach \"dateUpdatedDesc\"\n      // und danach im State gespeichert\n      const initialSort = [].concat(res.data).sort((a, b) => a.timestamp_added > b.timestamp_added ? -1 : 1);\n      setTransactionsData(initialSort);\n    });\n  }, [reload]); // Dokumente abrufen\n\n  useEffect(() => {\n    axiosInstance.get(\"documents/\").then(res => {\n      setDocumentsData(res.data);\n    });\n  }, []); // Zollanmeldungen abrufen\n\n  useEffect(() => {\n    axiosInstance.get(\"declaration/\").then(res => {\n      setDeclarationData(res.data);\n      console.log(res.data);\n    });\n  }, []); // Sortieralgorithmen\n\n  function sortDescriptionAsc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.description.toUpperCase() > b.description.toUpperCase() ? -1 : 1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDescriptionDesc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.description.toUpperCase() > b.description.toUpperCase() ? 1 : -1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedAsc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.timestamp_added > b.timestamp_added ? 1 : -1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedDesc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.timestamp_added > b.timestamp_added ? -1 : 1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedAsc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.timestamp_processed > b.timestamp_processed ? 1 : -1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedDesc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.timestamp_processed > b.timestamp_processed ? -1 : 1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortTransactions(event) {\n    if (event.target.value === \"DescriptionAsc\") {\n      sortDescriptionAsc();\n      return;\n    }\n\n    if (event.target.value === \"DescriptionDesc\") {\n      sortDescriptionDesc();\n      return;\n    }\n\n    if (event.target.value === \"UpdatedAsc\") {\n      sortDateUpdatedAsc();\n      return;\n    }\n\n    if (event.target.value === \"UpdatedDesc\") {\n      sortDateUpdatedDesc();\n      return;\n    }\n\n    if (event.target.value === \"AddedAsc\") {\n      sortDateAddedAsc();\n      return;\n    }\n\n    if (event.target.value === \"AddedDesc\") {\n      sortDateAddedDesc();\n      return;\n    }\n  } // Snackbar-Alert Rückmeldung\n  // State: Geöffnet (true) / Geschlossen (false)\n\n\n  const [openSnackbar, setOpenSnackbar] = useState(false); // State: Succcess (true) / Error (false)\n\n  const [snackbarSuccess, setSnackbarSuccess] = useState(true); // State: Snackbar Nachricht\n\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\"); // Öffnen der Snackbar\n\n  const handleOpenSnackbar = () => {\n    setOpenSnackbar(true);\n  }; // Schließen der Snackbar\n\n\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenSnackbar(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MDBContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Auftr\\xE4ge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), isFilterView && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Daten sind gefiltert \", partnership.partner.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"my-3 navbar navbar-expand-lg navbar-light bg-light\",\n        children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n            style: {\n              width: 270\n            },\n            onChange: event => sortTransactions(event),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"UpdatedDesc\",\n              children: \"Zuletzt ge\\xE4ndert absteigend \\uD83E\\uDC17\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"UpdatedAsc\",\n              children: \"Zuletzt ge\\xE4ndert aufsteigend \\uD83E\\uDC15\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"DescriptionDesc\",\n              children: \"Beschreibung absteigend \\uD83E\\uDC17\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"DescriptionAsc\",\n              children: \"Beschreibung aufsteigend \\uD83E\\uDC15\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"AddedDesc\",\n              children: \"Hinzugef\\xFCgt am absteigend \\uD83E\\uDC17\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"AddedAsc\",\n              children: \"Hinzugef\\xFCgt am aufsteigend \\uD83E\\uDC15\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"float-left\",\n            children: [transactionsData.length, \" Auftr\\xE4ge\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TransactionModal, {\n            setreload: setreload,\n            reload: reload,\n            handleOpenSnackbar: handleOpenSnackbar,\n            handleCloseSnackbar: handleCloseSnackbar,\n            setSnackbarSuccess: setSnackbarSuccess,\n            setSnackbarMessage: setSnackbarMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), transactionsData.map(transactionData => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Transaction, {\n          id: transactionData.id,\n          title: transactionData.description,\n          added: transactionData.date_added,\n          exportAddress: transactionData.partnership.partner.name,\n          exportStreet: transactionData.partnership.partner.street,\n          exportCity: transactionData.partnership.partner.city,\n          exportCountry: transactionData.partnership.partner.country_code,\n          importAddress: transactionData.importAddress,\n          importStreet: transactionData.importStreet,\n          importCity: transactionData.importCity,\n          importCountry: transactionData.importCountry,\n          stakeholderCount: transactionData.stakeholderCount,\n          lastChange: transactionData.date_processed,\n          status: transactionData.status,\n          importeur: transactionData.importeur,\n          timestamp_added: transactionData.timestamp_added,\n          timestamp_processed: transactionData.timestamp_processed,\n          documentsData: documentsData,\n          declarationData: declarationData\n        }, transactionData.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      open: openSnackbar,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      className: \"mt-5\",\n      children: snackbarSuccess == true ? /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: \"success\",\n        sx: {\n          width: \"100%\"\n        },\n        children: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: \"error\",\n        sx: {\n          width: \"100%\"\n        },\n        children: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Transactions, \"8kFbBZTHOwetWGk7smUb6mH58o4=\", false, function () {\n  return [useAxiosPrivate, useParams];\n});\n\n_c3 = Transactions;\nexport default Transactions;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"Transactions\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Transactions.jsx"],"names":["React","useState","useEffect","MDBBtn","MDBContainer","MDBCol","MDBRow","MDBIcon","Snackbar","MuiAlert","Transaction","useParams","TransactionModal","Form","useAxiosPrivate","TextRotateUpRounded","Alert","forwardRef","props","ref","Transactions","transactionsData","setTransactionsData","documentsData","setDocumentsData","declarationData","setDeclarationData","loaded","setLoaded","reload","setreload","axiosInstance","isFilterView","setIsFilterView","partnership","setPartnership","partnershipID","link","get","then","res","data","initialSort","concat","sort","a","b","timestamp_added","console","log","sortDescriptionAsc","myData","description","toUpperCase","sortDescriptionDesc","sortDateAddedAsc","sortDateAddedDesc","sortDateUpdatedAsc","timestamp_processed","sortDateUpdatedDesc","sortTransactions","event","target","value","openSnackbar","setOpenSnackbar","snackbarSuccess","setSnackbarSuccess","snackbarMessage","setSnackbarMessage","handleOpenSnackbar","handleCloseSnackbar","reason","partner","name","width","length","map","transactionData","id","date_added","street","city","country_code","importAddress","importStreet","importCity","importCountry","stakeholderCount","date_processed","status","importeur","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  MDBBtn,\n  MDBContainer,\n  MDBCol,\n  MDBRow,\n  MDBIcon,\n} from \"mdb-react-ui-kit\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport Transaction from \"../components/Transactions/Transaction\";\nimport { useParams } from \"react-router-dom\";\nimport TransactionModal from \"../components/Transactions/TransactionModal\";\nimport Form from \"react-bootstrap/Form\";\n\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport { TextRotateUpRounded } from \"@mui/icons-material\";\n\n// Snackbar-Alert\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nfunction Transactions() {\n  const [transactionsData, setTransactionsData] = useState([]);\n  const [documentsData, setDocumentsData] = useState([]);\n  const [declarationData, setDeclarationData] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  // Reload-State: DB-Call wird mittels useEffect wiederholt, sobald\n  // ein neuer Auftrag hinzugefügt wurde\n  const [reload, setreload] = useState(false);\n\n  const axiosInstance = useAxiosPrivate();\n  const [isFilterView, setIsFilterView] = useState(false)\n  const [partnership, setPartnership] = useState()\n\n\n  const { partnershipID } = useParams()\n\n  useEffect(() => {\n    var link \n    if (partnershipID) {\n      link = \"transactions/?partnership=\" + partnershipID\n      setIsFilterView(true)\n    } else {\n      link = \"transactions/\"\n    }\n    axiosInstance.get(\"partnership/\" + partnershipID +\"/\").then((res) => {\n      setPartnership(res.data)\n    })\n    axiosInstance.get(link).then((res) => {\n      // Daten werden erst sortiert nach \"dateUpdatedDesc\"\n      // und danach im State gespeichert\n      const initialSort = []\n        .concat(res.data)\n        .sort((a, b) => (a.timestamp_added > b.timestamp_added ? -1 : 1));\n      setTransactionsData(initialSort);\n    });\n  }, [reload]);\n\n  // Dokumente abrufen\n  useEffect(() => {\n    axiosInstance.get(\"documents/\").then((res) => {\n      setDocumentsData(res.data);\n    });\n  }, []);\n\n  // Zollanmeldungen abrufen\n  useEffect(() => {\n    axiosInstance.get(\"declaration/\").then((res) => {\n      setDeclarationData(res.data);\n      console.log(res.data);\n    });\n  }, []);\n\n  // Sortieralgorithmen\n  function sortDescriptionAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) =>\n        a.description.toUpperCase() > b.description.toUpperCase() ? -1 : 1\n      );\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDescriptionDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) =>\n        a.description.toUpperCase() > b.description.toUpperCase() ? 1 : -1\n      );\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.timestamp_added > b.timestamp_added ? 1 : -1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.timestamp_added > b.timestamp_added ? -1 : 1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.timestamp_processed > b.timestamp_processed ? 1 : -1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.timestamp_processed > b.timestamp_processed ? -1 : 1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortTransactions(event) {\n    if (event.target.value === \"DescriptionAsc\") {\n      sortDescriptionAsc();\n      return;\n    }\n    if (event.target.value === \"DescriptionDesc\") {\n      sortDescriptionDesc();\n      return;\n    }\n    if (event.target.value === \"UpdatedAsc\") {\n      sortDateUpdatedAsc();\n      return;\n    }\n    if (event.target.value === \"UpdatedDesc\") {\n      sortDateUpdatedDesc();\n      return;\n    }\n    if (event.target.value === \"AddedAsc\") {\n      sortDateAddedAsc();\n      return;\n    }\n    if (event.target.value === \"AddedDesc\") {\n      sortDateAddedDesc();\n      return;\n    }\n  }\n\n  // Snackbar-Alert Rückmeldung\n  // State: Geöffnet (true) / Geschlossen (false)\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  // State: Succcess (true) / Error (false)\n  const [snackbarSuccess, setSnackbarSuccess] = useState(true);\n  // State: Snackbar Nachricht\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n\n  // Öffnen der Snackbar\n  const handleOpenSnackbar = () => {\n    setOpenSnackbar(true);\n  };\n\n  // Schließen der Snackbar\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <div>\n      <MDBContainer>\n        <h3>Aufträge</h3>\n        {isFilterView && <h4>Daten sind gefiltert {partnership.partner.name}</h4>}\n\n        <nav className=\"my-3 navbar navbar-expand-lg navbar-light bg-light\">\n          <MDBContainer>\n            <Form.Select\n              style={{\n                width: 270,\n              }}\n              onChange={(event) => sortTransactions(event)}\n            >\n              <option value={\"UpdatedDesc\"}>\n                Zuletzt geändert absteigend &#129047;\n              </option>\n              <option value={\"UpdatedAsc\"}>\n                Zuletzt geändert aufsteigend &#129045;\n              </option>\n              <option value={\"DescriptionDesc\"}>\n                Beschreibung absteigend &#129047;\n              </option>\n              <option value={\"DescriptionAsc\"}>\n                Beschreibung aufsteigend &#129045;\n              </option>\n              <option value={\"AddedDesc\"}>\n                Hinzugefügt am absteigend &#129047;\n              </option>\n              <option value={\"AddedAsc\"}>\n                Hinzugefügt am aufsteigend &#129045;\n              </option>\n            </Form.Select>{\" \"}\n            <div className=\"float-left\">{transactionsData.length} Aufträge</div>\n            <TransactionModal\n              setreload={setreload}\n              reload={reload}\n              handleOpenSnackbar={handleOpenSnackbar}\n              handleCloseSnackbar={handleCloseSnackbar}\n              setSnackbarSuccess={setSnackbarSuccess}\n              setSnackbarMessage={setSnackbarMessage}\n            />\n          </MDBContainer>\n        </nav>\n        {transactionsData.map((transactionData) => (\n          <React.Fragment>\n            <Transaction\n              key={transactionData.id}\n              id={transactionData.id}\n              title={transactionData.description}\n              added={transactionData.date_added}\n              exportAddress={transactionData.partnership.partner.name}\n              exportStreet={transactionData.partnership.partner.street}\n              exportCity={transactionData.partnership.partner.city}\n              exportCountry={transactionData.partnership.partner.country_code}\n              importAddress={transactionData.importAddress}\n              importStreet={transactionData.importStreet}\n              importCity={transactionData.importCity}\n              importCountry={transactionData.importCountry}\n              stakeholderCount={transactionData.stakeholderCount}\n              lastChange={transactionData.date_processed}\n              status={transactionData.status}\n              importeur={transactionData.importeur}\n              timestamp_added={transactionData.timestamp_added}\n              timestamp_processed={transactionData.timestamp_processed}\n              documentsData={documentsData}\n              declarationData={declarationData}\n            />\n            <br />\n          </React.Fragment>\n        ))}\n      </MDBContainer>\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        open={openSnackbar}\n        autoHideDuration={6000}\n        onClose={handleCloseSnackbar}\n        className=\"mt-5\"\n      >\n        {snackbarSuccess == true ? (\n          <Alert\n            onClose={handleCloseSnackbar}\n            severity=\"success\"\n            sx={{ width: \"100%\" }}\n          >\n            {snackbarMessage}\n          </Alert>\n        ) : (\n          <Alert\n            onClose={handleCloseSnackbar}\n            severity=\"error\"\n            sx={{ width: \"100%\" }}\n          >\n            {snackbarMessage}\n          </Alert>\n        )}\n      </Snackbar>\n    </div>\n  );\n}\n\nexport default Transactions;\n"]},"metadata":{},"sourceType":"module"}