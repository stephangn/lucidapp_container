{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/login_new.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useRef, useState, useEffect, useContext } from 'react';\nimport AuthContext from \"../context/AuthProvider\";\nimport axiosInstance from '../axiosApi';\nimport { MDBInput, MDBCol, MDBRow, MDBContainer, MDBBtn } from \"mdb-react-ui-kit\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LOGIN_URL = '/api/token/';\n\nconst LoginNew = () => {\n  _s();\n\n  /*   const userRef = useRef();\n    const errRef = useRef(); */\n  const {\n    setAuth\n  } = useContext(AuthContext);\n  const [user, setUser] = useState('');\n  const [pwd, setPwd] = useState('');\n  const [errMsg, setErrMsg] = useState('');\n  const [sucess, setSucess] = useState(false);\n  /*   useEffect(() => {\n      userRef.current.focus();\n    }, []) */\n\n  useEffect(() => {\n    setErrMsg('');\n  }, [user, pwd]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      var _response$data, _response$data2;\n\n      const response = await axiosInstance.post(LOGIN_URL, JSON.stringify({\n        username: user,\n        password: pwd\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(JSON.stringify(response === null || response === void 0 ? void 0 : response.data));\n      const accesToken = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.accesToken;\n      const roles = response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.roles;\n      setAuth({\n        user,\n        pwd,\n        roles,\n        accesToken\n      });\n      setUser('');\n      setPwd('');\n      setSucess(true);\n    } catch (err) {\n      var _err$response, _err$response2;\n\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrMsg('No Server Response');\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 400) {\n        setErrMsg('Missing Username or Password');\n      } else if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401) {\n        setErrMsg('Unauthorized');\n      } else {\n        setErrMsg('Login Failed');\n      }\n    }\n  };\n  /*    axiosInstance\n       .post(\"api/token/\", {\n         username: this.state.username,\n         password: this.state.password,\n       })\n       .then((response) => {\n         axiosInstance.defaults.headers[\"Authorization\"] =\n           \"JWT \" + response.data.access;\n         localStorage.setItem(\"access_token\", response.data.access);\n         localStorage.setItem(\"refresh_token\", response.data.refresh);\n         //speichern von Nutzernamen und Firma im lokalen Speicher\n         localStorage.setItem(\"username\", response.data.user);\n         localStorage.setItem(\"company\", response.data.company);\n         alert(\n           \"Login als \" +\n             response.data.user +\n             \" von der Firma \" +\n             response.data.company\n         );\n         window.location.reload(true);\n         return response.data;\n         //Error Handling\n       })\n       .catch(function (error) {\n         if (error.response) {\n           // Macht noch Probleme:\n           this.setState({ wrongLogin: true });\n           // Request made and server responded\n           alert(\"Passwort oder Nutzername falsch\");\n           console.log(error.response.data);\n           console.log(error.response.status);\n           console.log(error.response.headers);\n         } else if (error.request) {\n           // The request was made but no response was received\n           alert(\"Anfrage gemacht - Server antwortet nicht\");\n            console.log(error.request);\n         }\n       }); */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: sucess ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Du bist eingeloggt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Zur Startseite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: errMsg ? \"errmsg\" : \"offscreen\",\n          \"aria-live\": \"assertive\",\n          children: errMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MDBContainer, {\n          children: /*#__PURE__*/_jsxDEV(MDBRow, {\n            className: \"d-flex justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(MDBCol, {\n              className: \"col-md-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n                  className: \"mb-4\",\n                  type: \"username\",\n                  id: \"username\",\n                  label: \"Email address\",\n                  name: \"username\",\n                  onChange: e => setUser(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                  className: \"mb-4\",\n                  type: \"password\",\n                  id: \"password\",\n                  label: \"Password\",\n                  name: \"password\",\n                  onChange: e => setPwd(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n                  type: \"submit\",\n                  value: \"Submit\",\n                  children: \"Einloggen\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(LoginNew, \"upq22LU8Iz4TsFavSGgiemeLH/k=\");\n\n_c = LoginNew;\nexport default LoginNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginNew\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/login_new.jsx"],"names":["React","useRef","useState","useEffect","useContext","AuthContext","axiosInstance","MDBInput","MDBCol","MDBRow","MDBContainer","MDBBtn","axios","LOGIN_URL","LoginNew","setAuth","user","setUser","pwd","setPwd","errMsg","setErrMsg","sucess","setSucess","handleSubmit","e","preventDefault","response","post","JSON","stringify","username","password","headers","console","log","data","accesToken","roles","err","status","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useRef, useState, useEffect, useContext } from 'react';\nimport AuthContext from \"../context/AuthProvider\"\nimport axiosInstance from '../axiosApi';\n\nimport {\n  MDBInput,\n  MDBCol,\n  MDBRow,\n  MDBContainer,\n  MDBBtn,\n} from \"mdb-react-ui-kit\";\nimport axios from 'axios';\n\nconst LOGIN_URL = '/api/token/';\n\nconst LoginNew = () => {\n  \n/*   const userRef = useRef();\n  const errRef = useRef(); */\n\n  const  { setAuth } = useContext(AuthContext);\n  \n  const [user, setUser] = useState(''); \n  const [pwd, setPwd] = useState(''); \n  const [errMsg, setErrMsg] = useState(''); \n  const [sucess, setSucess] = useState(false);\n  \n/*   useEffect(() => {\n    userRef.current.focus();\n  }, []) */\n  \n\n  useEffect(() => {\n    setErrMsg('');\n  }, [user, pwd])\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await axiosInstance.post(\n                            LOGIN_URL, \n                            JSON.stringify({username: user,password: pwd}),\n                            {\n                              headers: {'Content-Type':'application/json'},\n                            }\n                      );\n      console.log(JSON.stringify(response?.data));\n      const accesToken = response?.data?.accesToken;\n      const roles =  response?.data?.roles; \n      setAuth({user,pwd,roles, accesToken}); \n      setUser('');\n      setPwd('');\n      setSucess(true);\n\n    } catch (err) {\n      if (!err?.response) {\n              setErrMsg('No Server Response');\n          } else if (err.response?.status === 400) {\n              setErrMsg('Missing Username or Password');\n          } else if (err.response?.status === 401) {\n              setErrMsg('Unauthorized');\n          } else {\n              setErrMsg('Login Failed');\n        }\n\n\n    }\n\n\n  }\n\n\n /*    axiosInstance\n      .post(\"api/token/\", {\n        username: this.state.username,\n        password: this.state.password,\n      })\n      .then((response) => {\n        axiosInstance.defaults.headers[\"Authorization\"] =\n          \"JWT \" + response.data.access;\n        localStorage.setItem(\"access_token\", response.data.access);\n        localStorage.setItem(\"refresh_token\", response.data.refresh);\n        //speichern von Nutzernamen und Firma im lokalen Speicher\n        localStorage.setItem(\"username\", response.data.user);\n        localStorage.setItem(\"company\", response.data.company);\n        alert(\n          \"Login als \" +\n            response.data.user +\n            \" von der Firma \" +\n            response.data.company\n        );\n        window.location.reload(true);\n        return response.data;\n        //Error Handling\n      })\n      .catch(function (error) {\n        if (error.response) {\n          // Macht noch Probleme:\n          this.setState({ wrongLogin: true });\n          // Request made and server responded\n          alert(\"Passwort oder Nutzername falsch\");\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          alert(\"Anfrage gemacht - Server antwortet nicht\");\n\n          console.log(error.request);\n        }\n      }); */\n  \n\n  return (\n    <>\n      {sucess ? (\n          <section>\n              <h1> Du bist eingeloggt</h1>\n              <br />\n              <p>\n                <a href=\"#\">Zur Startseite</a>\n              </p>\n          </section>\n\n      ):(\n    <section> \n      <div>\n        <p className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\n        <MDBContainer>\n            <MDBRow className=\"d-flex justify-content-center\">\n              <MDBCol className=\"col-md-4\">\n              <form onSubmit={handleSubmit}>\n                  <MDBInput\n                    className=\"mb-4\"\n                    type=\"username\"\n                    id=\"username\"\n                    label=\"Email address\"\n                    name=\"username\"\n\n                    onChange={(e) => setUser(e.target.value)}\n                  />\n\n                  <MDBInput\n                    className=\"mb-4\"\n                    type=\"password\"\n                    id=\"password\"\n                    label=\"Password\"\n                    name=\"password\"\n                    onChange={(e) => setPwd(e.target.value)}\n                  />\n\n                  <MDBBtn type=\"submit\" value=\"Submit\">\n                    Einloggen\n                  </MDBBtn>\n                </form>\n                <br />\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer> \n      </div>\n    </section>\n      )}\n    </>      \n  )\n  }\n\nexport default LoginNew"]},"metadata":{},"sourceType":"module"}