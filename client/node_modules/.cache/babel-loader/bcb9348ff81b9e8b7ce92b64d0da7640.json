{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Documents/DocumentCard.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBCardHeader, MDBCardFooter, MDBBtn } from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport CardModal from \"./CardModal\"; //Hook für Contextabruf\n\nimport useAuth from \"../../hooks/useAuth\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DocumentCard(props) {\n  _s();\n\n  const axiosInstance = useAxiosPrivate(); //Context mit Nutzerdaten abrufen\n\n  const {\n    auth\n  } = useAuth();\n  const [datei, setDatei] = useState([]);\n  let fileLink = null;\n  const [ShowConfirmation, setShowConfirmation] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const author_company = props.author_company;\n  useEffect(() => {\n    //Abruf des Link zur Datei\n    console.log(auth.pubkey);\n    axiosInstance.get(\"file/3\").then(res => {\n      setDatei(res.data);\n      fileLink = res.data.file;\n      /*     console.log(author_company + auth.company)\n      console.log(props.confirmed) */\n\n      setIsLoading(true);\n\n      if (props.confirmed == true) {\n        setShowConfirmation(false);\n        console.log(\"bereits bestätigt, confirm auf True\");\n      } else if (author_company == auth.company) {//console.log(\"Firmen sind ungleich- Confirm auf False\")\n      } else {\n        setShowConfirmation(true); //console.log(\"Confirm auf True\")\n      }\n    }, []);\n  }, [ShowConfirmation]);\n  useEffect(() => {\n    console.log(props.blockchain_rid);\n  }, [props.blockchain_rid]);\n\n  const confirmDocument = e => {\n    axiosInstance.patch(`invoice/${props.id}/`, {\n      confirmed: true\n    }); //Hier Blockchain Transaktion einfügen\n\n    setShowConfirmation(false);\n  }; // State für \"Dokument anzeigen\" Modal\n\n\n  const [showDocumentModal, setShowDocumentModal] = useState(false); // Funktion für Manipulation von Modal (als props weitergereicht)\n\n  function toggleShowDocumentModal() {\n    setShowDocumentModal(!showDocumentModal);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MDBCard, {\n      className: \"h-100\",\n      style: {\n        maxWidth: \"22rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MDBCardBody, {\n        children: [/*#__PURE__*/_jsxDEV(MDBCardTitle, {\n          children: props.type + \" \" + \"(\" + props.documentDate + \")\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBCardText, {\n          className: \"my-4\",\n          children: props.description == \"\" ? /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 40\n          }, this) : props.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n          outline: true,\n          className: \"float-end\",\n          onClick: toggleShowDocumentModal,\n          children: \"Anzeigen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBCardFooter, {\n        className: \"text-muted\",\n        children: [\"Hochgeladen am: \", props.uploadDate, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), \"von \", props.author_company, \" (\", props.author, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardModal, {\n      basicModal: showDocumentModal,\n      setBasicModal: setShowDocumentModal,\n      toggleShow: toggleShowDocumentModal,\n      title: props.title,\n      description: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DocumentCard, \"0TPQa3AeFIXDDYYeEjDU1YiCHTU=\", false, function () {\n  return [useAxiosPrivate, useAuth];\n});\n\n_c = DocumentCard;\nexport default DocumentCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DocumentCard\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Documents/DocumentCard.jsx"],"names":["React","useState","useEffect","MDBCard","MDBCardBody","MDBCardTitle","MDBCardText","MDBCardHeader","MDBCardFooter","MDBBtn","useAxiosPrivate","CardModal","useAuth","Link","DocumentCard","props","axiosInstance","auth","datei","setDatei","fileLink","ShowConfirmation","setShowConfirmation","isLoading","setIsLoading","author_company","console","log","pubkey","get","then","res","data","file","confirmed","company","blockchain_rid","confirmDocument","e","patch","id","showDocumentModal","setShowDocumentModal","toggleShowDocumentModal","maxWidth","type","documentDate","description","uploadDate","author","title"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport {\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardText,\n  MDBCardHeader,\n  MDBCardFooter,\n  MDBBtn,\n} from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport CardModal from \"./CardModal\";\n//Hook für Contextabruf\nimport useAuth from \"../../hooks/useAuth\";\nimport { Link } from \"react-router-dom\";\n\nfunction DocumentCard(props) {\n  const axiosInstance = useAxiosPrivate();\n  //Context mit Nutzerdaten abrufen\n  const { auth } = useAuth();\n  const [datei, setDatei] = useState([]);\n  let fileLink = null;\n  const [ShowConfirmation, setShowConfirmation] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const author_company = props.author_company;\n\n  useEffect(() => {\n    //Abruf des Link zur Datei\n    console.log(auth.pubkey);\n    axiosInstance.get(\"file/3\").then((res) => {\n      setDatei(res.data);\n      fileLink = res.data.file;\n      /*     console.log(author_company + auth.company)\n    console.log(props.confirmed) */\n      setIsLoading(true);\n      if (props.confirmed == true) {\n        setShowConfirmation(false);\n        console.log(\"bereits bestätigt, confirm auf True\");\n      } else if (author_company == auth.company) {\n        //console.log(\"Firmen sind ungleich- Confirm auf False\")\n      } else {\n        setShowConfirmation(true);\n        //console.log(\"Confirm auf True\")\n      }\n    }, []);\n  }, [ShowConfirmation]);\n\n  useEffect(() => {\n    console.log(props.blockchain_rid);\n  }, [props.blockchain_rid]);\n\n  const confirmDocument = (e) => {\n    axiosInstance.patch(`invoice/${props.id}/`, {\n      confirmed: true,\n    });\n    //Hier Blockchain Transaktion einfügen\n    setShowConfirmation(false);\n  };\n\n  // State für \"Dokument anzeigen\" Modal\n  const [showDocumentModal, setShowDocumentModal] = useState(false);\n  // Funktion für Manipulation von Modal (als props weitergereicht)\n  function toggleShowDocumentModal() {\n    setShowDocumentModal(!showDocumentModal);\n  }\n\n  return (\n    <>\n      <MDBCard className=\"h-100\" style={{ maxWidth: \"22rem\" }}>\n        <MDBCardBody>\n          <MDBCardTitle>\n            {props.type + \" \" + \"(\" + props.documentDate + \")\"}\n          </MDBCardTitle>\n          <MDBCardText className=\"my-4\">\n            {props.description == \"\" ? <br /> : props.description}\n          </MDBCardText>\n\n          {/* {props.confirmed ? (\n              <span> Bestätigt</span>\n            ) : (\n              <span> warten auf bestätigung</span>\n            )}\n          </MDBCardText>\n          <MDBBtn outline onClick={toggleShowDocumentModal}>\n            Anzeigen\n          </MDBBtn>\n          {ShowConfirmation ? (\n            <MDBBtn outline onClick={confirmDocument}>\n              Freigeben\n            </MDBBtn>\n          ) : (\n            <br />\n          )} */}\n\n          <MDBBtn\n            outline\n            className=\"float-end\"\n            onClick={toggleShowDocumentModal}\n          >\n            Anzeigen\n          </MDBBtn>\n        </MDBCardBody>\n        <MDBCardFooter className=\"text-muted\">\n          Hochgeladen am: {props.uploadDate}\n          <br />\n          von {props.author_company} ({props.author})\n        </MDBCardFooter>\n      </MDBCard>\n      <CardModal\n        basicModal={showDocumentModal}\n        setBasicModal={setShowDocumentModal}\n        toggleShow={toggleShowDocumentModal}\n        title={props.title}\n        description={props.description}\n      />\n    </>\n  );\n}\n\nexport default DocumentCard;\n"]},"metadata":{},"sourceType":"module"}