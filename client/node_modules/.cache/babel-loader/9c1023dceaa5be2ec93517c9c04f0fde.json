{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Documents/DocumentCard.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBCardHeader, MDBCardFooter, MDBBtn } from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport CardModal from \"./CardModal\";\nimport useAuth from \"../../hooks/useAuth\";\nimport axios from \"axios\";\nimport { confirmRechnung } from \"../../Web3Client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DocumentCard(props) {\n  _s();\n\n  const axiosInstance = useAxiosPrivate();\n  const {\n    auth\n  } = useAuth();\n  const [datei, setDatei] = useState([]);\n  let fileLink = null;\n  const [ShowConfirmation, setShowConfirmation] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const author_company = props.author_company;\n  useEffect(() => {\n    //Abruf des Link zur Datei\n    axiosInstance.get(\"file/3\").then(res => {\n      setDatei(res.data);\n      fileLink = res.data.file;\n      console.log(author_company + auth.company);\n      console.log(props.confirmed);\n      setIsLoading(true);\n\n      if (props.confirmed == true) {\n        setShowConfirmation(false);\n        console.log(\"bereits bestätigt, confirm auf True\");\n      } else if (author_company == auth.company) {\n        console.log(\"Firmen sind ungleich- Confirm auf False\");\n      } else {\n        setShowConfirmation(true);\n        console.log(\"Confirm auf True\");\n      }\n    }, []);\n  }, [ShowConfirmation]);\n  useEffect(() => {}, []);\n\n  const confirmDocument = e => {\n    //blockchain Transaktion\n    confirmRechnung(0).then(tx => {\n      console.log(\"Rechnung mit der RechnungID \" + tx + \" wurde bestätigt\");\n    }).catch(err => {\n      console.log(\"Rechnungsbestätigung fehlgeschlagen. Fehlermeldung: \" + err);\n    });\n    axiosInstance.patch(`invoice/${props.id}/`, {\n      confirmed: true\n    }); //Hier Blockchain Transaktion einfügen\n\n    setShowConfirmation(false);\n  }; // State für \"Dokument anzeigen\" Modal\n\n\n  const [showDocumentModal, setShowDocumentModal] = useState(false); // Funktion für Manipulation von Modal (als props weitergereicht)\n\n  function toggleShowDocumentModal() {\n    setShowDocumentModal(!showDocumentModal);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MDBCard, {\n      className: \"h-100\",\n      style: {\n        maxWidth: \"22rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MDBCardHeader, {\n        children: [\"Hochgeladen von: \", props.author, \" - \", props.author_company]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBCardBody, {\n        children: [/*#__PURE__*/_jsxDEV(MDBCardTitle, {\n          children: props.type + \" \" + \"(\" + props.documentDate + \")\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBCardText, {\n          children: [props.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), props.confirmed ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" Best\\xE4tigt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 32\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" warten auf best\\xE4tigung\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 57\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n          outline: true,\n          onClick: toggleShowDocumentModal,\n          children: \"Anzeigen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), ShowConfirmation ? /*#__PURE__*/_jsxDEV(MDBBtn, {\n          outline: true,\n          onClick: confirmDocument,\n          children: \"Freigeben\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n          outline: true,\n          onClick: toggleShowDocumentModal,\n          children: \"L\\xF6schen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBCardFooter, {\n        className: \"text-muted\",\n        children: [\"Hochgeladen am: Test: \", props.uploadDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardModal, {\n      basicModal: showDocumentModal,\n      setBasicModal: setShowDocumentModal,\n      toggleShow: toggleShowDocumentModal,\n      title: props.title,\n      description: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DocumentCard, \"0TPQa3AeFIXDDYYeEjDU1YiCHTU=\", false, function () {\n  return [useAxiosPrivate, useAuth];\n});\n\n_c = DocumentCard;\nexport default DocumentCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DocumentCard\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Documents/DocumentCard.jsx"],"names":["React","useState","useEffect","MDBCard","MDBCardBody","MDBCardTitle","MDBCardText","MDBCardHeader","MDBCardFooter","MDBBtn","useAxiosPrivate","CardModal","useAuth","axios","confirmRechnung","DocumentCard","props","axiosInstance","auth","datei","setDatei","fileLink","ShowConfirmation","setShowConfirmation","isLoading","setIsLoading","author_company","get","then","res","data","file","console","log","company","confirmed","confirmDocument","e","tx","catch","err","patch","id","showDocumentModal","setShowDocumentModal","toggleShowDocumentModal","maxWidth","author","type","documentDate","description","uploadDate","title"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport {\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardText,\n  MDBCardHeader,\n  MDBCardFooter,\n  MDBBtn,\n} from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport CardModal from \"./CardModal\";\nimport useAuth from \"../../hooks/useAuth\";\nimport axios from \"axios\";\nimport { confirmRechnung } from \"../../Web3Client\";\n\nfunction DocumentCard(props) {\n\n  const axiosInstance = useAxiosPrivate();\n  const { auth } = useAuth();\n  const [datei, setDatei] = useState([]);\n  let fileLink = null;\n  const [ShowConfirmation, setShowConfirmation] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const author_company = props.author_company;\n\n  useEffect(() => {\n    //Abruf des Link zur Datei\n    axiosInstance.get(\"file/3\").then((res) => {\n      setDatei(res.data);\n      fileLink = res.data.file;\n    console.log(author_company + auth.company)\n    console.log(props.confirmed)\n    setIsLoading(true)\n    if (props.confirmed == true) {\n      setShowConfirmation(false);\n      console.log(\"bereits bestätigt, confirm auf True\")\n    } else if (author_company == auth.company) {\n        console.log(\"Firmen sind ungleich- Confirm auf False\")\n    } else {\n        setShowConfirmation(true);\n        console.log(\"Confirm auf True\")\n    }\n    },[]);\n\n    \n  }, [ShowConfirmation]);\n\n  useEffect(() => {\n\n    \n\n  }, []);\n\n  const confirmDocument = (e) => {\n    //blockchain Transaktion\n    confirmRechnung(0)\n      .then((tx) => {\n        console.log(\"Rechnung mit der RechnungID \" + tx + \" wurde bestätigt\");\n      })\n      .catch((err) => {\n        console.log(\"Rechnungsbestätigung fehlgeschlagen. Fehlermeldung: \" + err);\n    });\n    axiosInstance.patch(`invoice/${props.id}/`, {\n      confirmed: true, \n    })\n    //Hier Blockchain Transaktion einfügen\n    setShowConfirmation(false); \n  }\n\n  // State für \"Dokument anzeigen\" Modal\n  const [showDocumentModal, setShowDocumentModal] = useState(false);\n  // Funktion für Manipulation von Modal (als props weitergereicht)\n  function toggleShowDocumentModal() {\n    setShowDocumentModal(!showDocumentModal);\n  }\n  \n  return (\n    <>\n      <MDBCard className=\"h-100\" style={{ maxWidth: \"22rem\" }}>\n        <MDBCardHeader>Hochgeladen von: {props.author} - {props.author_company}</MDBCardHeader>\n        <MDBCardBody>\n          <MDBCardTitle>\n            {props.type + \" \" + \"(\" + props.documentDate + \")\"}\n          </MDBCardTitle>     \n          <MDBCardText>{props.description}\n            <br/>\n            {props.confirmed ? <span> Bestätigt</span>: <span> warten auf bestätigung</span>}\n\n          </MDBCardText>\n          <MDBBtn outline onClick={toggleShowDocumentModal}>\n            Anzeigen\n          </MDBBtn>\n      {ShowConfirmation ? <MDBBtn outline onClick={confirmDocument}>\n            Freigeben\n          </MDBBtn>\n          : <br/>\n      }\n\n          <MDBBtn outline onClick={toggleShowDocumentModal}>\n            Löschen\n          </MDBBtn>\n        </MDBCardBody>\n        <MDBCardFooter className=\"text-muted\">\n          Hochgeladen am: Test: {props.uploadDate}\n        </MDBCardFooter>\n      </MDBCard>\n      <CardModal\n        basicModal={showDocumentModal}\n        setBasicModal={setShowDocumentModal}\n        toggleShow={toggleShowDocumentModal}\n        title={props.title}\n        description={props.description}\n      />\n    </>\n  );\n}\n\nexport default DocumentCard;\n"]},"metadata":{},"sourceType":"module"}