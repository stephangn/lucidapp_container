{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Zoll/ZollDocuments.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport { MDBContainer, MDBBtn, MDBRow, MDBCol, MDBSpinner, MDBBadge } from \"mdb-react-ui-kit\";\nimport Divider from \"@mui/material/Divider\";\nimport Box from '@mui/material/Box';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport Button from '@mui/material/Button';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Link } from \"react-router-dom\";\nimport { MDBBreadcrumb, MDBBreadcrumbItem } from \"mdb-react-ui-kit\";\nimport ZollDocumentsModal from \"../../components/ZollDocuments/ZollDocumentsModal\";\nimport ZollDocumentTransaction from \"../../components/ZollDocuments/ZollDocumentTransaction\";\nimport DocumentCard from \"../../components/Documents/DocumentCard\";\nimport DeclarationCard from \"../../components/Documents/DeclarationCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ZollDocuments(props) {\n  _s();\n\n  // Allgemeine Auftragsinformationen\n  const [transactionData, setTransactionData] = useState([]); // Informationen der hochgeladenen Dokumente\n\n  const [documentsData, setDocumentsData] = useState([]);\n  const [declarationData, setDeclarationData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalValue, setTotalValue] = useState(true);\n  const [invoiceData, setInvoiceData] = useState();\n  const [isVerified, setIsVerified] = useState(false);\n  const [open, setOpen] = useState(true);\n  const axiosInstance = useAxiosPrivate(); // // Anzahl Dokumente\n  // const [numberInvoiceDocumentes, setNumberInvoiceDocuments] = useState(0);\n  // const [numberOtherDocumentes, setNumberOtherDocuments] = useState(0);\n  // Speichern der Transaktions-ID aus URL\n\n  const {\n    declarationID\n  } = useParams();\n  useEffect(async () => {\n    console.log(declarationID);\n    await axiosInstance.get(`declaration_auth/` + declarationID).then(res => {\n      console.log(res.data);\n      setDeclarationData(res.data);\n      setDocumentsData(res.data.document);\n      setTransactionData(res.data.transaction);\n      axiosInstance.get('invoice/' + res.data.invoice.id + '/').then(res => {\n        setTotalValue(res.data.total_value); //console.log(res.data.total_value)\n\n        setInvoiceData(res.data);\n      });\n    }).catch(err => {\n      console.log(\"Keine Zollanmeldung liegt vor\" + err);\n    });\n    setIsLoading(false);\n    /*     console.log(transactionData);\n        axiosInstance.get(`documents/?transaction=` + transactionId).then((res) => {\n          //console.log(res.data);\n          setDocumentsData(res.data);\n          //console.log(documentsData);\n        }); */\n  }, []);\n  useEffect(() => {\n    console.log(declarationData);\n    console.log(transactionData);\n  }, [declarationData, transactionData]); // State für \"Dokument hinzufügen\" Modal\n\n  const [addDocumentModal, setAddDocumentModal] = useState(false); // Funktion für Manipulation von Modal (als props weitergereicht)\n\n  function toggleAddDocumentModal() {\n    setAddDocumentModal(!addDocumentModal);\n  } // Anzahl Rechnungs+Zolldokumente call(a) und sonstige Dokumente call(b)\n\n\n  function numberInvoiceDocuments(alternative) {\n    let invoiceAndCustoms = 0;\n    let other = 0;\n\n    for (let i = 0; i < documentsData.length; i++) {\n      if (documentsData[i].type == \"Rechnung\" || documentsData[i].type == \"Zoll\") {\n        invoiceAndCustoms += 1;\n      } else {\n        other += 1;\n      }\n    }\n\n    if (alternative == \"a\") {\n      return invoiceAndCustoms;\n    }\n\n    if (alternative == \"b\") {\n      return other;\n    }\n\n    return;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(MDBSpinner, {\n      grow: true,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"visually-hidden\",\n        children: \"L\\xE4dt..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(MDBContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Zollanmeldung Dokumente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ZollDocumentsModal, {\n        basicModal: addDocumentModal,\n        setBasicModal: setAddDocumentModal,\n        toggleShow: toggleAddDocumentModal,\n        transactionData: transactionData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MDBBreadcrumb, {\n        children: [/*#__PURE__*/_jsxDEV(MDBBreadcrumbItem, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/zoll/transactions\",\n            children: \"Auftr\\xE4ge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MDBBreadcrumbItem, {\n          active: true,\n          children: [\"Zollanmeldung-ID \", declarationData.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MDBContainer, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Collapse, {\n            in: open,\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              action: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"close\",\n                color: \"inherit\",\n                size: \"small\",\n                onClick: () => {\n                  setOpen(false);\n                },\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                  fontSize: \"inherit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 27\n              }, this),\n              sx: {\n                mb: 2\n              },\n              children: \"Close me!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ZollDocumentTransaction, {\n        declarationData: declarationData,\n        numberDocuments: documentsData === null || documentsData === void 0 ? void 0 : documentsData.length,\n        gesamtbetrag: totalValue,\n        invoiceData: invoiceData,\n        setIsVerified: setIsVerified,\n        isVerified: isVerified,\n        setOpen: setOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"my-3 navbar navbar-expand-lg navbar-light bg-light\",\n        children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MDBBadge, {\n              pill: true,\n              children: numberInvoiceDocuments(\"a\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Rechnungs- und Zolldokumente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MDBBadge, {\n              pill: true,\n              className: \"ms-3\",\n              children: numberInvoiceDocuments(\"b\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Sonstige Dokumente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n            outline: true,\n            className: \"float-end\",\n            color: \"success\",\n            onClick: toggleAddDocumentModal,\n            children: \"Dokument hinzuf\\xFCgen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        textAlign: \"left\",\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Zollanmeldung\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DeclarationCard, {\n        anmeldeArt: declarationData.anmeldeArt,\n        gesamtbetrag: totalValue,\n        bearbeitendeDienststelle: declarationData.customs_office.name,\n        lieferkosten: declarationData.invoice.transport_costs,\n        documentId: documentsData.documentId,\n        anmelderName: declarationData.importeur.name,\n        issue_date: declarationData.date_added\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        textAlign: \"left\",\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Rechnung\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n        className: \"row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\",\n        children: /*#__PURE__*/_jsxDEV(MDBCol, {\n          children: /*#__PURE__*/_jsxDEV(DocumentCard, {\n            id: declarationData.invoice.id,\n            author_company: declarationData.exporteur.name,\n            author: \"Karl Company\",\n            type: \"Rechnung\",\n            description: declarationData.invoice.description,\n            documentDate: declarationData.invoice.issue_date,\n            uploadDate: declarationData.invoice.upload_date,\n            file: declarationData.invoice.file\n          }, declarationData.invoice.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        textAlign: \"left\",\n        className: \"mt-5 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Sonstige Dokumente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n        className: \"row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\",\n        children: documentsData.map(documentData => documentData.type !== \"Rechnung\" && /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(MDBCol, {\n            children: /*#__PURE__*/_jsxDEV(DocumentCard, {\n              id: documentData.id,\n              author: documentData.author,\n              type: documentData.type,\n              description: documentData.description,\n              documentDate: documentData.issue_date,\n              uploadDate: documentData.upload_date,\n              file: documentData.file,\n              confirmed: documentData.confirmed\n            }, documentData.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(ZollDocuments, \"liHKgNgy7Y6by2ydJ15Jbq1unn4=\", false, function () {\n  return [useAxiosPrivate, useParams];\n});\n\n_c = ZollDocuments;\nexport default ZollDocuments;\n\nvar _c;\n\n$RefreshReg$(_c, \"ZollDocuments\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Zoll/ZollDocuments.jsx"],"names":["React","useEffect","useState","useParams","useAxiosPrivate","MDBContainer","MDBBtn","MDBRow","MDBCol","MDBSpinner","MDBBadge","Divider","Box","Alert","IconButton","Collapse","Button","CloseIcon","Link","MDBBreadcrumb","MDBBreadcrumbItem","ZollDocumentsModal","ZollDocumentTransaction","DocumentCard","DeclarationCard","ZollDocuments","props","transactionData","setTransactionData","documentsData","setDocumentsData","declarationData","setDeclarationData","isLoading","setIsLoading","totalValue","setTotalValue","invoiceData","setInvoiceData","isVerified","setIsVerified","open","setOpen","axiosInstance","declarationID","console","log","get","then","res","data","document","transaction","invoice","id","total_value","catch","err","addDocumentModal","setAddDocumentModal","toggleAddDocumentModal","numberInvoiceDocuments","alternative","invoiceAndCustoms","other","i","length","type","width","mb","anmeldeArt","customs_office","name","transport_costs","documentId","importeur","date_added","exporteur","description","issue_date","upload_date","file","map","documentData","author","confirmed"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport {\n  MDBContainer,\n  MDBBtn,\n  MDBRow,\n  MDBCol,\n  MDBSpinner,\n  MDBBadge,\n} from \"mdb-react-ui-kit\";\nimport Divider from \"@mui/material/Divider\";\nimport Box from '@mui/material/Box';\nimport Alert from '@mui/material/Alert';\nimport IconButton from '@mui/material/IconButton';\nimport Collapse from '@mui/material/Collapse';\nimport Button from '@mui/material/Button';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { Link } from \"react-router-dom\";\nimport { MDBBreadcrumb, MDBBreadcrumbItem } from \"mdb-react-ui-kit\";\n\nimport ZollDocumentsModal from \"../../components/ZollDocuments/ZollDocumentsModal\";\nimport ZollDocumentTransaction from \"../../components/ZollDocuments/ZollDocumentTransaction\";\nimport DocumentCard from \"../../components/Documents/DocumentCard\";\nimport DeclarationCard from \"../../components/Documents/DeclarationCard\";\nfunction ZollDocuments(props) {\n  // Allgemeine Auftragsinformationen\n  const [transactionData, setTransactionData] = useState([]);\n\n  // Informationen der hochgeladenen Dokumente\n  const [documentsData, setDocumentsData] = useState([]);\n  const [declarationData, setDeclarationData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalValue, setTotalValue] = useState(true);\n  const [invoiceData, setInvoiceData] = useState()\n  const [isVerified, setIsVerified] = useState(false);\n  const [open, setOpen] = useState(true);\n\n\n\n  const axiosInstance = useAxiosPrivate();\n\n  // // Anzahl Dokumente\n  // const [numberInvoiceDocumentes, setNumberInvoiceDocuments] = useState(0);\n  // const [numberOtherDocumentes, setNumberOtherDocuments] = useState(0);\n\n  // Speichern der Transaktions-ID aus URL\n  const { declarationID } = useParams();\n\n\n  useEffect(async() => {\n    console.log(declarationID)\n    await axiosInstance.get(`declaration_auth/` + declarationID).then((res) => {\n      console.log(res.data);\n      setDeclarationData(res.data)\n      setDocumentsData(res.data.document);\n      setTransactionData(res.data.transaction);\n      axiosInstance.get('invoice/' + res.data.invoice.id + '/').then((res) => {\n          setTotalValue(res.data.total_value)\n          //console.log(res.data.total_value)\n          setInvoiceData(res.data)\n        })\n    }).catch((err) =>{\n      console.log(\"Keine Zollanmeldung liegt vor\" + err)\n    });\n\n    setIsLoading(false);\n\n/*     console.log(transactionData);\n    axiosInstance.get(`documents/?transaction=` + transactionId).then((res) => {\n      //console.log(res.data);\n      setDocumentsData(res.data);\n      //console.log(documentsData);\n    }); */\n  }, []);\n\n  useEffect(() => {\n    console.log(declarationData)\n    console.log(transactionData)\n  },[declarationData, transactionData])\n\n  // State für \"Dokument hinzufügen\" Modal\n  const [addDocumentModal, setAddDocumentModal] = useState(false);\n  // Funktion für Manipulation von Modal (als props weitergereicht)\n  function toggleAddDocumentModal() {\n    setAddDocumentModal(!addDocumentModal);\n  }\n\n  // Anzahl Rechnungs+Zolldokumente call(a) und sonstige Dokumente call(b)\n  function numberInvoiceDocuments(alternative) {\n    let invoiceAndCustoms = 0;\n    let other = 0;\n    for (let i = 0; i < documentsData.length; i++) {\n      if (\n        documentsData[i].type == \"Rechnung\" ||\n        documentsData[i].type == \"Zoll\"\n      ) {\n        invoiceAndCustoms += 1;\n      } else {\n        other += 1;\n      }\n    }\n    if (alternative == \"a\") {\n      return invoiceAndCustoms;\n    }\n    if (alternative == \"b\") {\n      return other;\n    }\n    return;\n  }\n\n  return (\n    <>\n      {isLoading ? (\n        <MDBSpinner grow>\n          <span className=\"visually-hidden\">Lädt..</span>\n        </MDBSpinner>\n      ) : (\n        <MDBContainer>\n          <h3>Zollanmeldung Dokumente</h3>\n          <ZollDocumentsModal\n            basicModal={addDocumentModal}\n            setBasicModal={setAddDocumentModal}\n            toggleShow={toggleAddDocumentModal}\n            transactionData={transactionData}\n          />\n          <MDBBreadcrumb>\n            <MDBBreadcrumbItem>\n              <Link to=\"/zoll/transactions\">Aufträge</Link>\n            </MDBBreadcrumbItem>\n            <MDBBreadcrumbItem active>\n              Zollanmeldung-ID {declarationData.id}\n            </MDBBreadcrumbItem>\n          </MDBBreadcrumb>\n          <MDBContainer>\n          <Box sx={{ width: '100%' }}>\n                    <Collapse in={open}>\n                      <Alert\n                        action={\n                          <IconButton\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            size=\"small\"\n                            onClick={() => {\n                              setOpen(false);\n                            }}\n                          >\n                  <CloseIcon fontSize=\"inherit\" />\n                  </IconButton>\n                }\n                sx={{ mb: 2 }}\n              >\n                        Close me!\n                      </Alert>\n                    </Collapse>\n\n                  </Box>\n          </MDBContainer>\n          <ZollDocumentTransaction\n            declarationData = {declarationData}\n            numberDocuments={documentsData?.length}\n            gesamtbetrag ={totalValue}\n            invoiceData = {invoiceData}\n            setIsVerified = {setIsVerified}\n            isVerified = {isVerified}\n            setOpen = {setOpen}\n\n          />\n\n          {/* Navleiste mit Anzahl der Dokumente */}\n          <nav className=\"my-3 navbar navbar-expand-lg navbar-light bg-light\">\n            <MDBContainer>\n              <div>\n                <MDBBadge pill>{numberInvoiceDocuments(\"a\")}</MDBBadge>{\" \"}\n                <b>Rechnungs- und Zolldokumente</b>\n                <MDBBadge pill className=\"ms-3\">\n                  {numberInvoiceDocuments(\"b\")}\n                </MDBBadge>{\" \"}\n                <b>Sonstige Dokumente</b>\n              </div>\n              <MDBBtn\n                outline\n                className=\"float-end\"\n                color=\"success\"\n                onClick={toggleAddDocumentModal}\n              >\n                Dokument hinzufügen\n              </MDBBtn>\n            </MDBContainer>\n          </nav>\n          {/* Auflistung der Rechnungsdokumente */}\n          <Divider textAlign=\"left\" className=\"mb-4\">\n            <h5>Zollanmeldung</h5>\n          </Divider>\n          <DeclarationCard\n            anmeldeArt ={declarationData.anmeldeArt}\n            gesamtbetrag ={totalValue}\n            bearbeitendeDienststelle ={declarationData.customs_office.name}\n            lieferkosten ={declarationData.invoice.transport_costs}\n            documentId={documentsData.documentId}\n            anmelderName = {declarationData.importeur.name}\n            issue_date = {declarationData.date_added}\n\n          />\n\n          <Divider textAlign=\"left\" className=\"mb-4\">\n            <h5>Rechnung</h5>\n          </Divider>\n          <MDBRow className=\"row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\">\n\n                    <MDBCol>\n                      <DocumentCard\n                        key={declarationData.invoice.id}\n                        id={declarationData.invoice.id}\n                        author_company={\n                          declarationData.exporteur.name\n                        }\n                        author=\"Karl Company\"\n                        type=\"Rechnung\"\n                        description={declarationData.invoice.description}\n                        documentDate={declarationData.invoice.issue_date}\n                        uploadDate={declarationData.invoice.upload_date}\n                        file={declarationData.invoice.file}\n                      />\n                    </MDBCol>\n\n          </MDBRow>\n\n          {/* Auflistung der sontigen Dokumente */}\n\n          <Divider textAlign=\"left\" className=\"mt-5 mb-4\">\n            <h5>Sonstige Dokumente</h5>\n          </Divider>\n          <MDBRow className=\"row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\">\n            {documentsData.map(\n              (documentData) =>\n                documentData.type !== \"Rechnung\" && (\n                  <React.Fragment>\n                    <MDBCol>\n                      <DocumentCard\n                        key={documentData.id}\n                        id={documentData.id}\n                        author={documentData.author}\n                        type={documentData.type}\n                        description={documentData.description}\n                        documentDate={documentData.issue_date}\n                        uploadDate={documentData.upload_date}\n                        file={documentData.file}\n                        confirmed={documentData.confirmed}\n                      />\n                    </MDBCol>\n                  </React.Fragment>\n                )\n            )}\n          </MDBRow>\n        </MDBContainer>\n      )}\n    </>\n  );\n}\n\nexport default ZollDocuments;\n"]},"metadata":{},"sourceType":"module"}