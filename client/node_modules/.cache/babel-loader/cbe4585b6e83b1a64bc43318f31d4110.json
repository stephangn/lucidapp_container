{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Transactions.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { MDBBtn, MDBContainer, MDBCol, MDBRow, MDBIcon } from \"mdb-react-ui-kit\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport Transaction from \"../components/Transactions/Transaction\";\nimport { useParams } from \"react-router-dom\";\nimport TransactionModal from \"../components/Transactions/TransactionModal\";\nimport Form from \"react-bootstrap/Form\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport { TextRotateUpRounded } from \"@mui/icons-material\"; // Snackbar-Alert\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef(_c = function Alert(props, ref) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Alert;\n\nfunction Transactions() {\n  _s();\n\n  const [transactionsData, setTransactionsData] = useState([]);\n  const [loaded, setLoaded] = useState(false); // Reload-State: DB-Call wird mittels useEffect wiederholt, sobald\n  // ein neuer Auftrag hinzugefügt wurde\n\n  const [reload, setreload] = useState(false);\n  const axiosInstance = useAxiosPrivate();\n  useEffect(() => {\n    axiosInstance.get(\"transactions/\").then(res => {\n      // Daten werden erst sortiert nach \"dateUpdatedDesc\"\n      // und danach im State gespeichert\n      const initialSort = [].concat(res.data).sort((a, b) => a.date_added > b.date_added ? -1 : 1);\n      setTransactionsData(initialSort);\n    });\n  }, [reload]); // Sortieralgorithmen\n\n  function sortDescriptionAsc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.description > b.description ? -1 : 1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDescriptionDesc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.description > b.description ? 1 : -1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedAsc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.date_added > b.date_added ? 1 : -1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedDesc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.date_added > b.date_added ? -1 : 1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedAsc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.date_processed > b.date_processed ? 1 : -1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedDesc() {\n    const myData = [].concat(transactionsData).sort((a, b) => a.date_processed > b.date_processed ? -1 : 1);\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortTransactions(event) {\n    if (event.target.value === \"DescriptionAsc\") {\n      sortDescriptionAsc();\n      return;\n    }\n\n    if (event.target.value === \"DescriptionDesc\") {\n      sortDescriptionDesc();\n      return;\n    }\n\n    if (event.target.value === \"UpdatedAsc\") {\n      sortDateUpdatedAsc();\n      return;\n    }\n\n    if (event.target.value === \"UpdatedDesc\") {\n      sortDateUpdatedDesc();\n      return;\n    }\n\n    if (event.target.value === \"AddedAsc\") {\n      sortDateAddedAsc();\n      return;\n    }\n\n    if (event.target.value === \"AddedDesc\") {\n      sortDateAddedDesc();\n      return;\n    }\n  } // Snackbar-Alert Rückmeldung\n  // State: Geöffnet (true) / Geschlossen (false)\n\n\n  const [openSnackbar, setOpenSnackbar] = useState(false); // State: Succcess (true) / Error (false)\n\n  const [snackbarSuccess, setSnackbarSuccess] = useState(true); // State: Snackbar Nachricht\n\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\"); // Öffnen der Snackbar\n\n  const handleOpenSnackbar = () => {\n    setOpenSnackbar(true);\n  }; // Schließen der Snackbar\n\n\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenSnackbar(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MDBContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Auftr\\xE4ge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"my-3 navbar navbar-expand-lg navbar-light bg-light\",\n        children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n            style: {\n              width: 270\n            },\n            onChange: event => sortTransactions(event),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"UpdatedDesc\",\n              children: \"Zuletzt ge\\xE4ndert absteigend \\uD83E\\uDC17\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"UpdatedAsc\",\n              children: \"Zuletzt ge\\xE4ndert aufsteigend \\uD83E\\uDC15\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"DescriptionDesc\",\n              children: \"Beschreibung absteigend \\uD83E\\uDC17\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"DescriptionAsc\",\n              children: \"Beschreibung aufsteigend \\uD83E\\uDC15\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"AddedDesc\",\n              children: \"Hinzugef\\xFCgt am absteigend \\uD83E\\uDC17\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"AddedAsc\",\n              children: \"Hinzugef\\xFCgt am aufsteigend \\uD83E\\uDC15\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"float-left\",\n            children: [transactionsData.length, \" Auftr\\xE4ge\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TransactionModal, {\n            setreload: setreload,\n            reload: reload,\n            handleOpenSnackbar: handleOpenSnackbar,\n            handleCloseSnackbar: handleCloseSnackbar,\n            setSnackbarSuccess: setSnackbarSuccess,\n            setSnackbarMessage: setSnackbarMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), transactionsData.map(transactionData => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Transaction, {\n          id: transactionData.id,\n          title: transactionData.description,\n          added: transactionData.date_added,\n          exportAddress: transactionData.partnership.partner.name,\n          exportStreet: transactionData.partnership.partner.street,\n          exportCity: transactionData.partnership.partner.city,\n          exportCountry: transactionData.partnership.partner.country_code,\n          importAddress: transactionData.importAddress,\n          importStreet: transactionData.importStreet,\n          importCity: transactionData.importCity,\n          importCountry: transactionData.importCountry,\n          stakeholderCount: transactionData.stakeholderCount,\n          lastChange: transactionData.date_processed,\n          status: transactionData.status,\n          importeur: transactionData.importeur\n        }, transactionData.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      open: openSnackbar,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      className: \"mt-5\",\n      children: snackbarSuccess == true ? /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: \"success\",\n        sx: {\n          width: \"100%\"\n        },\n        children: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: \"error\",\n        sx: {\n          width: \"100%\"\n        },\n        children: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Transactions, \"hVuntCfs31fB5OAtgIIGLjyZXug=\", false, function () {\n  return [useAxiosPrivate];\n});\n\n_c3 = Transactions;\nexport default Transactions;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"Transactions\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Transactions.jsx"],"names":["React","useState","useEffect","MDBBtn","MDBContainer","MDBCol","MDBRow","MDBIcon","Snackbar","MuiAlert","Transaction","useParams","TransactionModal","Form","useAxiosPrivate","TextRotateUpRounded","Alert","forwardRef","props","ref","Transactions","transactionsData","setTransactionsData","loaded","setLoaded","reload","setreload","axiosInstance","get","then","res","initialSort","concat","data","sort","a","b","date_added","sortDescriptionAsc","myData","description","console","log","sortDescriptionDesc","sortDateAddedAsc","sortDateAddedDesc","sortDateUpdatedAsc","date_processed","sortDateUpdatedDesc","sortTransactions","event","target","value","openSnackbar","setOpenSnackbar","snackbarSuccess","setSnackbarSuccess","snackbarMessage","setSnackbarMessage","handleOpenSnackbar","handleCloseSnackbar","reason","width","length","map","transactionData","id","partnership","partner","name","street","city","country_code","importAddress","importStreet","importCity","importCountry","stakeholderCount","status","importeur","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  MDBBtn,\n  MDBContainer,\n  MDBCol,\n  MDBRow,\n  MDBIcon,\n} from \"mdb-react-ui-kit\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport Transaction from \"../components/Transactions/Transaction\";\nimport { useParams } from \"react-router-dom\";\nimport TransactionModal from \"../components/Transactions/TransactionModal\";\nimport Form from \"react-bootstrap/Form\";\n\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport { TextRotateUpRounded } from \"@mui/icons-material\";\n\n// Snackbar-Alert\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nfunction Transactions() {\n  const [transactionsData, setTransactionsData] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  // Reload-State: DB-Call wird mittels useEffect wiederholt, sobald\n  // ein neuer Auftrag hinzugefügt wurde\n  const [reload, setreload] = useState(false);\n\n  const axiosInstance = useAxiosPrivate();\n\n  useEffect(() => {\n    axiosInstance.get(\"transactions/\").then((res) => {\n      // Daten werden erst sortiert nach \"dateUpdatedDesc\"\n      // und danach im State gespeichert\n      const initialSort = []\n        .concat(res.data)\n        .sort((a, b) => (a.date_added > b.date_added ? -1 : 1));\n      setTransactionsData(initialSort);\n    });\n  }, [reload]);\n\n  // Sortieralgorithmen\n  function sortDescriptionAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.description > b.description ? -1 : 1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDescriptionDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.description > b.description ? 1 : -1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.date_added > b.date_added ? 1 : -1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.date_added > b.date_added ? -1 : 1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.date_processed > b.date_processed ? 1 : -1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.date_processed > b.date_processed ? -1 : 1));\n    console.log(myData);\n    setTransactionsData(myData);\n  }\n\n  function sortTransactions(event) {\n    if (event.target.value === \"DescriptionAsc\") {\n      sortDescriptionAsc();\n      return;\n    }\n    if (event.target.value === \"DescriptionDesc\") {\n      sortDescriptionDesc();\n      return;\n    }\n    if (event.target.value === \"UpdatedAsc\") {\n      sortDateUpdatedAsc();\n      return;\n    }\n    if (event.target.value === \"UpdatedDesc\") {\n      sortDateUpdatedDesc();\n      return;\n    }\n    if (event.target.value === \"AddedAsc\") {\n      sortDateAddedAsc();\n      return;\n    }\n    if (event.target.value === \"AddedDesc\") {\n      sortDateAddedDesc();\n      return;\n    }\n  }\n\n  // Snackbar-Alert Rückmeldung\n  // State: Geöffnet (true) / Geschlossen (false)\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  // State: Succcess (true) / Error (false)\n  const [snackbarSuccess, setSnackbarSuccess] = useState(true);\n  // State: Snackbar Nachricht\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n\n  // Öffnen der Snackbar\n  const handleOpenSnackbar = () => {\n    setOpenSnackbar(true);\n  };\n\n  // Schließen der Snackbar\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <div>\n      <MDBContainer>\n        <h3>Aufträge</h3>\n\n        <nav className=\"my-3 navbar navbar-expand-lg navbar-light bg-light\">\n          <MDBContainer>\n            <Form.Select\n              style={{\n                width: 270,\n              }}\n              onChange={(event) => sortTransactions(event)}\n            >\n              <option value={\"UpdatedDesc\"}>\n                Zuletzt geändert absteigend &#129047;\n              </option>\n              <option value={\"UpdatedAsc\"}>\n                Zuletzt geändert aufsteigend &#129045;\n              </option>\n              <option value={\"DescriptionDesc\"}>\n                Beschreibung absteigend &#129047;\n              </option>\n              <option value={\"DescriptionAsc\"}>\n                Beschreibung aufsteigend &#129045;\n              </option>\n              <option value={\"AddedDesc\"}>\n                Hinzugefügt am absteigend &#129047;\n              </option>\n              <option value={\"AddedAsc\"}>\n                Hinzugefügt am aufsteigend &#129045;\n              </option>\n            </Form.Select>{\" \"}\n            <div className=\"float-left\">{transactionsData.length} Aufträge</div>\n            <TransactionModal\n              setreload={setreload}\n              reload={reload}\n              handleOpenSnackbar={handleOpenSnackbar}\n              handleCloseSnackbar={handleCloseSnackbar}\n              setSnackbarSuccess={setSnackbarSuccess}\n              setSnackbarMessage={setSnackbarMessage}\n            />\n          </MDBContainer>\n        </nav>\n        {transactionsData.map((transactionData) => (\n          <React.Fragment>\n            <Transaction\n              key={transactionData.id}\n              id={transactionData.id}\n              title={transactionData.description}\n              added={transactionData.date_added}\n              exportAddress={transactionData.partnership.partner.name}\n              exportStreet={transactionData.partnership.partner.street}\n              exportCity={transactionData.partnership.partner.city}\n              exportCountry={transactionData.partnership.partner.country_code}\n              importAddress={transactionData.importAddress}\n              importStreet={transactionData.importStreet}\n              importCity={transactionData.importCity}\n              importCountry={transactionData.importCountry}\n              stakeholderCount={transactionData.stakeholderCount}\n              lastChange={transactionData.date_processed}\n              status={transactionData.status}\n              importeur={transactionData.importeur}\n            />\n            <br />\n          </React.Fragment>\n        ))}\n      </MDBContainer>\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        open={openSnackbar}\n        autoHideDuration={6000}\n        onClose={handleCloseSnackbar}\n        className=\"mt-5\"\n      >\n        {snackbarSuccess == true ? (\n          <Alert\n            onClose={handleCloseSnackbar}\n            severity=\"success\"\n            sx={{ width: \"100%\" }}\n          >\n            {snackbarMessage}\n          </Alert>\n        ) : (\n          <Alert\n            onClose={handleCloseSnackbar}\n            severity=\"error\"\n            sx={{ width: \"100%\" }}\n          >\n            {snackbarMessage}\n          </Alert>\n        )}\n      </Snackbar>\n    </div>\n  );\n}\n\nexport default Transactions;\n"]},"metadata":{},"sourceType":"module"}