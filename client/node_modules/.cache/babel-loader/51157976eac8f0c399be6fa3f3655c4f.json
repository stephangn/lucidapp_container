{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/DocumentDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport PreviewInvoice from \"../components/Documents/PreviewInvoice\";\nimport PreviewOther from \"../components/Documents/PreviewOther\";\nimport { MDBSpinner } from \"mdb-react-ui-kit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DocumentDetail() {\n  _s();\n\n  //URL Parameter abfragen\n  const {\n    documentID\n  } = useParams();\n  const axiosInstance = useAxiosPrivate();\n  const [documentData, setDocumentData] = useState();\n  const [invoiceData, setInvoiceData] = useState();\n  const [transactionData, setTransactionData] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const [fileLink, setFileLink] = useState();\n  const [isInvoice, setIsInvoice] = useState(false);\n  useEffect(() => {\n    console.log(documentData);\n  }, [documentData]);\n  useEffect(() => {\n    axiosInstance.get(`/documents/${documentID}/`).then(res => {\n      setDocumentData(res.data);\n      axiosInstance.get(`/transactions/${res.data.transaction}/`).then(resT => {\n        setTransactionData(resT.data);\n\n        if (res.data.type == \"Rechnung\") {\n          axiosInstance.get(`/invoice/${documentID}/`).then(res => {\n            setInvoiceData(res.data);\n\n            if (res.data.type == \"Rechnung\") {\n              setIsInvoice(true);\n              setIsLoading(false);\n            }\n          });\n        } else {\n          axiosInstance.get(`/file/${res.data.file}/`).then(resF => {\n            setFileLink(res.data.file);\n            setIsLoading(false);\n          });\n        }\n      });\n    });\n  }, []);\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(MDBSpinner, {\n      grow: true,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"visually-hidden\",\n        children: \"L\\xE4dt..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this) : isInvoice ? /*#__PURE__*/_jsxDEV(PreviewInvoice, {\n      invoiceData: invoiceData,\n      transactionData: transactionData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(PreviewOther, {\n      documentData: documentData,\n      transactionData: transactionData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(DocumentDetail, \"MubLyq0KPK+LZ0/O9JMMqYDroPw=\", false, function () {\n  return [useParams, useAxiosPrivate];\n});\n\n_c = DocumentDetail;\nexport default DocumentDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"DocumentDetail\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/DocumentDetail.jsx"],"names":["React","useState","useEffect","useParams","useAxiosPrivate","PreviewInvoice","PreviewOther","MDBSpinner","DocumentDetail","documentID","axiosInstance","documentData","setDocumentData","invoiceData","setInvoiceData","transactionData","setTransactionData","isLoading","setIsLoading","fileLink","setFileLink","isInvoice","setIsInvoice","console","log","get","then","res","data","transaction","resT","type","file","resF"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport PreviewInvoice from \"../components/Documents/PreviewInvoice\";\nimport PreviewOther from \"../components/Documents/PreviewOther\";\nimport { MDBSpinner } from \"mdb-react-ui-kit\";\n\nfunction DocumentDetail () {\n\n    //URL Parameter abfragen\n    const { documentID } = useParams()\n    const axiosInstance = useAxiosPrivate()\n    const [documentData, setDocumentData] = useState()\n    const [invoiceData, setInvoiceData] = useState()\n    const [transactionData, setTransactionData] = useState()\n    const [isLoading, setIsLoading] = useState(true)\n    const [fileLink, setFileLink] = useState()\n\n    const [isInvoice, setIsInvoice] = useState(false)\n    \n\n\n    useEffect(() => {\n        console.log(documentData)\n    }, [documentData])\n\n    useEffect(() => {\n        axiosInstance.get(`/documents/${documentID}/`)\n        .then((res) => {\n            setDocumentData(res.data)\n            axiosInstance.get(`/transactions/${res.data.transaction}/`)\n            .then((resT) => {\n                setTransactionData(resT.data)\n                if (res.data.type==\"Rechnung\") {\n                    axiosInstance.get(`/invoice/${documentID}/`)\n                        .then((res) => {\n                            setInvoiceData(res.data)\n                            if (res.data.type==\"Rechnung\") {\n                                setIsInvoice(true)\n                                setIsLoading(false)\n                            }\n                        })\n                \n                } else {\n                    axiosInstance.get(`/file/${res.data.file}/`)\n                    .then((resF) => {\n                        setFileLink(res.data.file)\n                        setIsLoading(false)\n                    })\n                }\n            })\n\n        })\n    }, [])\n\n    useEffect(() => {\n\n    },[])\n\n    return (<>\n        {isLoading ? (        \n        \n            <MDBSpinner grow>\n                <span className=\"visually-hidden\">LÃ¤dt..</span>\n            </MDBSpinner>) \n        : (\n            isInvoice ? (\n                <PreviewInvoice \n                        invoiceData = {invoiceData}\n                        transactionData = {transactionData}\n                ></PreviewInvoice>    \n            ): (\n                <PreviewOther\n                    documentData = {documentData}\n                    transactionData = {transactionData}\n                ></PreviewOther>\n            )\n            )}\n    </>\n\n\n    )\n}\n\nexport default DocumentDetail;"]},"metadata":{},"sourceType":"module"}