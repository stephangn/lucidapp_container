{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Transactions/TransactionForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBSwitch } from \"mdb-react-ui-kit\";\nimport axiosInstance from \"../../axiosApi\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TransactionForm() {\n  _s();\n\n  const [eori_nr, setEoriNr] = useState(\"\");\n  const [check, setCheck] = useState(false);\n  const [description, setDescription] = useState(\"\");\n  const [partner, setPartner] = useState(\"\");\n  const [partners, setPartners] = useState([]);\n  const top100Films = [{\n    label: 'The Godfather',\n    id: 1\n  }, {\n    label: 'Pulp Fiction',\n    id: 2\n  }];\n  /*   function onTagsChange (event, values) {\n      setPartner({\n        tags: values\n      }, () => {\n        // This will output an array of objects\n        // given by Autocompelte options property.\n        console.log(partner);\n      });\n    } */\n\n  useEffect(() => {\n    axiosInstance.get('partnership/').then(res => {\n      console.log(res.data);\n      setPartners(res.data);\n    });\n  }, []);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const newTransaction = {\n      description,\n      partner,\n      check\n    };\n    console.log(newTransaction); //firma hinzufÃ¼gen \n\n    /*     axiosInstance\n          .post('/companies/', newCompany)\n          .then(console.log())\n          .catch(error => {\n              this.setState({ errorMessage: error.message });\n              console.error('There was an error!', error);\n          }).then(\n            axiosInstance\n            .post('/partnership/', {\"added_partner\":eori_nr})\n            .then(console.log())\n            .catch(error => {\n                this.setState({ errorMessage: error.message });\n                console.error('There was an error!', error);\n            })); */\n    //firma als partner hinterlegen\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n          disablePortal: true,\n          id: \"combo-box-partner\",\n          options: partners //choose name as label for ui\n          ,\n          getOptionLabel: option => option.partner.name //when changed, save choosen Partner\n          ,\n          onChange: (event, value) => setPartner(value.id),\n          sx: {\n            width: 300\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Partner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n          children: /*#__PURE__*/_jsxDEV(MDBInput, {\n            className: \"mb-3\",\n            name: \"description\",\n            label: \"Beschreibung der Transaktion\",\n            type: \"text\",\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            onClick: () => setCheck(!check)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this),\n          label: \"Ist ihre Firma der Importeur?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n          children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n            type: \"submit\",\n            color: \"success\",\n            children: \"Hinzuf\\xFCgen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(TransactionForm, \"Nfwh3S/sXmURtiWWrVVE0cRgjAU=\");\n\n_c = TransactionForm;\nexport default TransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/components/Transactions/TransactionForm.jsx"],"names":["React","useEffect","useState","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","MDBSwitch","axiosInstance","Autocomplete","TextField","Checkbox","FormControlLabel","TransactionForm","eori_nr","setEoriNr","check","setCheck","description","setDescription","partner","setPartner","partners","setPartners","top100Films","label","id","get","then","res","console","log","data","handleSubmit","e","preventDefault","newTransaction","option","name","event","value","width","params","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBSwitch,\n} from \"mdb-react-ui-kit\";\nimport axiosInstance from \"../../axiosApi\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n\n\nfunction TransactionForm() {\n\n  const [eori_nr, setEoriNr] = useState(\"\");\n  const [check, setCheck] = useState(false);  \n  const [description, setDescription] = useState(\"\");\n  const [partner, setPartner] = useState(\"\")\n  const [partners, setPartners] = useState([])\n  const top100Films = [\n    { label: 'The Godfather', id: 1 },\n    { label: 'Pulp Fiction', id: 2 },\n  ];\n\n/*   function onTagsChange (event, values) {\n    setPartner({\n      tags: values\n    }, () => {\n      // This will output an array of objects\n      // given by Autocompelte options property.\n      console.log(partner);\n    });\n  } */\n\n  useEffect(() => {\n    axiosInstance.get('partnership/').then((res) => {\n      console.log(res.data);\n      setPartners(res.data);\n    });\n  }, []);\n  function handleSubmit(e) {\n    e.preventDefault();\n    const newTransaction = {\n      description,\n      partner,\n      check\n    }\n    console.log(newTransaction)\n    //firma hinzufÃ¼gen \n/*     axiosInstance\n      .post('/companies/', newCompany)\n      .then(console.log())\n      .catch(error => {\n          this.setState({ errorMessage: error.message });\n          console.error('There was an error!', error);\n      }).then(\n        axiosInstance\n        .post('/partnership/', {\"added_partner\":eori_nr})\n        .then(console.log())\n        .catch(error => {\n            this.setState({ errorMessage: error.message });\n            console.error('There was an error!', error);\n        })); */\n      //firma als partner hinterlegen\n  };\n\n  return (\n    <>\n    <form onSubmit={handleSubmit}>\n      <MDBContainer>\n        <Autocomplete\n            disablePortal\n            id=\"combo-box-partner\"\n            options={partners}\n            //choose name as label for ui\n            getOptionLabel={option => option.partner.name}\n            //when changed, save choosen Partner\n            onChange={(event, value) => setPartner(value.id)}\n            sx={{ width: 300 }}\n            renderInput={(params) => <TextField {...params} label=\"Partner\" />}\n        />\n        <MDBRow>\n          <MDBInput\n            className=\"mb-3\"\n            name=\"description\"\n            label=\"Beschreibung der Transaktion\"\n            type=\"text\"\n            onChange={e => setDescription(e.target.value)}\n          />\n        </MDBRow>\n        <FormControlLabel control={\n          <Checkbox\n            onClick={() => setCheck(!check)}\n          />\n        \n          } label=\"Ist ihre Firma der Importeur?\" />\n        <MDBRow>\n          <MDBBtn type=\"submit\" color=\"success\">HinzufÃ¼gen</MDBBtn>\n        </MDBRow>      \n\n      </MDBContainer>\n    </form>\n    </>\n  );\n}\n\nexport default TransactionForm;\n"]},"metadata":{},"sourceType":"module"}