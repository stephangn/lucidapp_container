{"ast":null,"code":"var _jsxFileName = \"/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Transactions.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { MDBBtn, MDBContainer, MDBCol, MDBRow } from \"mdb-react-ui-kit\";\nimport Transaction from \"../components/Transaction\";\nimport axiosInstance from \"../axiosApi\";\nimport { useParams } from \"react-router-dom\";\nimport TransactionsModal from \"../components/Transactions/TransactionsModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Transactions() {\n  _s();\n\n  const [transactionsData, setTransactionsData] = useState([]);\n  useEffect(() => {\n    axiosInstance.get('transactions/').then(res => {\n      console.log(res.data);\n      setTransactionsData(res.data);\n    });\n  }, []);\n  console.log(transactionsData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n      children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n        children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Auftr\\xE4ge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n          children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n            className: \"float-end\",\n            color: \"success\",\n            children: /*#__PURE__*/_jsxDEV(TransactionModal, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), transactionsData.map(transactionData => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Transaction, {\n          id: transactionData.id,\n          title: transactionData.description,\n          added: transactionData.date_added,\n          exportAddress: transactionData.partnership.partner.name,\n          exportStreet: transactionData.partnership.partner.street,\n          exportCity: transactionData.partnership.partner.city,\n          exportCountry: transactionData.partnership.partner.country_code,\n          importAddress: transactionData.importAddress,\n          importStreet: transactionData.importStreet,\n          importCity: transactionData.importCity,\n          importCountry: transactionData.importCountry,\n          stakeholderCount: transactionData.stakeholderCount,\n          lastChange: transactionData.date_processed\n        }, transactionData.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Transactions, \"J7T/y+KSilPhGGzZGQp0ZT0z5Q4=\");\n\n_c = Transactions;\nexport default Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"sources":["/Users/stephan/Dropbox/Entwicklung/webdev/projektstudium/client/src/pages/Transactions.jsx"],"names":["React","useState","useEffect","MDBBtn","MDBContainer","MDBCol","MDBRow","Transaction","axiosInstance","useParams","TransactionsModal","Transactions","transactionsData","setTransactionsData","get","then","res","console","log","data","map","transactionData","id","description","date_added","partnership","partner","name","street","city","country_code","importAddress","importStreet","importCity","importCountry","stakeholderCount","date_processed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,YAAjB,EAA+BC,MAA/B,EAAuCC,MAAvC,QAAqD,kBAArD;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,aAAP,MAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,iBAAP,MAA8B,8CAA9B;;;AAGA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAAC,EAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,aAAa,CAACM,GAAd,CAAkB,eAAlB,EAAmCC,IAAnC,CAAyCC,GAAD,IAAS;AAC/CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAN,MAAAA,mBAAmB,CAACG,GAAG,CAACG,IAAL,CAAnB;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AASAF,EAAAA,OAAO,CAACC,GAAR,CAAYN,gBAAZ;AACA,sBACE;AAAA,2BACE,QAAC,YAAD;AAAA,8BACE,QAAC,MAAD;AAAA,gCACE,QAAC,MAAD;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAC,WAAlB;AAA8B,YAAA,KAAK,EAAC,SAApC;AAAA,mCACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA;AAAA;AAAA;AAAA,cAXF,EAYGA,gBAAgB,CAACQ,GAAjB,CAAsBC,eAAD,iBACpB,QAAC,KAAD,CAAO,QAAP;AAAA,gCACE,QAAC,WAAD;AAEE,UAAA,EAAE,EAAEA,eAAe,CAACC,EAFtB;AAGE,UAAA,KAAK,EAAED,eAAe,CAACE,WAHzB;AAIE,UAAA,KAAK,EAAEF,eAAe,CAACG,UAJzB;AAKE,UAAA,aAAa,EAAEH,eAAe,CAACI,WAAhB,CAA4BC,OAA5B,CAAoCC,IALrD;AAME,UAAA,YAAY,EAAEN,eAAe,CAACI,WAAhB,CAA4BC,OAA5B,CAAoCE,MANpD;AAOE,UAAA,UAAU,EAAEP,eAAe,CAACI,WAAhB,CAA4BC,OAA5B,CAAoCG,IAPlD;AAQE,UAAA,aAAa,EAAER,eAAe,CAACI,WAAhB,CAA4BC,OAA5B,CAAoCI,YARrD;AASE,UAAA,aAAa,EAAET,eAAe,CAACU,aATjC;AAUE,UAAA,YAAY,EAAEV,eAAe,CAACW,YAVhC;AAWE,UAAA,UAAU,EAAEX,eAAe,CAACY,UAX9B;AAYE,UAAA,aAAa,EAAEZ,eAAe,CAACa,aAZjC;AAaE,UAAA,gBAAgB,EAAEb,eAAe,CAACc,gBAbpC;AAcE,UAAA,UAAU,EAAId,eAAe,CAACe;AAdhC,WACOf,eAAe,CAACC,EADvB;AAAA;AAAA;AAAA;AAAA,gBADF,eAiBE;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,CAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;;GAnDQX,Y;;KAAAA,Y;AAqDT,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { MDBBtn, MDBContainer, MDBCol, MDBRow } from \"mdb-react-ui-kit\";\nimport Transaction from \"../components/Transaction\";\nimport axiosInstance from \"../axiosApi\";\nimport { useParams } from \"react-router-dom\";\nimport TransactionsModal from \"../components/Transactions/TransactionsModal\";\n\n\nfunction Transactions() {\n  const [transactionsData, setTransactionsData] = useState([]);\n\n  useEffect(() => {\n    axiosInstance.get('transactions/').then((res) => {\n      console.log(res.data);\n      setTransactionsData(res.data);\n    });\n  }, []);\n\n\n\n  console.log(transactionsData);\n  return (\n    <div>\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol>\n            <h3>Auftr√§ge</h3>\n          </MDBCol>\n          <MDBCol>\n            <MDBBtn className=\"float-end\" color=\"success\">\n              <TransactionModal/>\n            </MDBBtn>\n          </MDBCol>\n        </MDBRow>\n        <br />\n        {transactionsData.map((transactionData) => (\n          <React.Fragment>\n            <Transaction\n              key={transactionData.id}\n              id={transactionData.id}\n              title={transactionData.description}\n              added={transactionData.date_added}\n              exportAddress={transactionData.partnership.partner.name}\n              exportStreet={transactionData.partnership.partner.street}\n              exportCity={transactionData.partnership.partner.city}\n              exportCountry={transactionData.partnership.partner.country_code}\n              importAddress={transactionData.importAddress}\n              importStreet={transactionData.importStreet}\n              importCity={transactionData.importCity}\n              importCountry={transactionData.importCountry}\n              stakeholderCount={transactionData.stakeholderCount}\n              lastChange = {transactionData.date_processed}\n            />\n            <br />\n          </React.Fragment>\n        ))}\n      </MDBContainer>\n    </div>\n  );\n}\n\nexport default Transactions;\n"]},"metadata":{},"sourceType":"module"}