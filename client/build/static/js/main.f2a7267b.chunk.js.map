{"version":3,"sources":["context/AuthProvider.js","hooks/useAuth.js","components/Dashboard/DashboardDocumentCard.jsx","axiosApi.js","components/Dashboard/NotifcationToast.jsx","pages/Dashboard.jsx","icons/inbound.png","icons/outbound.png","hooks/useRefreshToken.js","hooks/useAxiosPrivate.js","components/Transactions/Transaction.jsx","components/Transactions/TransactionForm.jsx","components/Transactions/TransactionModal.jsx","pages/Transactions.jsx","components/Partners/Partner.jsx","components/Partners/PartnerForm.jsx","components/Partners/PartnersModal.jsx","components/Partners/PartnerRequests.jsx","pages/Partners.jsx","pages/Settings.jsx","Web3Client.js","pages/NotFound.jsx","components/Documents/InvoiceForm.jsx","components/Documents/OtherDocumentsForm.jsx","components/Documents/DocumentsModal.jsx","components/Documents/ImporteurDocumentsModal.jsx","components/Documents/DocumentTransaction.jsx","components/Documents/CardModal.jsx","components/Documents/DocumentCard.jsx","components/Documents/DeclarationCard.jsx","components/Documents/DocumentBreadcrumb.jsx","pages/DocumentsNew.jsx","Uni_Logo.png","LUCID.jpg","components/UI/Footer.jsx","components/UI/SideNavigation.jsx","components/UI/TopNavigation.jsx","components/Layout.js","components/Declaration/AllgemeineAngaben.jsx","components/Declaration/Adressdaten.jsx","components/Declaration/Lieferdaten.jsx","components/Declaration/Rechnungsdaten.jsx","components/Declaration/AnmeldungDokumente.jsx","pages/Declaration.jsx","pages/Search.jsx","components/Documents/PreviewInvoice.jsx","components/Documents/PreviewOther.jsx","pages/DocumentDetail.jsx","pages/Unauthorized.jsx","pages/Login.jsx","components/ZollTransactions/ZollTransaction.jsx","pages/Zoll/ZollTransactions.jsx","components/ZollDocuments/ZollDocumentsModal.jsx","components/ZollDocuments/ZollDocumentTransaction.jsx","pages/Zoll/ZollDocuments.jsx","components/ZollUI/ZollTopNavigation.jsx","components/ZollLayout.js","hooks/useDataUpdate.js","components/requireAuth.js","components/PersistLogin.js","components/Documents/PreviewDeclaration.jsx","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","AuthProvider","children","useState","auth","setAuth","Provider","value","useAuth","useContext","DashboardDocumentCard","props","className","style","minHeight","width","document","transaction","type","issue_date","description","display","margin","to","toString","id","outline","upload_date","owner","employee","company","name","username","axiosInstance","axios","create","baseURL","timeout","headers","accept","NotificationToast","timestamp","Date","alert","notificationText","setNotificationText","notificationObject","setNotificationObject","showB","setShowB","useEffect","target_content_type","text","target_object_id","Toast","bg","onClose","patch","unread","then","res","catch","err","console","log","show","Header","toLocaleString","Body","Dashboard","transactionsData","setTransactionsData","documentsData","setDocumentsData","openRequests","setopenRequests","isLoading","setIsLoading","a","get","data","eori_nr","error","response","status","request","message","setAlerts","getDashboardData","alerts","height","background","length","map","marginBottom","partnership","partner","street","city_code","city","country_code","date_added","slice","Fragment","useRefreshToken","refreshToken","localStorage","getItem","refresh","post","JSON","stringify","prev","accessToken","access","useAxiosPrivate","requestIntercept","interceptors","use","config","Promise","reject","responseIntercept","prevRequest","sent","newAccessToken","eject","Transaction","isImporteur","setIsImporteur","numberDocuments","setNumberDocuments","numberInvoices","setNumberInvoices","importeur","documents","anzahlDokumente","anzahlRechnungen","i","declarationExists","setDeclarationExists","confirmation","setConfirmation","declaration","declarationData","anmeldungVorhanden","status_confirmation","deleteModal","setDeleteModal","toggleShowDeleteModal","editModal","setEditModal","toggleShowEditModal","title","setDescription","size","fas","icon","onClick","added","timestamp_added","sm","src","Inbound","Outbound","exportAddress","exportStreet","exportCity","exportCountry","md","lg","severity","sx","my","params","far","lastChange","timestamp_processed","setShow","tabIndex","color","delete","onSubmit","e","preventDefault","label","onChange","target","TransactionForm","checkImporteur","setCheckImporteur","setPartnership","partners","setPartners","partnerCompany","setPartnerCompany","axiosPrivate","newTransaction","setreload","reload","toggleShow","setSnackbarSuccess","setSnackbarMessage","handleOpenSnackbar","Autocomplete","disablePortal","options","getOptionLabel","option","event","renderInput","TextField","FormControlLabel","control","Checkbox","disabled","block","TransactionModal","basicModal","setBasicModal","handleCloseSnackbar","Alert","React","forwardRef","ref","elevation","variant","Transactions","setDeclarationData","isFilterView","setIsFilterView","partnershipID","useParams","location","useLocation","sortTransactions","myData","concat","sort","b","sortDateAddedDesc","sortDateAddedAsc","sortDateUpdatedDesc","sortDateUpdatedAsc","toUpperCase","sortDescriptionDesc","sortDescriptionAsc","link","initialSort","openSnackbar","setOpenSnackbar","snackbarSuccess","snackbarMessage","reason","Form","Select","transactionData","importAddress","importStreet","importCity","importCountry","stakeholderCount","date_processed","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","Partner","floating","addressStreet","addressCity","addressCountry","email","phone","eori","id_relation","is_archived","setReload","PartnerForm","setEoriNr","companies","setCompanies","testRerender","notFound","setNotFound","isCurrentPartnership","setIsCurrentPartnership","partnerships","setPartnerships","handleEORISearch","getElementById","checkValidity","some","required","undefined","added_partner","setNewPartner","newPartner","handleSubmit","PartnersModal","PartnerRequests","userCompanyEORI","setUserCompanyEORI","Accordion","defaultActiveKey","Item","eventKey","responsive","scope","index","rounded","partnership_id","confirmed","Partners","sortPartners","addressName","Settings","selectedAccount","zollsystemcontract","isinit","oldPassword","setOldPassword","newPassword","setNewPassword","newPassword2","setNewPassword2","passwordError","setPasswordError","userData","password","password2","autocomplete","role","NotFound","class","Component","init","provider","window","ethereum","method","accounts","on","web3","Web3","eth","net","getId","networkId","Contract","Zollsystem","abi","networks","address","createRechnung","_gesamtbetrag","_importeur","_waehrung","_datum","_rechnungsposten","_lieferkosten","methods","send","from","call","uploadDokumentHash","_transaktionsID","_hash","createDokument","createZollanmeldung","_zoll","_rechnungID","_zollwert","_incoterms","getZollanmeldung","_zollanmeldungID","getDokumentenHash","blockchaintx","require","InvoiceForm","blockchainID","invoice_text","currency","invoiceItem","priceTotal","transport_costs","invoiceFields","setInvoiceFields","product","amount","unit","price","invoiceItemFields","setInvoiceItemFields","transactionId","openBackdrop","setOpenBackdrop","handleCloseBackdrop","handleToggleBackdrop","handleItemChange","values","crypto","calculatePriceTotal","publickey","createHash","update","digest","tx","blockchain_id","setNewDocument","newDocument","toggleAddDocumentModal","items","total","wrapperClass","textarea","rows","inputField","invoiceCurrency","pop","Backdrop","zIndex","theme","drawer","CircularProgress","steps","OtherDocumentsForm","setType","fileID","setFileID","fileLink","setFileLink","activeStep","setActiveStep","Set","skipped","setSkipped","selectedFile","setSelectedFile","uploadLoading","setUploadLoading","fileUploadSuccess","setFileUploadSuccess","setNewDocumentData","docformData","FormData","uDokumentHash","_transaktionID","_file","fileReader","FileReader","hashwert","readAsText","onload","evt","result","append","uploadToDatabase","transactionID_zoll","isStepSkipped","step","has","handleNext","newSkipped","prevActiveStep","isZoll","Box","Stepper","stepProps","labelProps","completed","Step","StepLabel","Typography","mt","mb","flexDirection","pt","flex","Button","fileformData","file","files","tag","href","rel","mr","isStepOptional","form","DocumentsModal","fillActive","setFillActive","handleFillClick","addDocumentModal","setAddDocumentModal","pills","fill","active","ImporteurDocumentsModal","DocumentTransaction","cityCode","countryCode","numberInvoiceDocuments","numberOtherDocuments","dateAdded","dateProcessed","CardModal","DocumentCard","setDatei","ShowConfirmation","isVerified","setIsVerified","getFileFromUrl","url","defaultType","fetch","blob","File","proofFilehash","blockchain_did","_DokumentID","callback","author_company","showDocumentModal","setShowDocumentModal","toggleShowDocumentModal","documentDate","uploadDate","author","DeclarationCard","anmeldeArt","bearbeitendeDienststelle","Number","gesamtbetrag","toFixed","waehrung","lieferkosten","anmelderName","DocumentBreadcrump","DocumentsNew","declarationLocationState","state","success","setTransactionData","isDeclaration","setIsDeclaration","totalValue","setTotalValue","setInvoiceData","setIsInvoice","setNumberInvoiceDocuments","setNumberOtherDocuments","invoice","resInvoice","total_value","invoices","other","blockchain_rid","pill","Divider","textAlign","customs_office","documentId","documentData","Footer","backgroundColor","Lucid","UniLogo","SideNavigation","navigate","useNavigate","onToggle","setExpandedNav","expandedNav","padding","position","Toggle","Nav","defaultSelected","pathname","includes","onSelect","replace","fontSize","TopNavigation","notificationsLoading","setNotificationLoading","searchTerm","setSearchTerm","marginLeft","fixed","expand","light","bgColor","fluid","placeholder","maxHeight","removeItem","Layout","transition","AllgemeineAngaben","setAllgemeineAngabenValidity","fieldValue","auftragsnummer","minWidth","maxWidth","inputMissingError","inputWrongError","helperText","handleNumberFieldChange","customOffices","setFieldValue","setPubkeyCO","FormControl","InputLabel","labelId","anmeldungArt","handleFieldChange","MenuItem","anmeldeart","FormHelperText","geschaeftArt","zahlungArt","handleBack","handleSkip","Adressdaten","eoriVersender","firmaVersender","strasseVersender","plzVersender","ortVersender","staatVersender","telefonVersender","emailVersender","eoriAnmelder","firmaAnmelder","strasseAnmelder","plzAnmelder","ortAnmelder","staatAnmelder","telefonAnmelder","emailAnmelder","Lieferdaten","setLieferdatenValidity","ausfuhrland","bestimmungsland","bestimmungsbundesland","befoerderungsmittel","lieferbedingung","lieferort","Rechnungsdaten","setRechnungsdatenValidity","usedInvoice","transactionInvoices","setUsedInvoice","datumRechnung","rechnungsposten","posten","AnmeldungDokumente","FormGroup","filter","documentID","usedDocuments","indexOf","splice","push","handleChange","representation","Declaration","pubkeyCO","setTransactionInvoices","setDocuments","setCustomOffices","allgemeineAngabenValidity","lieferdatenValidity","rechnungsdatenValidity","Error","zollwert","blockchainZollanmeldungTransaction","blockchainRID","nameVersender","vornameVersender","nameAnmelder","vornameAnmelder","warenort","setRechnungsposten","setInputMissingError","plsAnmelder","setInputWrongError","isNaN","erfolgreich","zahlungsart","blockchain_zid","handleNavigate","exporteur_pubkey","snackSuccess","snackMessage","urladdress","Search","query","setQuery","resultsTransaction","setResultsTransactions","resultsPartnerships","setResultsPartnerships","activeSearch","setActiveSearch","search","useSearchParams","searchParams","suchbegriff","handleSearch","queryset","queryFix","PreviewInvoice","setIsZoll","declarationID","invoiceData","documentType","auftragMetadaten","beschreibung","Rechnungsposten","border","pdfjs","GlobalWorkerOptions","workerSrc","version","PreviewOther","documentMetadata","numPages","setNumPages","pageNumber","setPageNumber","changePage","offSet","prevPageNumber","changePageBack","changePageNext","onLoadSuccess","download","DocumentDetail","setDocumentData","isInvoice","resT","resF","Unauthorized","Login","user","setUser","pwd","setPwd","errMsg","setErrMsg","sucess","setSucess","setStreet","setZipCode","setEmail","setName","setCity","setPhone","setCountry","setUsername","setPassword","setPubkey","handleLogin","roles","setItem","registerEmployee","company_id","setRegisterEmployeeCorrect","registerCorrect","setRegisterCorrect","registerEmployeeCorrect","justify","newCompany","ZollTransaction","importName","ZollTransactions","exporteur","ZollDocumentsModal","ZollDocumentTransaction","status_verificiation","verified","setVerified","abgleichBlockchain","_blockchain_zid","incoterms","zoll","anmelder","datum","rejectModal","setRejectModal","toggleShowRejectModal","confirmModal","setConfirmModal","toggleShowConfirmModal","handleVerification","ZollDocuments","setOpen","alternative","invoiceAndCustoms","alt","loading","useDataUpdate","dataUpdate","pubkey","custom_office","RequireAuth","allowedRoles","isMounted","getfirstDataSet","grow","PersistLogin","verifyRefreshToken","PreviewDelacration","customDeclaration","setCustomDeclaration","setAuftragMetadaten","resI","freigabeStatus","statusAnmeldung","statusAuftrag","App","path","element","ZollLayout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"szwRAEMA,EAAcC,wBAAc,IAErBC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OACI,cAACN,EAAYO,SAAb,CAAsBC,MAAO,CAAEH,OAAMC,WAArC,SACKH,KAKEH,ICNAS,EAJC,WACZ,OAAOC,qBAAWV,I,QC0CPW,MAjCf,SAA+BC,GAE7B,OACE,mCACE,eAAC,IAAD,CACEC,UAAU,YACVC,MAAO,CAAEC,UAAW,QAASC,MAAO,SAFtC,UAIE,eAAC,IAAD,0BAA4BJ,EAAMK,SAASC,eAC3C,eAAC,IAAD,WACE,eAAC,IAAD,WAAeN,EAAMK,SAASE,KAA9B,KAAsCP,EAAMK,SAASG,WAArD,OACA,cAAC,IAAD,CAAaP,UAAU,OAAvB,SACiC,IAA9BD,EAAMK,SAASI,YAAoB,uBAAST,EAAMK,SAASI,cAE9D,cAAC,IAAD,CACEP,MAAO,CAAEQ,QAAS,QAASC,OAAQ,UACnCC,GAAI,iBAAmBZ,EAAMK,SAASC,YAAYO,WAAa,aAAeb,EAAMK,SAASS,GAAGD,WAFlG,SAIE,cAAC,IAAD,CAAQE,SAAO,EAAf,2BAKJ,eAAC,IAAD,CAAed,UAAU,aAAzB,6BACmBD,EAAMK,SAASW,YAChC,uBAFF,OAGOhB,EAAMK,SAASY,MAAMC,SAASC,QAAQC,KAH7C,KAGqDpB,EAAMK,SAASY,MAAMI,SAH1E,a,SCpBOC,E,OAVOC,EAAMC,OAAO,CACjCC,QALc,uCAMdC,QAAS,IACTC,QAAS,CAEP,eAAgB,mBAChBC,OAAQ,sB,SCRG,SAASC,EAAkB7B,GACxC,IAAI8B,EAAY,IAAIC,KAAK/B,EAAMgC,MAAMF,WACrC,EAAgDtC,mBAAS,IAAzD,mBAAOyC,EAAP,KAAyBC,EAAzB,KACA,EAAoD1C,mBAAS,IAA7D,mBAAO2C,EAAP,KAA2BC,EAA3B,KAEA,EAA0B5C,oBAAS,GAAnC,mBAAO6C,EAAP,KAAcC,EAAd,KAIAC,qBAAU,WAAO,IAAD,IACgC,EAA9C,GAAwC,OAApC,UAAAvC,EAAMgC,aAAN,eAAaQ,qBACfN,EAAmB,UAAClC,EAAMgC,aAAP,aAAC,EAAavB,aACjC2B,EAAsB,8BACjB,GAAwC,OAApC,UAAApC,EAAMgC,aAAN,eAAaQ,qBAA6B,CAAC,IAAD,EAC7CC,EAAI,UAAGzC,EAAMgC,aAAT,aAAG,EAAavB,YAC1ByB,EAAoBO,GACpBL,EAAsB,eAAD,OAAgBpC,EAAMgC,MAAMU,uBAC5C,CAAC,IAAD,EAELR,EAAmB,UAAClC,EAAMgC,aAAP,aAAC,EAAavB,aACjC2B,EAAsB,kCAEvB,CAACJ,QAcJ,OACE,eAACW,EAAA,EAAD,CACE1C,UAAU,OACV2C,GAAG,QACH1C,MAAO,CAAEE,MAAO,QAChByC,QAjBe,wBACjBvB,EACGwB,MADH,4BACoB9C,EAAMgC,aAD1B,aACoB,EAAalB,GADjC,KACwC,CACpCiC,QAAQ,IAETC,MAAK,SAACC,GAtBeX,GAAUD,MAyB/Ba,OAAM,SAACC,GACNC,QAAQC,IAAIF,OASdG,KAAMjB,EALR,UAOE,eAACM,EAAA,EAAMY,OAAP,WACE,wBAAQtD,UAAU,UAAlB,SAA6BkC,IAC7B,gCAAQL,EAAU0B,sBAEpB,cAACb,EAAA,EAAMc,KAAP,UAAaxB,OC0NJyB,MAzPf,WAEE,MAAgDlE,mBAAS,IAAzD,mBAAOmE,EAAP,KAAyBC,EAAzB,KAGA,EAA0CpE,mBAAS,IAAnD,mBAAOqE,EAAP,KAAsBC,EAAtB,KAEA,EAAwCtE,mBAAS,IAAjD,mBAAOuE,EAAP,KAAqBC,EAArB,KAEA,EAAkCxE,oBAAS,GAA3C,mBAAOyE,EAAP,KAAkBC,EAAlB,KAEQzE,EAASI,IAATJ,KAXW,4CAcnB,sBAAA0E,EAAA,sEAEQ7C,EACH8C,IAAI,iBACJpB,MAAK,SAACC,GACLW,EAAoBX,EAAIoB,SAEzBnB,OAAM,SAACC,GACNC,QAAQC,IAAIF,MARlB,uBAYQ7B,EACH8C,IAAI,cACJpB,MAAK,SAACC,GACLa,EAAiBb,EAAIoB,SAEtBnB,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAlBlB,uBAsBQ7B,EACH8C,IADG,gCAC0B3E,EAAK6E,QAD/B,qBAEHtB,MAAK,SAACC,GACLe,EAAgBf,EAAIoB,SAErBnB,OAAM,SAAUqB,GACXA,EAAMC,UAGRpB,QAAQC,IAAIkB,EAAMC,SAASH,MAC3BjB,QAAQC,IAAIkB,EAAMC,SAASC,QAC3BrB,QAAQC,IAAIkB,EAAMC,SAAS7C,UAClB4C,EAAMG,QAIftB,QAAQC,IAAIkB,EAAMG,SAGlBtB,QAAQC,IAAI,QAASkB,EAAMI,YAzCnC,uBA4CQrD,EACH8C,IADG,uBAEHpB,MAAK,SAACC,GACL2B,EAAU3B,EAAIoB,SAEfnB,OAAM,SAAUqB,GACXA,EAAMC,UAGRpB,QAAQC,IAAIkB,EAAMC,SAASH,MAC3BjB,QAAQC,IAAIkB,EAAMC,SAASC,QAC3BrB,QAAQC,IAAIkB,EAAMC,SAAS7C,UAClB4C,EAAMG,QAIftB,QAAQC,IAAIkB,EAAMG,SAGlBtB,QAAQC,IAAI,QAASkB,EAAMI,YA/DnC,OAkEET,GAAa,GAlEf,4CAdmB,sBAoFnB3B,qBAAU,YApFS,mCAqFjBsC,KACC,IAGHtC,qBAAU,WACRjB,EAAc8C,IAAI,cAAcpB,MAAK,SAACC,GACpCa,EAAiBb,EAAIoB,WAEtB,IAEH,MAA4B7E,mBAAS,IAArC,mBAAOsF,EAAP,KAAeF,EAAf,KAEA,OACE,mCACGX,EACC,qBAAKhE,UAAU,iBAAf,SACE,cAAC,IAAD,UACE,sBAAMA,UAAU,kBAAhB,2BAIJ,8BACE,eAAC,IAAD,WACE,2CACA,uBACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAQA,UAAU,gBAAlB,SACE,eAAC,IAAD,CAASC,MAAO,CAAE6E,OAAQ,SAA1B,UACE,cAAC,IAAD,CAAe7E,MAAO,CAAE8E,WAAY,WAApC,SACE,qDAEF,cAAC,IAAD,CAAa/E,UAAU,kBAAvB,SACE,cAAC,IAAD,UACE,mCACqB,IAAlB6E,EAAOG,OACN,mCACGH,EAAOI,KAAI,SAAClD,GAAD,OACV,cAACH,EAAD,CAAkCG,MAAOA,GAAjBA,EAAMlB,SAIlC,cAAC,IAAD,CAAcb,UAAU,OAAxB,qDASZ,eAAC,IAAD,CAAQA,UAAU,gBAAlB,UACE,eAAC,IAAD,CAASC,MAAO,CAAE6E,OAAQ,QAASI,aAAc,QAAjD,UACE,eAAC,IAAD,CAAejF,MAAO,CAAE8E,WAAY,WAApC,UACE,6DADF,IACoCrB,EAAiBsB,UAErD,cAAC,IAAD,UACGtB,IAAqB,GACpB,qCACE,sDACA,cAAC,IAAD,UACGA,EAAiB,GAAGlD,cAEvB,eAAC,IAAD,WACGkD,EAAiB,GAAGyB,YAAYC,QAAQjE,KACzC,uBACCuC,EAAiB,GAAGyB,YAAYC,QAAQC,OAAQ,IACjD,uBAEE3B,EAAiB,GAAGyB,YAAYC,QAAQE,UACxC,IACD5B,EAAiB,GAAGyB,YAAYC,QAAQG,KAR3C,IAQkD,IAC/C7B,EAAiB,GAAGyB,YAAYC,QAAQI,aAAc,IACvD,cAAC,IAAD,CACEvF,MAAO,GACPU,GACE,iBACA+C,EAAiB,GAAG7C,GAAGD,WAJ3B,SAQE,cAAC,IAAD,CAAQE,SAAO,EAACd,UAAU,YAA1B,0BAFK0D,EAAiB,GAAG7C,UAS/B,cAAC,IAAD,CAAcb,UAAU,OAAxB,uCAON,eAAC,IAAD,CAASC,MAAO,CAAE6E,OAAQ,SAA1B,UACE,eAAC,IAAD,CAAe7E,MAAO,CAAE8E,WAAY,WAApC,UACE,8DADF,IACwCjB,EAAakB,UAErD,cAAC,IAAD,UAC0B,GAAvBlB,EAAakB,OACZ,qCACE,gDACA,cAAC,IAAD,UACGlB,EAAa,GAAGsB,QAAQjE,OAE3B,eAAC,IAAD,oBACS2C,EAAa,GAAGsB,QAAQf,QAC/B,uBAFF,iBAGiBP,EAAa,GAAG2B,WAC/B,qBAAKzF,UAAU,YAAf,SACE,cAAC,IAAD,CACEC,MAAO,CAAEQ,QAAS,QAASC,OAAQ,UACnCC,GAAI,aAFN,SAIE,cAAC,IAAD,CAAQG,SAAO,EAACd,UAAU,YAA1B,+CAQR,cAAC,IAAD,CAAcA,UAAU,OAAxB,6CAQV,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAeC,MAAO,CAAE8E,WAAY,WAApC,SACE,oEAEF,cAAC,IAAD,UACE,cAAC,IAAD,UACGnB,IAAkB,GACjB,cAAC,IAAD,CAAQ5D,UAAU,gCAAlB,SACG4D,EAAc8B,MAAM,EAAG,GAAGT,KAAI,SAAC7E,GAAD,OAC7B,eAAC,IAAMuF,SAAP,WACE,cAAC,EAAD,CAAuBvF,SAAUA,IACjC,yBAFmBA,EAASS,SAOlC,cAAC,IAAD,UACE,yF,yBChQX,MAA0B,oCCA1B,MAA0B,qCCgC1B+E,EA3BS,WACpB,IAAQnG,EAAYG,IAAZH,QACFoG,EAAeC,aAAaC,QAAQ,iBACpCC,EAAO,uCAAG,4BAAA9B,EAAA,sEAIW7C,EAAc4E,KAAK,sBACtCC,KAAKC,UAAU,CAACH,QAASH,KALjB,cAINtB,EAJM,OAQZ9E,GAAQ,SAAA2G,GAGJ,OAAO,2BACAA,GADP,IAIIC,YAAa9B,EAASH,KAAKkC,YAfvB,kBAkBL/B,EAASH,KAAKkC,QAlBT,2CAAH,qDAoBf,OAAON,GC8BMO,EAhDS,WACpB,IAAMP,EAAUJ,IACRpG,EAASI,IAATJ,KA0CR,OAvCA8C,qBAAU,WAIN,IAAMkE,EAAmBnF,EAAcoF,aAAahC,QAAQiC,KACxD,SAAAC,GAKI,OAJKA,EAAOjF,QAAP,gBAEDiF,EAAOjF,QAAP,sCAA4ClC,QAA5C,IAA4CA,OAA5C,EAA4CA,EAAM6G,cAE/CM,KACR,SAACrC,GAAD,OAAWsC,QAAQC,OAAOvC,MAE3BwC,EAAoBzF,EAAcoF,aAAalC,SAASmC,KAE1D,SAAAnC,GAAQ,OAAIA,IAFU,+BAAAL,EAAA,MAItB,WAAOI,GAAP,mBAAAJ,EAAA,yDAEU6C,EAFV,OAEwBzC,QAFxB,IAEwBA,OAFxB,EAEwBA,EAAOqC,OACK,OAAvB,OAALrC,QAAK,IAALA,GAAA,UAAAA,EAAOC,gBAAP,eAAiBC,SAAkB,OAACuC,QAAD,IAACA,KAAaC,KAHzD,uBAIQD,EAAYC,MAAO,EAJ3B,SAKqChB,IALrC,cAKciB,EALd,OAMQF,EAAYrF,QAAZ,+BAAiDuF,GANzD,kBAOe5F,EAAc0F,IAP7B,gCASWH,QAAQC,OAAOvC,IAT1B,2CAJsB,uDAmB1B,OAAM,WACFjD,EAAcoF,aAAahC,QAAQyC,MAAMV,GACzCnF,EAAcoF,aAAalC,SAAS2C,MAAMJ,MAG/C,CAACtH,EAAKwG,IAEF3E,GC6TI8F,MA9Uf,SAAqBpH,GACnB,IAAQP,EAASI,IAATJ,KAGR,EAAsCD,oBAAS,GAA/C,mBAAO6H,EAAP,KAAoBC,EAApB,KAGA,EAA8C9H,mBAAS,GAAvD,mBAAO+H,EAAP,KAAwBC,EAAxB,KAGA,EAA4ChI,mBAAS,GAArD,mBAAOiI,EAAP,KAAuBC,EAAvB,KAEMpG,EAAgBkF,IAGtBjE,qBAAU,WACJ9C,EAAK6E,SAAWtE,EAAM2H,WACxBL,GAAe,MAKnB/E,qBAAU,WACR,IAAIqF,EAAY5H,EAAM6D,cAClBgE,EAAkB,EAClBC,EAAmB,EACvB,GAAyB,IAArBF,EAAU3C,OAAc,CAC1B,IAAK,IAAI8C,KAAKH,EACRA,EAAUG,GAAGzH,aAAeN,EAAMc,KAEpC+G,GAAmB,EAEM,YAArBD,EAAUG,GAAGxH,OACfuH,GAAoB,IAI1BN,EAAmBK,GACnBH,EAAkBI,MAEnB,CAAC9H,EAAM6D,gBAGV,MAAkDrE,oBAAS,GAA3D,mBAAOwI,EAAP,KAA0BC,EAA1B,KAEA,EAAwCzI,mBAAS,cAAjD,mBAAO0I,EAAP,KAAqBC,EAArB,KAGA5F,qBAAU,WACR,IAAI6F,EAAcpI,EAAMqI,gBACpBC,GAAqB,EACzB,GAA2B,IAAvBF,EAAYnD,OAAc,CAC5B,IAAK,IAAI8C,KAAKK,EACRA,EAAYL,GAAGzH,aAAeN,EAAMc,KAEtCwH,GAAqB,EAErBH,EAAgBC,EAAYL,GAAGQ,sBAGnCN,EAAqBK,MAEtB,CAACtI,EAAMqI,kBAGV,MAAsC7I,oBAAS,GAA/C,mBAAOgJ,EAAP,KAAoBC,EAApB,KAEA,SAASC,IACPD,GAAgBD,GAiBlB,MAAkChJ,oBAAS,GAA3C,mBAAOmJ,EAAP,KAAkBC,EAAlB,KAEA,SAASC,IACPD,GAAcD,GAKhB,MAAsCnJ,mBAASQ,EAAM8I,OAArD,mBAAOrI,EAAP,KAAoBsI,EAApB,KAgBA,OACE,gCACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,eAAC,IAAD,WACG1B,EAAc,WAAa,WAC3BrH,EAAM8I,MAEP,eAAC,IAAD,CAAa7I,UAAU,YAAvB,UACE,cAAC,IAAD,CAAmBc,SAAO,EAA1B,SACE,cAAC,IAAD,CAASiI,KAAK,KAAKC,KAAG,EAACC,KAAK,WAE7BlB,EACC,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,+CACmC,uBADnC,2CAKF,cAAC,IAAD,UACE,eAAC,IAAD,CACE/H,UAAU,WACVkJ,QAASN,EAFX,UAIE,cAAC,IAAD,CAAS5I,UAAU,OAAOgJ,KAAG,EAACC,KAAK,SAJrC,kBAQF,cAAC,IAAD,UACE,eAAC,IAAD,CACEjJ,UAAU,WACVkJ,QAAST,EAFX,UAIE,cAAC,IAAD,CAASzI,UAAU,OAAOgJ,KAAG,EAACC,KAAK,cAJrC,qBAUJ,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAiBC,QAASN,EAA1B,UACE,cAAC,IAAD,CAAS5I,UAAU,OAAOgJ,KAAG,EAACC,KAAK,SADrC,kBAKF,cAAC,IAAD,UACE,eAAC,IAAD,CAAiBC,QAAST,EAA1B,UACE,cAAC,IAAD,CAASzI,UAAU,OAAOgJ,KAAG,EAACC,KAAK,cADrC,2BAUV,eAAC,IAAD,iCACmBlJ,EAAMoJ,MADzB,KAEGpJ,EAAMqJ,gBAAgB1D,MAAM,GAAI,IAFnC,OAIA,0BAEF,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQ2D,GAAG,IAAIrJ,UAAU,gCAAzB,SACE,qBACEC,MAAO,CAAEE,MAAO,QAAS2E,OAAQ,SACjCwE,IAAKlC,EAAcmC,EAAUC,MAKjC,cAAC,IAAD,CAAQH,GAAG,IAAX,SACE,eAAC,IAAD,CAAarJ,UAAU,OAAvB,UACE,+CAAkBoH,GAAe,kBACjC,uBACCrH,EAAM0J,cACP,uBACC1J,EAAM2J,aACP,uBACC3J,EAAM4J,WAPT,KAOuB5J,EAAM6J,mBAG/B,cAAC,IAAD,CAAQP,GAAG,IAAX,SACE,eAAC,IAAD,CAAarJ,UAAU,OAAvB,UACE,sDACCsH,EACD,uBACA,qDACCE,EACD,uBACA,gDACCO,EAAoB,YAAc,aACnC,uBACA,+CACCE,UAIP,uBACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAQ4B,GAAG,IAAIC,GAAG,IAAlB,SACqB,GAAlBtC,EACC,cAAC,IAAD,CAAUuC,SAAS,OAAOC,GAAI,CAAEC,GAAI,GAApC,qGAIqB,IAAnBzC,GAA6C,GAArBO,EAC1B,cAAC,IAAD,CAAUgC,SAAS,UAAUC,GAAI,CAAEC,GAAI,GAAvC,+DAGuB,GAArBlC,GACc,cAAhBE,EACA,cAAC,IAAD,CAAU8B,SAAS,OAAOC,GAAI,CAAEC,GAAI,GAApC,iFAIkB,gBAAhBhC,EACF,cAAC,IAAD,CAAU8B,SAAS,UAAUC,GAAI,CAAEC,GAAI,GAAvC,uCAGkB,aAAhBhC,EACF,cAAC,IAAD,CAAU8B,SAAS,QAAQC,GAAI,CAAEC,GAAI,GAArC,qCAGE,OAEN,cAAC,IAAD,CAAQJ,GAAG,IAAIC,GAAG,IAAlB,SACE,cAAC,IAAD,CACE7J,MAAO,CAAEQ,QAAS,QAASC,OAAQ,UACnCC,GAAI,iBAAmBZ,EAAMc,GAAGD,WAEhCsJ,OAAQ,CAAErB,MAAO,SAJnB,SAME,eAAC,IAAD,CAAQ7I,UAAU,YAAlB,UACE,cAAC,IAAD,CAAS+I,KAAK,KAAK/I,UAAU,OAAOmK,KAAG,EAAClB,KAAK,SAD/C,yBAHKlJ,EAAMc,YAWnB,eAAC,IAAD,oCACyBd,EAAMqK,WAD/B,KAEGrK,EAAMsK,oBAAoB3E,MAAM,GAAI,IAFvC,YAQJ,cAAC,IAAD,CAAUrC,KAAMkF,EAAa+B,QAAS9B,EAAgB+B,SAAS,KAA/D,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,gCACA,cAAC,IAAD,CACEvK,UAAU,YACVwK,MAAM,OACNtB,QAAST,OAGb,eAAC,IAAD,qCACyB,kCAAK1I,EAAM8I,MAAX,OADzB,sFAKA,eAAC,IAAD,WACE,cAAC,IAAD,CAAQ2B,MAAM,SAAStB,QAAST,EAAhC,6BAGA,cAAC,IAAD,CAAQ3H,SAAO,EAAC0J,MAAM,SAAStB,QAjN3C,WACE7H,EACGoJ,OAAO,gBAAkB1K,EAAMc,GAAK,KACpCkC,MAAK,SAACC,GACLG,QAAQC,IAAI,8BAEbH,OAAM,SAACC,GACNC,QAAQC,IAAIF,OA0MN,iCASR,cAAC,IAAD,CAAUG,KAAMqF,EAAW4B,QAAS3B,EAApC,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,iCACA,cAAC,IAAD,CACE3I,UAAU,YACVwK,MAAM,OACNtB,QAASN,OAGb,cAAC,IAAD,UACE,cAAC,IAAD,UACE,uBAAM8B,SAhNpB,SAA0BC,GACxBA,EAAEC,iBAEFvJ,EACGwB,MAAM,gBAAkB9C,EAAMc,GAAK,IAAK,CAAEL,YAAaA,IACvDuC,MAAK,SAACC,GACLG,QAAQC,IAAI,8BAEbH,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAuMJ,UACE,cAAC,IAAD,CACE/B,KAAK,cACL0J,MAAM,+BACNvK,KAAK,OACLN,UAAU,OACV8K,SAAU,SAACH,GAAD,OAAO7B,EAAe6B,EAAEI,OAAOpL,QACzCA,MAAOa,IAET,cAAC,IAAD,UACE,cAAC,IAAD,CAAQF,KAAK,SAASkK,MAAM,UAAUxK,UAAU,YAAhD,gCAQR,cAAC,IAAD,UACE,cAAC,IAAD,CAAQwK,MAAM,SAAStB,QAASN,EAAhC,oC,4CCrNCoC,MAlIf,SAAyBjL,GACvB,MAA4CR,oBAAS,GAArD,mBAAO0L,EAAP,KAAuBC,EAAvB,KACA,EAAsC3L,mBAAS,IAA/C,mBAAOiB,EAAP,KAAoBsI,EAApB,KACA,EAAsCvJ,mBAAS,IAA/C,mBAAO4F,EAAP,KAAoBgG,EAApB,KACA,EAAgC5L,mBAAS,IAAzC,mBAAO6L,EAAP,KAAiBC,EAAjB,KACA,EAA4C9L,qBAA5C,mBAAO+L,EAAP,KAAuBC,EAAvB,KACMC,EAAejF,IACb/G,EAASI,IAATJ,KAgDR,OA9CA8C,qBAAU,WAERkJ,EAAarH,IAAI,gBAAgBpB,MAAK,SAACC,GACrCqI,EAAYrI,EAAIoB,WAEjB,IA0CD,mCACE,sBAAMsG,SAxCV,SAAsBC,GACpB,IAAIjD,EAAY,EAEdA,EADEuD,EACUzL,EAAK6E,QAGLiH,EAGdX,EAAEC,iBACF,IAAMa,EAAiB,CACrBjL,cACA2E,cACAuC,aAGF8D,EACGvF,KAAK,iBAAkBwF,GACvB1I,MAAK,SAACC,GACLjD,EAAM2L,WAAW3L,EAAM4L,QAEvB5L,EAAM6L,aAEN7L,EAAM8L,oBAAmB,GACzB9L,EAAM+L,mBAAmB,qCACzB/L,EAAMgM,wBAEP9I,OAAM,SAACqB,GACNnB,QAAQmB,MAAM,sBAAuBA,GAErCvE,EAAM6L,aAEN7L,EAAM8L,oBAAmB,GACzB9L,EAAM+L,mBAAmB,wCACzB/L,EAAMgM,yBAMR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CACE5K,KAAK,cACL0J,MAAM,+BACNvK,KAAK,OACLwK,SAAU,SAACH,GAAD,OAAO7B,EAAe6B,EAAEI,OAAOpL,YAG7C,qBAAKK,UAAU,OAAf,mCACA,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAACgM,EAAA,EAAD,CACEhM,UAAU,OACViM,eAAa,EACbpL,GAAG,oBACHqL,QAASd,EAETe,eAAgB,SAACC,GAAD,OAAYA,EAAOhH,QAAQjE,MAE3C2J,SAAU,SAACuB,EAAO1M,GAChBwL,EAAexL,EAAMkB,IACrB0K,EAAkB5L,EAAMyF,QAAQf,UAElC2F,GAAI,CAAE7J,MAAO,KACbmM,YAAa,SAACpC,GAAD,OACX,cAACqC,EAAA,EAAD,2BAAerC,GAAf,IAAuBW,MAAM,kBAInC,cAAC,IAAD,UACE,cAAC,IAAD,CAAMlK,GAAG,YAAT,SACE,cAAC,IAAD,CACEwJ,KAAG,EACHlB,KAAK,eACLjJ,UAAU,sBACV+I,KAAK,cAMb,cAAC,IAAD,UACE,cAACyD,EAAA,EAAD,CACExM,UAAU,OACVyM,QACE,cAACC,EAAA,EAAD,CAAUxD,QAAS,kBAAMgC,GAAmBD,MAE9CJ,MAAM,oCAGM,IAAfrK,GAAoC,IAAf2E,EACpB,cAAC,IAAD,CACEwH,UAAQ,EACRC,OAAK,EACLtM,KAAK,SACLkK,MAAM,UACNxK,UAAU,OALZ,2BAUA,cAAC,IAAD,CAAQ4M,OAAK,EAACtM,KAAK,SAASkK,MAAM,UAAUxK,UAAU,OAAtD,mCC3HG,SAAS6M,EAAiB9M,GACvC,MAAoCR,oBAAS,GAA7C,mBAAOuN,EAAP,KAAmBC,EAAnB,KAEMnB,EAAa,kBAAMmB,GAAeD,IAExC,OACE,qCACE,eAAC,IAAD,CAAQ9M,UAAU,YAAYwK,MAAM,UAAUtB,QAAS0C,EAAvD,UACE,cAAC,IAAD,CAAS5C,KAAG,EAACD,KAAK,KAAKE,KAAK,OAAOjJ,UAAU,SAD/C,+BAIA,cAAC,IAAD,CAAUqD,KAAMyJ,EAAYxC,QAASyC,EAAexC,SAAS,KAA7D,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,0CACA,cAAC,IAAD,CACEvK,UAAU,YACVwK,MAAM,OACNtB,QAAS0C,OAGb,cAAC,IAAD,UACE,cAAC,EAAD,CACEF,UAAW3L,EAAM2L,UACjBC,OAAQ5L,EAAM4L,OACdC,WAAYA,EACZG,mBAAoBhM,EAAMgM,mBAC1BiB,oBAAqBjN,EAAMiN,oBAC3BnB,mBAAoB9L,EAAM8L,mBAC1BC,mBAAoB/L,EAAM+L,uBAG9B,cAAC,IAAD,UACE,cAAC,IAAD,CAAQhL,SAAO,EAAC0J,MAAM,SAAStB,QAAS0C,EAAxC,mC,aClCRqB,EAAQC,IAAMC,YAAW,SAAepN,EAAOqN,GACnD,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAGD,IAAKA,EAAKE,QAAQ,UAAavN,OAkSjDwN,MA/Rf,WAAyB,IAAD,EACtB,EAAgDhO,mBAAS,IAAzD,mBAAOmE,EAAP,KAAyBC,EAAzB,KACA,EAA0CpE,mBAAS,IAAnD,mBAAOqE,EAAP,KAAsBC,EAAtB,KACA,EAA8CtE,mBAAS,IAAvD,mBAAO6I,EAAP,KAAwBoF,EAAxB,KACA,EAA4BjO,oBAAS,GAArC,mBAGA,GAHA,UAG4BA,oBAAS,IAArC,mBAAOoM,EAAP,KAAeD,EAAf,KAGA,EAAkCnM,oBAAS,GAA3C,mBAAOyE,EAAP,KAAkBC,EAAlB,KAEM5C,EAAgBkF,IACtB,EAAwChH,oBAAS,GAAjD,mBAAOkO,EAAP,KAAqBC,EAArB,KACA,EAAsCnO,qBAAtC,mBAAO4F,EAAP,KAAoBgG,EAApB,KAEQwC,EAAkBC,cAAlBD,cACJE,EAAWC,cA+Ff,SAASC,EAAiB1B,GACG,mBAAvBA,EAAMtB,OAAOpL,MAIU,oBAAvB0M,EAAMtB,OAAOpL,MAIU,eAAvB0M,EAAMtB,OAAOpL,MAIU,gBAAvB0M,EAAMtB,OAAOpL,MAIU,aAAvB0M,EAAMtB,OAAOpL,MAIU,cAAvB0M,EAAMtB,OAAOpL,OA7CnB,WACE,IAAMqO,EAAS,GACZC,OAAOvK,GACPwK,MAAK,SAAChK,EAAGiK,GAAJ,OAAWjK,EAAEkF,gBAAkB+E,EAAE/E,iBAAmB,EAAI,KAEhEzF,EAAoBqK,GAyClBI,GAtDJ,WACE,IAAMJ,EAAS,GACZC,OAAOvK,GACPwK,MAAK,SAAChK,EAAGiK,GAAJ,OAAWjK,EAAEkF,gBAAkB+E,EAAE/E,gBAAkB,GAAK,KAEhEzF,EAAoBqK,GA6ClBK,GA1BJ,WACE,IAAML,EAAS,GACZC,OAAOvK,GACPwK,MAAK,SAAChK,EAAGiK,GAAJ,OAAWjK,EAAEmG,oBAAsB8D,EAAE9D,qBAAuB,EAAI,KAExE1G,EAAoBqK,GAiBlBM,GA9BJ,WACE,IAAMN,EAAS,GACZC,OAAOvK,GACPwK,MAAK,SAAChK,EAAGiK,GAAJ,OAAWjK,EAAEmG,oBAAsB8D,EAAE9D,oBAAsB,GAAK,KAExE1G,EAAoBqK,GAqBlBO,GApDJ,WACE,IAAMP,EAAS,GACZC,OAAOvK,GACPwK,MAAK,SAAChK,EAAGiK,GAAJ,OACJjK,EAAE1D,YAAYgO,cAAgBL,EAAE3N,YAAYgO,cAAgB,GAAK,KAGrE7K,EAAoBqK,GAyClBS,GA1DJ,WACE,IAAMT,EAAS,GACZC,OAAOvK,GACPwK,MAAK,SAAChK,EAAGiK,GAAJ,OACJjK,EAAE1D,YAAYgO,cAAgBL,EAAE3N,YAAYgO,eAAiB,EAAI,KAGrE7K,EAAoBqK,GA+ClBU,GA9FJpM,oBAAS,sBAAC,4BAAA4B,EAAA,0DAEJyJ,EAFI,uBAGNgB,EAAO,6BAA+BhB,EACtCD,GAAgB,GAJV,SAKArM,EACH8C,IAAI,eAAiBwJ,EAAgB,KACrC5K,MAAK,SAACC,GACLmI,EAAenI,EAAIoB,SARjB,6BAWNuK,EAAO,gBACPjB,GAAgB,GAZV,OAcRrM,EAAc8C,IAAIwK,GAAM5L,MAAK,SAACC,GAG5B,IAAM4L,EAAc,GACjBX,OAAOjL,EAAIoB,MACX8J,MAAK,SAAChK,EAAGiK,GAAJ,OAAWjK,EAAEkF,gBAAkB+E,EAAE/E,iBAAmB,EAAI,KAChEzF,EAAoBiL,MAEtB3K,GAAa,GAtBL,4CAuBP,CAAC0H,EAAQkC,IAGZvL,qBAAU,WACRjB,EAAc8C,IAAI,cAAcpB,MAAK,SAACC,GACpCa,EAAiBb,EAAIoB,WAEtB,IAGH9B,qBAAU,WACRjB,EAAc8C,IAAI,gBAAgBpB,MAAK,SAACC,GACtCwK,EAAmBxK,EAAIoB,WAExB,IAoFH,MAAwC7E,oBAAS,GAAjD,mBAAOsP,EAAP,KAAqBC,EAArB,KAEA,EAA8CvP,oBAAS,GAAvD,oBAAOwP,GAAP,MAAwBlD,GAAxB,MAEA,GAA8CtM,mBAAS,IAAvD,qBAAOyP,GAAP,MAAwBlD,GAAxB,MAQMkB,GAAsB,SAACX,EAAO4C,GACnB,cAAXA,GAIJH,GAAgB,IAGlB,OACE,mCACG9K,EACC,qBAAKhE,UAAU,iBAAf,SACE,cAAC,IAAD,UACE,sBAAMA,UAAU,kBAAhB,2BAIJ,gCACE,eAAC,IAAD,WACE,6CACCyN,GACC,8DAA0BtI,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAaC,eAAvC,aAA0B,EAAsBjE,QAGlD,qBAAKnB,UAAU,qDAAf,SACE,eAAC,IAAD,WACE,8BACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,eAACkP,EAAA,EAAKC,OAAN,CACElP,MAAO,CACLE,MAAO,KAETH,UAAU,OACV8K,SAAU,SAACuB,GAAD,OAAW0B,EAAiB1B,IALxC,UAOE,wBAAQ1M,MAAO,cAAf,yDAGA,wBAAQA,MAAO,aAAf,0DAGA,wBAAQA,MAAO,kBAAf,kDAGA,wBAAQA,MAAO,iBAAf,mDAGA,wBAAQA,MAAO,YAAf,uDAGA,wBAAQA,MAAO,WAAf,2DAGa,OAEjB,cAAC,IAAD,UACE,qBAAKK,UAAU,OAAf,SACE,8BAAI0D,EAAiBsB,OAArB,2BAKR,cAAC6H,EAAD,CACEnB,UAAWA,EACXC,OAAQA,EACRI,mBAvEW,WACzB+C,GAAgB,IAuEF9B,oBAAqBA,GACrBnB,mBAAoBA,GACpBC,mBAAoBA,UAIzBpI,EAAiBuB,KAAI,SAACmK,GAAD,OACpB,eAAC,IAAMzJ,SAAP,WACE,cAAC,EAAD,CAEE9E,GAAIuO,EAAgBvO,GACpBgI,MAAOuG,EAAgB5O,YACvB2I,MAAOiG,EAAgB3J,WACvBgE,cAAe2F,EAAgBjK,YAAYC,QAAQjE,KACnDuI,aAAc0F,EAAgBjK,YAAYC,QAAQC,OAClDsE,WAAYyF,EAAgBjK,YAAYC,QAAQG,KAChDqE,cACEwF,EAAgBjK,YAAYC,QAAQI,aAEtC6J,cAAeD,EAAgBC,cAC/BC,aAAcF,EAAgBE,aAC9BC,WAAYH,EAAgBG,WAC5BC,cAAeJ,EAAgBI,cAC/BC,iBAAkBL,EAAgBK,iBAClCrF,WAAYgF,EAAgBM,eAC5BlL,OAAQ4K,EAAgB5K,OACxBkD,UAAW0H,EAAgB1H,UAC3B0B,gBAAiBgG,EAAgBhG,gBACjCiB,oBAAqB+E,EAAgB/E,oBACrCzG,cAAeA,EACfwE,gBAAiBA,GArBZgH,EAAgBvO,IAuBvB,gCAIN,cAAC8O,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,KAAMlB,EACNmB,iBAAkB,IAClBpN,QAASoK,GACThN,UAAU,OALZ,SAOsB,GAAnB+O,GACC,cAAC,EAAD,CACEnM,QAASoK,GACTjD,SAAS,UACTC,GAAI,CAAE7J,MAAO,QAHf,SAKG6O,KAGH,cAAC,EAAD,CACEpM,QAASoK,GACTjD,SAAS,QACTC,GAAI,CAAE7J,MAAO,QAHf,SAKG6O,aC3IFiB,MArIf,SAAiBlQ,GAEf,MAAsCR,oBAAS,GAA/C,mBAAOgJ,EAAP,KAAoBC,EAApB,KAEA,SAASC,IACPD,GAAgBD,GAGlB,IAAMlH,EAAgBkF,IAuBtB,OACE,qCACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,UAAexG,EAAM8I,UAEvB,cAAC,IAAD,UACE,cAAC,IAAD,CACE/H,SAAO,EACPoP,UAAQ,EACRlQ,UAAU,YACVwK,MAAM,SACNtB,QAAST,EALX,SAOE,cAAC,IAAD,CAASO,KAAG,EAACC,KAAK,YAAYF,KAAK,cAKzC,cAAC,IAAD,UACE,mDAAmBhJ,EAAMoJ,WAE3B,0BAEF,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,WACGpJ,EAAMoQ,cACP,uBACCpQ,EAAMqQ,YAHT,IAGsB,uBACnBrQ,EAAMsQ,oBAGX,cAAC,IAAD,UACE,eAAC,IAAD,2BACMtQ,EAAMuQ,MACV,uBAFF,UAEWvQ,EAAMwQ,MACf,uBAHF,aAIaxQ,EAAMyQ,aAIvB,uBACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAQ3G,GAAG,IAAIC,GAAG,MAClB,cAAC,IAAD,CAAQD,GAAG,IAAIC,GAAG,IAAlB,SACE,cAAC,IAAD,CACE7J,MAAO,CAAEQ,QAAS,QAASC,OAAQ,UACnCC,GAAI,aAAeZ,EAAM0Q,YAAY7P,WAErCsJ,OAAQ,CAAErB,MAAO,SAJnB,SAME,cAAC,IAAD,CAAQ/H,SAAO,EAACd,UAAU,YAA1B,mCAHKD,EAAM0Q,0BAavB,cAAC,IAAD,CAAUpN,KAAMkF,EAAa+B,QAAS9B,EAAgB+B,SAAS,KAA/D,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,uCACA,cAAC,IAAD,CACEvK,UAAU,YACVwK,MAAM,OACNtB,QAAST,OAGb,eAAC,IAAD,4CACgC,kCAAK1I,EAAM8I,MAAX,OADhC,iEAEkD,uBAFlD,IAEyD,uBAFzD,kIAI8D,uBAAO,IACnE,uBALF,4GAUA,eAAC,IAAD,WACE,cAAC,IAAD,CAAQ2B,MAAM,SAAStB,QAAST,EAAhC,6BAGA,cAAC,IAAD,CAAQ3H,SAAO,EAAC0J,MAAM,SAAStB,QA/G3C,WACE7H,EACGwB,MAAM,eAAiB9C,EAAM0Q,YAAc,IAAK,CAAEC,aAAa,IAC/D3N,MAAK,SAACC,GACLjD,EAAM8L,oBAAmB,GACzB9L,EAAM+L,mBAAmB,2BACzB/L,EAAM4Q,WAAW5Q,EAAM4L,QACvBlD,IACA1I,EAAMgM,wBAEP9I,OAAM,SAACC,GACNC,QAAQC,IAAIF,EAAIqB,UAChBxE,EAAM8L,oBAAmB,GACzB9L,EAAM+L,mBAAmB,uCACzB/L,EAAM4Q,WAAW5Q,EAAM4L,QACvBlD,IACA1I,EAAMgM,yBA+FA,qCCiBC6E,MA7Jf,SAAqB7Q,GACnB,MAA6BR,mBAAS,IAAtC,mBAAO8E,EAAP,KAAgBwM,EAAhB,KACA,EAAkCtR,mBAAS,IAA3C,mBAAOuR,EAAP,KAAkBC,EAAlB,KACA,EAAgDxR,mBAAS,IAAzD,mBACMiM,GADN,UACqBjF,KACrB,EAAwChH,oBAAS,GAAjD,mBAAOyR,EAAP,KACA,GADA,KACgCzR,oBAAS,IAAzC,mBAAO0R,EAAP,KAAiBC,EAAjB,KACA,EAAwD3R,oBAAS,GAAjE,mBAAO4R,EAAP,KAA6BC,EAA7B,KACA,EAAwC7R,qBAAxC,mBAAO8R,EAAP,KAAqBC,EAArB,KACQ9R,EAASI,IAATJ,KATkB,SAoBX+R,IApBW,2EAoB1B,sBAAArN,EAAA,yDAG+B,GAFjB9D,SAASoR,eAAe,eAE1BC,gBAHZ,wDASEV,IACAG,GAAY,GACZE,GAAwB,GAX1B,SAaQ5F,EACHrH,IADG,oBACcE,EADd,MAEHtB,MAAK,SAACC,GACL+N,EAAa/N,EAAIoB,OAGfiN,EAAaK,MACX,SAACL,GAAD,OAAkBA,EAAajM,QAAQf,SAAWrB,EAAIoB,KAAKC,YAE7D7E,EAAK6E,SAAWrB,EAAIoB,KAAKC,UAEzB+M,GAAwB,MAG3BnO,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZgO,GAAY,MA7BlB,4CApB0B,sBAmF1B,OAtEA5O,qBAAU,WACRkJ,EAAarH,IAAI,gBAAgBpB,MAAK,SAACC,GACrCsO,EAAgBtO,EAAIoB,WAErB,CAAC4M,IAmEF,mCACE,eAAC,IAAD,WACE,uBAAMnQ,GAAG,cAAc6J,SAAU,SAACC,GAAD,OAAOA,EAAEC,kBAA1C,UACE,cAAC,IAAD,CACE5K,UAAU,OACVmB,KAAK,UACL0J,MAAM,WACNvK,KAAK,SACLqR,UAAQ,EACR7G,SAAU,SAACH,GAAD,OAAOkG,EAAUlG,EAAEI,OAAOpL,UAE1B,IAAX0E,EACC,eAAC,IAAD,CACEuI,OAAK,EACL5M,UAAU,OACVM,KAAK,SACLkK,MAAM,UACNmC,UAAQ,EACRzD,QAAS,SAACyB,GAAD,OAAO4G,KANlB,UAQE,cAAC,IAAD,CAASxI,KAAK,KAAK/I,UAAU,OAAOgJ,KAAG,EAACC,KAAK,WAR/C,wBAYA,eAAC,IAAD,CACE2D,OAAK,EACL5M,UAAU,OACVwK,MAAM,UACNlK,KAAK,SACL4I,QAAS,SAACyB,GAAD,OAAO4G,KALlB,UAOE,cAAC,IAAD,CAASxI,KAAK,KAAK/I,UAAU,OAAOgJ,KAAG,EAACC,KAAK,WAP/C,2BAYHgI,GAAY,qFACOW,IAAV,OAATd,QAAS,IAATA,OAAA,EAAAA,EAAW3P,OACV,8BACG,IADH,YAEW,uBACT,qCACG2P,QADH,IACGA,OADH,EACGA,EAAW3P,KADd,IACoB,uBADpB,OAEG2P,QAFH,IAEGA,OAFH,EAEGA,EAAWzL,OAFd,IAEsB,uBAFtB,OAGGyL,QAHH,IAGGA,OAHH,EAGGA,EAAWxL,UAHd,WAG0BwL,QAH1B,IAG0BA,OAH1B,EAG0BA,EAAWvL,KAHrC,IAG2C,uBAH3C,OAIGuL,QAJH,IAIGA,OAJH,EAIGA,EAAWtL,mBAIjB2L,GACC,8BACG,IADH,2GAOkBS,IAAV,OAATd,QAAS,IAATA,OAAA,EAAAA,EAAW3P,OAA6C,GAAxBgQ,EAC/B,cAAC,IAAD,CACEvE,OAAK,EACL5M,UAAU,OACVM,KAAK,SACL4I,QAAS,SAACyB,GAAD,OA7FnB,SAAsBA,GACpBA,EAAEC,iBAEFzH,QAAQC,IAAI,kBAAoB0N,EAAUzM,SAC1CmH,EACGvF,KAAK,gBAAiB,CAAE4L,cAAef,EAAUzM,UACjDtB,KAGChD,EAAM+R,eAAe/R,EAAMgS,YAE3BhS,EAAM8L,oBAAmB,GACzB9L,EAAM+L,mBAAmB,4BACzB/L,EAAMgM,qBAENhM,EAAM6L,cAEP3I,OAAM,SAACqB,GACNnB,QAAQmB,MAAM,sBAAuBA,GAErCvE,EAAM8L,oBAAmB,GACzB9L,EAAM+L,mBAAmB,8CACzB/L,EAAMgM,qBAENhM,EAAM6L,gBAqEcoG,CAAarH,IAC7BH,MAAM,UALR,6BASE,WC9IG,SAASyH,EAAclS,GAEpC,MAAoCR,oBAAS,GAA7C,mBAAOuN,EAAP,KAAmBC,EAAnB,KAEMnB,EAAa,kBAAMmB,GAAeD,IAExC,OACE,qCACE,eAAC,IAAD,CAAQ9M,UAAU,YAAYwK,MAAM,UAAUtB,QAAS0C,EAAvD,UACE,cAAC,IAAD,CAAS5C,KAAG,EAACD,KAAK,KAAKE,KAAK,OAAOjJ,UAAU,SAD/C,2BAIA,cAAC,IAAD,CAAUqD,KAAMyJ,EAAYxC,QAASyC,EAAexC,SAAS,KAA7D,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,oCACA,cAAC,IAAD,CACEvK,UAAU,YACVwK,MAAM,OACNtB,QAAS0C,OAGb,cAAC,IAAD,UACE,cAAC,EAAD,CACEyF,aAActR,EAAMsR,aACpBtF,mBAAoBhM,EAAMgM,mBAC1BiB,oBAAqBjN,EAAMiN,oBAC3BnB,mBAAoB9L,EAAM8L,mBAC1BC,mBAAoB/L,EAAM+L,mBAC1BF,WAAYA,EACZmG,WAAYhS,EAAMgS,WAClBD,cAAe/R,EAAM+R,kBAGzB,cAAC,IAAD,UACE,cAAC,IAAD,CAAQhR,SAAO,EAAC0J,MAAM,SAAStB,QAAS0C,EAAxC,mC,aCrCC,SAASsG,EAAgBnS,GACtC,IAAMsB,EAAgBkF,IACd/G,EAASI,IAATJ,KAER,EAAwCD,qBAAxC,mBAAOuE,EAAP,KAAqBC,EAArB,KAEA,EAA8CxE,qBAA9C,mBAAO4S,EAAP,KAAwBC,EAAxB,KACA,EAAkC7S,oBAAS,GAA3C,mBAAOyE,EAAP,KAAkBC,EAAlB,KA+CA,OA7CA3B,qBAAU,WACR8P,EAAmB5S,EAAK6E,WACvB,CAAC7E,IAEJ8C,oBAAS,sBAAC,sBAAA4B,EAAA,sEACF7C,EACH8C,IADG,gCAC0BgO,EAD1B,qBAEHpP,MAAK,SAACC,GACLe,EAAgBf,EAAIoB,MACpBH,GAAa,MAEdhB,OAAM,SAAUqB,GACXA,EAAMC,UAMCD,EAAMG,WAdb,2CAwBP,CAAC0N,EAAiBpS,EAAM4L,SAkBzB,mCACG3H,EACC,qBAAKhE,UAAU,cAAf,SACE,cAAC,IAAD,UACE,sBAAMA,UAAU,kBAAhB,2BAKJ,cAACqS,EAAA,EAAD,CAAWC,iBAA0C,IAAxBxO,EAAakB,OAAe,IAAM,IAA/D,SAGE,eAACqN,EAAA,EAAUE,KAAX,CAAgBC,SAAS,IAAzB,UACE,eAACH,EAAA,EAAU/O,OAAX,2CAC+B,4BAAIQ,EAAakB,SADhD,OAGA,cAACqN,EAAA,EAAU7O,KAAX,UAC0B,GAAvBM,EAAakB,OACZ,gCAEA,eAAC,IAAD,CAAUyN,YAAU,EAACzS,UAAU,eAA/B,UACE,cAAC,IAAD,UACE,+BACE,oBAAI0S,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,yBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,0BACA,oBAAIA,MAAM,aAGd,cAAC,IAAD,UACG5O,EAAamB,KAAI,SAACnB,EAAc6O,GAAf,OAChB,+BACE,oBAAID,MAAM,MAAV,SACE,qBAAK1S,UAAU,GAAf,SAAmB2S,EAAQ,MAE7B,6BACE,qBAAK3S,UAAU,GAAf,SAAmB8D,EAAasB,QAAQjE,SAE1C,6BACE,qBAAKnB,UAAU,GAAf,SAAmB8D,EAAasB,QAAQf,YAE1C,6BACE,qBAAKrE,UAAU,GAAf,SAAmB8D,EAAa2B,eAElC,6BACE,sBAAKzF,UAAU,YAAf,UACE,cAAC,IAAD,CACEwK,MAAM,UACN1J,SAAO,EACP8R,SAAO,EACP1J,QAAS,kBAjEf2J,EAiEkC/O,EAAajD,GAhEnEQ,EACGwB,MADH,sBACwBgQ,EADxB,KAC2C,CAAEC,WAAW,IACrD/P,MAAK,SAACC,GACLjD,EAAM4Q,eAEV5Q,EAAM8L,oBAAmB,GACzB9L,EAAM+L,mBAAmB,8BACzB/L,EAAMgM,0BACNhM,EAAM+R,eAAe/R,EAAMgS,YAT7B,IAAsBc,GA6DI,SAME,cAAC,IAAD,CAAS9J,KAAK,KAAKC,KAAG,EAACC,KAAK,YAE9B,cAAC,IAAD,CACEuB,MAAM,cACNxK,UAAU,GACVc,SAAO,EACP8R,SAAO,EACP1J,QAAS,WAAmBpF,EAAajD,IAL3C,SAOE,cAAC,IAAD,CAASkI,KAAK,KAAKC,KAAG,EAACC,KAAK,mBA9B3B0J,oBCtF/B,IAAM1F,EAAQC,IAAMC,YAAW,SAAepN,EAAOqN,GACnD,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAGD,IAAKA,EAAKE,QAAQ,UAAavN,OAoOjDgT,MAjOf,WACE,MAAgCxT,qBAAhC,mBAAO6L,EAAP,KAAiBC,EAAjB,KACA,EAAkC9L,oBAAS,GAA3C,mBAAOyE,EAAP,KAAkBC,EAAlB,KAGA,EAAoC1E,oBAAS,GAA7C,mBAAOwS,EAAP,KAAmBD,EAAnB,KACA,EAA4BvS,oBAAS,GAArC,mBAAOoM,EAAP,KAAegF,EAAf,KAEArO,oBAAS,sBAAC,sBAAA4B,EAAA,4DACK,iDADL,SAEF7C,EAAc8C,IADP,kDACiBpB,MAAK,SAACC,GAElCqI,EAAYrI,EAAIoB,MAChBH,GAAa,MALP,2CAOP,CAAC8N,EAAYpG,IAIhB,MAAwCpM,oBAAS,GAAjD,mBAAOsP,EAAP,KAAqBC,EAArB,KAEA,EAA8CvP,oBAAS,GAAvD,mBAAOwP,EAAP,KAAwBlD,EAAxB,KAEA,EAA8CtM,mBAAS,IAAvD,mBAAOyP,EAAP,KAAwBlD,EAAxB,KAKMC,EAAqB,WACzB+C,GAAgB,IAIZ9B,EAAsB,SAACX,EAAO4C,GACnB,cAAXA,GAIJH,GAAgB,IAKlB,SAASkE,EAAa3G,GACO,mBAAvBA,EAAMtB,OAAOpL,MAIU,oBAAvB0M,EAAMtB,OAAOpL,MAIU,aAAvB0M,EAAMtB,OAAOpL,MAIU,cAAvB0M,EAAMtB,OAAOpL,OA+BnB,WACE,IAAMqO,EAAS,GACZC,OAAO7C,GACP8C,MAAK,SAAChK,EAAGiK,GAAJ,OAAWjK,EAAEkF,gBAAkB+E,EAAE/E,iBAAmB,EAAI,KAChEiC,EAAY2C,GAlCVI,GAuBJ,WACE,IAAMJ,EAAS,GACZC,OAAO7C,GACP8C,MAAK,SAAChK,EAAGiK,GAAJ,OAAWjK,EAAEkF,gBAAkB+E,EAAE/E,gBAAkB,GAAK,KAChEiC,EAAY2C,GA/BVK,GAkBJ,WACE,IAAML,EAAS,GACZC,OAAO7C,GACP8C,MAAK,SAAChK,EAAGiK,GAAJ,OACJjK,EAAEkB,QAAQjE,KAAKqN,cAAgBL,EAAE/I,QAAQjE,KAAKqN,cAAgB,GAAK,KAEvEnD,EAAY2C,GA5BVS,GAaJ,WACE,IAAMT,EAAS,GACZC,OAAO7C,GACP8C,MAAK,SAAChK,EAAGiK,GAAJ,OACJjK,EAAEkB,QAAQjE,KAAKqN,cAAgBL,EAAE/I,QAAQjE,KAAKqN,eAAiB,EAAI,KAEvEnD,EAAY2C,GAvBVU,GAiDJ,OACE,mCACG1K,EACC,qBAAKhE,UAAU,iBAAf,SACE,cAAC,IAAD,UACE,sBAAMA,UAAU,kBAAhB,2BAIJ,gCACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,wDAGJ,uBACA,cAACkS,EAAD,CACErG,mBAAoBA,EACpBC,mBAAoBA,EACpBC,mBAAoBA,EACpBiB,oBAAqBA,EACrB8E,cAAeA,EACfC,WAAYA,EACZpG,OAAQA,EACRgF,UAAWA,IAGb,qBAAK3Q,UAAU,qDAAf,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,eAACkP,EAAA,EAAKC,OAAN,CACElP,MAAO,CACLE,MAAO,KAETH,UAAU,OACV8K,SAAU,SAACuB,GAAD,OAAW2G,EAAa3G,IALpC,UAOE,wBAAQ1M,MAAO,YAAf,uDAGA,wBAAQA,MAAO,WAAf,wDAGA,wBAAQA,MAAO,kBAAf,kDAGA,wBAAQA,MAAO,iBAAf,sDAGa,OAEjB,cAAC,IAAD,UACE,qBAAKK,UAAU,OAAf,SACE,8BAAIoL,EAASpG,OAAb,qBAKN,cAACiN,EAAD,CACEZ,aAAcjG,EACdW,mBAAoBA,EACpBiB,oBAAqBA,EACrBnB,mBAAoBA,EACpBC,mBAAoBA,EACpBiG,WAAYA,EACZD,cAAeA,SAKpB1G,EAASnG,KAAI,SAACG,GAAD,OACZ,eAAC,IAAMO,SAAP,WACE,cAAC,EAAD,CAEE9E,GAAIuE,EAAQA,QAAQf,QACpBoM,YAAarL,EAAQvE,GACrBgI,MAAOzD,EAAQA,QAAQjE,KACvBgI,MAAO/D,EAAQK,WACfwN,YAAY,wBACZ9C,cAAe/K,EAAQA,QAAQC,OAC/B+K,YAAahL,EAAQA,QAAQG,KAC7B8K,eAAgBjL,EAAQA,QAAQI,aAChC8K,MAAOlL,EAAQA,QAAQkL,MACvBC,MAAOnL,EAAQA,QAAQmL,MACvBC,KAAMpL,EAAQA,QAAQf,QAEtBwH,mBAAoBA,EACpBC,mBAAoBA,EACpBC,mBAAoBA,EACpBiB,oBAAqBA,EAErBrB,OAAQA,EACRgF,UAAWA,GAnBNvL,EAAQA,QAAQf,SAqBvB,gCAIN,cAACsL,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,KAAMlB,EACNmB,iBAAkB,IAClBpN,QAASoK,EACThN,UAAU,OALZ,SAOsB,GAAnB+O,EACC,cAAC,EAAD,CACEnM,QAASoK,EACTjD,SAAS,UACTC,GAAI,CAAE7J,MAAO,QAHf,SAKG6O,IAGH,cAAC,EAAD,CACEpM,QAASoK,EACTjD,SAAS,QACTC,GAAI,CAAE7J,MAAO,QAHf,SAKG6O,YC7DFkE,ICzKXC,EAEAC,EAEAC,EDqKWH,EAjKf,WAAqB,IAAD,gBAClB,EAAsC3T,qBAAtC,mBAAO+T,EAAP,KAAoBC,EAApB,KACA,EAAsChU,qBAAtC,mBAAOiU,EAAP,KAAoBC,EAApB,KACA,EAAwClU,qBAAxC,mBAAOmU,EAAP,KAAqBC,EAArB,KAEMtS,EAAgBkF,IAGd/G,EAASI,IAATJ,KAER,EAA0CD,mBAAS,MAAnD,mBAAOqU,EAAP,KAAsBC,EAAtB,KAwCA,OACE,8BACE,eAAC,IAAD,WACE,kDACA,uBACA,eAAC,IAAD,CAAQ7T,UAAU,OAAlB,UACE,eAAC,IAAD,CAAQqJ,GAAG,IAAX,UACE,oBAAIrJ,UAAU,OAAd,kCACA,6CACA,8BACE,wDACA,uBAFF,UAGGR,EAAKsU,gBAHR,aAGG,EAAe7S,SAASC,QAAQC,QAEnC,8BACE,2CACA,uBAFF,UAGG3B,EAAKsU,gBAHR,aAGG,EAAe7S,SAASC,QAAQmD,WAEnC,8BACE,uDACA,uBAFF,UAGG7E,EAAKsU,gBAHR,aAGG,EAAe7S,SAASC,QAAQmE,UAEnC,8BACE,sCACA,uBAFF,UAGG7F,EAAKsU,gBAHR,aAGG,EAAe7S,SAASC,QAAQoE,aAEnC,8BACE,wCACA,uBAFF,UAGG9F,EAAKsU,gBAHR,aAGG,EAAe7S,SAASC,QAAQqE,QAEnC,8BACE,uCACA,uBAFF,UAGG/F,EAAKsU,gBAHR,aAGG,EAAe7S,SAASC,QAAQsE,gBAEnC,8BACE,iDACA,uBAFF,UAGGhG,EAAKsU,gBAHR,aAGG,EAAe7S,SAASC,QAAQoP,SAEnC,8BACE,6CACA,uBAFF,UAGG9Q,EAAKsU,gBAHR,aAGG,EAAe7S,SAASC,QAAQqP,SAEnC,oBAAIvQ,UAAU,SACd,2DACA,8BACE,+CACA,uBACCR,EAAK4B,eAGV,eAAC,IAAD,CAAQiI,GAAG,IAAX,UACE,oBAAIrJ,UAAU,OAAd,oCACA,uBAAM0K,SAjGhB,SAA8B2B,GAAQ,IAAD,EACnCA,EAAMzB,iBAGa,IAAf0I,GAAoC,MAAfA,EAIN,IAAfE,GAAoC,MAAfA,EAIN,IAAfA,GAAoC,MAAfA,EAIrBA,IAAgBE,EAOpBrS,EACGwB,MAAM,+BAAsBrD,EAAKsU,gBAA3B,aAAsB,EAAejT,IAAK,IAAK,CACpDkT,SAAUP,EACVQ,UAAWN,EACXJ,YAAaA,IAEdvQ,MAAK,SAACC,GACL6Q,EAAiB,2CAGlB5Q,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAjBd2Q,EAAiB,gDAJjBA,EAAiB,+BAJjBA,EAAiB,4BAJjBA,EAAiB,iCA4F2B5T,MAAO,CAAEE,MAAO,SAAtD,UACE,cAAC,IAAD,CACER,MAAO2T,EACPxI,SAAU,SAACH,GAAD,OAAO4I,EAAe5I,EAAEI,OAAOpL,QACzCsU,aAAa,eACbjU,UAAU,OACVM,KAAK,WACLO,GAAG,cACHM,KAAK,cACL0J,MAAM,uBAER,cAAC,IAAD,CACElL,MAAO6T,EACP1I,SAAU,SAACH,GAAD,OAAO8I,EAAe9I,EAAEI,OAAOpL,QACzCsU,aAAa,eACbjU,UAAU,OACVM,KAAK,WACLO,GAAG,cACHM,KAAK,cACL0J,MAAM,mBAER,cAAC,IAAD,CACElL,MAAO+T,EACP5I,SAAU,SAACH,GAAD,OAAOgJ,EAAgBhJ,EAAEI,OAAOpL,QAC1CsU,aAAa,eACbjU,UAAU,OACVM,KAAK,WACLO,GAAG,eACHM,KAAK,eACL0J,MAAM,+BAGR,cAAC,IAAD,CAAQ+B,OAAK,EAACtM,KAAK,SAASN,UAAU,OAAtC,oCAGkB,wCAAjB4T,EACC,qBAAK5T,UAAU,sBAAsBkU,KAAK,QAA1C,SACGN,IAEiB,OAAlBA,EACF,qBAAK5T,UAAU,qBAAqBkU,KAAK,QAAzC,SACGN,IAED,oB,mCEhKZO,I,sKACJ,WACE,OACE,sBAAKC,MAAM,cAAX,UACE,qCACA,uD,GALelH,IAAMmH,YAWdF,M,kDDJFG,GAAI,uCAAG,gCAAApQ,EAAA,4DAIQ,qBAFpBqQ,EAAWC,OAAOC,YAGpBF,EACC9P,QAAQ,CAAEiQ,OAAQ,wBAClB3R,MAAK,SAAC4R,GACHxB,EAAkBwB,EAAS,GAE7BxR,QAAQC,IAAR,8BAAmC+P,OAEpClQ,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAGdsR,OAAOC,SAASG,GAAG,mBAAmB,SAAUD,GAC9CxB,EAAkBwB,EAAS,GAC3BxR,QAAQC,IAAR,sCAA2C+P,QAIzC0B,EAAO,IAAIC,KAAKP,GAtBN,SAuBQM,EAAKE,IAAIC,IAAIC,QAvBrB,OAuBVC,EAvBU,OA0BhB9B,EAAqB,IAAIyB,EAAKE,IAAII,SAC9BC,GAAWC,IACXD,GAAWE,SAASJ,GAAWK,SACnClC,GAAO,EA7BS,2CAAH,qDAiCV,SAAemC,GAAtB,6C,8CAAO,WAA8BC,EAAeC,EAAYC,EAAWC,EAAQC,EAAkBC,GAA9F,SAAA5R,EAAA,yDACEmP,EADF,gCAEOiB,KAFP,uBAIGlB,EAAmB2C,QAAQP,eAAeC,EAAeC,EAAYC,EAAWC,EAAQC,EAAkBC,GAAeE,KAAK,CAACC,KAAM9C,IAJxI,uBAKUC,EAAmB2C,QAAQP,eAAeC,EAAeC,EAAYC,EAAWC,EAAQC,EAAkBC,GAAeI,KAAK,CAACD,KAAM9C,IAL/I,oF,sBAQA,SAAegD,GAAtB,qC,8CAAO,WAAkCC,EAAiBC,GAAnD,SAAAnS,EAAA,yDACAmP,EADA,gCAEKiB,KAFL,uBAIClB,EAAmB2C,QAAQO,eAAeF,EAAiBC,GAAOL,KAAK,CAACC,KAAM9C,IAJ/E,uBAKQC,EAAmB2C,QAAQO,eAAeF,EAAiBC,GAAOH,KAAK,CAACD,KAAM9C,IALtF,oF,sBAUC,SAAeoD,GAAtB,yC,8CAAO,WAAmCC,EAAOC,EAAaC,EAAWC,GAAlE,SAAAzS,EAAA,yDACEmP,EADF,gCAEOiB,KAFP,uBAIGlB,EAAmB2C,QAAQQ,oBAAoBC,EAAOC,EAAaC,EAAWC,GAAYX,KAAK,CAACC,KAAM9C,IAJzG,uBAKUC,EAAmB2C,QAAQQ,oBAAoBC,EAAOC,EAAaC,EAAWC,GAAYT,KAAK,CAACD,KAAM9C,IALhH,oF,sBASA,SAAeyD,GAAtB,mC,8CAAO,WAAgCC,GAAhC,SAAA3S,EAAA,yDACDmP,EADC,gCAEIiB,KAFJ,uBAIAlB,EAAmB2C,QAAQa,iBAAiBC,GAAkBb,KAAK,CAACC,KAAM9C,IAJ1E,uBAKOC,EAAmB2C,QAAQa,iBAAiBC,GAAkBX,KAAK,CAACD,KAAM9C,IALjF,oF,sBASD,SAAe2D,GAAtB,mC,8CAAO,WAAiCV,GAAjC,SAAAlS,EAAA,yDACAmP,EADA,gCAEKiB,KAFL,uBAIClB,EAAmB2C,QAAQe,kBAAkBV,GAAiBJ,KAAK,CAACC,KAAM9C,IAJ3E,uBAKQC,EAAmB2C,QAAQe,kBAAkBV,GAAiBF,KAAK,CAACD,KAAM9C,IALlF,oF,4DE5DH4D,IADSC,EAAQ,IACF,IAwUJC,OAvUf,SAAqBlX,GACnB,IAAMsB,EAAgBkF,IAEtB,EAA0ChH,mBAAS,CACjDe,KAAM,WACNE,YAAa,GACb0W,aAAcH,GACdxW,WAAY,GACZ4W,aAAc,GACdC,SAAU,GACV/W,YAAa,GACbgX,YAAa,GACbC,WAAY,GACZC,gBAAiB,KAVnB,mBAAOC,EAAP,KAAsBC,EAAtB,KAaA,EAAkDlY,mBAAS,CACzD,CACEmY,QAAS,GACTC,OAAQ,GACRC,KAAM,GACNC,MAAO,MALX,mBAAOC,EAAP,KAA0BC,EAA1B,KAQQC,EAAkBpK,cAAlBoK,cAGR,EAAwC9K,IAAM3N,UAAS,GAAvD,mBAAO0Y,EAAP,KAAqBC,EAArB,KACMC,EAAsB,WAC1BD,GAAgB,IAEZE,EAAuB,WAC3BF,GAAiBD,IAInB,SAASI,EAAiB1F,EAAOtG,GAC/B,IAAMiM,EAAM,aAAOR,GACnBQ,EAAO3F,GAAOtG,EAAMtB,OAAO5J,MAAQkL,EAAMtB,OAAOpL,MAChDoY,EAAqBO,GAErBd,EAAcH,YAAcS,EAE5BL,EAAiB,2BAAKD,GAAN,IAAqBnX,YAAa2X,KA3C1B,4CA+C1B,WAA4BrN,GAA5B,iBAAAzG,EAAA,yDAG+B,GADjB9D,SAASoR,eAAe,eAC1BC,gBAHZ,uBAIItO,QAAQC,IAAI,+BAJhB,0BAQEgV,IACIG,EAASvB,EAAQ,IAIrBxB,GAHYgD,IAIJ5X,WADM,UAEZb,EAAMqP,uBAFM,aAEZ,EAAuBjK,YAAYC,QAAQqT,UAC3CjB,EAAcJ,SACdI,EAAcjX,WACdgY,EAAOG,WAAW,UAAUC,OAAOb,GAAmBc,OAAO,OAC7DpB,EAAcD,iBAEbxU,MAAK,SAAC8V,GACL1V,QAAQC,IAAI,4BAA8ByV,GAC1C9B,GAAe8B,EAEfxX,EACG4E,KAAK,YAAa,CACjB6S,cAAeD,EAAK,EACpBzB,SAAUI,EAAcJ,SACxB5W,YAAagX,EAAchX,YAC3B6W,YAAaG,EAAcH,YAC3BF,aAAcK,EAAcL,aAC5B5W,WAAYiX,EAAcjX,WAC1B+W,WAAYE,EAAcF,WAC1BjX,YAAamX,EAAcnX,YAC3BkX,gBAAiBC,EAAcD,gBAC/BjX,KAAMkX,EAAclX,OAErByC,MAAK,SAACC,GACLG,QAAQC,IAAI,qCACZrD,EAAMgZ,gBAAgBhZ,EAAMiZ,aAC5BjZ,EAAM8L,oBAAmB,GACzB9L,EAAM+L,mBAAmB,qCACzBqM,IACApY,EAAMgM,qBACNhM,EAAMgZ,gBAAgBhZ,EAAMiZ,aAC5BjZ,EAAMkZ,4BAEPhW,OAAM,SAACqB,GACNnB,QAAQmB,MAAM,sBAAuBA,GACrCvE,EAAM8L,oBAAmB,GACzB9L,EAAM+L,mBAAmB,uCACzBqM,IACApY,EAAMgM,qBACNhM,EAAMkZ,+BAGXhW,OAAM,SAACC,GACNC,QAAQC,IAAI,iCAAwCF,GACpDnD,EAAM8L,oBAAmB,GACzB9L,EAAM+L,mBAAmB,6CACzBqM,IACApY,EAAMgM,qBACNhM,EAAMkZ,4BA/DZ,4CA/C0B,sBA+I1B,SAAST,IAIP,IAHA,IAAMU,EAAQpB,EACVqB,EAAQ,EAEHrR,EAAI,EAAGA,EAAIoR,EAAMlU,OAAQ8C,IAChCqR,GAASD,EAAMpR,GAAG6P,OAASuB,EAAMpR,GAAG+P,MAItC,OAFAJ,EAAiB,2BAAKyB,GAAN,IAAa5B,WAAY6B,KAElCA,EAGT,OACE,qCACE,cAAC,IAAD,UACE,uBAAMtY,GAAG,cAAc6J,SAAU,SAACC,GAAD,OAAOA,EAAEC,kBAA1C,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CACE5K,UAAU,OACVmB,KAAK,aACLN,GAAG,aACHgK,MAAM,iBACNvK,KAAK,OACLqR,UAAQ,EACR7G,SAAU,SAACH,GAAD,OACR8M,EAAiB,2BACZD,GADW,IAEdjX,WAAYoK,EAAEI,OAAOpL,cAK7B,cAAC,IAAD,UACE,cAAC,IAAD,CACEK,UAAU,OACVmB,KAAK,WACLxB,MAAO6X,EAAcJ,SACrBvW,GAAG,WACHgK,MAAM,aACNvK,KAAK,OACLqR,UAAQ,EACR7G,SAAU,SAACH,GAAD,OACR8M,EAAiB,2BACZD,GADW,IAEdJ,SAAUzM,EAAEI,OAAOpL,cAK3B,cAAC,IAAD,UACE,cAAC,IAAD,CACEK,UAAU,OACVmB,KAAK,kBACLN,GAAG,kBACHgK,MAAM,eACNvK,KAAK,SACLqR,UAAQ,EACR7G,SAAU,SAACH,GAAD,OACR8M,EAAiB,2BACZD,GADW,IAEdD,gBAAiB5M,EAAEI,OAAOpL,iBAMpC,cAAC,IAAD,CACEyZ,aAAa,OACbC,UAAQ,EACRlY,KAAK,cACLN,GAAG,cACHyY,KAAM,EACNzO,MAAM,eACN8G,UAAQ,EACR7G,SAAU,SAACH,GAAD,OACR8M,EAAiB,2BACZD,GADW,IAEdhX,YAAamK,EAAEI,OAAOpL,YAI5B,uBAECmY,EAAkB7S,KAAI,SAACsU,EAAY5G,GAAb,OACrB,gCACE,kDAAqBA,EAAQ,KAC7B,cAAC,IAAD,CACE3S,UAAU,OACVmB,KAAK,UACL0J,MAAM,cACNvK,KAAK,OACLX,MAAO4Z,EAAW7B,QAClB/F,UAAQ,EACR7G,SAAU,SAACuB,GAAD,OAAWgM,EAAiB1F,EAAOtG,MAE/C,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CACErM,UAAU,OACVmB,KAAK,SACL0J,MAAM,SACNvK,KAAK,SACLX,MAAO4Z,EAAW5B,OAClBhG,UAAQ,EACR7G,SAAU,SAACuB,GAAD,OAAWgM,EAAiB1F,EAAOtG,QAGjD,cAAC,IAAD,UACE,cAAC,IAAD,CACErM,UAAU,OACVmB,KAAK,OACL0J,MAAM,UACNvK,KAAK,OACLX,MAAO4Z,EAAW3B,KAClBjG,UAAQ,EACR7G,SAAU,SAACuB,GAAD,OAAWgM,EAAiB1F,EAAOtG,QAGjD,cAAC,IAAD,UACE,cAAC,IAAD,CACErM,UAAU,OACVmB,KAAK,QACL0J,MAAM,mBACNvK,KAAK,SACLX,MAAO4Z,EAAW1B,MAClBlG,UAAQ,EACR7G,SAAU,SAACuB,GAAD,OAAWgM,EAAiB1F,EAAOtG,QAGjD,cAAC,IAAD,UACE,eAAC,IAAD,CAAUrM,UAAU,sBAAsBwK,MAAM,UAAhD,sBACY+O,EAAW5B,OAAS4B,EAAW1B,MAAO,IAC/CL,EAAcgC,0BAhDb7G,MAsDZ,uBAEA,eAAC,IAAD,CACE3S,UAAU,YACVwK,MAAM,UACNtB,QA5KV,SAAyBmD,GACvBA,EAAMzB,iBACNmN,EAAqB,GAAD,oBACfD,GADe,CAElB,CACEJ,QAAS,GACTC,OAAQ,GACRC,KAAM,GACNC,MAAO,QAiKL,UAKE,cAAC,IAAD,CAAS9O,KAAK,KAAK/I,UAAU,OAAOgJ,KAAG,EAACC,KAAK,SAL/C,mCAQC6O,EAAkB9S,OAAS,GAC1B,eAAC,IAAD,CACEhF,UAAU,YACVwK,MAAM,SACNtB,QAvKZ,SAA4BmD,EAAOsG,GACjCtG,EAAMzB,iBACN,IAAM0N,EAAM,aAAOR,GAQnBQ,EAAOmB,MACP1B,EAAqBO,IAyJb,UAKE,cAAC,IAAD,CAASvP,KAAK,KAAK/I,UAAU,OAAOgJ,KAAG,EAACC,KAAK,UAL/C,+BAUF,eAAC,IAAD,CACE3I,KAAK,SACLN,UAAU,YACVwK,MAAM,UACNtB,QAnTgB,4CA+SlB,UAME,cAAC,IAAD,CAASH,KAAK,KAAK/I,UAAU,OAAOgJ,KAAG,EAACC,KAAK,gBAN/C,qBAaJ,cAACyQ,GAAA,EAAD,CACE1P,GAAI,CAAEQ,MAAO,OAAQmP,OAAQ,SAACC,GAAD,OAAWA,EAAMD,OAAOE,OAAS,IAC9D9J,KAAMkI,EACN/O,QAASiP,EAHX,SAKE,cAAC2B,GAAA,EAAD,CAAkBtP,MAAM,kB,4DCnU1BuP,GAAQ,CAAC,uBAAwB,qBAAsB,iBA8Y9CC,OA5Yf,SAA4Bja,GAC1B,IAAMsB,EAAgBkF,IAEtB,EAAwB2G,IAAM3N,SAAS,IAAvC,mBAAOe,EAAP,KAAa2Z,EAAb,KACA,EAAsC/M,IAAM3N,SAAS,IAArD,mBAAOiB,EAAP,KAAoBsI,EAApB,KAEA,EAAkCoE,IAAM3N,SAAS,IAAjD,mBACA,GADA,UAC4B2N,IAAM3N,YAAlC,mBAAO2a,EAAP,KAAeC,EAAf,KAEA,EAAgCjN,IAAM3N,SAAS,IAA/C,mBAAO6a,EAAP,KAAiBC,EAAjB,KAEA,EAAoCnN,IAAM3N,SAAS,GAAnD,mBAAO+a,EAAP,KAAmBC,EAAnB,KACA,EAA8BrN,IAAM3N,SAAS,IAAIib,KAAjD,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,EAAwCxN,IAAM3N,WAA9C,mBAAOob,EAAP,KAAqBC,EAArB,KACA,EAA0C1N,IAAM3N,UAAS,GAAzD,mBAAOsb,EAAP,KAAsBC,EAAtB,KACA,EAAkD5N,IAAM3N,UAAS,GAAjE,mBAAOwb,EAAP,KAA0BC,EAA1B,KACQhD,EAAkBpK,cAAlBoK,cACR,GAA8CzY,qBAA9C,qBAAwB0b,IAAxB,aAKMC,IAJWtb,IAATJ,KAIY,IAAI2b,UAGxB,GAAwCjO,IAAM3N,UAAS,GAAvD,qBAAO0Y,GAAP,MAAqBC,GAArB,MACMC,GAAsB,WAC1BD,IAAgB,IAEZE,GAAuB,WAC3BF,IAAiBD,KA/Bc,SAoDlBmD,GApDkB,mFAoDjC,WAA6BC,EAAgBC,GAA7C,mBAAApX,EAAA,sDACMqU,EAASvB,EAAQ,IACfuE,EAAa,IAAIC,WACnBC,EAAW,GACfF,EAAWG,WAAWJ,GACtBC,EAAWI,OAAS,SAAUC,GAC5BH,EAAWlD,EACRG,WAAW,UACXC,OAAOiD,EAAI7Q,OAAO8Q,QAClBjD,OAAO,OAEVzC,GAAmBkF,EAAgBI,GAChC1Y,MAAK,SAAC8V,GAGL,OAFAqC,GAAYY,OAAO,gBAAiBjD,EAAK,GACzCkD,GAAiBb,IACVrC,KAER5V,OAAM,SAACC,GACNC,QAAQC,IAAI,kDAAoDF,GAEhEnD,EAAM8L,oBAAmB,GACzB9L,EAAM+L,mBACJ,8CAGFqM,KAEApY,EAAMgM,qBAENhM,EAAMkZ,6BA7Bd,4CApDiC,+BAuFlB8C,GAvFkB,iFAuFjC,WAAgCb,GAAhC,SAAAhX,EAAA,sEACQ7C,EACH4E,KAAK,cAAeiV,GACpBnY,MAAK,SAACC,GACLiY,GAAmBjY,EAAIoB,MACPpB,EAAIoB,KAAKvD,GACzBsC,QAAQC,IAAI,qCAEZrD,EAAMgZ,gBAAgBhZ,EAAMiZ,aAE5BjZ,EAAM8L,oBAAmB,GACzB9L,EAAM+L,mBAAmB,qCAEzBsM,KAEArY,EAAMgM,qBAENhM,EAAMkZ,4BAEPhW,OAAM,SAACC,GACNC,QAAQC,IAAIF,EAAIqB,UAEhBxE,EAAM8L,oBAAmB,GACzB9L,EAAM+L,mBAAmB,wCAEzBsM,KAEArY,EAAMgM,qBAENhM,EAAMkZ,4BA7BZ,2CAvFiC,uEAyHjC,WAA4BtO,GAA5B,SAAAzG,EAAA,yDAEEyG,EAAEC,iBAEFwN,KACA8C,GAAYY,OAAO,cAAetb,GAClC0a,GAAYY,OAAO,OAAQxb,GAC3B4a,GAAYY,OAAO,OAAQ5B,GAC3BgB,GAAYY,OAAO,aAAc,mBACZlK,GAAjBoG,EATN,wBAUI7U,QAAQC,IAAI,iCAAmCrD,EAAMic,oBACrDd,GAAYY,OAAO,cAAe/b,EAAMic,oBAX5C,UAYqBZ,GAAcrb,EAAMic,mBAAoBrB,GAZ7D,8CAcIO,GAAYY,OAAO,cAAe9D,GAdtC,UAeqBoD,GAAcpD,EAAe2C,GAflD,4DAzHiC,sBA+IjC,IAIMsB,GAAgB,SAACC,GACrB,OAAOzB,EAAQ0B,IAAID,IAGfE,GAAa,WACjB,IAAIC,EAAa5B,EAMjB,IALIwB,GAAc3B,KAChB+B,EAAa,IAAI7B,IAAI6B,EAAW/D,WACrB7N,OAAO6P,GAGD,IAAfA,IAG2B,GAFjBla,SAASoR,eAAe,gBAE1BC,gBAER,YADAtO,QAAQC,IAAI,+BAKhBmX,GAAc,SAAC+B,GAAD,OAAoBA,EAAiB,KACnD5B,EAAW2B,IAiCb,OANA/Z,qBAAU,WACa,IAAZ,OAALvC,QAAK,IAALA,OAAA,EAAAA,EAAOwc,SACTtC,EAAQ,kBAET,IAGD,qCACE,eAACuC,GAAA,EAAD,CAAKxS,GAAI,CAAE7J,MAAO,QAAlB,UACE,cAACsc,GAAA,EAAD,CAASnC,WAAYA,EAArB,SACGP,GAAM9U,KAAI,SAAC4F,EAAO8H,GACjB,IAAM+J,EAAY,GACZC,EAAa,GASnB,OAHIV,GAActJ,KAChB+J,EAAUE,WAAY,GAGtB,cAACC,GAAA,EAAD,2BAAsBH,GAAtB,aACE,cAACI,GAAA,EAAD,2BAAeH,GAAf,aAA4B9R,OADnBA,QAMjB,cAAC,IAAD,CAAc7K,UAAU,OAAxB,SACGsa,IAAeP,GAAM/U,OACpB,eAAC,IAAMW,SAAP,WACE,cAACoX,GAAA,EAAD,CAAY/S,GAAI,CAAEgT,GAAI,EAAGC,GAAI,GAA7B,mDAGA,eAACT,GAAA,EAAD,CAAKxS,GAAI,CAAEvJ,QAAS,OAAQyc,cAAe,MAAOC,GAAI,GAAtD,UACE,cAACX,GAAA,EAAD,CAAKxS,GAAI,CAAEoT,KAAM,cACjB,cAACC,GAAA,EAAD,CAAQnU,QAzCF,WAClBqR,EAAc,IAwCF,mCAIJ,eAAC,IAAM5U,SAAP,WACkB,IAAf2U,EACC,qCACE,uBAAMzZ,GAAG,eAAe6J,SAAU,SAACC,GAAD,OAAOA,EAAEC,kBAA3C,UACoB,IAAZ,OAAL7K,QAAK,IAALA,OAAA,EAAAA,EAAOwc,QACN,cAAC,IAAD,CACEvc,UAAU,OACVL,MAAO,eACPwB,KAAK,OACLN,GAAG,eACHgK,MAAM,gBACN8B,UAAQ,EACR7B,SAAU,SAACH,GAAD,OAAOsP,EAAQtP,EAAEI,OAAOpL,QAClCW,KAAK,SAGP,cAAC,IAAD,CACEN,UAAU,OACVL,MAAOW,EACPa,KAAK,OACLN,GAAG,eACHgK,MAAM,gBACN8G,UAAQ,EACR7G,SAAU,SAACH,GAAD,OAAOsP,EAAQtP,EAAEI,OAAOpL,QAClCW,KAAK,SAIT,cAAC,IAAD,CACE8Y,aAAa,OACbzZ,MAAOa,EACP6Y,UAAQ,EACRlY,KAAK,cACLN,GAAG,sBACHyY,KAAM,EACNxO,SAAU,SAACH,GAAD,OAAO7B,EAAe6B,EAAEI,OAAOpL,QACzCkL,MAAM,+BAGa,YAAtBvK,EAAKkO,eACJ,mBAAGxO,UAAU,4BAAb,uFAMa,IAAfsa,EACF,qCACE,uBAAM5P,SAxPtB,SAAsBC,GACpBA,EAAEC,iBACFkQ,GAAiB,GACjB,IAAMwC,EAAe,IAAInC,SACzBmC,EAAaxB,OAAO,OAAQnB,GAE5BtZ,EACG4E,KAAK,SAAUqX,GACfva,MAAK,SAACC,GACLmX,EAAUnX,EAAIoB,KAAKvD,IAEnBwZ,EAAYrX,EAAIoB,KAAKmZ,MACrBvC,GAAqB,GACrBF,GAAiB,MAElB7X,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,EAAIqB,cAyOpB,UACE,cAAC,IAAD,CACEvE,UAAU,OACV6K,MAAM,4BACNhK,GAAG,aACHiK,SAAU,SAACH,GAAD,OAAOiQ,EAAgBjQ,EAAEI,OAAOyS,MAAM,YAEhC5L,IAAjB+I,GAA8C,IAAhBA,EAC7B,cAAC,IAAD,CAAQhO,UAAQ,EAACrM,KAAK,SAASsM,OAAK,EAApC,uBAGmB,GAAjBiO,EACF,cAAC,IAAD,CAAQva,KAAK,SAASsM,OAAK,EAA3B,uBAIA,eAAC,IAAD,CAAQtM,KAAK,SAASsM,OAAK,EAACD,UAAQ,EAApC,UACE,cAAC,IAAD,CACE5D,KAAK,KACLmL,KAAK,SACLuJ,IAAI,OACJzd,UAAU,SALd,qBAWH+a,GACC,cAAC,IAAD,CAAOhR,SAAS,UAAU/J,UAAU,OAApC,+EAOJ,qCACE,oBAAIA,UAAU,OAAd,kCACA,8BACE,6DACA,uBACCM,KAEH,8BACE,+CACA,uBACgB,IAAfE,EACC,oDAEAA,KAIJ,4BACE,mBACEkd,KAAMtD,EACNrP,OAAO,SACP4S,IAAI,sBAHN,iCAUN,eAACnB,GAAA,EAAD,CAAKxS,GAAI,CAAEvJ,QAAS,OAAQyc,cAAe,MAAOC,GAAI,GAAtD,UACE,cAACE,GAAA,EAAD,CACE7S,MAAM,UACNmC,SAAyB,IAAf2N,EACVpR,QAnLG,WACjBqR,GAAc,SAAC+B,GAAD,OAAoBA,EAAiB,MAmLrCtS,GAAI,CAAE4T,GAAI,GAJZ,uBAQA,cAACpB,GAAA,EAAD,CAAKxS,GAAI,CAAEoT,KAAM,mBAChBS,EAMAvD,IAAeP,GAAM/U,OAAS,EAC7B,cAACqY,GAAA,EAAD,CAAQnU,QA3WS,6CA2WjB,wBACgB,GAAdoR,GAAwC,GAArBS,EACrB,cAACsC,GAAA,EAAD,CAAQ1Q,UAAQ,EAACzD,QAASkT,GAA1B,oBAGgB,GAAd9B,GAAwC,GAArBS,EACrB,cAACsC,GAAA,EAAD,CAAQnU,QAASkT,GAAjB,oBAEA,cAACiB,GAAA,EAAD,CACE/c,KAAK,SACLwd,KAAK,eACL5U,QAASkT,GAHX,+BAcZ,cAAC1C,GAAA,EAAD,CACE1P,GAAI,CAAEQ,MAAO,OAAQmP,OAAQ,SAACC,GAAD,OAAWA,EAAMD,OAAOE,OAAS,IAC9D9J,KAAMkI,GACN/O,QAASiP,GAHX,SAKE,cAAC2B,GAAA,EAAD,CAAkBtP,MAAM,kBCpTjBuT,OApFf,SAAwBhe,GAGtB,MAAoCR,mBAAS,QAA7C,mBAAOye,EAAP,KAAmBC,EAAnB,KAGA,SAASC,EAAgBve,GACnBA,IAAUqe,GAIdC,EAActe,GAGhB,OACE,mCACE,cAAC,IAAD,CACE0D,KAAMtD,EAAMoe,iBACZ7T,QAASvK,EAAMqe,oBACf7T,SAAS,KAHX,SAKE,cAAC,IAAD,CAAgBxB,KAAK,KAArB,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,qCACA,cAAC,IAAD,CACE/I,UAAU,YACVwK,MAAM,OACNtB,QAASnJ,EAAMkZ,4BAGnB,eAAC,IAAD,WACE,eAAC,IAAD,CAASoF,OAAK,EAACC,MAAI,EAACte,UAAU,OAA9B,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEkJ,QAAS,kBAAMgV,EAAgB,SAC/BK,OAAuB,SAAfP,EAFV,wBAOF,cAAC,IAAD,UACE,cAAC,IAAD,CACE9U,QAAS,kBAAMgV,EAAgB,SAC/BK,OAAuB,SAAfP,EAFV,2BASJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAa3a,KAAqB,SAAf2a,EAAnB,SACE,cAAC,GAAD,CACE5O,gBAAiBrP,EAAMqP,gBACvB4J,YAAajZ,EAAMiZ,YACnBD,eAAgBhZ,EAAMgZ,eACtBE,uBAAwBlZ,EAAMkZ,uBAC9BlN,mBAAoBhM,EAAMgM,mBAC1BiB,oBAAqBjN,EAAMiN,oBAC3BnB,mBAAoB9L,EAAM8L,mBAC1BC,mBAAoB/L,EAAM+L,uBAG9B,cAAC,IAAD,CAAazI,KAAqB,SAAf2a,EAAnB,SACE,cAAC,GAAD,CACEhF,YAAajZ,EAAMiZ,YACnBD,eAAgBhZ,EAAMgZ,eACtBE,uBAAwBlZ,EAAMkZ,uBAC9BlN,mBAAoBhM,EAAMgM,mBAC1BiB,oBAAqBjN,EAAMiN,oBAC3BnB,mBAAoB9L,EAAM8L,mBAC1BC,mBAAoB/L,EAAM+L,uCCvC/B0S,OAtCf,SAAiCze,GAG/B,OACE,mCACE,cAAC,IAAD,CACEsD,KAAMtD,EAAMoe,iBACZ7T,QAASvK,EAAMqe,oBACf7T,SAAS,KAHX,SAKE,cAAC,IAAD,CAAgBxB,KAAK,KAArB,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,qCACA,cAAC,IAAD,CACE/I,UAAU,YACVwK,MAAM,OACNtB,QAASnJ,EAAMkZ,4BAGnB,cAAC,IAAD,UACE,cAAC,GAAD,CACED,YAAajZ,EAAMiZ,YACnBD,eAAgBhZ,EAAMgZ,eACtBE,uBAAwBlZ,EAAMkZ,uBAC9BlN,mBAAoBhM,EAAMgM,mBAC1BiB,oBAAqBjN,EAAMiN,oBAC3BnB,mBAAoB9L,EAAM8L,mBAC1BC,mBAAoB/L,EAAM+L,iCC0H3B2S,OAlJf,SAA6B1e,GAC3B,IAAMsB,EAAgBkF,IAEtB,EAA8ChH,qBAA9C,mBAAwBiO,GAAxB,WAGA,EAAkDjO,oBAAS,GAA3D,mBAAOwI,EAAP,KAA0BC,EAA1B,KAEA,EAAwCzI,mBAAS,cAAjD,mBAAO0I,EAAP,KAAqBC,EAArB,KAsBA,OAnBA5F,qBAAU,WACRjB,EAAc8C,IAAI,gBAAgBpB,MAAK,SAACC,GACtCwK,EAAmBxK,EAAIoB,MACvB,IAAI+D,EAAcnF,EAAIoB,KAGtB,GAA2B,IAAvB+D,EAAYnD,OACd,IAAK,IAAI8C,KAAKK,EACRA,EAAYL,GAAGzH,aAAeN,EAAMc,KAEtCmH,GAAqB,GAErBE,EAAgBC,EAAYL,GAAGQ,2BAKtC,IAGD,8BACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACGvI,EAAMqH,YAAc,WAAa,WACjCrH,EAAMS,mBAKb,0BAEF,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,+CACiB,IACdT,EAAMqH,YAAc,cAAgB,iBAEvC,uBACCrH,EAAMoB,KACP,uBACCpB,EAAMsF,OACP,uBACCtF,EAAM2e,SAVT,IAUoB3e,EAAMwF,KAV1B,KAUkCxF,EAAM4e,iBAG1C,cAAC,IAAD,UACE,eAAC,IAAD,WACE,sDACC5e,EAAM6e,uBAAyB7e,EAAM8e,qBACtC,uBACA,qDACC9e,EAAM6e,uBACP,uBACA,gDACC7W,EAAoB,YAAc,aACnC,uBACA,+CACCE,UAIP,uBACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAQ4B,GAAG,IAAIC,GAAG,IAAlB,SACmC,GAAhC/J,EAAM6e,uBACL,cAAC,IAAD,CAAU7U,SAAS,OAAOC,GAAI,CAAEC,GAAI,GAApC,oGAImC,IAAjClK,EAAM6e,wBACa,GAArB7W,EACA,cAAC,IAAD,CAAUgC,SAAS,UAAUC,GAAI,CAAEC,GAAI,GAAvC,6DAGuB,GAArBlC,GACc,cAAhBE,EACA,cAAC,IAAD,CAAU8B,SAAS,OAAOC,GAAI,CAAEC,GAAI,GAApC,gEAGkB,gBAAhBhC,EACF,cAAC,IAAD,CAAU8B,SAAS,UAAUC,GAAI,CAAEC,GAAI,GAAvC,uCAGkB,aAAhBhC,EACF,cAAC,IAAD,CAAU8B,SAAS,QAAQC,GAAI,CAAEC,GAAI,GAArC,uCAGE,OAEN,cAAC,IAAD,CAAQJ,GAAG,IAAIC,GAAG,IAAlB,SACwB,GAArB/J,EAAMqH,YACL,qBAAKpH,UAAU,YAAf,SACwB,GAArB+H,GAC+B,GAAhChI,EAAM6e,uBACJ,cAAC,IAAD,CACE3e,MAAO,CAAEQ,QAAS,QAASC,OAAQ,UACnCiM,UAAQ,EACR3M,UAAU,GAHZ,2BAQA,cAAC,IAAD,CACEC,MAAO,CAAEQ,QAAS,QAASC,OAAQ,UACnCC,GAAE,cACFuJ,OAAQ,CAAErB,MAAO,SAHnB,SAKE,cAAC,IAAD,CAAQ7I,UAAU,GAAlB,+BAIJ,aAIV,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAQ6J,GAAG,IAAX,6BAA6B9J,EAAM+e,aACnC,eAAC,IAAD,CAAQjV,GAAG,IAAX,mCACyB9J,EAAMgf,8BClG9BC,OAvCf,SAAmBjf,GACjB,OACE,mCACE,cAAC,IAAD,CACEsD,KAAMtD,EAAM+M,WACZxC,QAASvK,EAAMgN,cACfxC,SAAS,KAHX,SAKE,cAAC,IAAD,CAAgBxB,KAAK,KAArB,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,UAAgBhJ,EAAM8I,QACtB,cAAC,IAAD,CACE7I,UAAU,YACVwK,MAAM,OACNtB,QAASnJ,EAAM6L,gBAGnB,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,IACA,cAAC,IAAD,UAAS7L,EAAMS,qBAKrB,cAAC,IAAD,UACE,cAAC,IAAD,CAAQgK,MAAM,SAAStB,QAASnJ,EAAM6L,WAAtC,sCCkKCqT,OAzLf,SAAsBlf,GACpB,IAAMsB,EAAgBkF,IAGtB,GADiB3G,IAATJ,KACkBD,mBAAS,KAAnC,mBAAc2f,GAAd,WACA,EAAgC3f,mBAAS,IAAzC,mBAAO6a,EAAP,KAAiBC,EAAjB,KACA,EAAgD9a,oBAAS,GAAzD,mBAAO4f,EAAP,KACA,GADA,KACkC5f,oBAAS,IAA3C,mBAEA,GAFA,UAEoCA,mBAAS,eAA7C,mBAAO6f,EAAP,KAAmBC,EAAnB,KAT2B,SAuBZC,EAvBY,8EAuB3B,WAA8BC,GAA9B,iCAAArb,EAAA,6DAAmCsb,EAAnC,+BAAiD,aAAjD,SACyBC,MAAMF,GAD/B,cACQhb,EADR,gBAEqBA,EAASmb,OAF9B,cAEQtb,EAFR,OAGMjD,EAAOA,EAHb,kBAIS,IAAIwe,KAAK,CAACvb,GAAOjD,EAAM,CAC5Bb,KAAM8D,EAAK9D,MAAQkf,KALvB,2CAvB2B,oEAgC3B,WAA8B3e,GAA9B,eAAAqD,EAAA,6DAEEkU,IAFF,SAGqBkH,EAAelF,GAHpC,OAGQmD,EAHR,OAIEqC,EAAc/e,EAAI0c,GAAM,SAAU9B,GAChC3E,GAAkB/W,EAAM8f,gBACrB9c,MAAK,SAAC8V,GACL,OAAI4C,GAAY5C,GACdwG,EAAc,gBAGdlH,KACO,IAEPkH,EAAc,kBAGdlH,KACO,MAGVlV,OAAM,SAACC,GACNC,QAAQC,IAAI,kCAAoCF,GAGhDiV,UAzBR,4CAhC2B,+BA8DZyH,EA9DY,kFA8D3B,WAA6BE,EAAaxE,EAAOyE,GAAjD,mBAAA7b,EAAA,sDAEMqU,EAASvB,EAAQ,IACjByE,EAAW,IACTF,EAAa,IAAIC,YACZE,WAAWJ,GACtBC,EAAWI,OAAS,SAAUhR,GAC5B8Q,EAAWlD,EACRG,WAAW,UACXC,OAAOhO,EAAEI,OAAO8Q,QAChBjD,OAAO,OACVmH,EAAStE,IAXb,4CA9D2B,sBAWJ1b,EAAMigB,eAE7B1d,qBAAU,WAGU,MAAdvC,EAAMwd,MACRlc,EAAc8C,IAAI,QAAUpE,EAAMwd,MAAMxa,MAAK,SAACC,GAC5Ckc,EAASlc,EAAIoB,MACbiW,EAAYrX,EAAIoB,KAAKmZ,QACpB,MACJ,CAAC4B,IAyDJ,MAAkD5f,oBAAS,GAA3D,mBAAO0gB,EAAP,KAA0BC,EAA1B,KAEA,SAASC,IACPD,GAAsBD,GAIxB,MAAwC1gB,oBAAS,GAAjD,mBAAO0Y,EAAP,KAAqBC,EAArB,KACMC,EAAsB,WAC1BD,GAAgB,IAEZE,EAAuB,WAC3BF,GAAiBD,IAGnB,OACE,qCACE,eAAC,IAAD,CAASjY,UAAU,QAAQC,MAAO,CAAEC,UAAW,QAASC,MAAO,SAA/D,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQkJ,GAAG,IAAIrJ,UAAU,gCAAzB,SACiB,YAAdD,EAAMO,KACL,cAAC,IAAD,CACEN,UAAU,OACVgJ,KAAG,EACHD,KAAK,KACLE,KAAK,wBAGP,cAAC,IAAD,CAASjJ,UAAU,OAAOgJ,KAAG,EAACD,KAAK,KAAKE,KAAK,eAGjD,eAAC,IAAD,CAAQI,GAAG,IAAX,UACE,cAAC,IAAD,UACGtJ,EAAMO,KAANP,KAAyBA,EAAMqgB,aAAe,MAGjD,eAAC,IAAD,CAAapgB,UAAU,YAAvB,UACE,+CACA,uBACsB,IAArBD,EAAMS,YACL,iEAEAT,EAAMS,YAER,uBACO,OAALT,QAAK,IAALA,KAAOwc,QAAyB,aAAfxc,EAAMO,MACX,gBAAdP,EAAMO,KACJ,qCACE,+CACC8e,KAED,WAGR,eAAC,IAAD,CAAQ/V,GAAG,IAAX,UACE,cAAC,IAAD,CACEpJ,MAAO,CAAEQ,QAAS,QAASC,OAAQ,UACnCC,GAAI,YAAcZ,EAAMc,GAAGD,WAE3BsJ,OAAQ,CAAErB,MAAO,SAJnB,SAME,cAAC,IAAD,CACE7I,UAAU,YACVc,SAAO,EACPoI,QAASiX,EAHX,uBAHKpgB,EAAMc,IAWN,OAALd,QAAK,IAALA,KAAOwc,QAAyB,aAAfxc,EAAMO,MACX,gBAAdP,EAAMO,KACJ,cAAC,IAAD,CACEN,UAAU,iBACVc,SAAO,EACPoI,QAzJW,4CAsJb,0BAOE,aAIV,eAAC,IAAD,CAAelJ,UAAU,aAAzB,6BACmBD,EAAMsgB,WACvB,uBAFF,OAGOtgB,EAAMigB,eAHb,KAG+BjgB,EAAMugB,OAHrC,UAMF,cAAC,GAAD,CACExT,WAAYmT,EACZlT,cAAemT,EACftU,WAAYuU,EACZtX,MAAO9I,EAAM8I,MACbrI,YAAaT,EAAMS,cAErB,cAACkZ,GAAA,EAAD,CACE1P,GAAI,CAAEQ,MAAO,OAAQmP,OAAQ,SAACC,GAAD,OAAWA,EAAMD,OAAOE,OAAS,IAC9D9J,KAAMkI,EACN/O,QAASiP,EAHX,SAKE,cAAC2B,GAAA,EAAD,CAAkBtP,MAAM,kBC/HjB+V,OA7Df,SAAyBxgB,GACvB,OACE,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQC,UAAU,gCAAgCqJ,GAAG,IAArD,SACE,cAAC,IAAD,CAASL,KAAG,EAACC,KAAK,gBAAgBF,KAAK,KAAK/I,UAAU,WAExD,eAAC,IAAD,CAAQqJ,GAAG,IAAX,UACE,kDADF,KAC6BtJ,EAAMygB,WACjC,uBACA,0DAHF,KAGqCzgB,EAAM0gB,yBACzC,uBACA,6CALF,KAKwBC,OAAO3gB,EAAM4gB,cAAcC,QAAQ,GAAI,IAC5D7gB,EAAM8gB,SACP,uBACA,6CARF,KAQwBH,OAAO3gB,EAAM+gB,cAAcF,QAAQ,GAAI,IAC5D7gB,EAAM8gB,SACP,uBACA,uBACA,4CAZF,6BAY+C,IAC5CH,OAAmD,KAA3C3gB,EAAM4gB,aAAe5gB,EAAM+gB,eAAsBF,QACxD,GACC,IACF7gB,EAAM8gB,SACP,uBACA,6CAlBF,oBAkBuC,IACpCH,OAAmD,KAA3C3gB,EAAM4gB,aAAe5gB,EAAM+gB,eAAsBF,QACxD,GACC,IACF7gB,EAAM8gB,SACP,uBACA,6DAxBF,IAwBuC,IACpCH,OAAmD,KAA3C3gB,EAAM4gB,aAAe5gB,EAAM+gB,eAAsBF,QACxD,GACC,IACF7gB,EAAM8gB,YAET,cAAC,IAAD,CAAQxX,GAAG,IAAX,SACE,cAAC,IAAD,CACEpJ,MAAO,CAAEQ,QAAS,QAASC,OAAQ,UACnCC,GAAI,kBAEJuJ,OAAQ,CAAErB,MAAO,SAJnB,SAME,cAAC,IAAD,CAAQ/H,SAAO,EAACd,UAAU,YAAYwK,MAAM,UAA5C,uBAHKzK,EAAMc,WAUnB,eAAC,IAAD,0BACed,EAAMQ,WADrB,QACsCR,EAAMghB,aAAc,aC/CnDC,OAff,SAA4BjhB,GAC1B,OACE,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMY,GAAG,gBAAT,2BAEF,eAAC,IAAD,CAAmB4d,QAAM,EAAzB,yBACexe,EAAMiY,uBCcvB/K,GAAQC,IAAMC,YAAW,SAAepN,EAAOqN,GACnD,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAGD,IAAKA,EAAKE,QAAQ,UAAavN,OAsYjDkhB,OAnYf,SAAsBlhB,GAEpB,IACImhB,EADWpT,cACyBqT,MACxChe,QAAQC,IAAI8d,GAGZ5e,qBAAU,WACRa,QAAQC,IAAI8d,GACqB,OAA7BA,IACFrV,GAAmBqV,EAAyBE,SAC5CtV,GAAmBoV,EAAyBxc,SAC5CqH,QAED,CAACmV,IAGJ,MAA8C3hB,mBAAS,IAAvD,mBAAO6P,EAAP,KAAwBiS,EAAxB,KAGA,EAA0C9hB,mBAAS,IAAnD,mBAAOqE,EAAP,KAAsBC,EAAtB,KAGA,EAAkCtE,oBAAS,GAA3C,mBAAOyE,EAAP,KAAkBC,EAAlB,KAEM5C,EAAgBkF,IAGtB,EAAsChH,oBAAS,GAA/C,mBAAO6H,EAAP,KAAoBC,EAApB,KAIA,EAAsC9H,oBAAS,GAA/C,mBAAOyZ,EAAP,KAAoBD,EAApB,KAEA,EAA0CxZ,oBAAS,GAAnD,mBAAO+hB,EAAP,KAAsBC,EAAtB,KACA,EAA8ChiB,qBAA9C,mBAAO6I,EAAP,KAAwBoF,EAAxB,KACA,EAAoCjO,oBAAS,GAA7C,mBAAOiiB,EAAP,KAAmBC,EAAnB,KACA,EAAsCliB,qBAAtC,mBAAoBmiB,GAApB,WACA,EAAkCniB,qBAAlC,mBAAkBoiB,GAAlB,WAGA,EAA4DpiB,mBAAS,GAArE,mBAAOqf,GAAP,KAA+BgD,GAA/B,KACA,GAAwDriB,mBAAS,GAAjE,qBAAOsf,GAAP,MAA6BgD,GAA7B,MAGA,GAAgDtiB,oBAAS,GAAzD,qBAAO4e,GAAP,MAAyBC,GAAzB,MAEA,SAASnF,KACPmF,IAAqBD,IAIvB,IAAQnG,GAAkBpK,cAAlBoK,cACAxY,GAASI,IAATJ,KAGR8C,oBAAS,sBAAC,sBAAA4B,EAAA,sEACF7C,EAAc8C,IAAI,gBAAkB6T,IAAejV,MAAK,SAACC,GAE7Dqe,EAAmBre,EAAIoB,MACnB5E,GAAK6E,SAAWrB,EAAIoB,KAAKsD,WAC3BL,GAAe,MALX,cAQRlE,QAAQC,IAAIgM,GARJ,SASF/N,EACH8C,IAAI,0BAA4B6T,IAChCjV,MAAK,SAACC,GAELa,EAAiBb,EAAIoB,SAbjB,uBAgBF/C,EACH8C,IAAI,iCAAmC6T,IACvCjV,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAIoB,KAAKY,QACjBhC,EAAIoB,KAAK,GACX/C,EACG8C,IAAI,WAAanB,EAAIoB,KAAK,GAAG0d,QAAQjhB,GAAK,KAC1CkC,MAAK,SAACgf,GACLN,EAAcM,EAAW3d,KAAK4d,aAE9BN,EAAeK,EAAW3d,MAC1Bud,GAAa,MAEd1e,OAAM,SAACC,GACNC,QAAQC,IAAI,4BACZue,GAAa,MAGjBA,GAAa,GAEX3e,EAAIoB,KAAKY,OAAS,IACpB7B,QAAQC,IAAI,2BACZme,GAAiB,GACjB/T,EAAmBxK,EAAIoB,KAAK,QAvC1B,OA2CRH,GAAa,GA3CL,2CA4CP,CAAC+U,IAKJ1W,qBAAU,WAGR,IAFA,IAAI2f,EAAW,EACXC,EAAQ,EACHpa,EAAI,EAAGA,EAAIlE,EAAcoB,OAAQ8C,IACX,YAAzBlE,EAAckE,GAAGxH,KACnB2hB,GAAY,EAEZC,GAAS,EAGbN,GAA0BK,GAC1BJ,GAAwBK,KACvB,CAACte,IAIJ,OAAwCrE,oBAAS,GAAjD,qBAAOsP,GAAP,MAAqBC,GAArB,MAEA,GAA8CvP,oBAAS,GAAvD,qBAAOwP,GAAP,MAAwBlD,GAAxB,MAEA,GAA8CtM,mBAAS,IAAvD,qBAAOyP,GAAP,MAAwBlD,GAAxB,MAGMC,GAAqB,WACzB+C,IAAgB,IAIZ9B,GAAsB,SAACX,EAAO4C,GACnB,cAAXA,GAIJH,IAAgB,IAGlB,OACE,mCACG9K,EACC,qBAAKhE,UAAU,iBAAf,SACE,cAAC,IAAD,UACE,sBAAMA,UAAU,kBAAhB,2BAIJ,qCACE,eAAC,IAAD,WACE,2CAEgB,GAAfoH,EACC,cAAC,GAAD,CAEE+W,iBAAkBA,GAClBC,oBAAqBA,GACrBnF,uBAAwBA,GACxB7J,gBAAiBA,EAEjB4J,YAAaA,EACbD,eAAgBA,EAEhBhN,mBAAoBA,GACpBiB,oBAAqBA,GACrBnB,mBAAoBA,GACpBC,mBAAoBA,KAGtB,cAAC,GAAD,CAEEqS,iBAAkBA,GAClBC,oBAAqBA,GACrBnF,uBAAwBA,GACxB7J,gBAAiBA,EAEjB4J,YAAaA,EACbD,eAAgBA,EAEhBhN,mBAAoBA,GACpBiB,oBAAqBA,GACrBnB,mBAAoBA,GACpBC,mBAAoBA,KAGxB,cAAC,GAAD,CAEEkM,cAAeA,IADVA,IAGP,cAAC,GAAD,CACExX,YAAa4O,EAAgB5O,YAC7Bse,UAAW1P,EAAgB3J,WAC3BsZ,cAAe3P,EAAgBM,eAC/BlL,OAAQ4K,EAAgB5K,OACxBa,OAAQ+J,EAAgBjK,YAAYC,QAAQC,OAC5CqZ,SAAUtP,EAAgBjK,YAAYC,QAAQE,UAC9CqZ,YAAavP,EAAgBjK,YAAYC,QAAQI,aACjDD,KAAM6J,EAAgBjK,YAAYC,QAAQG,KAC1CpE,KAAMiO,EAAgBjK,YAAYC,QAAQjE,KAC1CN,GAAIuO,EAAgBvO,GACpBshB,eAAgB/S,EAAgB0J,cAChC1J,gBAAiBA,EACjBhI,YAAaA,EACbwX,uBAAwBA,GACxBC,qBAAsBA,GACtByC,cAAeA,IAGjB,qBAAKthB,UAAU,qDAAf,SACE,eAAC,IAAD,WACE,gCACGshB,EACC,qCACE,cAAC,IAAD,CAAUc,MAAI,EAACpiB,UAAU,OAAzB,SACG,IACS,IACZ,iDAGF,qCACE,cAAC,IAAD,CAAUoiB,MAAI,EAACpiB,UAAU,OAAzB,SACG,IACS,IACZ,iDAGJ,cAAC,IAAD,CAAUoiB,MAAI,EAACpiB,UAAU,OAAzB,SACG4e,KACS,IACZ,mDACA,cAAC,IAAD,CAAUwD,MAAI,EAACpiB,UAAU,OAAzB,SACG6e,KACS,IACZ,sDAEF,eAAC,IAAD,CACE7e,UAAU,YACVwK,MAAM,UACNtB,QAAS+P,GAHX,UAKE,cAAC,IAAD,CAASlQ,KAAK,KAAK/I,UAAU,OAAOgJ,KAAG,EAACC,KAAK,SAL/C,iCAWHqY,GACC,qCACE,cAACe,GAAA,EAAD,CAASC,UAAU,OAAOtiB,UAAU,OAApC,SACE,iDAEF,cAAC,GAAD,CACEwgB,WAAYpY,EAAgBoY,WAC5BG,aAAca,EACdf,yBAA0BrY,EAAgBma,eAAephB,KACzD2f,aAAc1Y,EAAgB0Z,QAAQvK,gBACtCiL,WAAY5e,EAAc4e,WAC1BzB,aAAc3Y,EAAgBV,UAAUvG,KACxCZ,WAAY6H,EAAgB3C,gBAMN,IAA3BmZ,IACC,qCACE,cAACyD,GAAA,EAAD,CAASC,UAAU,OAAOtiB,UAAU,YAApC,SAC6B,GAA1B4e,GACC,mDAEA,sDAEO,IACX,cAAC,IAAD,UACGhb,EAAcqB,KACb,SAACwd,GAAD,MACuB,YAArBA,EAAaniB,MACX,cAAC,IAAMqF,SAAP,UACE,cAAC,IAAD,CAAQ3F,UAAU,qCAAlB,SACE,cAAC,GAAD,CAEEa,GAAI4hB,EAAa5hB,GACjBmf,eACEyC,EAAazhB,MAAMC,SAASC,QAAQC,KAEtCmf,OAAQmC,EAAazhB,MAAMI,SAC3Bd,KAAMmiB,EAAaniB,KACnBE,YAAaiiB,EAAajiB,YAC1B4f,aAAcqC,EAAaliB,WAC3B8f,WAAYoC,EAAa1hB,YACzB8e,eAAgB4C,EAAa5C,eAC7BtC,KAAMkF,EAAalF,KACnBzK,UAAW2P,EAAa3P,WAZnB2P,EAAa5hB,gBAuBV,IAAzBge,IACC,qCACE,cAACwD,GAAA,EAAD,CAASC,UAAU,OAAOtiB,UAAU,YAApC,SACE,sDAEF,cAAC,IAAD,UACG4D,EAAcqB,KACb,SAACwd,GAAD,MACwB,aAAtBA,EAAaniB,MACX,cAAC,IAAMqF,SAAP,UACE,cAAC,IAAD,CAAQ3F,UAAU,qCAAlB,SACE,cAAC,GAAD,CAEEa,GAAI4hB,EAAa5hB,GACjByf,OAAQmC,EAAanC,OACrBhgB,KAAMmiB,EAAaniB,KACnBE,YAAaiiB,EAAajiB,YAC1B4f,aAAcqC,EAAaliB,WAC3B8f,WAAYoC,EAAa1hB,YACzBwc,KAAMkF,EAAalF,KACnBzK,UAAW2P,EAAa3P,UACxB+M,eAAgB4C,EAAa3J,eATxB2J,EAAa5hB,gBAoBlB,GAAjBygB,GACyB,GAA1B1C,IACwB,GAAxBC,GACE,qBACE7e,UAAU,oDACVC,MAAO,CACL6E,OAAQ,SAHZ,SAME,oBACE7E,MAAO,CACLuK,MAAO,QAFX,mDAQA,QAEN,cAACmF,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,KAAMlB,GACNmB,iBAAkB,IAClBpN,QAASoK,GACThN,UAAU,OALZ,SAOsB,GAAnB+O,GACC,cAAC,GAAD,CACEnM,QAASoK,GACTjD,SAAS,UACTC,GAAI,CAAE7J,MAAO,QAHf,SAKG6O,KAGH,cAAC,GAAD,CACEpM,QAASoK,GACTjD,SAAS,QACTC,GAAI,CAAE7J,MAAO,QAHf,SAKG6O,aCvZF,OAA0B,qCCA1B,OAA0B,kCC2B1B0T,OAtBf,WACE,OACE,cAAC,IAAD,CAAW1iB,UAAU,6CAArB,SACE,sBACEA,UAAU,mBACVC,MAAO,CACL0iB,gBAAiB,WAHrB,UAME,qBAAKrZ,IAAKsZ,GAAO5iB,UAAU,OAAOC,MAAO,CAAEE,MAAO,UAAa,IAC/D,qBAAKmJ,IAAKuZ,GAAS7iB,UAAU,OAAOC,MAAO,CAAEE,MAAO,WAAc,IAClE,mBACEH,UAAU,YACV0d,KAAK,8CAFP,qE,2BCoDOoF,OA5Df,SAAwB/iB,GACtB,IAAIgjB,EAAWC,cACXnV,EAAWC,cAEf,OACE,eAAC,KAAD,CACEmV,SAAU,kBAAMljB,EAAMmjB,gBAAgBnjB,EAAMojB,cAC5CljB,MAAO,CACLmjB,QAAS,kBACTC,SAAU,SAJd,UAOE,cAAC,KAAQC,OAAT,IAEA,eAAC,KAAQC,IAAT,CAAaC,gBAAgB,YAA7B,UACE,eAAC,WAAD,CAEEjF,OAAQ1Q,EAAS4V,SAASC,SAAS,cACnCC,SAAU,kBAAMZ,EAAS,aAAc,CAAEa,SAAS,KAHpD,UAKE,cAAC,WAAD,UACE,cAAC,IAAD,CAAS5a,KAAG,EAACC,KAAK,iBAAiBhJ,MAAO,CAAE4jB,SAAU,cAExD,cAAC,WAAD,2BAEF,eAAC,WAAD,CAEEtF,OAAQ1Q,EAAS4V,SAASC,SAAS,iBACnCC,SAAU,kBAAMZ,EAAS,gBAAiB,CAAEa,SAAS,KAHvD,UAKE,cAAC,WAAD,UACE,cAAC,IAAD,CAAS5a,KAAG,EAACC,KAAK,MAAMhJ,MAAO,CAAE4jB,SAAU,cAE7C,cAAC,WAAD,6BAEF,eAAC,WAAD,CAEEtF,OAAQ1Q,EAAS4V,SAASC,SAAS,aACnCC,SAAU,kBAAMZ,EAAS,YAAa,CAAEa,SAAS,KAHnD,UAKE,cAAC,WAAD,UACE,cAAC,IAAD,CAAS5a,KAAG,EAACC,KAAK,eAAehJ,MAAO,CAAE4jB,SAAU,cAEtD,cAAC,WAAD,yBAEF,eAAC,WAAD,CAEEtF,OAAQ1Q,EAAS4V,SAASC,SAAS,aACnCC,SAAU,kBAAMZ,EAAS,YAAa,CAAEa,SAAS,KAHnD,UAKE,cAAC,WAAD,UACE,cAAC,IAAD,CAAS5a,KAAG,EAACC,KAAK,MAAMhJ,MAAO,CAAE4jB,SAAU,cAE7C,cAAC,WAAD,sC,OCxCK,SAASC,KAEtB,IAAQtkB,EAASI,IAATJ,KACF4B,EAAW5B,EAAK4B,SAChBF,EAAU1B,EAAK0B,QACf6hB,EAAWC,cAYjB,EAA4BzjB,mBAAS,IAArC,mBAAOsF,EAAP,KAAeF,EAAf,KACA,EAAuDpF,oBAAS,GAAhE,mBAAOwkB,EAAP,KAA6BC,EAA7B,KAEM3iB,EAAgBkF,IAGtB,EAAoChH,qBAApC,mBAAO0kB,EAAP,KAAmBC,EAAnB,KAGA5hB,qBAAU,WACRjB,EAAc8C,IAAI,uBAAuBpB,MAAK,SAACC,GAC7C2B,EAAU3B,EAAIoB,MACd4f,GAAuB,QAExB,IAQH,OACE,qCACE,cAAC,IAAD,CACE/jB,MAAO,CAAEkkB,WAAY,IACrBC,MAAM,MACNC,OAAO,KACPC,OAAK,EACLC,QAAQ,OALV,SAOE,eAAC,IAAD,CAAcC,OAAK,EAAnB,UACE,qBAAKxkB,UAAU,kBAAf,SACE,uBACE0K,SAjBU,SAACC,GACrBA,EAAEC,iBACFmY,EAAS,YAAD,OAAakB,GAAc,CAAEL,SAAS,KAgBpC5jB,UAAU,4BAFZ,UAIE,uBACEC,MAAO,CAAEE,MAAO,KAChBG,KAAK,SACLN,UAAU,eACVykB,YAAY,uBACZ,aAAW,SACX3Z,SAAU,SAACH,GAAD,OAAOuZ,EAAcvZ,EAAEI,OAAOpL,UAE1C,cAAC,IAAD,CAAMgB,GAAE,mBAAcsjB,GAAcjkB,UAAU,kBAA9C,yBAKJ,sBAAKA,UAAU,kBAAf,UACE,eAAC,IAAD,CAAa+I,KAAK,IAAI/I,UAAU,OAAhC,UAEE,cAAC,IAAD,CAAmBc,SAAO,EAACiI,KAAK,KAAhC,SACE,cAAC,IAAD,CAASA,KAAK,KAAK/I,UAAU,OAAOmK,KAAG,EAAClB,KAAK,WAE/C,eAAC,IAAD,CACEjJ,UAAU,iCACVC,MAAO,CACLE,MAAO,QACPD,UAAW,QACXwkB,UAAW,SALf,UAQE,cAAC,IAAD,UACE,cAAC,IAAD,CAAmB1kB,UAAU,OAA7B,kCAIF,mCACqB,IAAlB6E,EAAOG,QAAiB+e,EASvB,mCACE,cAAC,IAAD,CAAiB/jB,UAAU,qCAA3B,SACE,kEAVJ,mCACG6E,EAAOI,KAAI,SAAClD,GAAD,OACV,cAAC,IAAD,UACE,cAACH,EAAD,CAAmBG,MAAOA,KADNA,EAAMlB,iBAexC,eAAC,IAAD,WACE,cAAC,IAAD,CAAmBC,SAAO,EAACiI,KAAK,KAAhC,SACE,cAAC,IAAD,CAASA,KAAK,KAAK/I,UAAU,OAAOmK,KAAG,EAAClB,KAAK,kBAE/C,eAAC,IAAD,CAAiBjJ,UAAU,aAA3B,UACE,oBAAGA,UAAU,YAAb,UACE,+CACCkB,KAEH,oBAAGlB,UAAU,YAAb,UACE,8CACCoB,KAEH,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,MAEF,eAAC,IAAD,CAAiB8H,QAnHlB,WACbpD,aAAa6e,WAAW,YACxB7e,aAAa6e,WAAW,WACxB7e,aAAa6e,WAAW,iBACxB7e,aAAa6e,WAAW,gBAExB5B,EAAS,SAAU,CAAEa,SAAS,IAC9BpP,OAAO3G,SAASlC,QAAO,IA4GT,UACE,cAAC,IAAD,CACE3C,KAAG,EACHC,KAAK,eACLF,KAAK,KACL/I,UAAU,SALd,eAUF,cAAC,IAAD,UACE,eAAC,IAAD,CACEkJ,QAAS,WACP6Z,EAAS,cAFb,UAKE,cAAC,IAAD,CAAS/Z,KAAG,EAACC,KAAK,MAAMF,KAAK,KAAK/I,UAAU,SAL9C,6BAcZ,0BChKN,IA2Ce4kB,GA3CA,WACb,MAAsCrlB,oBAAS,GAA/C,mBAAO4jB,EAAP,KAAoBD,EAApB,KAEA,OACE,eAAC,IAAMvd,SAAP,WAEE,qBACEyO,MAAM,gBACNnU,MAAO,CACLiF,aAAc,GACdif,WAAYhB,EAAc,IAAM,GAChCC,QAAS,kBACTyB,WAAY,QANhB,SASE,cAACf,GAAD,MAGF,cAAC,GAAD,CACEX,YAAaA,EACbD,eAAgBA,IAKlB,qBACE9O,MAAM,UACNnU,MAAO,CACLkkB,WAAYhB,EAAc,IAAM,GAChCC,QAAS,qBACTyB,WAAY,QALhB,SASE,sBAAM7kB,UAAU,MAAhB,SACE,cAAC,IAAD,QAGJ,cAAC,GAAD,Q,oEC8KS8kB,OA9Mf,SAA2B/kB,GAUzB,OARAuC,qBAAU,WAGqB,GAFjBlC,SAASoR,eAAe,yBAE1BC,iBACR1R,EAAMglB,8BAA6B,KAEpC,CAAChlB,EAAMilB,aAGR,qCACE,oBAAIhlB,UAAU,OAAd,gCACA,uBAAMa,GAAG,wBAAwB6J,SAAU,SAACC,GAAD,OAAOA,EAAEC,kBAApD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQ5K,UAAU,WAAlB,SACE,cAACuM,EAAA,EAAD,CACEvM,UAAU,OAEV2M,UAAQ,EACRhN,MAAOI,EAAMilB,WAAWC,eACxBjb,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BtkB,GAAG,iBACHM,KAAK,iBACL0J,MAAM,kBACNyC,QAAQ,WACRhJ,MACEvE,EAAMqlB,kBAAkBH,gBACxBllB,EAAMslB,gBAAgBJ,eAExBK,WACEvlB,EAAMqlB,kBAAkBH,eACpB,cACAllB,EAAMslB,gBAAgBJ,eACtB,gBACA,KAENna,SAAU,SAACuB,GAAD,OAAWtM,EAAMwlB,wBAAwBlZ,QAGvD,cAAC,IAAD,UACE,cAACL,EAAA,EAAD,CACEhM,UAAU,OACViM,eAAa,EACbpL,GAAG,0BACHqL,QAASnM,EAAMylB,cAEfrZ,eAAgB,SAACC,GAAD,OAAYA,EAAOjL,MAEnC2J,SAAU,SAACuB,EAAO1M,GAChBI,EAAM0lB,eAAc,SAACrf,GACnB,OAAO,2BACFA,GADL,IAEEqa,yBAAwB,OAAE9gB,QAAF,IAAEA,OAAF,EAAEA,EAAOkB,QAGrCd,EAAM2lB,YAAN,OAAkB/lB,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAO8Y,YAE3BzO,GAAI,CAAE7J,MAAO,KACbmM,YAAa,SAACpC,GAAD,OACX,cAACqC,EAAA,EAAD,2BACMrC,GADN,IAEEyH,UAAQ,EACR9G,MAAM,uCAMhB,cAAC,IAAD,CAAQ7K,UAAU,OAAlB,SACE,cAAC,IAAD,UACE,eAAC2lB,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAY/kB,GAAG,eAAf,iCACA,eAACsO,GAAA,EAAD,CACEnF,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BhkB,KAAK,eACL0kB,QAAQ,eACRhlB,GAAG,eACHlB,MAAOI,EAAMilB,WAAWc,aACxBjb,MAAM,SACNvG,MAAOvE,EAAMqlB,kBAAkBU,aAC/BnU,UAAQ,EACR7G,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,IAT/C,UAWE,cAAC2Z,GAAA,EAAD,CAAUrmB,MAAM,GAAhB,SACE,0CAEF,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,KAAjB,yEAGA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,KAAjB,0FAIA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,KAAjB,+GAKDI,EAAMqlB,kBAAkBa,WACvB,cAACC,GAAA,EAAD,CAAgB5hB,OAAO,EAAvB,yBACE,YAIV,cAAC,IAAD,CAAQtE,UAAU,OAAlB,SACE,cAAC,IAAD,UACE,eAAC2lB,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAY/kB,GAAG,eAAf,oCACA,eAACsO,GAAA,EAAD,CACEnF,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BhkB,KAAK,eACL0kB,QAAQ,eACRhlB,GAAG,eACHlB,MAAOI,EAAMilB,WAAWmB,aACxBtb,MAAM,SACNvG,MAAOvE,EAAMqlB,kBAAkBe,aAC/BxU,UAAQ,EACR7G,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,IAT/C,UAWE,cAAC2Z,GAAA,EAAD,CAAUrmB,MAAM,GAAhB,SACE,0CAEF,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,8BAAjB,sDAGA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,4CAAjB,yDAGA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,2BAAjB,sCAGA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,gCAAjB,2CAGA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,kCAAjB,6CAGA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,6BAAjB,wCAGA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,4BAAjB,0CAIDI,EAAMqlB,kBAAkBe,aACvB,cAACD,GAAA,EAAD,CAAgB5hB,OAAO,EAAvB,yBACE,YAIV,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAACqhB,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAY/kB,GAAG,aAAf,oCACA,eAACsO,GAAA,EAAD,CACEnF,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BhkB,KAAK,aACL0kB,QAAQ,aACRhlB,GAAG,aACHlB,MAAOI,EAAMilB,WAAWoB,WACxBvb,MAAM,SACNvG,MAAOvE,EAAMqlB,kBAAkBgB,WAC/Btb,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,IAR/C,UAUE,cAAC2Z,GAAA,EAAD,CAAUrmB,MAAM,GAAhB,SACE,0CAEF,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,aAAjB,wBACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,SAAjB,oBACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,iBAAjB,4BACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,mBAAjB,wCAMR,eAAC,KAAD,CAAKqK,GAAI,CAAEvJ,QAAS,OAAQyc,cAAe,MAAOC,GAAI,GAAtD,UACE,cAACE,GAAA,EAAD,CACE7S,MAAM,UACNmC,SAA+B,IAArB5M,EAAMua,WAChBpR,QAASnJ,EAAMsmB,WACfrc,GAAI,CAAE4T,GAAI,GAJZ,uBAQA,cAAC,KAAD,CAAK5T,GAAI,CAAEoT,KAAM,cAChBrd,EAAM8d,eAAe9d,EAAMua,aAC1B,cAAC+C,GAAA,EAAD,CAAQ7S,MAAM,UAAUtB,QAASnJ,EAAMumB,WAAYtc,GAAI,CAAE4T,GAAI,GAA7D,6BAKD7d,EAAMua,aAAeva,EAAMga,MAAM/U,OAAS,EACzC,cAACqY,GAAA,EAAD,CAAQnU,QAASnJ,EAAMiS,aAAvB,wBAEA,cAACqL,GAAA,EAAD,CAAQ/c,KAAK,SAAS4I,QAASnJ,EAAMqc,WAArC,8BC6LGmK,OAvYf,SAAqBxmB,GACnB,OACE,qCACE,oBAAIC,UAAU,OAAd,yBAEA,oBAAIA,UAAU,OAAd,uBACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAACuM,EAAA,EAAD,CACEvM,UAAU,YACVgK,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BtkB,GAAG,gBACHM,KAAK,gBACL0J,MAAM,eACNyC,QAAQ,WACRX,UAAQ,EACRhN,MAAOI,EAAMilB,WAAWwB,cACxBliB,MACEvE,EAAMqlB,kBAAkBoB,eACxBzmB,EAAMslB,gBAAgBmB,cAExBlB,WACEvlB,EAAMqlB,kBAAkBoB,cACpB,cACAzmB,EAAMslB,gBAAgBmB,cACtB,gBACA,KAEN1b,SAAU,SAACuB,GAAD,OAAWtM,EAAMwlB,wBAAwBlZ,MAGrD,cAACE,EAAA,EAAD,CACEvM,UAAU,OACVgK,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BtkB,GAAG,iBACHM,KAAK,iBACL0J,MAAM,SACNyC,QAAQ,WACRX,UAAQ,EACRhN,MAAOI,EAAMilB,WAAWyB,eACxBniB,MACEvE,EAAMqlB,kBAAkBqB,gBACxB1mB,EAAMslB,gBAAgBoB,eAExBnB,WACEvlB,EAAMqlB,kBAAkBqB,eAAiB,cAAgB,KAE3D3b,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,WAKnD,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAACE,EAAA,EAAD,CACEvM,UAAU,OACVgK,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BtkB,GAAG,mBACHM,KAAK,mBACL0J,MAAM,2BACNlL,MAAOI,EAAMilB,WAAW0B,iBACxB/Z,UAAQ,EACRW,QAAQ,WACRhJ,MACEvE,EAAMqlB,kBAAkBsB,kBACxB3mB,EAAMslB,gBAAgBqB,iBAExBpB,WACEvlB,EAAMqlB,kBAAkBsB,iBAAmB,cAAgB,KAE7D5b,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,UAInD,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAACE,EAAA,EAAD,CACEvM,UAAU,YACVgK,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BtkB,GAAG,eACHM,KAAK,eACL0J,MAAM,gBACNyC,QAAQ,WACR3N,MAAOI,EAAMilB,WAAW2B,aACxBha,UAAQ,EACRrI,MACEvE,EAAMqlB,kBAAkBuB,cACxB5mB,EAAMslB,gBAAgBsB,aAExBrB,WACEvlB,EAAMqlB,kBAAkBuB,aACpB,cACA5mB,EAAMslB,gBAAgBsB,aACtB,gBACA,KAEN7b,SAAU,SAACuB,GAAD,OAAWtM,EAAMwlB,wBAAwBlZ,MAGrD,cAACE,EAAA,EAAD,CACEvM,UAAU,OACVgK,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BtkB,GAAG,eACHM,KAAK,eACL0J,MAAM,OACNyC,QAAQ,WACRX,UAAQ,EACRhN,MAAOI,EAAMilB,WAAW4B,aACxBtiB,MACEvE,EAAMqlB,kBAAkBwB,cACxB7mB,EAAMslB,gBAAgBuB,aAExBtB,WACEvlB,EAAMqlB,kBAAkBwB,aAAe,cAAgB,KAEzD9b,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,WAInD,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAACE,EAAA,EAAD,CACEvM,UAAU,OACVgK,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BtkB,GAAG,iBACHM,KAAK,iBACL0J,MAAM,0BACNyC,QAAQ,WACRX,UAAQ,EACRhN,MAAOI,EAAMilB,WAAW6B,eACxBviB,MACEvE,EAAMqlB,kBAAkByB,gBACxB9mB,EAAMslB,gBAAgBwB,eAExBvB,WACEvlB,EAAMqlB,kBAAkByB,eAAiB,cAAgB,KAE3D/b,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,UAInD,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAACE,EAAA,EAAD,CACEvM,UAAU,YACVgK,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BtkB,GAAG,mBACHM,KAAK,mBACL0J,MAAM,iBACNyC,QAAQ,WACR3N,MAAOI,EAAMilB,WAAW8B,iBACxBna,UAAQ,EACRrI,MACEvE,EAAMqlB,kBAAkB0B,kBACxB/mB,EAAMslB,gBAAgByB,iBAExBxB,WACEvlB,EAAMqlB,kBAAkB0B,iBAAmB,cAAgB,KAE7Dhc,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,MAG/C,cAACE,EAAA,EAAD,CACEvM,UAAU,OACVgK,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BtkB,GAAG,iBACHM,KAAK,iBACL0J,MAAM,kBACNyC,QAAQ,WACRX,UAAQ,EACRhN,MAAOI,EAAMilB,WAAW+B,eACxBziB,MACEvE,EAAMqlB,kBAAkB2B,gBACxBhnB,EAAMslB,gBAAgB0B,eAExBzB,WACEvlB,EAAMqlB,kBAAkB2B,eAAiB,cAAgB,KAE3Djc,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,WAKnD,oBAAIrM,UAAU,SAEd,oBAAIA,UAAU,OAAd,qCACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAACuM,EAAA,EAAD,CACEvM,UAAU,YACVgK,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BtkB,GAAG,eACHM,KAAK,eACL0J,MAAM,eACNyC,QAAQ,WACR3N,MAAOI,EAAMilB,WAAWgC,aACxBra,UAAQ,EACRrI,MACEvE,EAAMqlB,kBAAkB4B,cACxBjnB,EAAMslB,gBAAgB2B,aAExB1B,WACEvlB,EAAMqlB,kBAAkB4B,aACpB,cACAjnB,EAAMslB,gBAAgB2B,aACtB,gBACA,KAENlc,SAAU,SAACuB,GAAD,OAAWtM,EAAMwlB,wBAAwBlZ,MAGrD,cAACE,EAAA,EAAD,CACEvM,UAAU,OACVgK,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BtkB,GAAG,gBACHM,KAAK,gBACL0J,MAAM,SACNyC,QAAQ,WACR3N,MAAOI,EAAMilB,WAAWiC,cACxBta,UAAQ,EACRrI,MACEvE,EAAMqlB,kBAAkB6B,eACxBlnB,EAAMslB,gBAAgB4B,cAExB3B,WACEvlB,EAAMqlB,kBAAkB6B,cAAgB,cAAgB,KAE1Dnc,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,WAKnD,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAACE,EAAA,EAAD,CACEvM,UAAU,OACVgK,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BtkB,GAAG,kBACHM,KAAK,kBACL0J,MAAM,2BACNyC,QAAQ,WACR3N,MAAOI,EAAMilB,WAAWkC,gBACxBva,UAAQ,EACRrI,MACEvE,EAAMqlB,kBAAkB8B,iBACxBnnB,EAAMslB,gBAAgB6B,gBAExB5B,WACEvlB,EAAMqlB,kBAAkB8B,gBAAkB,cAAgB,KAE5Dpc,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,UAInD,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAACE,EAAA,EAAD,CACEvM,UAAU,YACVgK,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BtkB,GAAG,cACHM,KAAK,cACL0J,MAAM,gBACNyC,QAAQ,WACR3N,MAAOI,EAAMilB,WAAWmC,YACxBxa,UAAQ,EACRrI,MACEvE,EAAMqlB,kBAAkB+B,aACxBpnB,EAAMslB,gBAAgB8B,YAExB7B,WACEvlB,EAAMqlB,kBAAkB+B,YACpB,cACApnB,EAAMslB,gBAAgB8B,YACtB,gBACA,KAENrc,SAAU,SAACuB,GAAD,OAAWtM,EAAMwlB,wBAAwBlZ,MAGrD,cAACE,EAAA,EAAD,CACEvM,UAAU,OACVgK,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BtkB,GAAG,cACHM,KAAK,cACL0J,MAAM,OACNyC,QAAQ,WACR3N,MAAOI,EAAMilB,WAAWoC,YACxBza,UAAQ,EACRrI,MACEvE,EAAMqlB,kBAAkBgC,aACxBrnB,EAAMslB,gBAAgB+B,YAExB9B,WACEvlB,EAAMqlB,kBAAkBgC,YAAc,cAAgB,KAExDtc,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,WAInD,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAACE,EAAA,EAAD,CACEvM,UAAU,OACVgK,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BtkB,GAAG,gBACHM,KAAK,gBACL0J,MAAM,0BACNyC,QAAQ,WACR3N,MAAOI,EAAMilB,WAAWqC,cACxB1a,UAAQ,EACRrI,MACEvE,EAAMqlB,kBAAkBiC,eACxBtnB,EAAMslB,gBAAgBgC,cAExB/B,WACEvlB,EAAMqlB,kBAAkBiC,cAAgB,cAAgB,KAE1Dvc,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,UAInD,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAACE,EAAA,EAAD,CACEvM,UAAU,YACVgK,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BtkB,GAAG,kBACHM,KAAK,kBACL0J,MAAM,iBACNyC,QAAQ,WACR3N,MAAOI,EAAMilB,WAAWsC,gBACxB3a,UAAQ,EACRrI,MACEvE,EAAMqlB,kBAAkBkC,iBACxBvnB,EAAMslB,gBAAgBiC,gBAExBhC,WACEvlB,EAAMqlB,kBAAkBkC,gBAAkB,cAAgB,KAE5Dxc,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,MAG/C,cAACE,EAAA,EAAD,CACEvM,UAAU,OACVgK,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BtkB,GAAG,gBACHM,KAAK,gBACL0J,MAAM,kBACNyC,QAAQ,WACR3N,MAAOI,EAAMilB,WAAWuC,cACxB5a,UAAQ,EACRrI,MACEvE,EAAMqlB,kBAAkBmC,eACxBxnB,EAAMslB,gBAAgBkC,cAExBjC,WACEvlB,EAAMqlB,kBAAkBmC,cAAgB,cAAgB,KAE1Dzc,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,WAKnD,eAAC,KAAD,CAAKrC,GAAI,CAAEvJ,QAAS,OAAQyc,cAAe,MAAOC,GAAI,GAAtD,UACE,cAACE,GAAA,EAAD,CACE7S,MAAM,UACNmC,SAA+B,IAArB5M,EAAMua,WAChBpR,QAASnJ,EAAMsmB,WACfrc,GAAI,CAAE4T,GAAI,GAJZ,uBAQA,cAAC,KAAD,CAAK5T,GAAI,CAAEoT,KAAM,cAChBrd,EAAM8d,eAAe9d,EAAMua,aAC1B,cAAC+C,GAAA,EAAD,CAAQ7S,MAAM,UAAUtB,QAASnJ,EAAMumB,WAAYtc,GAAI,CAAE4T,GAAI,GAA7D,6BAKD7d,EAAMua,aAAeva,EAAMga,MAAM/U,OAAS,EACzC,cAACqY,GAAA,EAAD,CAAQnU,QAASnJ,EAAMiS,aAAvB,wBAEA,cAACqL,GAAA,EAAD,CAAQ/c,KAAK,SAAS4I,QAASnJ,EAAMqc,WAArC,2BC9IKoL,OA3Of,SAAqBznB,GAUnB,OARAuC,qBAAU,WAGqB,GAFjBlC,SAASoR,eAAe,mBAE1BC,iBACR1R,EAAM0nB,wBAAuB,KAE9B,CAAC1nB,EAAMilB,aAGR,qCACE,oBAAIhlB,UAAU,OAAd,yBACA,uBAAMa,GAAG,kBAAkB6J,SAAU,SAACC,GAAD,OAAOA,EAAEC,kBAA9C,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC2B,EAAA,EAAD,CACEvM,UAAU,YACVgK,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BtkB,GAAG,cACHM,KAAK,cACL0J,MAAM,cACNyC,QAAQ,WACRhJ,MACEvE,EAAMqlB,kBAAkBsC,aACxB3nB,EAAMslB,gBAAgBqC,YAExBpC,WACEvlB,EAAMqlB,kBAAkBsC,YAAc,cAAgB,KAExDpnB,KAAK,OACLqR,UAAQ,EACR7G,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,MAG/C,cAACE,EAAA,EAAD,CACEvM,UAAU,OACVgK,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BtkB,GAAG,kBACHM,KAAK,kBACL0J,MAAM,kBACNyC,QAAQ,WACRhJ,MACEvE,EAAMqlB,kBAAkBuC,iBACxB5nB,EAAMslB,gBAAgBsC,gBAExBrC,WACEvlB,EAAMqlB,kBAAkBuC,gBAAkB,cAAgB,KAE5DrnB,KAAK,OACLqR,UAAQ,EACR7G,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,WAInD,cAAC,IAAD,CAAQrM,UAAU,OAAlB,SACE,cAAC,IAAD,UACE,eAAC2lB,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAY/kB,GAAG,wBAAf,qCAGA,eAACsO,GAAA,EAAD,CACEnF,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BhkB,KAAK,wBACL0kB,QAAQ,wBACRhlB,GAAG,wBACHlB,MAAOI,EAAMilB,WAAW4C,sBACxB/c,MAAM,SACNvG,MAAOvE,EAAMqlB,kBAAkBwC,sBAC/BjW,UAAQ,EACR7G,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,IAT/C,UAWE,cAAC2Z,GAAA,EAAD,CAAUrmB,MAAM,GAAhB,SACE,0CAEF,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,uBAAjB,kCAGA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,SAAjB,oBACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,SAAjB,oBACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,cAAjB,yBACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,SAAjB,oBACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,UAAjB,qBACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,SAAjB,oBACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,yBAAjB,oCAGA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,gBAAjB,2BACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,sBAAjB,iCAGA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,kBAAjB,6BACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,WAAjB,sBACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,UAAjB,qBACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,iBAAjB,4BACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,qBAAjB,gCAGA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,eAAjB,0BACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,UAAjB,4CAEDI,EAAMqlB,kBAAkBwC,sBACvB,cAAC1B,GAAA,EAAD,CAAgB5hB,OAAO,EAAvB,yBACE,YAIV,oBAAItE,UAAU,SACd,cAAC,IAAD,CAAQA,UAAU,OAAlB,SACE,cAAC,IAAD,UACE,eAAC2lB,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAY/kB,GAAG,sBAAf,sEAGA,eAACsO,GAAA,EAAD,CACEnF,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BhkB,KAAK,sBACL0kB,QAAQ,sBACRhlB,GAAG,sBACHlB,MAAOI,EAAMilB,WAAW6C,oBACxBhd,MAAM,SACNvG,MAAOvE,EAAMqlB,kBAAkByC,oBAC/BlW,UAAQ,EACR7G,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,IAT/C,UAWE,cAAC2Z,GAAA,EAAD,CAAUrmB,MAAM,GAAhB,SACE,0CAEF,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,iBAAjB,4BACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,SAAjB,oBACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,SAAjB,oBACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,WAAjB,sBACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,MAAjB,iBACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,OAAjB,kBACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,SAAjB,uBAEDI,EAAMqlB,kBAAkByC,oBACvB,cAAC3B,GAAA,EAAD,CAAgB5hB,OAAO,EAAvB,yBACE,YAIV,cAAC,IAAD,CAAQtE,UAAU,OAAlB,SACE,cAAC,IAAD,UACE,eAAC2lB,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAY/kB,GAAG,kBAAf,+BACA,eAACsO,GAAA,EAAD,CACEnF,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BhkB,KAAK,kBACL0kB,QAAQ,kBACRhlB,GAAG,kBACHlB,MAAOI,EAAMilB,WAAW8C,gBACxBjd,MAAM,SACNvG,MAAOvE,EAAMqlB,kBAAkB0C,gBAC/BnW,UAAQ,EACR7G,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,IAT/C,UAWE,cAAC2Z,GAAA,EAAD,CAAUrmB,MAAM,GAAhB,SACE,0CAEF,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,MAAjB,+BACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,MAAjB,6CAGA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,MAAjB,qCACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,MAAjB,gCACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,MAAjB,gCACA,cAACqmB,GAAA,EAAD,CAAUrmB,MAAO,MAAjB,oCAKR,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC4M,EAAA,EAAD,CACEvM,UAAU,YACVgK,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BtkB,GAAG,YACHM,KAAK,YACL0J,MAAM,YACNyC,QAAQ,WACRhJ,MACEvE,EAAMqlB,kBAAkB2C,WACxBhoB,EAAMslB,gBAAgB0C,UAExBzC,WACEvlB,EAAMqlB,kBAAkB2C,UAAY,cAAgB,KAEtDznB,KAAK,OACLqR,UAAQ,EACR7G,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,MAG/C,cAACE,EAAA,EAAD,CACEvM,UAAU,OACVgK,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BtkB,GAAG,WACHM,KAAK,WACL0J,MAAM,sBACNyC,QAAQ,WACRxC,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,WAMnD,eAAC,KAAD,CAAKrC,GAAI,CAAEvJ,QAAS,OAAQyc,cAAe,MAAOC,GAAI,GAAtD,UACE,cAACE,GAAA,EAAD,CACE7S,MAAM,UACNmC,SAA+B,IAArB5M,EAAMua,WAChBpR,QAASnJ,EAAMsmB,WACfrc,GAAI,CAAE4T,GAAI,GAJZ,uBAQA,cAAC,KAAD,CAAK5T,GAAI,CAAEoT,KAAM,cAChBrd,EAAM8d,eAAe9d,EAAMua,aAC1B,cAAC+C,GAAA,EAAD,CAAQ7S,MAAM,UAAUtB,QAASnJ,EAAMumB,WAAYtc,GAAI,CAAE4T,GAAI,GAA7D,6BAKD7d,EAAMua,aAAeva,EAAMga,MAAM/U,OAAS,EACzC,cAACqY,GAAA,EAAD,CAAQnU,QAASnJ,EAAMiS,aAAvB,wBAEA,cAACqL,GAAA,EAAD,CAAQ/c,KAAK,SAAS4I,QAASnJ,EAAMqc,WAArC,8BCuCG4L,OA5Qf,SAAwBjoB,GAUtB,OARAuC,qBAAU,WAGqB,GAFjBlC,SAASoR,eAAe,sBAE1BC,iBACR1R,EAAMkoB,2BAA0B,KAEjC,CAACloB,EAAMmoB,cAGR,qCACE,oBAAIloB,UAAU,OAAd,4BACA,uBAAMa,GAAG,qBAAqB6J,SAAU,SAACC,GAAD,OAAOA,EAAEC,kBAAjD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAACoB,EAAA,EAAD,CACEhM,UAAU,OACViM,eAAa,EACbpL,GAAG,gCACHqL,QAASnM,EAAMooB,oBAEfhc,eAAgB,SAACC,GAAD,OAAYA,EAAO5L,aAEnCsK,SAAU,SAACuB,EAAO1M,GAChBI,EAAMqoB,eAAezoB,EAAMkB,KAE7BmJ,GAAI,CAAE7J,MAAO,KACbmM,YAAa,SAACpC,GAAD,OACX,cAACqC,EAAA,EAAD,2BAAerC,GAAf,IAAuByH,UAAQ,EAAC9G,MAAM,8BAK9C,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC0B,EAAA,EAAD,CACEvM,UAAU,OACVgK,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/B7kB,KAAK,OACLO,GAAG,gBACHM,KAAK,gBACL0J,MAAM,kBACNyC,QAAQ,WACRX,UAAQ,EACRhN,MAAOI,EAAMilB,WAAWqD,cACxB/jB,MACEvE,EAAMqlB,kBAAkBiD,eACxBtoB,EAAMslB,gBAAgBgD,cAExB/C,WACEvlB,EAAMqlB,kBAAkBiD,cAAgB,cAAgB,KAE1Dvd,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,UAInD,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAACE,EAAA,EAAD,CACEvC,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BnlB,UAAU,YACVa,GAAG,eACHM,KAAK,eACL0J,MAAM,gBACNyC,QAAQ,WACRX,UAAQ,EACRhN,MAAOI,EAAMilB,WAAWrE,aACxBrc,MACEvE,EAAMqlB,kBAAkBzE,cACxB5gB,EAAMslB,gBAAgB1E,aAExB2E,WACEvlB,EAAMqlB,kBAAkBoB,cACpB,cACAzmB,EAAMslB,gBAAgBmB,cACtB,gBACA,KAEN1b,SAAU,SAACuB,GAAD,OAAWtM,EAAMwlB,wBAAwBlZ,MAGrD,cAACE,EAAA,EAAD,CACEvM,UAAU,OACVa,GAAG,WACHM,KAAK,WACL0J,MAAM,cACNyC,QAAQ,WACRX,UAAQ,EACRhN,MAAOI,EAAMilB,WAAWnE,SACxBvc,MACEvE,EAAMqlB,kBAAkBvE,UACxB9gB,EAAMslB,gBAAgBxE,SAExByE,WACEvlB,EAAMqlB,kBAAkBvE,SAAW,cAAgB,KAErD/V,SAAU,SAACuB,GAAD,OAAWtM,EAAMgmB,kBAAkB1Z,WAInD,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAACE,EAAA,EAAD,CACEvM,UAAU,YACVgK,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BtkB,GAAG,eACHM,KAAK,eACL0J,MAAM,gBACNyC,QAAQ,WACRX,UAAQ,EACRhN,MAAOI,EAAMilB,WAAWlE,aACxBxc,MACEvE,EAAMqlB,kBAAkBtE,cACxB/gB,EAAMslB,gBAAgBvE,aAExBwE,WACEvlB,EAAMqlB,kBAAkBtE,aAAe,cAAgB,KAEzDhW,SAAU,SAACuB,GAAD,OAAWtM,EAAMwlB,wBAAwBlZ,UAIzD,oBAAIrM,UAAU,SAEbD,EAAMuoB,gBAAgBrjB,KAAI,SAACsjB,GAAD,OACzB,qCACE,cAAC,IAAD,CAAQvoB,UAAU,OAAlB,SACE,cAAC,IAAD,UACE,qDAGJ,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAACuM,EAAA,EAAD,CACEvC,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BnlB,UAAU,OACV2M,UAAQ,EACRhN,MAAO4oB,EAAO7Q,QACd7W,GAAG,yBACHM,KAAK,yBACL0J,MAAM,WACNyC,QAAQ,iBAId,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAACf,EAAA,EAAD,CACEvC,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BnlB,UAAU,YACV2M,UAAQ,EACRhN,MAAO4oB,EAAO5Q,OACd9W,GAAG,wBACHM,KAAK,wBACL0J,MAAM,UACNyC,QAAQ,aAEV,cAACf,EAAA,EAAD,CACEvM,UAAU,YACV2M,UAAQ,EACR3C,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BxlB,MAAO4oB,EAAO3Q,KACd/W,GAAG,yBACHM,KAAK,yBACL0J,MAAM,WACNyC,QAAQ,aAEV,cAACf,EAAA,EAAD,CACEvM,UAAU,YACVgK,GAAI,CAAEkb,SAAU,IAAKC,SAAU,KAC/BxlB,MAAO4oB,EAAO1Q,MACdlL,UAAQ,EACR9L,GAAG,8BACHM,KAAK,8BACL0J,MAAM,qBACNyC,QAAQ,wBAMlB,oBAAItN,UAAU,SAGd,eAAC,IAAD,WACE,oBAAGA,UAAU,OAAb,UACE,yCADF,kCACiD,KAE7C0gB,OAAO3gB,EAAMilB,WAAWrE,cACxBD,OAAO3gB,EAAMilB,WAAWlE,eACxBF,QAAQ,GAAI,IACb7gB,EAAMilB,WAAWnE,YAEpB,oBAAG7gB,UAAU,OAAb,UACE,2CADF,+BACgD,MAE3C0gB,OAAO3gB,EAAMilB,WAAWrE,cACvBD,OAAO3gB,EAAMilB,WAAWlE,eAC1BJ,OAAO,MACPE,QAAQ,GAAI,IACb7gB,EAAMilB,WAAWnE,YAEpB,oBAAG7gB,UAAU,OAAb,UACE,+DADF,6BACkE,MAE7D0gB,OAAO3gB,EAAMilB,WAAWrE,cACvBD,OAAO3gB,EAAMilB,WAAWlE,eAC1BJ,OAAO,OACPE,QAAQ,GAAI,IACb7gB,EAAMilB,WAAWnE,YAEpB,oBAAG7gB,UAAU,OAAb,UACE,4CADF,kCACoD,MAE/C0gB,OAAO3gB,EAAMilB,WAAWrE,cACvBD,OAAO3gB,EAAMilB,WAAWlE,eAC1BJ,OAAO,MACPA,OAAO,MACPE,QAAQ,GAAI,IACb7gB,EAAMilB,WAAWnE,YAEpB,oBAAG7gB,UAAU,OAAb,UACE,6DADF,gCACmE,IACjE,gCAEK0gB,OAAO3gB,EAAMilB,WAAWrE,cACvBD,OAAO3gB,EAAMilB,WAAWlE,eACxBJ,OAAO,MACRA,OAAO3gB,EAAMilB,WAAWrE,cACvBD,OAAO3gB,EAAMilB,WAAWlE,eACxBJ,OAAO,MACPA,OAAO,MACTE,QAAQ,GAAI,IACb7gB,EAAMilB,WAAWnE,kBAKxB,eAAC,KAAD,CAAK7W,GAAI,CAAEvJ,QAAS,OAAQyc,cAAe,MAAOC,GAAI,GAAtD,UACE,cAACE,GAAA,EAAD,CACE7S,MAAM,UACNmC,SAA+B,IAArB5M,EAAMua,WAChBpR,QAASnJ,EAAMsmB,WACfrc,GAAI,CAAE4T,GAAI,GAJZ,uBAQA,cAAC,KAAD,CAAK5T,GAAI,CAAEoT,KAAM,cAChBrd,EAAM8d,eAAe9d,EAAMua,aAC1B,cAAC+C,GAAA,EAAD,CAAQ7S,MAAM,UAAUtB,QAASnJ,EAAMumB,WAAYtc,GAAI,CAAE4T,GAAI,GAA7D,6BAKD7d,EAAMua,aAAeva,EAAMga,MAAM/U,OAAS,EACzC,cAACqY,GAAA,EAAD,CAAQnU,QAASnJ,EAAMiS,aAAvB,wBAEA,cAACqL,GAAA,EAAD,CAAQ/c,KAAK,SAAS4I,QAASnJ,EAAMqc,WAArC,8B,UCnMGoM,OA/Df,SAA4BzoB,GAa1B,OACE,qCACE,oBAAIC,UAAU,OAAd,+BACA,cAAC,IAAD,UACE,cAAC,IAAD,4DAEF,cAAC,IAAD,UACE,cAACyoB,GAAA,EAAD,UAEG1oB,EAAM4H,UACJ+gB,QAAO,SAACtoB,GAAD,MAAgC,aAAlBA,EAASE,QAC9B2E,KAAI,SAAC7E,GAAD,OACH,cAACoM,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CAAU5B,SAAU,kBA1Bf,SAAC6d,GACpB,GAAI5oB,EAAM6oB,cAAclF,SAASiF,GAAjC,CACExlB,QAAQC,IAAR,UAAeulB,EAAf,uCACA,IAAMhW,EAAQ5S,EAAM6oB,cAAcC,QAAQF,GACtChW,GAAS,GACX5S,EAAM6oB,cAAcE,OAAOnW,EAAO,QAItC5S,EAAM6oB,cAAcG,KAAKJ,GAiBeK,CAAa5oB,EAASS,OAElDgK,MAAOzK,EAAS6oB,wBAM1B,eAAC,KAAD,CAAKjf,GAAI,CAAEvJ,QAAS,OAAQyc,cAAe,MAAOC,GAAI,GAAtD,UACE,cAACE,GAAA,EAAD,CACE7S,MAAM,UACNmC,SAA+B,IAArB5M,EAAMua,WAChBpR,QAASnJ,EAAMsmB,WACfrc,GAAI,CAAE4T,GAAI,GAJZ,uBAQA,cAAC,KAAD,CAAK5T,GAAI,CAAEoT,KAAM,cAChBrd,EAAM8d,eAAe9d,EAAMua,aAC1B,cAAC+C,GAAA,EAAD,CAAQ7S,MAAM,UAAUtB,QAASnJ,EAAMumB,WAAYtc,GAAI,CAAE4T,GAAI,GAA7D,6BAKD7d,EAAMua,aAAeva,EAAMga,MAAM/U,OAAS,EACzC,cAACqY,GAAA,EAAD,CAAQnU,QAASnJ,EAAMiS,aAAvB,wBAEA,cAACqL,GAAA,EAAD,CAAQ/c,KAAK,SAAS4I,QAASnJ,EAAMqc,WAArC,2BC+kBK8M,OAzmBf,SAAqBnpB,GAAQ,IAAD,UAC1B,EAAsCR,qBAAtC,mBAAO2oB,EAAP,KAAoBE,EAApB,KACA,EAAkC7oB,oBAAS,GAA3C,mBAAOyE,EAAP,KAAkBC,EAAlB,KACA,EAAgC1E,qBAAhC,mBAAO4pB,EAAP,KAAiBzD,EAAjB,KACA,EAAsDnmB,qBAAtD,mBAAO4oB,EAAP,KAA4BiB,EAA5B,KAIMR,EAAgB,GACtB,EAAkCrpB,qBAAlC,mBAAOoI,EAAP,KAAkB0hB,EAAlB,KAIA,EAA0C9pB,mBAAS,IAAnD,mBAAOimB,EAAP,KAAsB8D,EAAtB,KAOQtR,GAJSpY,IAATJ,KAIkBoO,cAAlBoK,eAGF+B,EAAQ,CACZ,qBACA,cACA,cACA,iBACA,aAGF,EAAoC7M,IAAM3N,SAAS,GAAnD,mBAAO+a,EAAP,KAAmBC,EAAnB,KACA,EAA8BrN,IAAM3N,SAAS,IAAIib,KAAjD,mBAAOC,EAAP,KAAgBC,EAAhB,KAGMmD,EAAiB,SAAC3B,KAKlB7a,GAAgBkF,IAEhB0V,GAAgB,SAACC,GACrB,OAAOzB,EAAQ0B,IAAID,IAGfE,GAAa,SAACzR,GAClB,IAAI0R,EAAa5B,EACbwB,GAAc3B,KAChB+B,EAAa,IAAI7B,IAAI6B,EAAW/D,WACrB7N,OAAO6P,GAGD,IAAfA,GAAiD,GAA7BiP,IAGL,IAAfjP,GAA2C,GAAvBkP,IAGL,IAAflP,GAA8C,GAA1BmP,KAGxB9e,EAAEC,iBACF2P,GAAc,SAAC+B,GAAD,OAAoBA,EAAiB,KACnD5B,EAAW2B,KAGPgK,GAAa,WACjB9L,GAAc,SAAC+B,GAAD,OAAoBA,EAAiB,MAG/CgK,GAAa,WAIf,MAAM,IAAIoD,MAAM,+CA3EM,SA2FX1X,KA3FW,8EA2F1B,4BAAA9N,EAAA,6DAEEkU,KAFF,SAG0B4M,GAAWrE,aAHrC,+BAGqDqE,GAAWlE,aAAxD6I,EAHR,mBAIQC,GACJT,EACAnE,GAAW6E,cACXF,EAAS/oB,WACTokB,GAAW8C,iBARf,6EA3F0B,sBA2G1B,OAAoC5a,IAAM3N,SAAS,CAEjD0lB,eAAgB,GAChBxE,yBAA0B,GAC1BqF,aAAc,GACdK,aAAc,GACdC,WAAY,GAEZI,cAAe,GACfsD,cAAe,GACfC,iBAAkB,GAClBtD,eAAgB,GAChBC,iBAAkB,GAClBC,aAAc,GACdC,aAAc,GACdC,eAAgB,GAChBC,iBAAkB,GAClBC,eAAgB,GAEhBC,aAAc,GACdgD,aAAc,GACdC,gBAAiB,GACjBhD,cAAe,GACfC,gBAAiB,GACjBC,YAAa,GACbC,YAAa,GACbC,cAAe,GACfC,gBAAiB,GACjBC,cAAe,GAEfG,YAAa,GACbC,gBAAiB,GACjBC,sBAAuB,GACvBC,oBAAqB,GACrBC,gBAAiB,GACjBC,UAAW,GACXmC,SAAU,GACVpJ,aAAc,GAEduH,cAAe,GACf1H,aAAc,GACdE,SAAU,KAzCZ,qBAAOmE,GAAP,MAAmBS,GAAnB,MA4CA,GAA8CvY,IAAM3N,SAAS,CAAC,KAA9D,qBAAO+oB,GAAP,MAAwB6B,GAAxB,MAIA,GAAkDjd,IAAM3N,SAAS,CAE/D0lB,gBAAgB,EAChBxE,0BAA0B,EAC1BqF,cAAc,EACdK,cAAc,EACdC,YAAY,EAEZI,eAAe,EACfsD,eAAe,EACfC,kBAAkB,EAClBtD,gBAAgB,EAChBC,kBAAkB,EAClBC,cAAc,EACdC,cAAc,EACdC,gBAAgB,EAChBC,kBAAkB,EAClBC,gBAAgB,EAEhBC,cAAc,EACdgD,cAAc,EACdC,iBAAiB,EACjBhD,eAAe,EACfC,iBAAiB,EACjBC,aAAa,EACbC,aAAa,EACbC,eAAe,EACfC,iBAAiB,EACjBC,eAAe,EAEfG,aAAa,EACbC,iBAAiB,EACjBC,uBAAuB,EACvBC,qBAAqB,EACrBC,iBAAiB,EACjBC,WAAW,EACXmC,UAAU,EACVpJ,cAAc,EAEduH,eAAe,EACf1H,cAAc,EACdE,UAAU,IAzCZ,qBAAOuE,GAAP,MAA0BgF,GAA1B,MA8CA,GAA8Cld,IAAM3N,SAAS,CAC3D0lB,gBAAgB,EAChBuB,eAAe,EACfG,cAAc,EACdK,cAAc,EACdqD,aAAa,EACbvJ,cAAc,IANhB,qBAAOuE,GAAP,MAAwBiF,GAAxB,MAUA,GACE/qB,oBAAS,GADX,qBAAOgqB,GAAP,MAAkCxE,GAAlC,MAEA,GAAsDxlB,oBAAS,GAA/D,qBAAOiqB,GAAP,MAA4B/B,GAA5B,MACA,GAA4DloB,oBAAS,GAArE,qBAAOkqB,GAAP,MAA+BxB,GAA/B,MAGA,SAASlC,GAAkB1Z,GACzB,IAAMlL,EAAOkL,EAAMtB,OAAO5J,KACpBxB,EAAQ0M,EAAMtB,OAAOpL,MAE3B8lB,GAAc,2BAAKT,IAAN,mBAAmB7jB,EAAOxB,KACvCyqB,GAAqB,2BAAKhF,IAAN,mBAA0BjkB,GAAO,KAIvD,SAASokB,GAAwBlZ,GAC/B,IAAMlL,EAAOkL,EAAMtB,OAAO5J,KACpBxB,EAAQ0M,EAAMtB,OAAOpL,MAGvB4qB,MAAM5qB,GACR2qB,GAAmB,2BAAKjF,IAAN,mBAAwBlkB,GAAO,KAEjDmpB,GAAmB,2BAAKjF,IAAN,mBAAwBlkB,GAAO,KAGnDskB,GAAc,2BAAKT,IAAN,mBAAmB7jB,EAAOxB,KACvCyqB,GAAqB,2BAAKhF,IAAN,mBAA0BjkB,GAAO,KA9O7B,SAuUXyoB,GAvUW,uFAuU1B,WACEpT,EACAC,EACAC,EACAC,GAJF,eAAAzS,EAAA,6DAMMsmB,GAAc,EANpB,SAOQjU,GAAoBC,EAAOC,EAAaC,EAAWC,GACtD5T,MAAK,SAAC8V,GACL1V,QAAQC,IAAIyV,GACZ2R,GAAc,EACdnpB,GACG4E,KAAK,gBAAiB,CACrBua,WAAYwE,GAAWc,aACvBK,aAAcnB,GAAWmB,aACzBsE,YAAW,OAAEzF,SAAF,IAAEA,QAAF,EAAEA,GAAYoB,WACzBsB,YAAa1C,GAAW0C,YACxBC,gBAAiB3C,GAAW2C,gBAC5BE,oBAAqB7C,GAAW6C,oBAChCC,gBAAiB9C,GAAW8C,gBAC5BC,UAAW/C,GAAW+C,UACtBmC,SAAQ,OAAElF,SAAF,IAAEA,QAAF,EAAEA,GAAYkF,SACtBpI,QAASoG,EACT7nB,YAAa2X,EACbuK,eAAgByC,GAAWvE,yBAC3BiK,eAAgB7R,EAAK,EACrBzY,SAAUwoB,IAEX7lB,MAAK,SAACC,GAELmV,KACAwS,IAAe,EAAM,iDAEtB1nB,OAAM,SAAUqB,GACXA,EAAMC,UAGRpB,QAAQC,IAAIkB,EAAMC,SAASH,MAC3BjB,QAAQC,IAAIkB,EAAMC,SAASC,QAC3BrB,QAAQC,IAAIkB,EAAMC,SAAS7C,SAE3ByW,KACAwS,IAAe,EAAO,6CACbrmB,EAAMG,SAIftB,QAAQC,IAAIkB,EAAMG,SAClBkmB,IAAe,EAAO,8CAGtBxnB,QAAQC,IAAI,QAASkB,EAAMI,SAC3BimB,IAAe,EAAO,mDAI7B1nB,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAzDlB,gCA2DSsnB,GA3DT,4CAvU0B,sBAmP1BloB,oBAAS,sBAAC,sBAAA4B,EAAA,sEACF7C,GAAc8C,IAAI,gBAAkB6T,GAAejV,MAAK,SAACC,GAC7DyiB,IAAc,SAACrf,GACb,OAAO,2BACFA,GADL,IAEE6e,eAAgBjiB,EAAIoB,KAAKvD,GACzB2lB,cAAexjB,EAAIoB,KAAKe,YAAYC,QAAQf,QAE5CoiB,eAAgBzjB,EAAIoB,KAAKe,YAAYC,QAAQjE,KAC7CulB,iBAAkB1jB,EAAIoB,KAAKe,YAAYC,QAAQC,OAC/CshB,aAAc3jB,EAAIoB,KAAKe,YAAYC,QAAQE,UAC3CshB,aAAc5jB,EAAIoB,KAAKe,YAAYC,QAAQG,KAC3CshB,eAAgB7jB,EAAIoB,KAAKe,YAAYC,QAAQI,aAC7CshB,iBAAkB9jB,EAAIoB,KAAKe,YAAYC,QAAQmL,MAC/CwW,eAAgB/jB,EAAIoB,KAAKe,YAAYC,QAAQkL,MAC7Csa,iBAAkB5nB,EAAIoB,KAAKe,YAAYC,QAAQqT,eAGnDxU,GAAa,MAlBP,uBAuBF5C,GAAc8C,IAAd,SAA2BpB,MAAK,SAACwB,GACrCkhB,IAAc,SAACrf,GAAU,IAAD,EACtB,OAAO,2BACFA,GADL,IAEE4gB,aAAY,UAAEziB,EAASH,KAAK,GAAGnD,gBAAnB,aAAE,EAA2BC,QAAQmD,QAEjD4iB,cAAe1iB,EAASH,KAAK,GAAGnD,SAASC,QAAQC,KACjD+lB,gBAAiB3iB,EAASH,KAAK,GAAGnD,SAASC,QAAQmE,OACnD8hB,YAAa5iB,EAASH,KAAK,GAAGnD,SAASC,QAAQoE,UAC/C8hB,YAAa7iB,EAASH,KAAK,GAAGnD,SAASC,QAAQqE,KAC/C8hB,cAAe9iB,EAASH,KAAK,GAAGnD,SAASC,QAAQsE,aACjD8hB,gBAAiB/iB,EAASH,KAAK,GAAGnD,SAASC,QAAQqP,MACnDgX,cAAehjB,EAASH,KAAK,GAAGnD,SAASC,QAAQoP,cAnC/C,uBA0CFjP,GACH8C,IADG,+BACyB6T,IAC5BjV,MAAK,SAACwB,GACL6kB,EAAuB7kB,EAASH,SA7C5B,uBAiDF/C,GAAc8C,IAAI,kBAAkBpB,MAAK,SAACC,GAC9CsmB,EAAiBtmB,EAAIoB,SAlDf,wBAsDF/C,GACH8C,IAAI,0BAA4B6T,GAChCjV,MAAK,SAACC,GACLqmB,EAAarmB,EAAIoB,SAzDb,4CA4DP,CAAC4T,IAGJ1V,oBAAS,sBAAC,sBAAA4B,EAAA,yDACmB,qBAAhBgkB,EADH,gCAEA7mB,GAAc8C,IAAd,kBAA6B+jB,EAA7B,MAA6CnlB,MAAK,SAACwB,GAAc,IAAD,EACpEkhB,IAAc,SAACrf,GAAU,IAAD,gBACtB,OAAO,2BACFA,GADL,OAEEya,SAAQ,UAAEtc,EAASH,YAAX,aAAE,EAAegT,SACzBiR,cAAa,UAAE9jB,EAASH,YAAX,aAAE,EAAe7D,WAC9BogB,aAAY,UAAEpc,EAASH,YAAX,aAAE,EAAe4d,YAC7BlB,aAAY,UAAEvc,EAASH,YAAX,aAAE,EAAemT,iBAL/B,wCAMgBhT,EAASH,YANzB,aAMgB,EAAe4d,aAN/B,yCAOiBzd,EAASH,YAP1B,aAOiB,EAAe0U,eAPhC,sCAQcvU,EAASH,YARvB,aAQc,EAAevD,IAR7B,OAWFspB,GAAkB,UAAC5lB,EAASH,YAAV,aAAC,EAAeiT,gBAf9B,2CAkBP,CAAC6Q,IAoEJ,IAAInF,GAAWC,cAEf,SAAS2H,GAAeE,EAAcC,GACpC,IAAIC,EAAa,iBAAmB/F,GAAWC,eAC/ClC,GAASgI,EAAY,CACnBnH,SAAS,EACTzC,MAAO,CAAEC,QAASyJ,EAAcnmB,QAASomB,KAK7C,OAAwC5d,IAAM3N,UAAS,GAAvD,qBAAO0Y,GAAP,MAAqBC,GAArB,MACMC,GAAsB,WAC1BD,IAAgB,IAEZE,GAAuB,WAC3BF,IAAiBD,KAGnB,OACE,mCACGjU,EACC,qBAAKhE,UAAU,iBAAf,SACE,cAAC,IAAD,UACE,sBAAMA,UAAU,kBAAhB,2BAIJ,qCACE,yDACA,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMW,GAAG,gBAAT,2BAEF,cAAC,IAAD,UACE,eAAC,IAAD,CAAMA,GAAI,iBAAmBqX,EAA7B,yBACeA,OAGjB,cAAC,IAAD,CAAmBuG,QAAM,EAAzB,uCAEF,uBACA,8BACE,eAAC/B,GAAA,EAAD,CAAKxS,GAAI,CAAE7J,MAAO,QAAlB,UACE,cAACsc,GAAA,EAAD,CAASzc,UAAU,OAAOsa,WAAYA,EAAtC,SACGP,EAAM9U,KAAI,SAAC4F,EAAO8H,GACjB,IAAM+J,EAAY,GACZC,EAAa,GASnB,OAHIV,GAActJ,KAChB+J,EAAUE,WAAY,GAGtB,cAACC,GAAA,EAAD,2BAAsBH,GAAtB,aACE,cAACI,GAAA,EAAD,2BAAeH,GAAf,aAA4B9R,OADnBA,QAMhByP,IAAeP,EAAM/U,OACpB,eAAC,IAAMW,SAAP,WACE,cAACoX,GAAA,EAAD,CAAY/S,GAAI,CAAEgT,GAAI,EAAGC,GAAI,GAA7B,mDAGA,eAACT,GAAA,EAAD,CAAKxS,GAAI,CAAEvJ,QAAS,OAAQyc,cAAe,MAAOC,GAAI,GAAtD,UACE,cAACX,GAAA,EAAD,CAAKxS,GAAI,CAAEoT,KAAM,cACjB,cAACC,GAAA,EAAD,CAAQnU,QAxXN,WAClBqR,EAAc,IAuXE,mCAIJ,cAAC,IAAM5U,SAAP,UACkB,IAAf2U,EACC,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,GACE0K,WAAYA,GACZQ,cAAeA,EACfE,YAAaA,EACbD,cAAeA,GACfL,kBAAmBA,GACnBgF,qBAAsBA,GACtB/E,gBAAiBA,GACjBiF,mBAAoBA,GACpBvE,kBAAmBA,GACnBR,wBAAyBA,GAEzBgE,0BAA2BA,GAC3BxE,6BACEA,GAGFsB,WAAYA,GACZxI,eAAgBA,EAChBvD,WAAYA,EACZgM,WAAYA,IApBd,4BAqBchM,GArBd,uBAsBSP,GAtBT,8BAuBgB/H,IAvBhB,4BAwBcoK,IAxBd,QA4Ba,IAAf9B,EACF,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,GACE0K,WAAYA,GACZS,cAAeA,GACfL,kBAAmBA,GACnBgF,qBAAsBA,GACtB/E,gBAAiBA,GACjBiF,mBAAoBA,GACpBvE,kBAAmBA,GACnBR,wBAAyBA,GAEzBc,WAAYA,GACZxI,eAAgBA,EAChBvD,WAAYA,EACZgM,WAAYA,IAbd,4BAcchM,GAdd,uBAeSP,GAfT,8BAgBgB/H,IAhBhB,4BAiBcoK,IAjBd,QAqBa,IAAf9B,EACF,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,GACE0K,WAAYA,GACZS,cAAeA,GACfL,kBAAmBA,GACnBgF,qBAAsBA,GACtB/E,gBAAiBA,GACjBiF,mBAAoBA,GACpBvE,kBAAmBA,GACnBR,wBAAyBA,GAEzBiE,oBAAqBA,GACrB/B,uBAAwBA,GAExBpB,WAAYA,GACZxI,eAAgBA,EAChBvD,WAAYA,EACZgM,WAAYA,IAhBd,4BAiBchM,GAjBd,uBAkBSP,GAlBT,8BAmBgB/H,IAnBhB,4BAoBcoK,IApBd,QAwBa,IAAf9B,EACF,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,GACE0K,WAAYA,GACZS,cAAeA,GACfL,kBAAmBA,GACnBgF,qBAAsBA,GACtB/E,gBAAiBA,GACjBiF,mBAAoBA,GACpBvE,kBAAmBA,GACnBR,wBAAyBA,GACzB+C,gBAAiBA,GACjB6B,mBAAoBA,GACpBhC,oBAAqBA,EACrBD,YAAaA,EACbE,eAAgBA,EAEhBqB,uBAAwBA,GACxBxB,0BAA2BA,GAE3B5B,WAAYA,GACZxI,eAAgBA,EAChBvD,WAAYA,EACZgM,WAAYA,IArBd,4BAsBchM,GAtBd,uBAuBSP,GAvBT,8BAwBgB/H,IAxBhB,4BAyBcoK,IAzBd,QA8BJ,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,GACEwM,cAAeA,EACfjhB,UAAWA,EAEX0e,WAAYA,GACZxI,eAAgBA,EAChBvD,WAAYA,EACZgM,WAAYA,IAPd,4BAQchM,GARd,uBASSP,GATT,8BAUgB/H,IAVhB,4BAWcoK,IAXd,eAoBd,cAAC1C,GAAA,EAAD,CACE1P,GAAI,CAAEQ,MAAO,OAAQmP,OAAQ,SAACC,GAAD,OAAWA,EAAMD,OAAOE,OAAS,IAC9D9J,KAAMkI,GACN/O,QAASiP,GAHX,SAKE,cAAC2B,GAAA,EAAD,CAAkBtP,MAAM,oBC7crBwgB,OA1Kf,SAAgBjrB,GACd,IAAMsB,EAAgBkF,IAEtB,EAA0BhH,mBAAS,IAAnC,mBAAO0rB,EAAP,KAAcC,EAAd,KAEA,EAAqD3rB,mBAAS,IAA9D,mBAAO4rB,EAAP,KAA2BC,EAA3B,KAEA,EAAsD7rB,mBAAS,IAA/D,mBAAO8rB,EAAP,KAA4BC,EAA5B,KACA,EAA0C/rB,mBAAS,IAAnD,mBAAOqE,EAAP,KAAsBC,EAAtB,KACA,EAA8CtE,mBAAS,IAAvD,mBAAO6I,EAAP,KAAwBoF,EAAxB,KAEA,EAAwCjO,oBAAS,GAAjD,mBAAOgsB,EAAP,KAAqBC,EAArB,KAGA,GADmBhX,OAAO3G,SAAlB4d,OAC8BC,eAAtC,mBAAKC,EAAL,UAEArpB,qBAAU,WACR4oB,EAASU,KACR,IAEH,IAAIA,EAAcD,EAAaxnB,IAAI,IAWnC,SAAS0nB,EAAaC,GACpBzqB,EAAc8C,IAAI,wBAA0B2nB,GAAU/oB,MAAK,SAACC,GAC1DG,QAAQC,IAAIJ,GACZooB,EAAuBpoB,EAAIoB,SAE7B/C,EAAc8C,IAAI,uBAAyB2nB,GAAU/oB,MAAK,SAACC,GACzDG,QAAQC,IAAIJ,GACZsoB,EAAuBtoB,EAAIoB,SAE7BjB,QAAQC,IAAI,yCAA2C0oB,GAGvDzqB,EAAc8C,IAAI,cAAcpB,MAAK,SAACC,GACpCa,EAAiBb,EAAIoB,SAIvB/C,EAAc8C,IAAI,gBAAgBpB,MAAK,SAACC,GACtCwK,EAAmBxK,EAAIoB,MACvBjB,QAAQC,IAAIJ,EAAIoB,SAGlBonB,GAAgB,GAGlB,OAlCAlpB,oBAAS,sBAAC,4BAAA4B,EAAA,sDACJ0nB,IACEG,EAAWH,EACfV,EAASU,GACTC,EAAaE,IAJP,2CAMP,CAACH,IA6BF,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,yCAEF,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAACrf,EAAA,EAAD,CACEvM,UAAU,OACVgK,GAAI,CAAE7J,MAAO,KACbU,GAAG,cACHM,KAAK,cACL0J,MAAM,cACNyC,QAAQ,WACR3N,MAAOsrB,EACPngB,SAAU,SAACuB,GACTmf,GAAgB,GAChBN,EAAS7e,EAAMtB,OAAOpL,YAI5B,cAAC,IAAD,UACE,eAAC,IAAD,CACEK,UAAU,mBACVkJ,QAAS,kBAAM2iB,EAAaZ,IAF9B,UAIG,IAJH,qBAUHM,GACC,qCACE,cAAC,IAAD,UACE,qBAAIvrB,UAAU,OAAd,+EACkE,IAChE,4BAAIirB,SAGR,cAAC5I,GAAA,EAAD,CAASC,UAAU,OAAOtiB,UAAU,YAApC,SACE,uEAEF,cAAC,IAAD,CAAUoiB,MAAI,EAACpiB,UAAU,OAAzB,SACGqrB,EAAoBrmB,SAEvB,iDACA,cAAC,IAAD,CAAUod,MAAI,EAACpiB,UAAU,OAAzB,SACGmrB,EAAmBnmB,SAEtB,6CACA,cAACqd,GAAA,EAAD,CAASC,UAAU,OAAOtiB,UAAU,YAApC,SACE,iEAEF,eAAC,IAAD,WACGmrB,EAAmBlmB,KAAI,SAACmK,GAAD,OACtB,eAAC,IAAMzJ,SAAP,WACE,cAAC,EAAD,CAEE9E,GAAIuO,EAAgBvO,GACpBgI,MAAOuG,EAAgB5O,YACvB2I,MAAOiG,EAAgB3J,WACvBgE,cAAe2F,EAAgBjK,YAAYC,QAAQjE,KACnDuI,aAAc0F,EAAgBjK,YAAYC,QAAQC,OAClDsE,WAAYyF,EAAgBjK,YAAYC,QAAQG,KAChDqE,cACEwF,EAAgBjK,YAAYC,QAAQI,aAEtC6J,cAAeD,EAAgBC,cAC/BC,aAAcF,EAAgBE,aAC9BC,WAAYH,EAAgBG,WAC5BC,cAAeJ,EAAgBI,cAC/BC,iBAAkBL,EAAgBK,iBAClCrF,WAAYgF,EAAgBM,eAC5BlL,OAAQ4K,EAAgB5K,OACxB4E,gBAAiBgG,EAAgBhG,gBACjCiB,oBAAqB+E,EAAgB/E,oBACrCzG,cAAeA,EACfwE,gBAAiBA,GApBZgH,EAAgBvO,IAsBvB,6BAGJ,cAACwhB,GAAA,EAAD,CAASC,UAAU,OAAOtiB,UAAU,YAApC,SACE,qEAEDqrB,EAAoBpmB,KAAI,SAACG,GAAD,OACvB,eAAC,IAAMO,SAAP,WACE,cAAC,EAAD,CAEE9E,GAAIuE,EAAQA,QAAQf,QACpBoM,YAAarL,EAAQvE,GACrBgI,MAAOzD,EAAQA,QAAQjE,KACvBgI,MAAO/D,EAAQK,WACf0K,cAAe/K,EAAQA,QAAQC,OAC/B+K,YAAahL,EAAQA,QAAQG,KAC7B8K,eAAgBjL,EAAQA,QAAQI,aAChC8K,MAAOlL,EAAQA,QAAQkL,MACvBC,MAAOnL,EAAQA,QAAQmL,MACvBC,KAAMpL,EAAQA,QAAQf,SAVjBe,EAAQA,QAAQf,SAYvB,6BA/CN,gBC/GG,SAAS2nB,GAAejsB,GACrC,MAA4BR,oBAAS,GAArC,mBAAOgd,EAAP,KAAe0P,EAAf,KACQzsB,EAASI,IAATJ,KACR,EAAyCoO,cAAlBse,GAAvB,EAAQlU,cAAR,EAAuBkU,eAEvB5pB,qBAAU,WACS,kBAAb9C,EAAK0U,MACP+X,GAAU,KAEX,CAACzsB,EAAK0U,OAET,MAAgDhH,IAAM3N,SAAS,CAC7DijB,WAAYziB,EAAMosB,YAAYtrB,GAC9BmX,cAAejY,EAAMosB,YAAY9rB,YACjC+rB,aAAc,WACdtN,UAAW/e,EAAMqP,gBAAgBrO,YACjCP,YAAaT,EAAMosB,YAAY3rB,cALjC,mBAAO6rB,EAAP,KASA,GATA,KASoCnf,IAAM3N,SAAS,CAEjD8oB,cAAetoB,EAAMosB,YAAY5rB,WACjCogB,aAAc5gB,EAAMosB,YAAYnK,YAChCnB,SAAU9gB,EAAMosB,YAAY/U,SAC5B0J,aAAc/gB,EAAMosB,YAAY5U,gBAChC+U,aAAcvsB,EAAMosB,YAAY3rB,eANlC,mBAAOwkB,EAAP,KASMuH,GATN,KASwBxsB,EAAMosB,YAAY9U,aAE1C,OACE,qCACE,oDACCkF,EACC,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAM5b,GAAG,sBAAT,+BAEF,cAAC,IAAD,UACE,eAAC,IAAD,CAAMA,GAAI,sBAAwBurB,EAAlC,+BACqBA,OAGvB,eAAC,IAAD,CAAmB3N,QAAM,EAAzB,2BACiB8N,EAAiB7J,iBAIpC,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAM7hB,GAAG,gBAAT,2BAEF,cAAC,IAAD,UACE,eAAC,IAAD,CAAMA,GAAI,iBAAmB0rB,EAAiBrU,cAA9C,yBACeqU,EAAiBrU,mBAGlC,eAAC,IAAD,CAAmBuG,QAAM,EAAzB,2BACiB8N,EAAiB7J,iBAItC,eAAC,IAAD,CAASviB,MAAO,CAAEC,UAAW,KAA7B,UACE,cAAC,IAAD,UACE,8DAA8BmsB,EAAiBrU,mBAEjD,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQhY,UAAU,WAAlB,SACE,eAAC,IAAD,WACE,8BACE,iDACCglB,EAAWqD,iBAEd,8BACE,+CACCrD,EAAWrE,aAFd,IAE6BqE,EAAWnE,YAExC,8BACE,+CACCmE,EAAWlE,aAFd,IAE6BkE,EAAWnE,YAGvC0L,EAAgBtnB,KAAI,SAACsjB,GAAD,OACnB,qCACE,oBAAIvoB,UAAU,SACd,6BACE,oDAEF,8BACE,0CACCuoB,EAAO7Q,WAEV,8BACE,yCACC6Q,EAAO5Q,UAEV,8BACE,0CACC4Q,EAAO3Q,QAEV,8BACE,oDACC2Q,EAAO1Q,MAAM+I,QAAQ,GAFxB,IAE6BoE,EAAWnE,uBAMhD,eAAC,IAAD,CACE7gB,UAAU,WACVC,MAAO,CAAEusB,OAAQ,oBAAqB1nB,OAAQ,KAFhD,UAIE,oBAAG9E,UAAU,YAAb,UACE,8CACCqsB,EAAiBrU,iBAEpB,oBAAGhY,UAAU,OAAb,UACE,gDACCqsB,EAAiB7J,cAEpB,oBAAGxiB,UAAU,OAAb,UACE,gDACCqsB,EAAiBD,gBAEpB,oBAAGpsB,UAAU,OAAb,UACE,iDACCqsB,EAAiBvN,aAEpB,oBAAG9e,UAAU,OAAb,UACE,kDACCqsB,EAAiB/L,UAEpB,oBAAGtgB,UAAU,YAAb,UACE,+CACiC,IAAhCqsB,EAAiB7rB,YAChB,iEAEA6rB,EAAiB7rB,6B,cCvInCisB,KAAMC,oBAAoBC,UAA1B,iCAAgEF,KAAMG,QAAtE,mCAKe,SAASC,GAAa9sB,GAInC,MAAgDmN,IAAM3N,SAAS,CAC7DijB,WAAYziB,EAAM0iB,aAAa5hB,GAC/BmX,cAAejY,EAAM0iB,aAAapiB,YAClC+rB,aAAcrsB,EAAM0iB,aAAaniB,KACjCwe,UAAW/e,EAAM0iB,aAAa1hB,YAC9BP,YAAaT,EAAM0iB,aAAajiB,cALlC,mBAAOssB,EAAP,KAQA,GARA,KAQ4BvtB,oBAAS,IAArC,mBAAOgd,EAAP,KAAe0P,EAAf,KACQzsB,EAASI,IAATJ,KACR,EAAyCoO,cAAlBse,GAAvB,EAAQlU,cAAR,EAAuBkU,eAGvB5pB,qBAAU,WACS,kBAAb9C,EAAK0U,MACP+X,GAAU,KAEX,CAACzsB,EAAK0U,OAET,MAAgC3U,mBAAS,MAAzC,mBAAOwtB,EAAP,KAAiBC,EAAjB,KACA,EAAoCztB,mBAAS,GAA7C,mBAAO0tB,EAAP,KAAmBC,EAAnB,KAMA,SAASC,EAAWC,GAClBF,GAAc,SAACG,GAAD,OAAoBA,EAAiBD,KAGrD,SAASE,IACPH,GAAY,GAGd,SAASI,IACPJ,EAAW,GAGb,OACE,qCACE,oDACC5Q,EACC,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAM5b,GAAG,sBAAT,+BAEF,cAAC,IAAD,UACE,eAAC,IAAD,CAAMA,GAAI,sBAAwBurB,EAAlC,+BACqBA,OAGvB,eAAC,IAAD,CAAmB3N,QAAM,EAAzB,2BACiBuO,EAAiBtK,iBAIpC,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAM7hB,GAAG,gBAAT,2BAEF,cAAC,IAAD,UACE,eAAC,IAAD,CAAMA,GAAI,iBAAmBmsB,EAAiB9U,cAA9C,yBACe8U,EAAiB9U,mBAGlC,eAAC,IAAD,CAAmBuG,QAAM,EAAzB,2BACiBuO,EAAiBtK,iBAItC,eAAC,IAAD,CAASviB,MAAO,CAAEC,UAAW,UAA7B,UACE,cAAC,IAAD,UACE,+BACG4sB,EAAiBV,aADpB,sBACkD,IAC/CU,EAAiB9U,mBAGtB,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAQhY,UAAU,WAAlB,UACE,qBACEA,UAAU,gCACVC,MAAO,CAAEC,UAAW,SAFtB,SAIE,cAAC,KAAD,CAEEqd,KAAM,CACJgC,IAAKxf,EAAMqa,UAEboT,cAnEhB,YAA8C,IAAbT,EAAY,EAAZA,SAC/BC,EAAYD,IA6DA,SAOE,cAAC,KAAD,CAAME,WAAYA,QAGtB,qBAAKjtB,UAAU,gCAAf,SACE,uCACSitB,EADT,QAC0BF,OAG3BE,EAAa,EACZ,eAAC,IAAD,CACEnsB,SAAO,EACPd,UAAU,mBACVkJ,QAASokB,EAHX,UAKE,cAAC,IAAD,CAASttB,UAAU,OAAO+I,KAAK,KAAKC,KAAG,EAACC,KAAK,iBAL/C,kBASA,eAAC,IAAD,CACEnI,SAAO,EACPd,UAAU,mBACV2M,UAAQ,EACRzD,QAASokB,EAJX,UAME,cAAC,IAAD,CAASttB,UAAU,OAAO+I,KAAK,KAAKC,KAAG,EAACC,KAAK,iBAN/C,kBAUDgkB,EAAaF,EACZ,eAAC,IAAD,CAAQjsB,SAAO,EAACd,UAAU,YAAYkJ,QAASqkB,EAA/C,6BAEE,cAAC,IAAD,CACEvtB,UAAU,OACV+I,KAAK,KACLC,KAAG,EACHC,KAAK,qBAIT,eAAC,IAAD,CACEnI,SAAO,EACPd,UAAU,YACV2M,UAAQ,EACRzD,QAASqkB,EAJX,6BAOE,cAAC,IAAD,CACEvtB,UAAU,OACV+I,KAAK,KACLC,KAAG,EACHC,KAAK,wBAKb,eAAC,IAAD,CACEjJ,UAAU,WACVC,MAAO,CAAEusB,OAAQ,oBAAqB1nB,OAAQ,KAFhD,UAIE,oBAAG9E,UAAU,YAAb,UACE,8CACC8sB,EAAiB9U,iBAEpB,oBAAGhY,UAAU,OAAb,UACE,gDACC8sB,EAAiBtK,cAEpB,oBAAGxiB,UAAU,OAAb,UACE,gDACC8sB,EAAiBV,gBAEpB,oBAAGpsB,UAAU,OAAb,UACE,iDACC8sB,EAAiBhO,aAGpB,oBAAG9e,UAAU,YAAb,UACE,+CACiC,IAAhC8sB,EAAiBtsB,YAChB,iEAEAssB,EAAiBtsB,eAIrB,eAAC,IAAD,CAAQitB,UAAQ,EAAC/P,KAAM3d,EAAMqa,SAAUpa,UAAU,YAAjD,UACE,cAAC,IAAD,CAASgJ,KAAG,EAACC,KAAK,WAAWF,KAAK,KAAK/I,UAAU,SADnD,4BCrIC0tB,OA/Df,WAEE,IAAQ/E,EAAe/a,cAAf+a,WACFtnB,EAAgBkF,IACtB,EAAwChH,qBAAxC,mBAAOkjB,EAAP,KAAqBkL,EAArB,KACA,EAAsCpuB,qBAAtC,mBAAO4sB,EAAP,KAAoBzK,EAApB,KACA,EAA8CniB,qBAA9C,mBAAO6P,EAAP,KAAwBiS,EAAxB,KACA,EAAkC9hB,oBAAS,GAA3C,mBAAOyE,EAAP,KAAkBC,EAAlB,KACA,EAAgC1E,qBAAhC,mBAAO6a,EAAP,KAAiBC,EAAjB,KAEA,EAAkC9a,oBAAS,GAA3C,mBAAOquB,EAAP,KAAkBjM,EAAlB,KA6BA,OA3BArf,qBAAU,WACRjB,EAAc8C,IAAd,qBAAgCwkB,EAAhC,MAA+C5lB,MAAK,SAACC,GACnD2qB,EAAgB3qB,EAAIoB,MACpB/C,EACG8C,IADH,wBACwBnB,EAAIoB,KAAK/D,YADjC,MAEG0C,MAAK,SAAC8qB,GACLxM,EAAmBwM,EAAKzpB,MACH,YAAjBpB,EAAIoB,KAAK9D,KACXe,EAAc8C,IAAd,mBAA8BwkB,EAA9B,MAA6C5lB,MAAK,SAACC,GACjD0e,EAAe1e,EAAIoB,MACE,YAAjBpB,EAAIoB,KAAK9D,OACXqhB,GAAa,GACb1d,GAAa,OAIjB5C,EAAc8C,IAAd,gBAA2BnB,EAAIoB,KAAKmZ,KAApC,MAA6Cxa,MAAK,SAAC+qB,GACjDzT,EAAYyT,EAAK1pB,KAAKmZ,MACtBtZ,GAAa,cAKtB,IAEH3B,qBAAU,cAAU,IAGlB,mCACG0B,EACC,qBAAKhE,UAAU,iBAAf,SACE,cAAC,IAAD,UACE,sBAAMA,UAAU,kBAAhB,2BAGF4tB,EACF,cAAC5B,GAAD,CACEG,YAAaA,EACb/c,gBAAiBA,IAGnB,cAACyd,GAAD,CACEpK,aAAcA,EACdrT,gBAAiBA,EACjBgL,SAAUA,OC5CL2T,OAff,WAEE,IAAQvuB,EAASI,IAATJ,KAER,OACE,sBAAK4U,MAAM,cAAX,UACE,oDACA,gGAC8D5U,EAAK0U,KADnE,8BCWS,SAAS8Z,KAAS,IAAD,IAEtBvuB,EAAYG,IAAZH,QAEFsjB,EAAWC,cAIjB,GAFa,UADIlV,cACKqT,aAAT,mBAAgBlL,YAAhB,SAAsBwN,SAEXlkB,mBAAS,KAAjC,mBAAO0uB,EAAP,KAAaC,EAAb,KACA,EAAsB3uB,mBAAS,IAA/B,mBAAO4uB,EAAP,KAAYC,EAAZ,KACA,EAA4B7uB,mBAAS,IAArC,mBAAO8uB,EAAP,KAAeC,EAAf,KACA,EAA4B/uB,oBAAS,GAArC,mBAAOgvB,EAAP,KAAeC,EAAf,KAIA,EAA6BjvB,mBAAS,IAAtC,mBAAO8E,EAAP,KAAgBwM,EAAhB,KACA,EAA4BtR,mBAAS,IAArC,mBAAO8F,EAAP,KAAeopB,EAAf,KACA,EAAgClvB,mBAAS,IAAzC,mBAAO+F,EAAP,KAAkBopB,EAAlB,KACA,EAA0BnvB,mBAAS,IAAnC,mBAAO+Q,EAAP,KAAcqe,EAAd,KACA,EAAwBpvB,mBAAS,IAAjC,mBAAO4B,EAAP,KAAaytB,EAAb,KACA,EAAwBrvB,mBAAS,IAAjC,mBAAOgG,EAAP,KAAaspB,EAAb,KACA,EAA0BtvB,mBAAS,IAAnC,oBAAOgR,GAAP,MAAcue,GAAd,MAEA,GAAmCvvB,mBAAS,IAA5C,qBAAOiG,GAAP,MAAqBupB,GAArB,MACA,GAAgCxvB,mBAAS,IAAzC,qBAAO6B,GAAP,MAAiB4tB,GAAjB,MACA,GAAgCzvB,mBAAS,IAAzC,qBAAOwU,GAAP,MAAiBkb,GAAjB,MACA,GAA+B1vB,mBAAS,IAAxC,qBAAOkZ,GAAP,MAAkByW,GAAlB,MAEA5sB,qBAAU,WACRgsB,EAAU,MACT,CAACL,EAAME,IAGV,IAAMgB,GAAW,uCAAG,WAAOxkB,GAAP,mCAAAzG,EAAA,6DAClByG,EAAEC,iBADgB,kBAIOvJ,EAAc4E,KAvCzB,cAyCVC,KAAKC,UAAU,CAAE/E,SAAU6sB,EAAMla,SAAUoa,IAC3C,CACEzsB,QAAS,CAAE,eAAgB,sBARf,OAIV6C,EAJU,OAYV8B,EAZU,OAYI9B,QAZJ,IAYIA,GAZJ,UAYIA,EAAUH,YAZd,aAYI,EAAgBkC,OAC9B8oB,EAbU,OAaF7qB,QAbE,IAaFA,GAbE,UAaFA,EAAUH,YAbR,aAaF,EAAgBgrB,MACxBluB,EAdU,OAcAqD,QAdA,IAcAA,GAdA,UAcAA,EAAUH,YAdV,aAcA,EAAgBlD,QAIhC4E,aAAaupB,QAAQ,eAAgBhpB,GACrCP,aAAaupB,QAAQ,gBAArB,OAAsC9qB,QAAtC,IAAsCA,GAAtC,UAAsCA,EAAUH,YAAhD,aAAsC,EAAgB4B,SAEtDF,aAAaupB,QAAQ,WAArB,OAAiC9qB,QAAjC,IAAiCA,GAAjC,UAAiCA,EAAUH,YAA3C,aAAiC,EAAgB6pB,MACjDnoB,aAAaupB,QAAQ,UAAWnuB,GAChCzB,EAAQ,CAAEwuB,OAAME,MAAKiB,QAAOluB,UAASmF,gBACrC6nB,EAAQ,IACRE,EAAO,IACPI,GAAU,GACVzL,EAAS,IAAK,CAAEa,SAAS,IA3BT,kDA8BZ,4BAAC,KAAKrf,SAE0B,OAAzB,eAAIA,gBAAJ,eAAcC,QACvB8pB,EAAU,iCACwB,OAAzB,eAAI/pB,gBAAJ,eAAcC,QACvB8pB,EAAU,uBAEVA,EAAU,sBANVA,EAAU,8BA/BI,0DAAH,sDA4CXgB,GAAmB,SAAC3kB,GAGxB,GAA6B,GADjBvK,SAASoR,eAAe,wBAC1BC,gBAAV,CAKA9G,EAAEC,iBACF,IACmBvJ,EAAc4E,KAAK,iBAAkB,CACpD7E,SAAUA,GACV2S,SAAUA,GACVC,UAAWD,GACXwb,WAAYlrB,IAEdmrB,IAA2B,GAC3B,MAAOtsB,GAAM,IAAD,IACZC,QAAQC,IAAIF,GACR,OAACA,QAAD,IAACA,KAAKqB,SAE0B,OAAzB,UAAArB,EAAIqB,gBAAJ,eAAcC,QACvB8pB,EAAU,iCACwB,OAAzB,UAAAprB,EAAIqB,gBAAJ,eAAcC,QACvB8pB,EAAU,6BAEVA,EAAU,sBANVA,EAAU,oCAhBZnrB,QAAQC,IAAI,gCAmEhB,OAA8C7D,oBAAS,GAAvD,qBAAOkwB,GAAP,MAAwBC,GAAxB,MACA,GAA8DnwB,oBAAS,GAAvE,qBAAOowB,GAAP,MAAgCH,GAAhC,MAIA,GAAoCjwB,mBAAS,SAA7C,qBAAOye,GAAP,MAAmBC,GAAnB,MAGA,SAASC,GAAgBve,GACnBA,IAAUqe,IAIdC,GAActe,GAGhB,OACE,mCACE,sBAAKM,MAAO,CAAEE,MAAO,SAAWH,UAAU,cAA1C,UACE,qBAAKsJ,IAAKsZ,GAAO3iB,MAAO,CAAEE,MAAO,QAAUH,UAAU,SACrD,qBAAKsJ,IAAKuZ,GAAS5iB,MAAO,CAAEE,MAAO,SAAWH,UAAU,SACvDuuB,EACC,oCACE,qDACA,uBACA,4BACE,mBAAG7Q,KAAK,IAAR,iCAIJ,oCACE,eAAC,IAAD,CAASW,OAAK,EAACuR,SAAO,EAAC5vB,UAAU,OAAjC,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEkJ,QAAS,kBAAMgV,GAAgB,UAC/BK,OAAuB,UAAfP,GAFV,qBAOF,cAAC,IAAD,UACE,cAAC,IAAD,CACE9U,QAAS,kBAAMgV,GAAgB,qBAC/BK,OACiB,sBAAfP,IACe,qBAAfA,GAJJ,+BAYJ,eAAC,IAAD,WACE,eAAC,IAAD,CAAa3a,KAAqB,UAAf2a,GAAnB,UACE,uBAAMtT,SAAUykB,GAAhB,UACE,uBACA,cAAC,IAAD,CACEnvB,UAAU,OACVM,KAAK,WACLO,GAAG,WACHM,KAAK,WACL0J,MAAM,aACNC,SAAU,SAACH,GAAD,OAAOujB,EAAQvjB,EAAEI,OAAOpL,UAEpC,cAAC,IAAD,CACEK,UAAU,OACVM,KAAK,WACLO,GAAG,WACHM,KAAK,WACL0J,MAAM,WACNC,SAAU,SAACH,GAAD,OAAOyjB,EAAOzjB,EAAEI,OAAOpL,UAGnC,uBAEA,cAAC,IAAD,CAAQW,KAAK,SAASN,UAAU,OAAO4M,OAAK,EAA5C,uBAIA,qBAAK5M,UAAU,cAAf,SACE,qDACuB,IACrB,mBACE0d,KAAK,eACLxU,QAAS,kBAAMgV,GAAgB,qBAFjC,kCASN,mBACEle,UAAWquB,EAAS,4BAA8B,YAClD,YAAU,YAFZ,SAIGA,OAGL,cAAC,IAAD,CAAahrB,KAAqB,qBAAf2a,GAAnB,SACE,uBAAMnd,GAAG,eAAe6J,SAAU,SAACC,GAAD,OAAOA,EAAEC,kBAA3C,UACE,cAAC,IAAD,CACE5K,UAAU,OACVa,GAAG,aACHgK,MAAM,wBACNvK,KAAK,OACLqR,UAAQ,EACR7G,SAAU,SAACH,GAAD,OAAOikB,EAAQjkB,EAAEI,OAAOpL,UAEpC,cAAC,IAAD,CACEK,UAAU,OACVa,GAAG,OACHP,KAAK,SACLuK,MAAM,WACN8G,UAAQ,EACR7G,SAAU,SAACH,GAAD,OAAOkG,EAAUlG,EAAEI,OAAOpL,UAEtC,cAAC,IAAD,CACEK,UAAU,OACVa,GAAG,UACHgK,MAAM,mBACNvK,KAAK,OACLqR,UAAQ,EACR7G,SAAU,SAACH,GAAD,OAAO8jB,EAAU9jB,EAAEI,OAAOpL,UAEtC,eAAC,IAAD,WACE,cAAC,IAAD,CAAQK,UAAU,QAAlB,SACE,cAAC,IAAD,CACEA,UAAU,OACVM,KAAK,SACLO,GAAG,MACHgK,MAAM,MACN8G,UAAQ,EACR7G,SAAU,SAACH,GAAD,OAAO+jB,EAAW/jB,EAAEI,OAAOpL,YAGzC,cAAC,IAAD,UACE,cAAC,IAAD,CACEK,UAAU,OACVa,GAAG,QACHgK,MAAM,QACNvK,KAAK,OACLqR,UAAQ,EACR7G,SAAU,SAACH,GAAD,OAAOkkB,EAAQlkB,EAAEI,OAAOpL,eAIxC,cAAC,IAAD,CACEK,UAAU,OACVa,GAAG,OACHgK,MAAM,OACNvK,KAAK,OACLqR,UAAQ,EACR7G,SAAU,SAACH,GAAD,OAAOokB,GAAWpkB,EAAEI,OAAOpL,UAEvC,cAAC,IAAD,CACEK,UAAU,OACViU,aAAa,MACbpT,GAAG,QACHgK,MAAM,iBACNvK,KAAK,QACLqR,UAAQ,EACR7G,SAAU,SAACH,GAAD,OAAOgkB,EAAShkB,EAAEI,OAAOpL,UAErC,cAAC,IAAD,CACEK,UAAU,OACVa,GAAG,UACHgK,MAAM,aACNvK,KAAK,OACLqR,UAAQ,EACR7G,SAAU,SAACH,GAAD,OAAOmkB,GAASnkB,EAAEI,OAAOpL,UAErC,cAAC,IAAD,CACEK,UAAU,OACVa,GAAG,YACHgK,MAAM,uBACNvK,KAAK,SACLqR,UAAQ,EACR7G,SAAU,SAACH,GAAD,OAAOukB,GAAUvkB,EAAEI,OAAOpL,UAGtC,oBAAIK,UAAU,SACd,cAAC,IAAD,CACEA,UAAU,OACVa,GAAG,cACHgK,MAAM,wBACNvK,KAAK,OACLqR,UAAQ,EACR7G,SAAU,SAACH,GAAD,OAAOqkB,GAAYrkB,EAAEI,OAAOpL,UAExC,cAAC,IAAD,CACEK,UAAU,OACVa,GAAG,WACHP,KAAK,WACLuK,MAAM,WACN8G,UAAQ,EACR7G,SAAU,SAACH,GAAD,OAAOskB,GAAYtkB,EAAEI,OAAOpL,UAExC,cAAC,IAAD,CACEW,KAAK,SACL4I,QA9OlB,SAAyByB,GAGvB,GAA6B,GADjBvK,SAASoR,eAAe,gBAC1BC,gBAAV,CAKA9G,EAAEC,iBACF,IAAMilB,EAAa,CACjBxrB,UACAgB,SACAC,YACAC,OACA+K,QACAnP,OACAqE,gBACA+K,SACAkI,cAIFpX,EACG4E,KAAK,cAAe4pB,GACpB9sB,MAAK,SAACC,GACLG,QAAQC,IAAIJ,EAAIoB,MAChBsrB,IAAmB,MAEpBzsB,OAAM,SAACqB,GACNgqB,EAAUhqB,EAAMI,SAEhBvB,QAAQmB,MAAM,sBAAuBA,MAEtCvB,KAAKusB,GAAiB3kB,SA7BvBxH,QAAQC,IAAI,gCA2OEpD,UAAU,OACV4M,OAAK,EAJP,0BAQC6iB,IACC,mBACEzvB,UAAU,6BACV,YAAU,YAFZ,4EASF,qBAAKA,UAAU,cAAf,SACE,mEACqC,IACnC,oBACE0d,KAAK,eACLxU,QAAS,kBAAMgV,GAAgB,sBAFjC,UAIE,uBAJF,wCAWR,cAAC,IAAD,CAAa7a,KAAqB,sBAAf2a,GAAnB,SACE,uBACEnd,GAAG,uBACH6J,SAAU,SAACC,GAAD,OAAOA,EAAEC,kBAFrB,UAIE,cAAC,IAAD,CACE5K,UAAU,OACVa,GAAG,OACHP,KAAK,SACLuK,MAAM,4BACN8G,UAAQ,EACR7G,SAAU,SAACH,GAAD,OAAOkG,EAAUlG,EAAEI,OAAOpL,UAEtC,cAAC,IAAD,CACEK,UAAU,OACVa,GAAG,aACHgK,MAAM,wBACNvK,KAAK,OACLqR,UAAQ,EACR7G,SAAU,SAACH,GAAD,OAAOqkB,GAAYrkB,EAAEI,OAAOpL,UAGxC,cAAC,IAAD,CACEK,UAAU,OACVa,GAAG,WACHP,KAAK,WACLuK,MAAM,WACN8G,UAAQ,EACR7G,SAAU,SAACH,GAAD,OAAOskB,GAAYtkB,EAAEI,OAAOpL,UAExC,cAAC,IAAD,CACEW,KAAK,SACL4I,QAASomB,GACTtvB,UAAU,OACV4M,OAAK,EAJP,0BAQC+iB,IACC,mBACE3vB,UAAU,6BACV,YAAU,YAFZ,4EAQF,qBAAKA,UAAU,cAAf,SACE,sEACwC,IACtC,oBACE0d,KAAK,eACLxU,QAAS,kBAAMgV,GAAgB,qBAFjC,UAIE,uBAJF,mDCpXP4R,OA/Df,SAAyB/vB,GACvB,OACE,8BACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,UAAeA,EAAM8I,QAErB,eAAC,IAAD,iCAAkC9I,EAAMoJ,SACxC,0BAEF,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQE,GAAG,IAAX,SACE,cAAC,IAAD,CAASL,KAAG,EAACC,KAAK,gBAAgBF,KAAK,KAAK/I,UAAU,WAExD,cAAC,IAAD,CAAQqJ,GAAG,IAAX,SACE,eAAC,IAAD,CAAarJ,UAAU,OAAvB,UACE,0CACA,uBACCD,EAAM0J,cACP,uBACC1J,EAAM2J,aACP,uBACC3J,EAAM4J,WAPT,KAOuB5J,EAAM6J,mBAG/B,cAAC,IAAD,CAAQP,GAAG,IAAX,SACE,eAAC,IAAD,CAAarJ,UAAU,OAAvB,UACE,mDACA,uBACCD,EAAMgwB,WACP,uBACChwB,EAAMuP,aACP,uBACCvP,EAAMwP,WAPT,KAOuBxP,EAAMyP,sBAIjC,uBACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAQ3F,GAAG,IAAIC,GAAG,MAClB,cAAC,IAAD,CAAQD,GAAG,IAAIC,GAAG,IAAlB,SACE,cAAC,IAAD,CACE7J,MAAO,CAAEQ,QAAS,SAClBE,GAAI,sBAAwBZ,EAAMc,GAAGD,WAErCsJ,OAAQ,CAAErB,MAAO,SAJnB,SAME,cAAC,IAAD,CAAQ7I,UAAU,iBAAlB,iCAHKD,EAAMc,YAQnB,eAAC,IAAD,oCACyBd,EAAMqK,sBCgH1B4lB,OA3Kf,WACE,MAAgDzwB,mBAAS,IAAzD,mBAAOmE,EAAP,KAAyBC,EAAzB,KACA,EAA4BpE,oBAAS,GAArC,mBAAOoM,EAAP,KACA,GADA,KACkCpM,oBAAS,IAA3C,mBAAOyE,EAAP,KAAkBC,EAAlB,KAEQzE,EAASI,IAATJ,KAEF6B,EAAgBkF,IAgEtB,SAASwH,EAAiB1B,GACG,mBAAvBA,EAAMtB,OAAOpL,MAIU,oBAAvB0M,EAAMtB,OAAOpL,MAIU,eAAvB0M,EAAMtB,OAAOpL,MAIU,gBAAvB0M,EAAMtB,OAAOpL,MAIU,aAAvB0M,EAAMtB,OAAOpL,MAIU,cAAvB0M,EAAMtB,OAAOpL,OA7CnB,WACE,IAAMqO,EAAS,GACZC,OAAOvK,GACPwK,MAAK,SAAChK,EAAGiK,GAAJ,OAAWjK,EAAEuB,WAAa0I,EAAE1I,YAAc,EAAI,KAEtD9B,EAAoBqK,GAyClBI,GAtDJ,WACE,IAAMJ,EAAS,GACZC,OAAOvK,GACPwK,MAAK,SAAChK,EAAGiK,GAAJ,OAAWjK,EAAEuB,WAAa0I,EAAE1I,WAAa,GAAK,KAEtD9B,EAAoBqK,GA6ClBK,GA1BJ,WACE,IAAML,EAAS,GACZC,OAAOvK,GACPwK,MAAK,SAAChK,EAAGiK,GAAJ,OAAWjK,EAAEwL,eAAiBvB,EAAEuB,gBAAkB,EAAI,KAE9D/L,EAAoBqK,GAiBlBM,GA9BJ,WACE,IAAMN,EAAS,GACZC,OAAOvK,GACPwK,MAAK,SAAChK,EAAGiK,GAAJ,OAAWjK,EAAEwL,eAAiBvB,EAAEuB,eAAiB,GAAK,KAE9D/L,EAAoBqK,GAqBlBO,GAlDJ,WACE,IAAMP,EAAS,GACZC,OAAOvK,GACPwK,MAAK,SAAChK,EAAGiK,GAAJ,OAAWjK,EAAE1D,YAAc2N,EAAE3N,YAAc,GAAK,KAExDmD,EAAoBqK,GAyClBS,GAtDJ,WACE,IAAMT,EAAS,GACZC,OAAOvK,GACPwK,MAAK,SAAChK,EAAGiK,GAAJ,OAAWjK,EAAE1D,YAAc2N,EAAE3N,aAAe,EAAI,KAExDmD,EAAoBqK,GA6ClBU,GAyBJ,OAxFApM,oBAAS,sBAAC,sBAAA4B,EAAA,sEACF7C,EACH8C,IAAI,oCAAsC3E,EAAK6E,SAC/CtB,MAAK,SAACC,GACLW,EAAoBX,EAAIoB,SAEzBnB,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAPR,OASRe,GAAa,GATL,2CAUP,CAAC0H,IA+EF,mCACG3H,EACC,qBAAKhE,UAAU,iBAAf,SACE,cAAC,IAAD,UACE,sBAAMA,UAAU,kBAAhB,2BAIJ,8BACE,eAAC,IAAD,WACE,iDAEA,qBAAKA,UAAU,qDAAf,SACE,eAAC,IAAD,WACE,eAACkP,EAAA,EAAKC,OAAN,CACElP,MAAO,CACLilB,SAAU,IACVC,SAAU,KAEZra,SAAU,SAACuB,GAAD,OAAW0B,EAAiB1B,IALxC,UAOE,wBAAQ1M,MAAO,cAAf,8CACA,wBAAQA,MAAO,aAAf,0DAGA,wBAAQA,MAAO,kBAAf,kDAGA,wBAAQA,MAAO,iBAAf,mDAGA,wBAAQA,MAAO,YAAf,uDAGA,wBAAQA,MAAO,WAAf,2DAGa,IACf,qBAAKK,UAAU,OAAf,SACE,8BAAI0D,EAAiBsB,OAArB,yBAILtB,EAAiBuB,KAAI,SAACmK,GAAD,OACpB,eAAC,IAAMzJ,SAAP,WACE,cAAC,GAAD,CAEE9E,GAAIuO,EAAgBvO,GACpBgI,MAAK,OAAEuG,QAAF,IAAEA,OAAF,EAAEA,EAAiB/O,YAAYG,YACpC2I,MAAK,OAAEiG,QAAF,IAAEA,OAAF,EAAEA,EAAiB/O,YAAYoF,WACpCgE,cAAa,OAAE2F,QAAF,IAAEA,OAAF,EAAEA,EAAiB6gB,UAAU9uB,KAC1CuI,aAAY,OAAE0F,QAAF,IAAEA,OAAF,EAAEA,EAAiB6gB,UAAU5qB,OACzCsE,WAAU,OAAEyF,QAAF,IAAEA,OAAF,EAAEA,EAAiB6gB,UAAU1qB,KACvCqE,cAAa,OAAEwF,QAAF,IAAEA,OAAF,EAAEA,EAAiB6gB,UAAUzqB,aAC1CuqB,WAAU,OAAE3gB,QAAF,IAAEA,OAAF,EAAEA,EAAiB1H,UAAUvG,KACvCmO,aAAY,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAiB1H,UAAUrC,OACzCkK,WAAU,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAiB1H,UAAUnC,KACvCiK,cAAa,OAAEJ,QAAF,IAAEA,OAAF,EAAEA,EAAiB1H,UAAUlC,aAC1C4C,gBAAiBgH,EACjBK,iBAAgB,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAiBK,iBACnCrF,WAAU,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAiB/O,YAAYqP,gBAdpCN,EAAgBvO,IAgBvB,qCClHDqvB,OA9Cf,SAA4BnwB,GAO1B,OACE,mCACE,cAAC,IAAD,CACEsD,KAAMtD,EAAM+M,WACZxC,QAASvK,EAAMgN,cACfxC,SAAS,KAHX,SAKE,cAAC,IAAD,CAAgBxB,KAAK,KAArB,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,qCACA,cAAC,IAAD,CACE/I,UAAU,YACVwK,MAAM,OACNtB,QAASnJ,EAAM6L,gBAGnB,cAAC,IAAD,UACE,cAAC,GAAD,CACE2Q,QAAQ,EACR1Q,mBAAoB9L,EAAM8L,mBAC1BC,mBAAoB/L,EAAM+L,mBAC1BC,mBAAoBhM,EAAMgM,mBAC1BiB,oBAAqBjN,EAAMiN,oBAC3BiM,uBAAwBlZ,EAAM6L,WAC9BoM,cAAejY,EAAMiY,cACrBgB,YAAajZ,EAAM4L,OACnBoN,eAAgBhZ,EAAM4Q,UACtBqL,mBAAoBjc,EAAMic,iCCsW3BmU,OA5Xf,SAAiCpwB,GAC/B,IAAMsB,EAAgBkF,IAEtB,EAAgChH,mBAC9BQ,EAAMqI,gBAAgBgoB,sBADxB,mBAAOC,EAAP,KAAiBC,EAAjB,KAIA,EAAwC/wB,mBACtCQ,EAAMqI,gBAAgBE,qBADxB,mBAAOL,EAAP,KAAqBC,EAArB,KAPsC,SAWvBqoB,EAXuB,8EAWtC,WAAkCC,GAAlC,eAAAtsB,EAAA,6DACMqU,EAASvB,EAAQ,IACrB7T,QAAQC,IAAI,oBAAsBotB,GAFpC,SAIQ5Z,GAAiB4Z,GACpBztB,MAAK,SAAC8V,GAQL,OAPA1V,QAAQC,IACN,aACEyV,EAAG,GAAG8Q,SACN,MACC5pB,EAAMosB,YAAY5U,gBAAkBxX,EAAMosB,YAAYnK,cAIzDnJ,EAAG,GAAG8H,cAAgB5gB,EAAMosB,YAAYnK,aACxCnJ,EAAG,GAAG8Q,UACJ5pB,EAAMosB,YAAY5U,gBAAkBxX,EAAMosB,YAAYnK,aACxDnJ,EAAG,GAAGiI,cAAgB/gB,EAAMqI,gBAAgB0Z,QAAQvK,iBACpDsB,EAAG,GAAG4X,WAAa1wB,EAAMqI,gBAAgB0f,iBACzCjP,EAAG,GAAGoX,WAAalwB,EAAMqI,gBAAgB6nB,UAAUxX,WACnDI,EAAG,GAAGnR,WAAa3H,EAAMqI,gBAAgBV,UAAU+Q,WACnDI,EAAG,GAAG6X,MAAQ3wB,EAAMqI,gBAAgBma,eAAe9J,WACnDI,EAAG,GAAG8X,UAAY5wB,EAAMqI,gBAAgBV,UAAU+Q,WAClDI,EAAG,GAAG8H,cAAgB5gB,EAAMosB,YAAYnK,aACxCnJ,EAAG,GAAGgI,UAAY9gB,EAAMqI,gBAAgB0Z,QAAQ1K,UAChDyB,EAAG,GAAGoX,WAAalwB,EAAMqI,gBAAgB6nB,UAAUxX,WACnDI,EAAG,GAAGnR,WAAa3H,EAAMqI,gBAAgBV,UAAU+Q,WACnDI,EAAG,GAAG+X,OAAS7wB,EAAMqI,gBAAgB0Z,QAAQvhB,YAC7CsY,EAAG,GAAGyP,iBACJ/P,EACGG,WAAW,UACXC,OAAO5Y,EAAMosB,YAAY9U,aACzBuB,OAAO,QACZC,EAAG,GAAGiI,cAAgB/gB,EAAMqI,gBAAgB0Z,QAAQvK,iBAEpDpU,QAAQC,IAAI,oCAEZ/B,EAAcwB,MACZ,oBAAsB9C,EAAMqI,gBAAgBvH,GAAK,IACjD,CAAEuvB,qBAAsB,YAE1BrwB,EAAMoY,sBACNpY,EAAM8L,oBAAmB,GACzB9L,EAAM+L,mBAAmB,4CACzB/L,EAAMgM,qBACNukB,EAAY,WAEZvwB,EAAM4Q,WAAW5Q,EAAM4L,SAChB,IAEPxI,QAAQC,IAAI,kCACZ/B,EAAcwB,MACZ,oBAAsB9C,EAAMqI,gBAAgBvH,GAAK,IACjD,CAAEuvB,qBAAsB,cAE1BrwB,EAAMoY,sBACNpY,EAAM8L,oBAAmB,GACzB9L,EAAM+L,mBACJ,2DAEF/L,EAAMgM,qBACNukB,EAAY,aAEZvwB,EAAM4Q,WAAW5Q,EAAM4L,SAChB,MAGV1I,OAAM,SAACC,GAKN,OAJAC,QAAQC,IAAIF,GACZnD,EAAMoY,sBACNpY,EAAM8L,oBAAmB,GACzB9L,EAAM+L,mBAAmB,uCAClB,KAxEb,4CAXsC,kEAuFtC,sBAAA5H,EAAA,sDAEEnE,EAAMqY,uBACNmY,EAAmBxwB,EAAMqI,gBAAgBsiB,gBAAgB3nB,MAAK,SAACC,GAC7DG,QAAQC,IAAIJ,MAJhB,4CAvFsC,sBAwItC,MAAsCzD,oBAAS,GAA/C,mBAAOsxB,EAAP,KAAoBC,EAApB,KAEA,SAASC,IACPD,GAAgBD,GAIlB,MAAwCtxB,oBAAS,GAAjD,mBAAOyxB,EAAP,KAAqBC,EAArB,KAEA,SAASC,IACPD,GAAiBD,GAGnB,OACE,gCACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACGjxB,EAAMqI,gBAAgB/H,YAAYG,kBAIzC,0BAEF,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,0CACA,uBACCT,EAAMqI,gBAAgB6nB,UAAU9uB,KACjC,uBACCpB,EAAMqI,gBAAgB6nB,UAAU5qB,OACjC,uBACCtF,EAAMqI,gBAAgB6nB,UAAU3qB,UAAW,IAC3CvF,EAAMqI,gBAAgB6nB,UAAU1qB,KARnC,IAQ0C,IACvCxF,EAAMqI,gBAAgB6nB,UAAUzqB,kBAGrC,cAAC,IAAD,UACE,eAAC,IAAD,WACE,wDACA,uBACCzF,EAAMqI,gBAAgBV,UAAUvG,KACjC,uBACCpB,EAAMqI,gBAAgBV,UAAUrC,OACjC,uBACCtF,EAAMqI,gBAAgBV,UAAUpC,UAAW,IAC3CvF,EAAMqI,gBAAgBV,UAAUnC,KARnC,IAQ0C,IACvCxF,EAAMqI,gBAAgBV,UAAUlC,kBAGrC,eAAC,IAAD,WACE,mDAECzF,EAAMuH,gBAAkB,EACzB,uBACA,uBACA,+CAEC+oB,EACD,uBACA,wDACCtwB,EAAMqI,gBAAgBE,0BAG3B,uBACA,eAAC,IAAD,WACE,eAAC,IAAD,CAAQuB,GAAG,IAAIC,GAAG,IAAlB,UACe,cAAZumB,GAA4C,cAAhBpoB,EAC3B,cAAC,IAAD,CAAU8B,SAAS,OAAOC,GAAI,CAAEC,GAAI,GAApC,uHAIE,KACS,WAAZomB,GAAyC,cAAhBpoB,EACxB,cAAC,IAAD,CAAU8B,SAAS,UAAUC,GAAI,CAAEC,GAAI,GAAvC,yHAIE,KACS,aAAZomB,GAA2C,cAAhBpoB,EAC1B,cAAC,IAAD,CAAU8B,SAAS,QAAQC,GAAI,CAAEC,GAAI,GAArC,8HAIE,KACa,gBAAhBhC,EACC,cAAC,IAAD,CAAU8B,SAAS,UAAUC,GAAI,CAAEC,GAAI,GAAvC,uCAGE,KACa,aAAhBhC,EACC,cAAC,IAAD,CAAU8B,SAAS,QAAQC,GAAI,CAAEC,GAAI,GAArC,sCAGE,QAEN,cAAC,IAAD,CAAQJ,GAAG,IAAIC,GAAG,IAAlB,SACE,qBAAK9J,UAAU,YAAf,SAIE,eAAC,IAAD,CAAQkJ,QAAS,kBAlPK,0CAkPCioB,IAAsBnxB,UAAU,OAAvD,UACE,cAAC,IAAD,CACE+I,KAAK,KACL/I,UAAU,OACVgJ,KAAG,EACHC,KAAK,gBALT,+BAaW,cAAhBhB,GACC,mCACgB,eAAbooB,EACC,eAAC,IAAD,WACE,cAAC,IAAD,CACErwB,UAAU,YACVwK,MAAM,UACNvK,MAAO,CAAEE,MAAO,KAChB+I,QAASgoB,EAJX,qCAQA,cAAC,IAAD,CACE1mB,MAAM,SACNxK,UAAU,YACVC,MAAO,CAAEE,MAAO,KAChB+I,QAAS6nB,EAJX,mCAUF,eAAC,IAAD,WACE,cAAC,IAAD,CACEpkB,UAAQ,EACR3M,UAAU,YACVwK,MAAM,UACNvK,MAAO,CAAEE,MAAO,KAChB+I,QAASgoB,EALX,qCASA,cAAC,IAAD,CACEvkB,UAAQ,EACRnC,MAAM,SACNxK,UAAU,YACVC,MAAO,CAAEE,MAAO,KAChB+I,QAAS6nB,EALX,wCAcV,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAQlnB,GAAG,IAAX,6BACgB9J,EAAMqI,gBAAgB/H,YAAYoF,cAElD,eAAC,IAAD,CAAQoE,GAAG,IAAX,kCACwB,IACrB9J,EAAMqI,gBAAgB/H,YAAYqP,4BAQ7C,cAAC,IAAD,CAAUrM,KAAMwtB,EAAavmB,QAASwmB,EAAgBvmB,SAAS,KAA/D,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,iCACA,cAAC,IAAD,CACEvK,UAAU,YACVwK,MAAM,OACNtB,QAAS6nB,OAGb,eAAC,IAAD,0CAC+B,IAC7B,4BAAIhxB,EAAMqI,gBAAgB/H,YAAYG,cAFxC,uBAGY,uBAHZ,gEAOA,eAAC,IAAD,WACE,cAAC,IAAD,CAAQgK,MAAM,SAAStB,QA5NnC,WACE7H,EACGwB,MAAM,oBAAsB9C,EAAMqI,gBAAgBvH,GAAK,IAAK,CAC3DyH,oBAAqB,cAEtBvF,MAAK,SAACC,GACLG,QAAQC,IAAI,2BACZ2tB,IACAhxB,EAAM4Q,WAAW5Q,EAAM4L,QAEvB5L,EAAM8L,oBAAmB,GACzB9L,EAAM+L,mBAAmB,4BACzB/L,EAAMgM,qBACN7D,EAAgB,gBAEjBjF,OAAM,SAACC,GACNC,QAAQC,IAAIF,OA4MN,sBAGA,cAAC,IAAD,CAAQpC,SAAO,EAAC0J,MAAM,SAAStB,QAAS6nB,EAAxC,iCASR,cAAC,IAAD,CAAU1tB,KAAM2tB,EAAc1mB,QAAS2mB,EAAiB1mB,SAAS,KAAjE,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,iCACA,cAAC,IAAD,CACEvK,UAAU,YACVwK,MAAM,OACNtB,QAASgoB,OAGb,eAAC,IAAD,0CAC+B,IAC7B,4BAAInxB,EAAMqI,gBAAgB/H,YAAYG,cAFxC,uBAGY,uBAHZ,gEAOA,eAAC,IAAD,WACE,cAAC,IAAD,CAAQgK,MAAM,UAAUtB,QA/QpC,WACE7H,EACGwB,MAAM,oBAAsB9C,EAAMqI,gBAAgBvH,GAAK,IAAK,CAC3DyH,oBAAqB,iBAEtBvF,MAAK,SAACC,GACLG,QAAQC,IAAI,8BACZ8tB,IACAnxB,EAAM4Q,WAAW5Q,EAAM4L,QAEvB5L,EAAM8L,oBAAmB,GACzB9L,EAAM+L,mBAAmB,+BACzB/L,EAAMgM,qBACN7D,EAAgB,mBAEjBjF,OAAM,SAACC,GACNC,QAAQC,IAAIF,OA+PN,sBAGA,cAAC,IAAD,CAAQpC,SAAO,EAAC0J,MAAM,SAAStB,QAASgoB,EAAxC,qCChXRjkB,GAAQC,IAAMC,YAAW,SAAepN,EAAOqN,GACnD,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAGD,IAAKA,EAAKE,QAAQ,UAAavN,OAgSjDqxB,OA7Rf,SAAuBrxB,GAErB,MAA8CR,mBAAS,IAAvD,mBAAO6P,EAAP,KAAwBiS,EAAxB,KAGA,EAA0C9hB,mBAAS,IAAnD,mBAAOqE,EAAP,KAAsBC,EAAtB,KACA,EAA8CtE,mBAAS,IAAvD,mBAAO6I,EAAP,KAAwBoF,EAAxB,KACA,EAAkCjO,oBAAS,GAA3C,mBAAOyE,EAAP,KAAkBC,EAAlB,KACA,EAAoC1E,oBAAS,GAA7C,mBAAOiiB,EAAP,KAAmBC,EAAnB,KACA,EAAsCliB,qBAAtC,mBAAO4sB,EAAP,KAAoBzK,EAApB,KACA,EAAoCniB,oBAAS,GAA7C,mBAAO6f,EAAP,KAAmBC,EAAnB,KACA,EAAwB9f,oBAAS,GAAjC,mBAAa8xB,GAAb,WAEA,EAA4B9xB,oBAAS,GAArC,mBAAOoM,EAAP,KAAegF,EAAf,KAEMtP,EAAgBkF,IAGd2lB,EAAkBte,cAAlBse,cAER5pB,oBAAS,sBAAC,sBAAA4B,EAAA,sEACF7C,EACH8C,IAAI,oBAAsB+nB,GAC1BnpB,MAAK,SAACC,GACLwK,EAAmBxK,EAAIoB,MACvBP,EAAiBb,EAAIoB,KAAKhE,UAC1BihB,EAAmBre,EAAIoB,KAAK/D,aAC5BgB,EACG8C,IAAI,WAAanB,EAAIoB,KAAK0d,QAAQjhB,GAAK,KACvCkC,MAAK,SAACC,GACLye,EAAcze,EAAIoB,KAAK4d,aAEvBN,EAAe1e,EAAIoB,YAGxBnB,OAAM,SAACC,GACNC,QAAQC,IAAI,gCAAkCF,MAhB1C,OAmBRe,GAAa,GAnBL,2CAoBP,CAAC0H,IAGJ,MAAgDpM,oBAAS,GAAzD,mBAAO4e,EAAP,KAAyBC,EAAzB,KAEA,SAASnF,IACPmF,GAAqBD,GAIvB,SAASS,GAAuB0S,GAG9B,IAFA,IAAIC,EAAoB,EACpBrP,EAAQ,EACHpa,EAAI,EAAGA,EAAIlE,EAAcoB,OAAQ8C,IACX,YAAzBlE,EAAckE,GAAGxH,KACnBixB,GAAqB,EAErBrP,GAAS,EAGb,MAAmB,KAAfoP,EACKC,EAEU,KAAfD,EACKpP,OADT,EAOF,OAAwChV,IAAM3N,UAAS,GAAvD,qBAAO0Y,GAAP,MAAqBC,GAArB,MACMC,GAAsB,WAC1BD,IAAgB,IAQlB,GAAwC3Y,oBAAS,GAAjD,qBAAOsP,GAAP,MAAqBC,GAArB,MAEA,GAA8CvP,oBAAS,GAAvD,qBAAOwP,GAAP,MAAwBlD,GAAxB,MAEA,GAA8CtM,mBAAS,IAAvD,qBAAOyP,GAAP,MAAwBlD,GAAxB,MAGMC,GAAqB,WACzB+C,IAAgB,IAIZ9B,GAAsB,SAACX,EAAO4C,GACnB,cAAXA,GAIJH,IAAgB,IAGlB,OACE,mCACG9K,EACC,qBAAKhE,UAAU,iBAAf,SACE,cAAC,IAAD,UACE,sBAAMA,UAAU,kBAAhB,2BAIJ,eAAC,IAAD,WACE,yDACA,cAAC,GAAD,CACE8M,WAAYqR,EACZpR,cAAeqR,EACfxS,WAAYqN,EACZ7J,gBAAiBA,EACjBvD,mBAAoBA,GACpBC,mBAAoBA,GACpBC,mBAAoBA,GACpBiB,oBAAqBA,GACrBgP,mBAAoB5T,EAAgB/H,YAAYQ,GAChD8K,OAAQA,EACRgF,UAAWA,IAEb,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMhQ,GAAG,qBAAT,2BAEF,eAAC,IAAD,CAAmB4d,QAAM,EAAzB,8BACoBnW,EAAgBvH,SAGtC,cAAC,GAAD,CACEuH,gBAAiBA,EACjBd,gBAAe,OAAE1D,QAAF,IAAEA,OAAF,EAAEA,EAAeoB,OAChC2b,aAAca,EACd2K,YAAaA,EACb9M,cAAeA,EACfD,WAAYA,EACZiS,QAASA,EACTjZ,qBAlEmB,WAC3BF,IAAiBD,KAkETE,oBAAqBA,GACrBpM,mBAAoBA,GACpBiB,oBAAqBA,GACrBnB,mBAAoBA,GACpBC,mBAAoBA,GACpBH,OAAQA,EACRgF,UAAWA,IAIb,qBAAK3Q,UAAU,qDAAf,SACE,eAAC,IAAD,WACE,gCACE,cAAC,IAAD,CAAUoiB,MAAI,EAACpiB,UAAU,OAAzB,SACG,IACS,IACZ,8CACA,cAAC,IAAD,CAAUoiB,MAAI,EAACpiB,UAAU,OAAzB,SACG,IACS,IACZ,kDACA,cAAC,IAAD,CAAUoiB,MAAI,EAACpiB,UAAU,OAAzB,SACG4e,GAAuB,OACd,IACZ,sDAEF,cAAC,IAAD,CACE5e,UAAU,YACVwK,MAAM,UACNtB,QAAS+P,EAHX,yCAUJ,cAACoJ,GAAA,EAAD,CAASC,UAAU,OAAOtiB,UAAU,OAApC,SACE,iDAEF,cAAC,IAAD,UACE,cAAC,GAAD,CACEwgB,WAAYpY,EAAgBoY,WAC5BG,aAAca,EACdX,SAAUzY,EAAgB0Z,QAAQ1K,SAClCqJ,yBAA0BrY,EAAgBma,eAAephB,KACzD2f,aAAc1Y,EAAgB0Z,QAAQvK,gBACtCiL,WAAY5e,EAAc4e,WAC1BzB,aAAc3Y,EAAgBV,UAAUvG,KACxCZ,WAAY6H,EAAgB3C,eAGhC,cAAC4c,GAAA,EAAD,CAASC,UAAU,OAAOtiB,UAAU,OAApC,SACE,qDAEF,cAAC,IAAD,UACE,cAAC,IAAD,CAAQA,UAAU,qCAAlB,SACE,cAAC,GAAD,CAEEa,GAAIuH,EAAgB0Z,QAAQjhB,GAC5Bmf,eAAgB5X,EAAgB6nB,UAAU9uB,KAC1Cmf,OAAO,eACPhgB,KAAK,WACLE,YAAa4H,EAAgB0Z,QAAQthB,YACrC4f,aAAchY,EAAgB0Z,QAAQvhB,WACtC8f,WAAYjY,EAAgB0Z,QAAQ/gB,YACpCwc,KAAMnV,EAAgB0Z,QAAQvE,KAC9BhB,QAAQ,GATHnU,EAAgB0Z,QAAQjhB,QAeF,IAAhC+d,GAAuB,MACtB,qCACE,cAACyD,GAAA,EAAD,CAASC,UAAU,OAAOtiB,UAAU,YAApC,SACE,sDAEF,cAAC,IAAD,UACG4D,EAAcqB,KACb,SAACwd,GAAD,MACwB,aAAtBA,EAAaniB,MACX,cAAC,IAAMqF,SAAP,UACE,cAAC,IAAD,CAAQ3F,UAAU,qCAAlB,SACE,cAAC,GAAD,CAEEa,GAAI4hB,EAAa5hB,GACjByf,OAAQmC,EAAanC,OACrBhgB,KAAMmiB,EAAaniB,KACnBE,YAAaiiB,EAAajiB,YAC1B4f,aAAcqC,EAAaliB,WAC3B8f,WAAYoC,EAAa1hB,YACzBwc,KAAMkF,EAAalF,KACnBzK,UAAW2P,EAAa3P,UACxByJ,QAAQ,EACRsD,eAAgB4C,EAAa3J,eAVxB2J,EAAa5hB,gBAqBpC,cAAC6Y,GAAA,EAAD,CACE1P,GAAI,CAAEQ,MAAO,OAAQmP,OAAQ,SAACC,GAAD,OAAWA,EAAMD,OAAOE,OAAS,IAC9D9J,KAAMkI,GACN/O,QAASiP,GAHX,SAKE,cAAC2B,GAAA,EAAD,CAAkBtP,MAAM,cAG1B,cAACmF,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,KAAMlB,GACNmB,iBAAkB,IAClBpN,QAASoK,GACThN,UAAU,OALZ,SAOsB,GAAnB+O,GACC,cAAC,GAAD,CACEnM,QAASoK,GACTjD,SAAS,UACTC,GAAI,CAAE7J,MAAO,QAHf,SAKG6O,KAGH,cAAC,GAAD,CACEpM,QAASoK,GACTjD,SAAS,QACTC,GAAI,CAAE7J,MAAO,QAHf,SAKG6O,aC9RF,SAAS8U,KAEtB,IAAQtkB,EAASI,IAATJ,KACF4B,EAAW5B,EAAK4B,SAChBF,EAAU1B,EAAK0B,QACf6hB,EAAWC,cAWjB,OACE,qCACE,cAAC,IAAD,CACE/iB,MAAO,CAAEkkB,WAAY,GACrBC,MAAM,MACNC,OAAO,KACPC,OAAK,EACLC,QAAQ,OALV,SAOE,eAAC,IAAD,CAAcC,OAAK,EAAnB,UACE,qBAAKxkB,UAAU,kBAAf,SACE,eAAC,IAAD,CACEskB,OAAK,EACL5G,KAAK,qBACLzd,MAAO,CAAEuK,MAAO,WAHlB,UAKE,qBACExK,UAAU,OACVsJ,IAAKsZ,GACL9d,OAAO,KACP0sB,IAAI,GACJC,QAAQ,SAVZ,WAYWvwB,OAGb,qBAAKlB,UAAU,kBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAmBc,SAAO,EAACiI,KAAK,KAAhC,SACE,cAAC,IAAD,CAASA,KAAK,KAAK/I,UAAU,OAAOmK,KAAG,EAAClB,KAAK,kBAE/C,eAAC,IAAD,CAAiBjJ,UAAU,aAA3B,UACE,oBAAGA,UAAU,YAAb,UACE,+CACCkB,KAEH,oBAAGlB,UAAU,YAAb,UACE,8CACCoB,KAEH,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,MAEF,eAAC,IAAD,CAAiB8H,QArDlB,WACbpD,aAAa6e,WAAW,YACxB7e,aAAa6e,WAAW,WACxB7e,aAAa6e,WAAW,iBACxB7e,aAAa6e,WAAW,gBACxB5B,EAAS,SAAU,CAAEa,SAAS,IAC9BpP,OAAO3G,SAASlC,QAAO,IA+CT,UACE,cAAC,IAAD,CACE3C,KAAG,EACHC,KAAK,eACLF,KAAK,KACL/I,UAAU,SALd,4BAeZ,0BCvFN,IAqCe4kB,GArCA,WACb,MAAsCrlB,oBAAS,GAA/C,6BAEA,OACE,eAAC,IAAMoG,SAAP,WAEE,qBACEyO,MAAM,gBACNnU,MAAO,CACLiF,aAAc,GAEdke,QAAS,mBALb,SASE,cAAC,GAAD,MAKF,qBACEhP,MAAM,UACNnU,MAAO,CAELmjB,QAAS,qBACTyB,WAAY,QALhB,SAQE,sBAAM7kB,UAAU,MAAhB,SACE,cAAC,IAAD,QAGJ,cAAC,GAAD,QCUS0xB,GA7CO,WAClB,IAAQjyB,EAAYG,IAAZH,QACF4B,EAAgBkF,IAIhBorB,EAAU,uCAAG,4BAAAztB,EAAA,sEAEQ7C,EAAc8C,IAAI,QAF1B,UAKY,qBAHrBI,EAFS,QAKFH,KAAK,GAAG8P,KALN,uBAMXzU,GAAQ,SAAA2G,GAAS,IAAD,MACZ,OAAO,2BACAA,GADP,IAEIhF,SAAUmD,EAASH,KAAK,GAAGhD,SAC3BF,QAAO,UAAEqD,EAASH,KAAK,GAAGnD,gBAAnB,aAAE,EAA2BC,QAAQC,KAC5CywB,OAAM,UAAErtB,EAASH,KAAK,GAAGnD,gBAAnB,aAAE,EAA2BC,QAAQuX,UAC3CpU,QAAO,UAAEE,EAASH,KAAK,GAAGnD,gBAAnB,aAAE,EAA2BC,QAAQmD,QAC5C6P,KAAM3P,EAASH,KAAK,GAAG8P,KACvBJ,SAAUvP,EAASH,KAAK,QAdrB,iCAmBf3E,GAAQ,SAAA2G,GAAS,IAAD,MAEZ,OAAO,2BACAA,GADP,IAEIhF,SAAUmD,EAASH,KAAK,GAAGhD,SAC3BF,QAAO,UAAEqD,EAASH,KAAK,GAAGnD,gBAAnB,aAAE,EAA2B4wB,cAAc1wB,KAClDywB,OAAM,UAAErtB,EAASH,KAAK,GAAGnD,gBAAnB,aAAE,EAA2B4wB,cAAcpZ,UACjDpU,QAAO,UAAEE,EAASH,KAAK,GAAGnD,gBAAnB,aAAE,EAA2B4wB,cAAchxB,GAClDqT,KAAM3P,EAASH,KAAK,GAAG8P,UA3BhB,8DAAH,qDAmClB,OAAOyd,GCgBMG,GAnDM,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACZvyB,EAAQI,IAARJ,KACDqO,EAAWC,cACX6jB,EAAaD,KACnB,EAAkCnyB,oBAAS,GAA3C,mBAAOyE,EAAP,KAAkBC,EAAlB,KA6BA,OA3BA3B,qBAAU,WAEN,IAAI0vB,GAAY,EAGVC,EAAe,uCAAG,sBAAA/tB,EAAA,+EAEVytB,IAFU,sDAKhBxuB,QAAQmB,MAAR,MALgB,uBAQhB0tB,GAAa/tB,GAAa,GARV,0EAAH,qDAcrB,OAFA,OAACzE,QAAD,IAACA,KAAM0U,KAA2BjQ,GAAa,GAAjCguB,IAEP,kBAAMD,GAAY,KAC1B,IASChuB,EACQ,cAAC,IAAD,CAAYkuB,MAAI,EAAhB,SACI,sBAAMlyB,UAAU,kBAAhB,0BAIQ,OAAZ+xB,QAAY,IAAZA,KAAcrO,SAAd,OAAwBlkB,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAM0U,MACpB,cAAC,IAAD,IACI,OAAJ1U,QAAI,IAAJA,KAAM4B,SACF,cAAC,IAAD,CAAUT,GAAG,gBAAgBwgB,MAAO,CAAClL,KAAKpI,GAAW+V,SAAO,IAC5D,cAAC,IAAD,CAAUjjB,GAAK,SAASwgB,MAAO,CAAClL,KAAKpI,GAAW+V,SAAO,KCItEuO,GAlDM,WACnB,MAAkC5yB,oBAAS,GAA3C,mBAAOyE,EAAP,KAAkBC,EAAlB,KACM+B,EAAUJ,IAChB,EAA0BhG,IAAlBJ,EAAR,EAAQA,KACFmyB,GADN,EAAclyB,QACKiyB,MA+BnB,OA7BApvB,qBAAU,WACR,IAAI0vB,GAAY,EAIVI,EAAkB,uCAAG,sBAAAluB,EAAA,+EAGjBytB,IAHiB,uBAIjB3rB,IAJiB,6EAQvBgsB,GAAa/tB,GAAa,GARH,0EAAH,qDAcxB,OAFA,OAACzE,QAAD,IAACA,KAAM6G,YAAqCpC,GAAa,GAApCmuB,IAEd,kBAAOJ,GAAY,KACzB,IAUD,mCACGhuB,EACC,qBAAKhE,UAAU,iBAAf,SACE,cAAC,IAAD,UACE,sBAAMA,UAAU,kBAAhB,2BAIJ,cAAC,IAAD,OC5BO,SAASqyB,KACtB,MAAyCzkB,cAAjCoK,EAAR,EAAQA,cAAekU,EAAvB,EAAuBA,cACvB,EAAkD3sB,mBAAS,IAA3D,mBAAO+yB,EAAP,KAA0BC,EAA1B,KACA,EAAkChzB,oBAAS,GAA3C,mBAAOyE,EAAP,KAAkBC,EAAlB,KACA,EAA8CiJ,IAAM3N,SAAS,IAA7D,mBAAO+oB,EAAP,KAAwB6B,EAAxB,KACA,EAAoCjd,IAAM3N,SAAS,IAAnD,mBAAOylB,EAAP,KAAmBS,EAAnB,KACA,EAAsClmB,qBAAtC,mBAAO4sB,EAAP,KAAoBzK,EAApB,KAEA,EAAgDxU,IAAM3N,SAAS,IAA/D,mBAAO8sB,EAAP,KAAyBmG,EAAzB,KAEA,EAA4BjzB,oBAAS,GAArC,mBAAOgd,EAAP,KAAe0P,EAAf,KACQzsB,EAASI,IAATJ,KAGR8C,qBAAU,WACS,kBAAb9C,EAAK0U,MACP+X,GAAU,KAEX,CAACzsB,EAAK0U,OAGT5R,oBAAS,sBAAC,4BAAA4B,EAAA,6DAGNyK,OADmBiD,GAAjBoG,EACK,qBAAuBkU,EAAgB,IAEvC,kCAAoClU,EALrC,SAOF3W,EAAc8C,IAAIwK,GAAM5L,MAAK,SAACC,QACf4O,GAAf5O,EAAIoB,KAAK,KACXpB,EAAIoB,KAAOpB,EAAIoB,KAAK,IAEtBmuB,EAAqBvvB,EAAIoB,MACzB+lB,EAAmBnnB,EAAIoB,KAAK0d,QAAQzK,aACpChW,EACG8C,IAAI,YAAcnB,EAAIoB,KAAK0d,QAAQjhB,GAAK,KACxCkC,MAAK,SAAC0vB,GACL/Q,EAAe+Q,EAAKruB,YAhBlB,OAmBRH,GAAa,GAnBL,2CAoBP,IAIH3B,oBAAS,sBAAC,0EAAA4B,EAAA,sEACFuhB,EAAc,CAClBR,eAAc,OAAEqN,QAAF,IAAEA,GAAF,UAAEA,EAAmBjyB,mBAArB,aAAE,EAAgCQ,GAChD4f,yBAAwB,OAAE6R,QAAF,IAAEA,GAAF,UAAEA,EAAmB/P,sBAArB,aAAE,EAAmCphB,KAC7D2kB,aAAY,OAAEwM,QAAF,IAAEA,OAAF,EAAEA,EAAmB9R,WACjC2F,aAAY,OAAEmM,QAAF,IAAEA,OAAF,EAAEA,EAAmBnM,aACjCC,WAAU,OAAEkM,QAAF,IAAEA,OAAF,EAAEA,EAAmB7H,YAE/BjE,cAAa,OAAE8L,QAAF,IAAEA,GAAF,UAAEA,EAAmBrC,iBAArB,aAAE,EAA8B5rB,QAG7CoiB,eAAc,OAAE6L,QAAF,IAAEA,GAAF,UAAEA,EAAmBrC,iBAArB,aAAE,EAA8B9uB,KAC9CulB,iBAAgB,OAAE4L,QAAF,IAAEA,GAAF,UAAEA,EAAmBrC,iBAArB,aAAE,EAA8B5qB,OAChDshB,aAAY,OAAE2L,QAAF,IAAEA,GAAF,UAAEA,EAAmBrC,iBAArB,aAAE,EAA8B3qB,UAC5CshB,aAAY,OAAE0L,QAAF,IAAEA,GAAF,UAAEA,EAAmBrC,iBAArB,aAAE,EAA8B1qB,KAC5CshB,eAAc,OAAEyL,QAAF,IAAEA,GAAF,UAAEA,EAAmBrC,iBAArB,aAAE,EAA8BzqB,aAC9CshB,iBAAgB,OAAEwL,QAAF,IAAEA,GAAF,UAAEA,EAAmBrC,iBAArB,aAAE,EAA8B1f,MAChDwW,eAAc,OAAEuL,QAAF,IAAEA,GAAF,UAAEA,EAAmBrC,iBAArB,aAAE,EAA8B3f,MAE9C0W,aAAY,OAAEsL,QAAF,IAAEA,GAAF,UAAEA,EAAmB5qB,iBAArB,aAAE,EAA8BrD,QAG5C4iB,cAAa,OAAEqL,QAAF,IAAEA,GAAF,UAAEA,EAAmB5qB,iBAArB,aAAE,EAA8BvG,KAC7C+lB,gBAAe,OAAEoL,QAAF,IAAEA,GAAF,UAAEA,EAAmB5qB,iBAArB,aAAE,EAA8BrC,OAC/C8hB,YAAW,OAAEmL,QAAF,IAAEA,GAAF,UAAEA,EAAmB5qB,iBAArB,aAAE,EAA8BpC,UAC3C8hB,YAAW,OAAEkL,QAAF,IAAEA,GAAF,UAAEA,EAAmB5qB,iBAArB,aAAE,EAA8BnC,KAC3C8hB,cAAa,OAAEiL,QAAF,IAAEA,GAAF,UAAEA,EAAmB5qB,iBAArB,aAAE,EAA8BlC,aAC7C8hB,gBAAe,OAAEgL,QAAF,IAAEA,GAAF,UAAEA,EAAmB5qB,iBAArB,aAAE,EAA8B6I,MAC/CgX,cAAa,OAAE+K,QAAF,IAAEA,GAAF,UAAEA,EAAmB5qB,iBAArB,aAAE,EAA8B4I,MAE7CoX,YAAW,OAAE4K,QAAF,IAAEA,OAAF,EAAEA,EAAmB5K,YAChCC,gBAAe,OAAE2K,QAAF,IAAEA,OAAF,EAAEA,EAAmB3K,gBAEpCE,oBAAmB,OAAEyK,QAAF,IAAEA,OAAF,EAAEA,EAAmBzK,oBACxCC,gBAAe,OAAEwK,QAAF,IAAEA,OAAF,EAAEA,EAAmBxK,gBACpCC,UAAS,OAAEuK,QAAF,IAAEA,OAAF,EAAEA,EAAmBvK,UAC9BmC,SAAQ,OAAEoI,QAAF,IAAEA,OAAF,EAAEA,EAAmBpI,SAG7B7B,cAAa,OAAEiK,QAAF,IAAEA,GAAF,UAAEA,EAAmBxQ,eAArB,aAAE,EAA4BvhB,WAC3CogB,aAAY,OAAEwL,QAAF,IAAEA,OAAF,EAAEA,EAAanK,YAC3BnB,SAAQ,OAAEyR,QAAF,IAAEA,GAAF,UAAEA,EAAmBxQ,eAArB,aAAE,EAA4B1K,SACtC0J,aAAY,OAAEwR,QAAF,IAAEA,GAAF,UAAEA,EAAmBxQ,eAArB,aAAE,EAA4BvK,kBA1CpC,OA4CRib,EAAoB,CAClBhQ,WAAU,OAAE8P,QAAF,IAAEA,OAAF,EAAEA,EAAmBzxB,GAC/BmX,cAAa,OAAEsa,QAAF,IAAEA,GAAF,UAAEA,EAAmBjyB,mBAArB,aAAE,EAAgCQ,GAC/CurB,aAAc,gBACdtN,UAAS,OAAEwT,QAAF,IAAEA,OAAF,EAAEA,EAAmB7sB,WAC9B6a,OAAM,OAAEgS,QAAF,IAAEA,GAAF,UAAEA,EAAmB5qB,iBAArB,aAAE,EAA8BvG,KACtCuxB,gBAAgB,EAChBlyB,YAAa,GACbmyB,gBAAe,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAmB9tB,OACpCouB,cAAa,OAAEN,QAAF,IAAEA,GAAF,UAAEA,EAAmBjyB,mBAArB,aAAE,EAAgCmE,SArDzC,2CAuDP,CAAC8tB,EAAmBnG,IAIvB,MAAoC5sB,mBAAS,QAA7C,mBAAOye,EAAP,KAAmBC,EAAnB,KAGA,SAASC,EAAgBve,GACnBA,IAAUqe,GAIdC,EAActe,GAGhB,OACE,mCACGqE,EACC,qBAAKhE,UAAU,iBAAf,SACE,cAAC,IAAD,UACE,sBAAMA,UAAU,kBAAhB,2BAIJ,qCACE,yDAECuc,EACC,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAM5b,GAAG,sBAAT,+BAEF,cAAC,IAAD,UACE,eAAC,IAAD,CAAMA,GAAI,sBAAwBurB,EAAlC,+BACqBA,OAGvB,eAAC,IAAD,CAAmB3N,QAAM,EAAzB,2BACiB8N,EAAiB7J,iBAIpC,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAM7hB,GAAG,gBAAT,2BAEF,cAAC,IAAD,UACE,eAAC,IAAD,CAAMA,GAAI,iBAAmB0rB,EAAiBrU,cAA9C,yBACeqU,EAAiBrU,mBAGlC,eAAC,IAAD,CAAmBuG,QAAM,EAAzB,2BACiB8N,EAAiB7J,iBAKtC,eAAC,IAAD,CAASviB,MAAO,CAAEC,UAAW,KAA7B,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAASme,OAAK,EAACre,UAAU,mBAAzB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEkJ,QAAS,kBAAMgV,EAAgB,SAC/BK,OAAuB,SAAfP,EAFV,kCAOF,cAAC,IAAD,UACE,cAAC,IAAD,CACE9U,QAAS,kBAAMgV,EAAgB,SAC/BK,OAAuB,SAAfP,EAFV,2BAOF,cAAC,IAAD,UACE,cAAC,IAAD,CACE9U,QAAS,kBAAMgV,EAAgB,SAC/BK,OAAuB,SAAfP,EAFV,2BAOF,cAAC,IAAD,UACE,cAAC,IAAD,CACE9U,QAAS,kBAAMgV,EAAgB,SAC/BK,OAAuB,SAAfP,EAFV,mCASN,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAQhe,UAAU,WAAlB,UACkB,SAAfge,EACC,cAAC,IAAD,CAAche,UAAU,OAAxB,gCAGiB,SAAfge,EACF,cAAC,IAAD,CAAche,UAAU,OAAxB,yBACiB,SAAfge,EACF,cAAC,IAAD,CAAche,UAAU,OAAxB,yBAEA,cAAC,IAAD,CAAcA,UAAU,OAAxB,4BAEF,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAaqD,KAAqB,SAAf2a,EAAnB,UACE,8BACE,iDACCgH,EAAWC,kBAEd,8BACE,4DACCD,EAAWvE,4BAEd,8BACE,oDACCuE,EAAWc,gBAEd,8BACE,uDACCd,EAAWmB,gBAEd,8BACE,8CACCnB,EAAWoB,iBAGhB,eAAC,IAAD,CAAa/iB,KAAqB,SAAf2a,EAAnB,UAEE,6BACE,4CAEF,8BACE,8CACCgH,EAAWwB,iBAEd,8BACE,wCACCxB,EAAWyB,kBAEd,8BACE,yDACCzB,EAAW0B,oBAEd,8BACE,+CACC1B,EAAW2B,gBAEd,8BACE,+CACC3B,EAAW4B,gBAEd,8BACE,yDACC5B,EAAW6B,kBAEd,8BACE,gDACC7B,EAAW8B,oBAEd,8BACE,gDACC9B,EAAW+B,kBAEd,uBAEA,6BACE,0DAEF,8BACE,8CACC/B,EAAWgC,gBAEd,8BACE,wCACChC,EAAWiC,iBAEd,8BACE,yDACCjC,EAAWkC,mBAEd,8BACE,+CACClC,EAAWmC,eAEd,8BACE,+CACCnC,EAAWoC,eAEd,8BACE,yDACCpC,EAAWqC,iBAEd,8BACE,gDACCrC,EAAWsC,mBAEd,8BACE,gDACCtC,EAAWuC,oBAGhB,eAAC,IAAD,CAAalkB,KAAqB,SAAf2a,EAAnB,UACE,8BACE,8CACCgH,EAAW0C,eAEd,8BACE,kDACC1C,EAAW2C,mBAEd,8BACE,wDACC3C,EAAW4C,yBAEd,8BACE,yFACqD,OAEpD5C,EAAW6C,uBAEd,8BACE,oDACC7C,EAAW8C,mBAEd,8BACE,4CACC9C,EAAW+C,aAEd,8BACE,4CACC/C,EAAWkF,eAGhB,eAAC,IAAD,CAAa7mB,KAAqB,SAAf2a,EAAnB,UACE,8BACE,iDACCgH,EAAWqD,iBAEd,8BACE,+CACCrD,EAAWrE,aAFd,IAE6BqE,EAAWnE,YAExC,8BACE,+CACCmE,EAAWlE,aAFd,IAE6BkE,EAAWnE,YAExC,oBAAI7gB,UAAU,SACbsoB,EAAgBrjB,KAAI,SAACsjB,GAAD,OACnB,qCACE,oBAAIvoB,UAAU,SACd,6BACE,oDAEF,8BACE,0CACCuoB,EAAO7Q,WAEV,8BACE,yCACC6Q,EAAO5Q,UAEV,8BACE,0CACC4Q,EAAO3Q,QAEV,8BACE,oDACC2Q,EAAO1Q,MAAM+I,QAAQ,GAFxB,IAE6BoE,EAAWnE,kBAI5C,oBAAI7gB,UAAU,SAGd,oBAAGA,UAAU,OAAb,UACE,yCADF,kCACiD,KAE7C0gB,OAAOsE,EAAWrE,cAClBD,OAAOsE,EAAWlE,eAClBF,QAAQ,GAAI,IACboE,EAAWnE,YAEd,oBAAG7gB,UAAU,OAAb,UACE,2CADF,+BACgD,MAE3C0gB,OAAOsE,EAAWrE,cACjBD,OAAOsE,EAAWlE,eACpBJ,OAAO,MACPE,QAAQ,GAAI,IACboE,EAAWnE,YAEd,oBAAG7gB,UAAU,OAAb,UACE,+DADF,6BAEgB,MAEX0gB,OAAOsE,EAAWrE,cACjBD,OAAOsE,EAAWlE,eACpBJ,OAAO,OACPE,QAAQ,GAAI,IACboE,EAAWnE,YAEd,oBAAG7gB,UAAU,OAAb,UACE,4CADF,kCACoD,MAE/C0gB,OAAOsE,EAAWrE,cACjBD,OAAOsE,EAAWlE,eACpBJ,OAAO,MACPA,OAAO,MACPE,QAAQ,GAAI,IACboE,EAAWnE,YAEd,oBAAG7gB,UAAU,OAAb,UACE,6DADF,gCAEiB,IACf,gCAEK0gB,OAAOsE,EAAWrE,cACjBD,OAAOsE,EAAWlE,eAClBJ,OAAO,MACRA,OAAOsE,EAAWrE,cACjBD,OAAOsE,EAAWlE,eAClBJ,OAAO,MACPA,OAAO,MACTE,QAAQ,GAAI,IACboE,EAAWnE,0BAOxB,eAAC,IAAD,CACE7gB,UAAU,WACVC,MAAO,CAAEusB,OAAQ,oBAAqB1nB,OAAQ,KAFhD,UAIE,oBAAG9E,UAAU,YAAb,UACE,8CACCqsB,EAAiBrU,iBAEpB,oBAAGhY,UAAU,OAAb,UACE,gDACCqsB,EAAiB7J,cAEpB,oBAAGxiB,UAAU,OAAb,UACE,gDACCqsB,EAAiBD,gBAEpB,oBAAGpsB,UAAU,OAAb,UACE,iDACCqsB,EAAiBvN,aAEpB,oBAAG9e,UAAU,OAAb,UACE,kDACCqsB,EAAiB/L,UAGpB,oBAAGtgB,UAAU,OAAb,UACE,2CACCqsB,EAAiBqG,eACd,0BACA,mCAEN,oBAAG1yB,UAAU,YAAb,UACE,uDACqC,IAApCqsB,EAAiBsG,gBAChB,iEAEAtG,EAAiBsG,mCC7XxBE,OAvFf,WACE,IAAQrzB,EAASI,IAATJ,KACR,OACE,eAAC,IAAD,WAIE,cAAC,IAAD,CAAOszB,KAAK,QAAQC,QAAS,cAAC/E,GAAD,MAG7B,cAAC,IAAD,CAAO+E,QAAS,cAAC,GAAD,IAAhB,SACE,eAAC,IAAD,CACED,KAAK,IACLC,QACe,oBAAbvzB,EAAK0U,KAA6B,cAAC,GAAD,IAAa,cAAC8e,GAAD,IAHnD,UAME,cAAC,IAAD,CACED,QACE,cAAC,GAAD,CACEhB,aAAc,CAAC,mBAAoB,oBAHzC,SAOE,cAAC,IAAD,CACEe,KAAK,IACLC,QACe,oBAAbvzB,EAAK0U,KACH,cAAC,EAAD,IAEA,cAAC,GAAD,QAOR,eAAC,IAAD,CAAO6e,QAAS,cAAC,GAAD,CAAahB,aAAc,CAAC,sBAA5C,UACE,cAAC,IAAD,CAAOe,KAAK,SAASC,QAAS,cAAC,GAAD,MAE9B,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,EAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,eAAuBC,QAAS,cAAC,EAAD,KAAZ,GAChC,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOD,KAAK,2BAA2BC,QAAS,cAAC,EAAD,MAChD,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,EAAD,MAChC,cAAC,IAAD,CACED,KAAK,+BACLC,QAAS,cAAC,GAAD,MAEX,cAAC,IAAD,CACED,KAAK,+CACLC,QAAS,cAACV,GAAD,MAEX,cAAC,IAAD,CACES,KAAK,2CACLC,QAAS,cAAC,GAAD,MAEX,cAAC,IAAD,CACED,KAAK,oDACLC,QAAS,cAAC,GAAD,SAIb,eAAC,IAAD,CAAOA,QAAS,cAAC,GAAD,CAAahB,aAAc,CAAC,oBAA5C,UACE,cAAC,IAAD,CACEe,KAAK,mCACLC,QAAS,cAAC,GAAD,MAEX,cAAC,IAAD,CAAOD,KAAK,oBAAoBC,QAAS,cAAC,GAAD,MACzC,cAAC,IAAD,CACED,KAAK,mDACLC,QAAS,cAACV,GAAD,MAEX,cAAC,IAAD,CACES,KAAK,wDACLC,QAAS,cAAC,GAAD,cAMjB,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,GAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,GAAD,UCrG5BE,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBpwB,MAAK,YAAkD,IAA/CqwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCIdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOb,KAAK,KAAKC,QAAS,cAAC,GAAD,cAKlC3yB,SAASoR,eAAe,SAM1ByhB,O","file":"static/js/main.f2a7267b.chunk.js","sourcesContent":["import { createContext, useState } from \"react\";\n\nconst AuthContext = createContext({});\n\nexport const AuthProvider = ({ children }) => {\n    const [auth, setAuth] = useState({});\n\n    return (\n        <AuthContext.Provider value={{ auth, setAuth}}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthContext; ","import { useContext } from \"react\";\nimport AuthContext from \"../context/AuthProvider\";\n\n//Liefert anwendungsweit Nutzerdaten mithilfe der AuthContext Methode\nconst useAuth = () => {\n    return useContext(AuthContext);\n}\n\nexport default useAuth;  ","import { React, useState, useEffect } from \"react\";\nimport {\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardText,\n  MDBCardHeader,\n  MDBCardFooter,\n  MDBBtn,\n} from \"mdb-react-ui-kit\";\n\nimport { Link } from \"react-router-dom\";\n\n\nfunction DashboardDocumentCard(props) {\n\n  return (\n    <>\n      <MDBCard\n        className=\"me-3 mb-2\"\n        style={{ minHeight: \"300px\", width: \"300px\" }}\n      >\n        <MDBCardHeader>Auftrags-ID {props.document.transaction}</MDBCardHeader>\n        <MDBCardBody>\n          <MDBCardTitle>{props.document.type} ({props.document.issue_date})</MDBCardTitle>\n          <MDBCardText className=\"my-4\">\n            {props.document.description == \"\" ? <br /> : props.document.description}\n          </MDBCardText>\n          <Link\n            style={{ display: \"block\", margin: \"1rem 0\" }}\n            to={\"/transactions/\" + props.document.transaction.toString() + \"/document/\" + props.document.id.toString()}\n          >\n            <MDBBtn outline>\n              Anzeigen\n            </MDBBtn>\n          </Link>\n        </MDBCardBody>\n        <MDBCardFooter className=\"text-muted\">\n          Hochgeladen am: {props.document.upload_date}\n          <br />\n          von {props.document.owner.employee.company.name} ({props.document.owner.username})\n        </MDBCardFooter>\n      </MDBCard>\n    </>\n  );\n}\n\nexport default DashboardDocumentCard;\n","import axios from \"axios\";\n\n\nconst baseURL = \"http://tradechain-app.herokuapp.com/\";\n//const baseURL = \"http://localhost:8000/\";\n\n/* Create standalone instance of axios that we can use every in the software*/\nconst axiosInstance = axios.create({\n  baseURL: baseURL,\n  timeout: 5000,\n  headers: {\n    /*Customize header to bearer*/\n    \"Content-Type\": \"application/json\",\n    accept: \"application/json\",\n  },\n});\n\nexport default axiosInstance;\n","import { React, useState, useEffect } from \"react\";\n\nimport Toast from \"react-bootstrap/Toast\";\nimport axiosInstance from \"../../axiosApi\";\n\nexport default function NotificationToast(props) {\n  var timestamp = new Date(props.alert.timestamp);\n  const [notificationText, setNotificationText] = useState(\"\");\n  const [notificationObject, setNotificationObject] = useState(\"\");\n\n  const [showB, setShowB] = useState(true);\n\n  const toggleShowB = () => setShowB(!showB);\n\n  useEffect(() => {\n    if (props.alert?.target_content_type == \"10\") {\n      setNotificationText(props.alert?.description);\n      setNotificationObject(\"Partnerschaftsanfrage\");\n    } else if (props.alert?.target_content_type == \"11\") {\n      const text = props.alert?.description;\n      setNotificationText(text);\n      setNotificationObject(`Auftrags-ID ${props.alert.target_object_id}`);\n    } else {\n      const text = \"sonstige Benachrichtigung\";\n      setNotificationText(props.alert?.description);\n      setNotificationObject(\"Allgemeine Benachrichtigung\");\n    }\n  }, [alert]);\n\n  const markasread = () =>\n    axiosInstance\n      .patch(`/alerts/${props.alert?.id}/`, {\n        unread: false,\n      })\n      .then((res) => {\n        toggleShowB();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n  return (\n    <Toast\n      className=\"mb-2\"\n      bg=\"light\"\n      style={{ width: \"100%\" }}\n      onClose={markasread}\n      show={showB}\n    >\n      <Toast.Header>\n        <strong className=\"me-auto\">{notificationObject}</strong>\n        <small>{timestamp.toLocaleString()}</small>\n      </Toast.Header>\n      <Toast.Body>{notificationText}</Toast.Body>\n    </Toast>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./css/LoadingSpinner.css\";\nimport {\n  MDBContainer,\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardText,\n  MDBBtn,\n  MDBCardHeader,\n  MDBRow,\n  MDBCol,\n  MDBSpinner,\n} from \"mdb-react-ui-kit\";\n\nimport useAuth from \"../hooks/useAuth\";\n\nimport DashboardDocumentCard from \"../components/Dashboard/DashboardDocumentCard\";\nimport axiosInstance from \"../axiosApi\";\nimport { Link } from \"react-router-dom\";\nimport NotificationToast from \"../components/Dashboard/NotifcationToast\";\n\nfunction Dashboard() {\n  // Transaktionen\n  const [transactionsData, setTransactionsData] = useState([]);\n\n  // Dokumente\n  const [documentsData, setDocumentsData] = useState([]);\n\n  const [openRequests, setopenRequests] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { auth } = useAuth();\n\n  // DB Call\n  async function getDashboardData() {\n    //Abfragen der Transaktionen\n    await axiosInstance\n      .get(\"transactions/\")\n      .then((res) => {\n        setTransactionsData(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    //Abfragen der Dokumente\n    await axiosInstance\n      .get(\"documents/\")\n      .then((res) => {\n        setDocumentsData(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    //Abfragen der unbestätigten Partnerschaften bei denen wir Partner 2 sind\n\n    await axiosInstance\n      .get(`partnership/?partner2=${auth.eori_nr}&confirmed=false`)\n      .then((res) => {\n        setopenRequests(res.data);\n      })\n      .catch(function (error) {\n        if (error.response) {\n          // The request was made and the server responded with a status code\n          // that falls out of the range of 2xx\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n          // http.ClientRequest in node.js\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.message);\n        }\n      });\n    await axiosInstance\n      .get(`/alerts?unread=true`)\n      .then((res) => {\n        setAlerts(res.data);\n      })\n      .catch(function (error) {\n        if (error.response) {\n          // The request was made and the server responded with a status code\n          // that falls out of the range of 2xx\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n          // http.ClientRequest in node.js\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.message);\n        }\n      });\n    setIsLoading(false);\n  }\n\n  // Transaktionen abrufen\n  useEffect(() => {\n    getDashboardData();\n  }, []);\n\n  // Dokumente abrufen\n  useEffect(() => {\n    axiosInstance.get(\"documents/\").then((res) => {\n      setDocumentsData(res.data);\n    });\n  }, []);\n\n  const [alerts, setAlerts] = useState([]);\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"loadingSpinner\">\n          <MDBSpinner>\n            <span className=\"visually-hidden\">Lädt..</span>\n          </MDBSpinner>\n        </div>\n      ) : (\n        <div>\n          <MDBContainer>\n            <h3>Dashboard</h3>\n            <br />\n            <MDBRow>\n              <MDBCol className=\"col-md-6 mb-4\">\n                <MDBCard style={{ height: \"500px\" }}>\n                  <MDBCardHeader style={{ background: \"#fbfbfb\" }}>\n                    <b>Benachrichtigungen</b>\n                  </MDBCardHeader>\n                  <MDBCardBody className=\"overflow-scroll\">\n                    <MDBCardText>\n                      <>\n                        {alerts.length !== 0 ? (\n                          <>\n                            {alerts.map((alert) => (\n                              <NotificationToast key={alert.id} alert={alert} />\n                            ))}\n                          </>\n                        ) : (\n                          <MDBCardTitle className=\"mt-5\">\n                            Keine neuen Benachrichtungen\n                          </MDBCardTitle>\n                        )}\n                      </>\n                    </MDBCardText>\n                  </MDBCardBody>\n                </MDBCard>\n              </MDBCol>\n              <MDBCol className=\"col-md-6 mb-4\">\n                <MDBCard style={{ height: \"240px\", marginBottom: \"20px\" }}>\n                  <MDBCardHeader style={{ background: \"#fbfbfb\" }}>\n                    <b>Anzahl aktiver Aufträge: </b> {transactionsData.length}\n                  </MDBCardHeader>\n                  <MDBCardBody>\n                    {transactionsData !== [] ? (\n                      <>\n                        <i>Zuletzt aktualisiert:</i>\n                        <MDBCardTitle>\n                          {transactionsData[0].description}\n                        </MDBCardTitle>\n                        <MDBCardText>\n                          {transactionsData[0].partnership.partner.name}\n                          <br />\n                          {transactionsData[0].partnership.partner.street}{\" \"}\n                          <br />\n                          {\n                            transactionsData[0].partnership.partner.city_code\n                          }{\" \"}\n                          {transactionsData[0].partnership.partner.city},{\" \"}\n                          {transactionsData[0].partnership.partner.country_code}{\" \"}\n                          <Link\n                            style={{}}\n                            to={\n                              \"/transactions/\" +\n                              transactionsData[0].id.toString()\n                            }\n                            key={transactionsData[0].id}\n                          >\n                            <MDBBtn outline className=\"float-end\">\n                              Zum Auftrag\n                            </MDBBtn>\n                          </Link>\n                        </MDBCardText>\n                      </>\n                    ) : (\n                      <MDBCardTitle className=\"mt-5\">\n                        Keine neuen Anfragen\n                      </MDBCardTitle>\n                    )}\n                  </MDBCardBody>\n                </MDBCard>\n\n                <MDBCard style={{ height: \"240px\" }}>\n                  <MDBCardHeader style={{ background: \"#fbfbfb\" }}>\n                    <b>Ausstehende Partneranfragen: </b> {openRequests.length}\n                  </MDBCardHeader>\n                  <MDBCardBody>\n                    {openRequests.length != 0 ? (\n                      <>\n                        <i>Neuste Anfrage:</i>\n                        <MDBCardTitle>\n                          {openRequests[0].partner.name}\n                        </MDBCardTitle>\n                        <MDBCardText>\n                          EORI: {openRequests[0].partner.eori_nr}\n                          <br />\n                          Anfragedatum: {openRequests[0].date_added}\n                          <div className=\"float-end\">\n                            <Link\n                              style={{ display: \"block\", margin: \"1rem 0\" }}\n                              to={\"/partners/\"}\n                            >\n                              <MDBBtn outline className=\"float-end\">\n                                Zur Partnerübersicht\n                              </MDBBtn>\n                            </Link>\n                          </div>\n                        </MDBCardText>\n                      </>\n                    ) : (\n                      <MDBCardTitle className=\"mt-5\">\n                        Keine neuen Anfragen\n                      </MDBCardTitle>\n                    )}\n                  </MDBCardBody>\n                </MDBCard>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow>\n              <MDBCol>\n                <MDBCard>\n                  <MDBCardHeader style={{ background: \"#fbfbfb\" }}>\n                    <b>Zuletzt hinzugefügte Dokumente</b>\n                  </MDBCardHeader>\n                  <MDBCardBody>\n                    <MDBCardText>\n                      {documentsData !== [] ? (\n                        <MDBRow className=\"d-flex justify-content-center\">\n                          {documentsData.slice(0, 3).map((document) => (\n                            <React.Fragment key={document.id}>\n                              <DashboardDocumentCard document={document} />\n                              <br />\n                            </React.Fragment>\n                          ))}\n                        </MDBRow>\n                      ) : (\n                        <MDBRow>\n                          <p>Es liegen noch keine Dokumente vor.</p>\n                        </MDBRow>\n                      )}\n                    </MDBCardText>\n                  </MDBCardBody>\n                </MDBCard>\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Dashboard;\n","export default __webpack_public_path__ + \"static/media/inbound.365de793.png\";","export default __webpack_public_path__ + \"static/media/outbound.3f435137.png\";","import axiosInstance from \"../axiosApi\"\nimport useAuth from \"./useAuth\"\n\n//Anfragen eines neuen Access Token mithilfe des im lokalen Speicher beim Mithilfe des abgelegtens Refresh Token\n\nconst useRefreshToken = () => {\n    const { setAuth } = useAuth();\n    const refreshToken = localStorage.getItem(\"refresh_token\");\n    const refresh = async() => {\n        //console.log(`Neuer Access token wird angefordert. Genutzter Refresh Token ${refreshToken}`);\n                    //Refresh Token an Server für neuen Access Token\n\n        const response = await axiosInstance.post('/api/token/refresh/', \n            JSON.stringify({refresh: refreshToken}),\n        );\n    \n        setAuth(prev => {\n            //console.log(JSON.stringify(prev));\n            //console.log(`New AccessToken received : ${response.data.access}`);\n            return {\n                ...prev,\n\n\n                accessToken: response.data.access\n            }\n        });\n        return response.data.access; \n    }\n  return refresh\n\n}\n\nexport default useRefreshToken","import axiosInstance from \"../axiosApi\";\nimport { useEffect } from \"react\";\nimport useRefreshToken from \"./useRefreshToken\";\nimport useAuth from \"./useAuth\";\n\n\n\n//Handler für API Anfragen der Bedarf mittels Interceptor zum Beispiel neuen Acces Token anfragen, den Nutzer zur Anmeldeseite leitet (wenn er nicht mehr eingelogt ist\n//oder die Anfrage durchleitet. \n\nconst useAxiosPrivate = () => {\n    const refresh = useRefreshToken();\n    const { auth } = useAuth();\n\n\n    useEffect(() => {\n        //console.log(auth);\n\n        //Wenn kein Token vorhanden ist wird neuer Token erzeugt und gespeichert\n        const requestIntercept = axiosInstance.interceptors.request.use(\n            config => {\n                if (!config.headers['Authorization']) {\n                    //console.log(\"Alternativer Header wird erzeugt\");\n                    config.headers['Authorization'] = `Bearer ${auth?.accessToken}`;\n                }\n                return config;\n            }, (error) => Promise.reject(error)\n        ); \n        const responseIntercept = axiosInstance.interceptors.response.use(\n            //Antwort weiterleiten wenn alles okay \n            response => response,\n            //fehler abfangen und vorherige Anfrage einlesen\n            async (error) => {\n                //console.log(\"Fehler in der Anfrage\")\n                const prevRequest = error?.config;\n                if (error?.response?.status === 401 && !prevRequest?.sent) {\n                    prevRequest.sent = true;\n                    const newAccessToken = await refresh();\n                    prevRequest.headers['Authorization'] = `Bearer ${newAccessToken}`;\n                    return axiosInstance(prevRequest); \n                }\n                return Promise.reject(error);\n            }\n            \n        );\n        //console.log('interceptors ausgeführt')\n        //Cleanup -> um schleifen zu vermeiden \n        return() => {\n            axiosInstance.interceptors.request.eject(requestIntercept)\n            axiosInstance.interceptors.response.eject(responseIntercept)\n\n        }\n    }, [auth,refresh])\n    //zurückgeben des Axios Call mit Interceptor\n    return axiosInstance\n\n}\n\nexport default useAxiosPrivate","import React, { Component, useEffect, useState } from \"react\";\nimport {\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardSubTitle,\n  MDBCardText,\n  MDBCol,\n  MDBContainer,\n  MDBRow,\n  MDBIcon,\n  MDBCardFooter,\n  MDBDropdown,\n  MDBDropdownToggle,\n  MDBDropdownMenu,\n  MDBDropdownItem,\n  MDBDropdownLink,\n  MDBModal,\n  MDBModalDialog,\n  MDBModalContent,\n  MDBModalHeader,\n  MDBModalTitle,\n  MDBModalBody,\n  MDBModalFooter,\n  MDBInput,\n  MDBDropdownHeader,\n} from \"mdb-react-ui-kit\";\nimport Inbound from \"../../icons/inbound.png\";\nimport Outbound from \"../../icons/outbound.png\";\n\nimport { Link } from \"react-router-dom\";\nimport useAuth from \"../../hooks/useAuth\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\n\nimport MuiAlert from \"@mui/material/Alert\";\n\nfunction Transaction(props) {\n  const { auth } = useAuth();\n\n  // State: Importeur oder Exporteur\n  const [isImporteur, setIsImporteur] = useState(false);\n\n  // State: Anzahl Dokumente\n  const [numberDocuments, setNumberDocuments] = useState(0);\n\n  // State: Anzahl Rechnungen\n  const [numberInvoices, setNumberInvoices] = useState(0);\n\n  const axiosInstance = useAxiosPrivate();\n\n  // Funktion überprüft ob Importeur oder Exporteur\n  useEffect(() => {\n    if (auth.eori_nr == props.importeur) {\n      setIsImporteur(true);\n    }\n  });\n\n  // Abgleich Anzahl Dokumente für Transaktion\n  useEffect(() => {\n    let documents = props.documentsData;\n    let anzahlDokumente = 0;\n    let anzahlRechnungen = 0;\n    if (documents.length !== 0) {\n      for (let i in documents) {\n        if (documents[i].transaction == props.id) {\n          // Wenn Dokument Transaktion angehört summiere Dokumente\n          anzahlDokumente += 1;\n          // Wenn Dokument == Rechnung summmiere Rechnungen\n          if (documents[i].type == \"Rechnung\") {\n            anzahlRechnungen += 1;\n          }\n        }\n      }\n      setNumberDocuments(anzahlDokumente);\n      setNumberInvoices(anzahlRechnungen);\n    }\n  }, [props.documentsData]);\n\n  // State: Zollanmeldung vorhanden\n  const [declarationExists, setDeclarationExists] = useState(false);\n  // State: Status Zollanmeldung\n  const [confirmation, setConfirmation] = useState(\"ausstehend\");\n\n  // Prüfen ob Zollanmeldung vorliegt\n  useEffect(() => {\n    let declaration = props.declarationData;\n    let anmeldungVorhanden = false;\n    if (declaration.length !== 0) {\n      for (let i in declaration) {\n        if (declaration[i].transaction == props.id) {\n          // Wenn Anmeldung Transaktion angehört setze auf true\n          anmeldungVorhanden = true;\n          // Status Zollanmeldung abfragen\n          setConfirmation(declaration[i].status_confirmation);\n        }\n      }\n      setDeclarationExists(anmeldungVorhanden);\n    }\n  }, [props.declarationData]);\n\n  // Delete Modal State\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  function toggleShowDeleteModal() {\n    setDeleteModal(!deleteModal);\n  }\n\n  // Delete-Request an DB\n\n  function deleteTransaction() {\n    axiosInstance\n      .delete(\"transactions/\" + props.id + \"/\")\n      .then((res) => {\n        console.log(\"Transaktion gelöscht\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // Edit Modal State\n  const [editModal, setEditModal] = useState(false);\n\n  function toggleShowEditModal() {\n    setEditModal(!editModal);\n  }\n\n  // In die Funktion Post-Request für aktualisierte Beschreibung\n  // Beschreibung ist 'description' ; Transaktions-ID ist 'props.id'\n  const [description, setDescription] = useState(props.title);\n\n  // Submit Bearbeitung\n  function handleEditSubmit(e) {\n    e.preventDefault();\n\n    axiosInstance\n      .patch(\"transactions/\" + props.id + \"/\", { description: description })\n      .then((res) => {\n        console.log(\"Transaktion geändert\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  return (\n    <div>\n      <MDBCard>\n        <MDBCardBody>\n          <MDBContainer>\n            <MDBCardTitle>\n              {isImporteur ? \"Import: \" : \"Export: \"}\n              {props.title}\n              {/* <MDBIcon className=\"float-end\" size=\"lg\" fas icon=\"ellipsis-h\" /> */}\n              <MDBDropdown className=\"float-end\">\n                <MDBDropdownToggle outline>\n                  <MDBIcon size=\"lg\" fas icon=\"edit\" />\n                </MDBDropdownToggle>\n                {declarationExists ? (\n                  <MDBDropdownMenu>\n                    <MDBDropdownItem>\n                      <MDBDropdownHeader>\n                        Zollanmeldung liegt bereits vor. <br /> Bearbeitung\n                        nicht mehr möglich.\n                      </MDBDropdownHeader>\n                    </MDBDropdownItem>\n                    <MDBDropdownItem>\n                      <MDBDropdownLink\n                        className=\"disabled\"\n                        onClick={toggleShowEditModal}\n                      >\n                        <MDBIcon className=\"me-2\" fas icon=\"edit\" />\n                        Bearbeiten\n                      </MDBDropdownLink>\n                    </MDBDropdownItem>\n                    <MDBDropdownItem>\n                      <MDBDropdownLink\n                        className=\"disabled\"\n                        onClick={toggleShowDeleteModal}\n                      >\n                        <MDBIcon className=\"me-2\" fas icon=\"trash-alt\" />\n                        Löschen\n                      </MDBDropdownLink>\n                    </MDBDropdownItem>\n                  </MDBDropdownMenu>\n                ) : (\n                  <MDBDropdownMenu>\n                    <MDBDropdownItem>\n                      <MDBDropdownLink onClick={toggleShowEditModal}>\n                        <MDBIcon className=\"me-2\" fas icon=\"edit\" />\n                        Bearbeiten\n                      </MDBDropdownLink>\n                    </MDBDropdownItem>\n                    <MDBDropdownItem>\n                      <MDBDropdownLink onClick={toggleShowDeleteModal}>\n                        <MDBIcon className=\"me-2\" fas icon=\"trash-alt\" />\n                        Löschen\n                      </MDBDropdownLink>\n                    </MDBDropdownItem>\n                  </MDBDropdownMenu>\n                )}\n              </MDBDropdown>\n            </MDBCardTitle>\n\n            <MDBCardSubTitle>\n              Hinzugefügt am: {props.added} (\n              {props.timestamp_added.slice(11, 19)})\n            </MDBCardSubTitle>\n            <br />\n          </MDBContainer>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol sm=\"2\" className=\"d-flex justify-content-center\">\n                <img\n                  style={{ width: \"100px\", height: \"100px\" }}\n                  src={isImporteur ? Inbound : Outbound}\n                />\n\n                {/* <MDBIcon fas icon=\"clipboard-list\" size=\"4x\" className=\"mt-3\" /> */}\n              </MDBCol>\n              <MDBCol sm=\"5\">\n                <MDBCardText className=\"mb-3\">\n                  <b>Handelspartner{isImporteur && \" (Exporteur)\"}</b>\n                  <br />\n                  {props.exportAddress}\n                  <br />\n                  {props.exportStreet}\n                  <br />\n                  {props.exportCity}, {props.exportCountry}\n                </MDBCardText>\n              </MDBCol>\n              <MDBCol sm=\"5\">\n                <MDBCardText className=\"mb-2\">\n                  <b>Dokumente insgesamt: </b>\n                  {numberDocuments}\n                  <br />\n                  <b>Rechnungsdokumente: </b>\n                  {numberInvoices}\n                  <br />\n                  <b>Zollanmeldung: </b>\n                  {declarationExists ? \"liegt vor\" : \"ausstehend\"}\n                  <br />\n                  <b>Zollbescheid: </b>\n                  {confirmation}\n                </MDBCardText>\n              </MDBCol>\n            </MDBRow>\n            <br />\n            <MDBRow>\n              <MDBCol md=\"8\" lg=\"8\">\n                {numberInvoices == 0 ? (\n                  <MuiAlert severity=\"info\" sx={{ my: 1 }}>\n                    Transaktion angelegt. Rechnung hochladen, um Zollanmeldung\n                    durchführen zu können.\n                  </MuiAlert>\n                ) : numberInvoices !== 0 && declarationExists == false ? (\n                  <MuiAlert severity=\"warning\" sx={{ my: 1 }}>\n                    Rechnung liegt vor. Zollanmeldung ist möglich.\n                  </MuiAlert>\n                ) : declarationExists == true &&\n                  confirmation == \"ausstehend\" ? (\n                  <MuiAlert severity=\"info\" sx={{ my: 1 }}>\n                    Zollanmeldung abgeschickt. Warte auf Bearbeitung der\n                    Zollanmeldung.\n                  </MuiAlert>\n                ) : confirmation == \"bestätigt\" ? (\n                  <MuiAlert severity=\"success\" sx={{ my: 1 }}>\n                    Zollanmeldung angenommen.\n                  </MuiAlert>\n                ) : confirmation == \"abgelehnt\" ? (\n                  <MuiAlert severity=\"error\" sx={{ my: 1 }}>\n                    Zollanmeldung abelehnt.\n                  </MuiAlert>\n                ) : null}\n              </MDBCol>\n              <MDBCol md=\"4\" lg=\"4\">\n                <Link\n                  style={{ display: \"block\", margin: \"1rem 0\" }}\n                  to={\"/transactions/\" + props.id.toString()}\n                  key={props.id}\n                  params={{ title: \"Hello\" }}\n                >\n                  <MDBBtn className=\"float-end\">\n                    <MDBIcon size=\"lg\" className=\"me-2\" far icon=\"file\" />\n                    Dokumente anzeigen\n                  </MDBBtn>\n                </Link>\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n          <MDBCardFooter>\n            Zuletzt aktualisiert: {props.lastChange} (\n            {props.timestamp_processed.slice(11, 19)})\n          </MDBCardFooter>\n        </MDBCardBody>\n      </MDBCard>\n\n      {/* Delete Modal */}\n      <MDBModal show={deleteModal} setShow={setDeleteModal} tabIndex=\"-1\">\n        <MDBModalDialog>\n          <MDBModalContent>\n            <MDBModalHeader>\n              <MDBModalTitle>Auftrag entfernen</MDBModalTitle>\n              <MDBBtn\n                className=\"btn-close\"\n                color=\"none\"\n                onClick={toggleShowDeleteModal}\n              ></MDBBtn>\n            </MDBModalHeader>\n            <MDBModalBody>\n              Wollen sie den Auftrag <b>\"{props.title}\"</b> wirklich entfernen?\n              Dieser Vorgang lässt sich nicht rückgängig machen.\n            </MDBModalBody>\n\n            <MDBModalFooter>\n              <MDBBtn color=\"danger\" onClick={toggleShowDeleteModal}>\n                Nicht entfernen\n              </MDBBtn>\n              <MDBBtn outline color=\"danger\" onClick={deleteTransaction}>\n                Entfernen\n              </MDBBtn>\n            </MDBModalFooter>\n          </MDBModalContent>\n        </MDBModalDialog>\n      </MDBModal>\n\n      {/* Edit Modal */}\n      <MDBModal show={editModal} setShow={setEditModal}>\n        <MDBModalDialog>\n          <MDBModalContent>\n            <MDBModalHeader>\n              <MDBModalTitle>Auftrag umbenennen</MDBModalTitle>\n              <MDBBtn\n                className=\"btn-close\"\n                color=\"none\"\n                onClick={toggleShowEditModal}\n              ></MDBBtn>\n            </MDBModalHeader>\n            <MDBModalBody>\n              <MDBContainer>\n                <form onSubmit={handleEditSubmit}>\n                  <MDBInput\n                    name=\"description\"\n                    label=\"Beschreibung der Transaktion\"\n                    type=\"text\"\n                    className=\"mt-2\"\n                    onChange={(e) => setDescription(e.target.value)}\n                    value={description}\n                  />\n                  <MDBRow>\n                    <MDBBtn type=\"submit\" color=\"success\" className=\"mt-4 mb-2\">\n                      Speichern\n                    </MDBBtn>\n                  </MDBRow>\n                </form>\n              </MDBContainer>\n            </MDBModalBody>\n\n            <MDBModalFooter>\n              <MDBBtn color=\"danger\" onClick={toggleShowEditModal}>\n                Abbrechen\n              </MDBBtn>\n            </MDBModalFooter>\n          </MDBModalContent>\n        </MDBModalDialog>\n      </MDBModal>\n    </div>\n  );\n}\n\nexport default Transaction;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBIcon,\n} from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport { Link } from \"react-router-dom\";\nimport useAuth from \"../../hooks/useAuth\";\n\nfunction TransactionForm(props) {\n  const [checkImporteur, setCheckImporteur] = useState(false);\n  const [description, setDescription] = useState(\"\");\n  const [partnership, setPartnership] = useState(\"\");\n  const [partners, setPartners] = useState([]);\n  const [partnerCompany, setPartnerCompany] = useState();\n  const axiosPrivate = useAxiosPrivate();\n  const { auth } = useAuth();\n\n  useEffect(() => {\n    //lookup partner for checkbox\n    axiosPrivate.get(\"partnership/\").then((res) => {\n      setPartners(res.data);\n    });\n  }, []);\n\n  // Datenbank Submit\n  function handleSubmit(e) {\n    let importeur = 1;\n    if (checkImporteur) {\n      importeur = auth.eori_nr;\n      //console.log(\"Importeur ist eigene Firma\");\n    } else {\n      importeur = partnerCompany;\n    }\n    //console.log(\"Die Importfirma ist\", importeur);\n    e.preventDefault();\n    const newTransaction = {\n      description,\n      partnership,\n      importeur,\n    };\n    //add transaction\n    axiosPrivate\n      .post(\"/transactions/\", newTransaction)\n      .then((res) => {\n        props.setreload(!props.reload);\n        // Modal schließen\n        props.toggleShow();\n        // Snackbar Alert setzen\n        props.setSnackbarSuccess(true);\n        props.setSnackbarMessage(\"Transaktion erfolgreich angelegt.\");\n        props.handleOpenSnackbar();\n      })\n      .catch((error) => {\n        console.error(\"There was an error!\", error);\n        // Modal schließen\n        props.toggleShow();\n        // Snackbar Alert setzen\n        props.setSnackbarSuccess(false);\n        props.setSnackbarMessage(\"Fehler beim anlegen der Transaktion.\");\n        props.handleOpenSnackbar();\n      });\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <MDBContainer>\n          <MDBRow>\n            <MDBInput\n              name=\"description\"\n              label=\"Beschreibung der Transaktion\"\n              type=\"text\"\n              onChange={(e) => setDescription(e.target.value)}\n            />\n          </MDBRow>\n          <div className=\"mt-4\">Partner auswählen:</div>\n          <MDBRow>\n            <MDBCol>\n              <Autocomplete\n                className=\"mt-1\"\n                disablePortal\n                id=\"combo-box-partner\"\n                options={partners}\n                //choose name as label for ui\n                getOptionLabel={(option) => option.partner.name}\n                //when changed, save choosen Partner\n                onChange={(event, value) => {\n                  setPartnership(value.id);\n                  setPartnerCompany(value.partner.eori_nr);\n                }}\n                sx={{ width: 320 }}\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Partner\" />\n                )}\n              />\n            </MDBCol>\n            <MDBCol>\n              <Link to=\"/partners\">\n                <MDBIcon\n                  far\n                  icon=\"address-book\"\n                  className=\"float-end mt-3 me-4\"\n                  size=\"2x\"\n                />\n              </Link>\n            </MDBCol>\n          </MDBRow>\n\n          <MDBRow>\n            <FormControlLabel\n              className=\"mt-3\"\n              control={\n                <Checkbox onClick={() => setCheckImporteur(!checkImporteur)} />\n              }\n              label=\"Ist ihre Firma der Importeur?\"\n            />\n          </MDBRow>\n          {description == \"\" || partnership == \"\" ? (\n            <MDBBtn\n              disabled\n              block\n              type=\"submit\"\n              color=\"success\"\n              className=\"mt-4\"\n            >\n              Hinzufügen\n            </MDBBtn>\n          ) : (\n            <MDBBtn block type=\"submit\" color=\"success\" className=\"mt-4\">\n              Hinzufügen\n            </MDBBtn>\n          )}\n        </MDBContainer>\n      </form>\n    </>\n  );\n}\n\nexport default TransactionForm;\n","import React, { useState } from \"react\";\nimport {\n  MDBBtn,\n  MDBModal,\n  MDBModalDialog,\n  MDBModalContent,\n  MDBModalHeader,\n  MDBModalTitle,\n  MDBModalBody,\n  MDBModalFooter,\n  MDBIcon,\n} from \"mdb-react-ui-kit\";\nimport TransactionForm from \"./TransactionForm\";\n\nexport default function TransactionModal(props) {\n  const [basicModal, setBasicModal] = useState(false);\n\n  const toggleShow = () => setBasicModal(!basicModal);\n\n  return (\n    <>\n      <MDBBtn className=\"float-end\" color=\"success\" onClick={toggleShow}>\n        <MDBIcon fas size=\"lg\" icon=\"plus\" className=\"me-2\" />\n        Transaktion hinzufügen\n      </MDBBtn>\n      <MDBModal show={basicModal} setShow={setBasicModal} tabIndex=\"-1\">\n        <MDBModalDialog>\n          <MDBModalContent>\n            <MDBModalHeader>\n              <MDBModalTitle>Transaktionen hinzufügen</MDBModalTitle>\n              <MDBBtn\n                className=\"btn-close\"\n                color=\"none\"\n                onClick={toggleShow}\n              ></MDBBtn>\n            </MDBModalHeader>\n            <MDBModalBody>\n              <TransactionForm\n                setreload={props.setreload}\n                reload={props.reload}\n                toggleShow={toggleShow}\n                handleOpenSnackbar={props.handleOpenSnackbar}\n                handleCloseSnackbar={props.handleCloseSnackbar}\n                setSnackbarSuccess={props.setSnackbarSuccess}\n                setSnackbarMessage={props.setSnackbarMessage}\n              />\n            </MDBModalBody>\n            <MDBModalFooter>\n              <MDBBtn outline color=\"danger\" onClick={toggleShow}>\n                Abbrechen\n              </MDBBtn>\n            </MDBModalFooter>\n          </MDBModalContent>\n        </MDBModalDialog>\n      </MDBModal>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./css/LoadingSpinner.css\";\nimport { MDBContainer, MDBCol, MDBRow, MDBSpinner } from \"mdb-react-ui-kit\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport Transaction from \"../components/Transactions/Transaction\";\nimport { useParams } from \"react-router-dom\";\nimport TransactionModal from \"../components/Transactions/TransactionModal\";\nimport Form from \"react-bootstrap/Form\";\nimport { useLocation } from \"react-router-dom\";\n\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\n\n// Snackbar-Alert\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nfunction Transactions() {\n  const [transactionsData, setTransactionsData] = useState([]);\n  const [documentsData, setDocumentsData] = useState([]);\n  const [declarationData, setDeclarationData] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  // Reload-State: DB-Call wird mittels useEffect wiederholt, sobald\n  // ein neuer Auftrag hinzugefügt wurde\n  const [reload, setreload] = useState(false);\n\n  // State für Ladeanimation\n  const [isLoading, setIsLoading] = useState(true);\n\n  const axiosInstance = useAxiosPrivate();\n  const [isFilterView, setIsFilterView] = useState(false);\n  const [partnership, setPartnership] = useState();\n\n  const { partnershipID } = useParams();\n  let location = useLocation();\n\n  // DB Call\n  useEffect(async () => {\n    var link;\n    if (partnershipID) {\n      link = \"transactions/?partnership=\" + partnershipID;\n      setIsFilterView(true);\n      await axiosInstance\n        .get(\"partnership/\" + partnershipID + \"/\")\n        .then((res) => {\n          setPartnership(res.data);\n        });\n    } else {\n      link = \"transactions/\";\n      setIsFilterView(false);\n    }\n    axiosInstance.get(link).then((res) => {\n      // Daten werden erst sortiert nach \"dateUpdatedDesc\"\n      // und danach im State gespeichert\n      const initialSort = []\n        .concat(res.data)\n        .sort((a, b) => (a.timestamp_added > b.timestamp_added ? -1 : 1));\n      setTransactionsData(initialSort);\n    });\n    setIsLoading(false);\n  }, [reload, location]);\n\n  // Dokumente abrufen\n  useEffect(() => {\n    axiosInstance.get(\"documents/\").then((res) => {\n      setDocumentsData(res.data);\n    });\n  }, []);\n\n  // Zollanmeldungen abrufen\n  useEffect(() => {\n    axiosInstance.get(\"declaration/\").then((res) => {\n      setDeclarationData(res.data);\n    });\n  }, []);\n\n  // Sortieralgorithmen\n  function sortDescriptionAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) =>\n        a.description.toUpperCase() > b.description.toUpperCase() ? -1 : 1\n      );\n\n    setTransactionsData(myData);\n  }\n\n  function sortDescriptionDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) =>\n        a.description.toUpperCase() > b.description.toUpperCase() ? 1 : -1\n      );\n\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.timestamp_added > b.timestamp_added ? 1 : -1));\n\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.timestamp_added > b.timestamp_added ? -1 : 1));\n\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.timestamp_processed > b.timestamp_processed ? 1 : -1));\n\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.timestamp_processed > b.timestamp_processed ? -1 : 1));\n\n    setTransactionsData(myData);\n  }\n\n  function sortTransactions(event) {\n    if (event.target.value === \"DescriptionAsc\") {\n      sortDescriptionAsc();\n      return;\n    }\n    if (event.target.value === \"DescriptionDesc\") {\n      sortDescriptionDesc();\n      return;\n    }\n    if (event.target.value === \"UpdatedAsc\") {\n      sortDateUpdatedAsc();\n      return;\n    }\n    if (event.target.value === \"UpdatedDesc\") {\n      sortDateUpdatedDesc();\n      return;\n    }\n    if (event.target.value === \"AddedAsc\") {\n      sortDateAddedAsc();\n      return;\n    }\n    if (event.target.value === \"AddedDesc\") {\n      sortDateAddedDesc();\n      return;\n    }\n  }\n\n  // Snackbar-Alert Rückmeldung\n  // State: Geöffnet (true) / Geschlossen (false)\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  // State: Succcess (true) / Error (false)\n  const [snackbarSuccess, setSnackbarSuccess] = useState(true);\n  // State: Snackbar Nachricht\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n\n  // Öffnen der Snackbar\n  const handleOpenSnackbar = () => {\n    setOpenSnackbar(true);\n  };\n\n  // Schließen der Snackbar\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"loadingSpinner\">\n          <MDBSpinner>\n            <span className=\"visually-hidden\">Lädt..</span>\n          </MDBSpinner>\n        </div>\n      ) : (\n        <div>\n          <MDBContainer>\n            <h3>Aufträge</h3>\n            {isFilterView && (\n              <h4>Daten sind gefiltert {partnership?.partner?.name}</h4>\n            )}\n\n            <nav className=\"my-3 navbar navbar-expand-lg navbar-light bg-light\">\n              <MDBContainer>\n                <div>\n                  <MDBRow>\n                    <MDBCol>\n                      <Form.Select\n                        style={{\n                          width: 270,\n                        }}\n                        className=\"me-3\"\n                        onChange={(event) => sortTransactions(event)}\n                      >\n                        <option value={\"UpdatedDesc\"}>\n                          Zuletzt geändert absteigend &#129047;\n                        </option>\n                        <option value={\"UpdatedAsc\"}>\n                          Zuletzt geändert aufsteigend &#129045;\n                        </option>\n                        <option value={\"DescriptionDesc\"}>\n                          Beschreibung absteigend &#129047;\n                        </option>\n                        <option value={\"DescriptionAsc\"}>\n                          Beschreibung aufsteigend &#129045;\n                        </option>\n                        <option value={\"AddedDesc\"}>\n                          Hinzugefügt am absteigend &#129047;\n                        </option>\n                        <option value={\"AddedAsc\"}>\n                          Hinzugefügt am aufsteigend &#129045;\n                        </option>\n                      </Form.Select>{\" \"}\n                    </MDBCol>\n                    <MDBCol>\n                      <div className=\"mt-2\">\n                        <b>{transactionsData.length} Aufträge</b>\n                      </div>\n                    </MDBCol>\n                  </MDBRow>\n                </div>\n                <TransactionModal\n                  setreload={setreload}\n                  reload={reload}\n                  handleOpenSnackbar={handleOpenSnackbar}\n                  handleCloseSnackbar={handleCloseSnackbar}\n                  setSnackbarSuccess={setSnackbarSuccess}\n                  setSnackbarMessage={setSnackbarMessage}\n                />\n              </MDBContainer>\n            </nav>\n            {transactionsData.map((transactionData) => (\n              <React.Fragment>\n                <Transaction\n                  key={transactionData.id}\n                  id={transactionData.id}\n                  title={transactionData.description}\n                  added={transactionData.date_added}\n                  exportAddress={transactionData.partnership.partner.name}\n                  exportStreet={transactionData.partnership.partner.street}\n                  exportCity={transactionData.partnership.partner.city}\n                  exportCountry={\n                    transactionData.partnership.partner.country_code\n                  }\n                  importAddress={transactionData.importAddress}\n                  importStreet={transactionData.importStreet}\n                  importCity={transactionData.importCity}\n                  importCountry={transactionData.importCountry}\n                  stakeholderCount={transactionData.stakeholderCount}\n                  lastChange={transactionData.date_processed}\n                  status={transactionData.status}\n                  importeur={transactionData.importeur}\n                  timestamp_added={transactionData.timestamp_added}\n                  timestamp_processed={transactionData.timestamp_processed}\n                  documentsData={documentsData}\n                  declarationData={declarationData}\n                />\n                <br />\n              </React.Fragment>\n            ))}\n          </MDBContainer>\n          <Snackbar\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            open={openSnackbar}\n            autoHideDuration={6000}\n            onClose={handleCloseSnackbar}\n            className=\"mt-5\"\n          >\n            {snackbarSuccess == true ? (\n              <Alert\n                onClose={handleCloseSnackbar}\n                severity=\"success\"\n                sx={{ width: \"100%\" }}\n              >\n                {snackbarMessage}\n              </Alert>\n            ) : (\n              <Alert\n                onClose={handleCloseSnackbar}\n                severity=\"error\"\n                sx={{ width: \"100%\" }}\n              >\n                {snackbarMessage}\n              </Alert>\n            )}\n          </Snackbar>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Transactions;\n","import React, { useState } from \"react\";\nimport {\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardSubTitle,\n  MDBCardText,\n  MDBCol,\n  MDBContainer,\n  MDBIcon,\n  MDBRow,\n  MDBModal,\n  MDBModalDialog,\n  MDBModalContent,\n  MDBModalHeader,\n  MDBModalTitle,\n  MDBModalBody,\n  MDBModalFooter,\n} from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport { Link } from \"react-router-dom\";\n\nfunction Partner(props) {\n  // Delete Modal State\n  const [deleteModal, setDeleteModal] = useState(false);\n\n  function toggleShowDeleteModal() {\n    setDeleteModal(!deleteModal);\n  }\n\n  const axiosInstance = useAxiosPrivate();\n\n  // Hier Delete-Request von props.id\n  function deletePartnership() {\n    axiosInstance\n      .patch(`partnership/` + props.id_relation + \"/\", { is_archived: true })\n      .then((res) => {\n        props.setSnackbarSuccess(true);\n        props.setSnackbarMessage(\"Partner wurde entfernt.\");\n        props.setReload(!props.reload);\n        toggleShowDeleteModal();\n        props.handleOpenSnackbar();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        props.setSnackbarSuccess(false);\n        props.setSnackbarMessage(\"Fehler beim Entfernen des Partners.\");\n        props.setReload(!props.reload);\n        toggleShowDeleteModal();\n        props.handleOpenSnackbar();\n      });\n  }\n\n  return (\n    <>\n      <MDBCard>\n        <MDBCardBody>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol>\n                <MDBCardTitle>{props.title}</MDBCardTitle>\n              </MDBCol>\n              <MDBCol>\n                <MDBBtn\n                  outline\n                  floating\n                  className=\"float-end\"\n                  color=\"danger\"\n                  onClick={toggleShowDeleteModal}\n                >\n                  <MDBIcon fas icon=\"trash-alt\" size=\"lg\" />\n                </MDBBtn>\n              </MDBCol>\n            </MDBRow>\n\n            <MDBCardSubTitle>\n              <i>Hinzugefügt am {props.added}</i>\n            </MDBCardSubTitle>\n            <br />\n          </MDBContainer>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol>\n                <MDBCardText>\n                  {props.addressStreet}\n                  <br />\n                  {props.addressCity} <br />\n                  {props.addressCountry}\n                </MDBCardText>\n              </MDBCol>\n              <MDBCol>\n                <MDBCardText>\n                  📧 {props.email}\n                  <br />☎ {props.phone}\n                  <br />\n                  EORI-Nr.: {props.eori}\n                </MDBCardText>\n              </MDBCol>\n            </MDBRow>\n            <br />\n            <MDBRow>\n              <MDBCol md=\"8\" lg=\"9\"></MDBCol>\n              <MDBCol md=\"4\" lg=\"3\">\n                <Link\n                  style={{ display: \"block\", margin: \"1rem 0\" }}\n                  to={\"/partners/\" + props.id_relation.toString()}\n                  key={props.id_relation}\n                  params={{ title: \"Hello\" }}\n                >\n                  <MDBBtn outline className=\"float-end\">\n                    Auftragsübersicht\n                  </MDBBtn>\n                </Link>\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n        </MDBCardBody>\n      </MDBCard>\n\n      <MDBModal show={deleteModal} setShow={setDeleteModal} tabIndex=\"-1\">\n        <MDBModalDialog>\n          <MDBModalContent>\n            <MDBModalHeader>\n              <MDBModalTitle>Handelspartner entfernen</MDBModalTitle>\n              <MDBBtn\n                className=\"btn-close\"\n                color=\"none\"\n                onClick={toggleShowDeleteModal}\n              ></MDBBtn>\n            </MDBModalHeader>\n            <MDBModalBody>\n              Wollen sie den Handelspartner <b>\"{props.title}\"</b> wirklich aus\n              ihren bestehenden Handelsbeziehungen entfernen? <br /> <br />\n              Um danach wieder einen Handel mit diesem Partner eingehen zu\n              können, müssen Sie erneut eine Handelsbeziehung etablieren. <br />{\" \"}\n              <br />\n              (Hinweis: Die dem Partner zugeordneten Aufträge bleiben auch nach\n              entfernen des Partners erhalten.)\n            </MDBModalBody>\n\n            <MDBModalFooter>\n              <MDBBtn color=\"danger\" onClick={toggleShowDeleteModal}>\n                Nicht entfernen\n              </MDBBtn>\n              <MDBBtn outline color=\"danger\" onClick={deletePartnership}>\n                Entfernen\n              </MDBBtn>\n            </MDBModalFooter>\n          </MDBModalContent>\n        </MDBModalDialog>\n      </MDBModal>\n    </>\n  );\n}\n\nexport default Partner;\n","import React, { useState, useEffect } from \"react\";\nimport { MDBContainer, MDBInput, MDBBtn, MDBIcon } from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport useAuth from \"../../hooks/useAuth\";\n\nfunction PartnerForm(props) {\n  const [eori_nr, setEoriNr] = useState(\"\");\n  const [companies, setCompanies] = useState([]);\n  const [requestedCompany, setrequestedCompany] = useState(\"\");\n  const axiosPrivate = useAxiosPrivate();\n  const [testRerender, setTestRerender] = useState(false);\n  const [notFound, setNotFound] = useState(false);\n  const [isCurrentPartnership, setIsCurrentPartnership] = useState(false);\n  const [partnerships, setPartnerships] = useState();\n  const { auth } = useAuth();\n  //useffect Abfragen der Firmemliste\n\n  // DB Call\n  useEffect(() => {\n    axiosPrivate.get(\"partnership/\").then((res) => {\n      setPartnerships(res.data);\n    });\n  }, [testRerender]);\n\n  // EORI Suche\n  async function handleEORISearch() {\n    var forms = document.getElementById(\"partnerForm\");\n\n    if (forms.checkValidity() == false) {\n      //console.log(\"Formular Eingabe inkorrekt.\");\n      return;\n    }\n\n    //Leeren wenn neu gesucht wird\n    setCompanies();\n    setNotFound(false);\n    setIsCurrentPartnership(false);\n\n    await axiosPrivate\n      .get(`companies/${eori_nr}/`)\n      .then((res) => {\n        setCompanies(res.data);\n\n        if (\n          partnerships.some(\n            (partnerships) => partnerships.partner.eori_nr == res.data.eori_nr\n          ) ||\n          auth.eori_nr == res.data.eori_nr\n        ) {\n          setIsCurrentPartnership(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setNotFound(true);\n      });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    //firma hinzufügen\n    console.log(\"Added Partner: \" + companies.eori_nr);\n    axiosPrivate\n      .post(\"/partnership/\", { added_partner: companies.eori_nr })\n      .then(\n        // setTestRerender(true),\n        // Reload Partern State\n        props.setNewPartner(!props.newPartner),\n        // Snackbar Alert\n        props.setSnackbarSuccess(true),\n        props.setSnackbarMessage(\"Partneranfrage gesendet.\"),\n        props.handleOpenSnackbar(),\n        // Modal schließen\n        props.toggleShow()\n      )\n      .catch((error) => {\n        console.error(\"There was an error!\", error);\n        // Snackbar definieren\n        props.setSnackbarSuccess(false);\n        props.setSnackbarMessage(\"Fehler beim Anfragen der Handelsbeziehung.\");\n        props.handleOpenSnackbar();\n        // Modal schließen\n        props.toggleShow();\n      });\n\n    //firma als partner hinterlegen\n  }\n\n  return (\n    <>\n      <MDBContainer>\n        <form id=\"partnerForm\" onSubmit={(e) => e.preventDefault()}>\n          <MDBInput\n            className=\"my-3\"\n            name=\"eori_nr\"\n            label=\"EORI-Nr.\"\n            type=\"number\"\n            required\n            onChange={(e) => setEoriNr(e.target.value)}\n          />\n          {eori_nr == \"\" ? (\n            <MDBBtn\n              block\n              className=\"mb-4\"\n              type=\"search\"\n              color=\"primary\"\n              disabled\n              onClick={(e) => handleEORISearch()}\n            >\n              <MDBIcon size=\"lg\" className=\"me-2\" fas icon=\"search\" />\n              Unternehmen suchen\n            </MDBBtn>\n          ) : (\n            <MDBBtn\n              block\n              className=\"mb-4\"\n              color=\"primary\"\n              type=\"submit\"\n              onClick={(e) => handleEORISearch()}\n            >\n              <MDBIcon size=\"lg\" className=\"me-2\" fas icon=\"search\" />\n              Unternehmen suchen\n            </MDBBtn>\n          )}\n        </form>\n        {notFound && <p> EORI-NR nicht gefunden, bitte erneut probieren</p>}\n        {companies?.name != undefined && (\n          <p>\n            {\" \"}\n            Treffer: <br />\n            <b>\n              {companies?.name} <br />\n              {companies?.street} <br />\n              {companies?.city_code} {companies?.city} <br />\n              {companies?.country_code}\n            </b>\n          </p>\n        )}\n        {isCurrentPartnership && (\n          <p>\n            {\" \"}\n            Eine Partnerschaft existiert mit diesem Unternehmen bereits oder es\n            ist ihr eigenes Unternehmen.\n          </p>\n        )}\n\n        {companies?.name != undefined && isCurrentPartnership == false ? (\n          <MDBBtn\n            block\n            className=\"mt-3\"\n            type=\"submit\"\n            onClick={(e) => handleSubmit(e)}\n            color=\"success\"\n          >\n            Anfrage stellen\n          </MDBBtn>\n        ) : null}\n      </MDBContainer>\n    </>\n  );\n}\n\nexport default PartnerForm;\n","import React, { useState } from \"react\";\nimport {\n  MDBBtn,\n  MDBModal,\n  MDBModalDialog,\n  MDBModalContent,\n  MDBModalHeader,\n  MDBModalTitle,\n  MDBModalBody,\n  MDBModalFooter,\n  MDBIcon,\n} from \"mdb-react-ui-kit\";\nimport PartnerForm from \"./PartnerForm\";\n\nexport default function PartnersModal(props) {\n  // Modal\n  const [basicModal, setBasicModal] = useState(false);\n\n  const toggleShow = () => setBasicModal(!basicModal);\n\n  return (\n    <>\n      <MDBBtn className=\"float-end\" color=\"success\" onClick={toggleShow}>\n        <MDBIcon fas size=\"lg\" icon=\"plus\" className=\"me-2\" />\n        Partner hinzufügen\n      </MDBBtn>\n      <MDBModal show={basicModal} setShow={setBasicModal} tabIndex=\"-1\">\n        <MDBModalDialog>\n          <MDBModalContent>\n            <MDBModalHeader>\n              <MDBModalTitle>Partner hinzufügen</MDBModalTitle>\n              <MDBBtn\n                className=\"btn-close\"\n                color=\"none\"\n                onClick={toggleShow}\n              ></MDBBtn>\n            </MDBModalHeader>\n            <MDBModalBody>\n              <PartnerForm\n                partnerships={props.partnerships}\n                handleOpenSnackbar={props.handleOpenSnackbar}\n                handleCloseSnackbar={props.handleCloseSnackbar}\n                setSnackbarSuccess={props.setSnackbarSuccess}\n                setSnackbarMessage={props.setSnackbarMessage}\n                toggleShow={toggleShow}\n                newPartner={props.newPartner}\n                setNewPartner={props.setNewPartner}\n              />\n            </MDBModalBody>\n            <MDBModalFooter>\n              <MDBBtn outline color=\"danger\" onClick={toggleShow}>\n                Abbrechen\n              </MDBBtn>\n            </MDBModalFooter>\n          </MDBModalContent>\n        </MDBModalDialog>\n      </MDBModal>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  MDBTable,\n  MDBTableHead,\n  MDBTableBody,\n  MDBBtn,\n  MDBSpinner,\n  MDBIcon,\n} from \"mdb-react-ui-kit\";\nimport { Accordion } from \"react-bootstrap\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport useAuth from \"../../hooks/useAuth\";\n\nexport default function PartnerRequests(props) {\n  const axiosInstance = useAxiosPrivate();\n  const { auth } = useAuth();\n\n  const [openRequests, setopenRequests] = useState();\n\n  const [userCompanyEORI, setUserCompanyEORI] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setUserCompanyEORI(auth.eori_nr);\n  }, [auth]);\n\n  useEffect(async () => {\n    await axiosInstance\n      .get(`partnership/?partner2=${userCompanyEORI}&confirmed=false`)\n      .then((res) => {\n        setopenRequests(res.data);\n        setIsLoading(false);\n      })\n      .catch(function (error) {\n        if (error.response) {\n/*           // The request was made and the server responded with a status code\n          // that falls out of the range of 2xx\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers); */\n        } else if (error.request) {\n          // The request was made but no response was received\n          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n          // http.ClientRequest in node.js\n          //console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          //console.log(\"Error\", error.message);\n        }\n      });\n  }, [userCompanyEORI, props.reload]);\n\n  function handleDelete() {}\n\n  function handleAccept(partnership_id) {\n    axiosInstance\n      .patch(`partnership/${partnership_id}/`, { confirmed: true })\n      .then((res) => {\n        props.setReload();\n      });\n    props.setSnackbarSuccess(true);\n    props.setSnackbarMessage(\"Partneranfrage angenommen.\");\n    props.handleOpenSnackbar();\n    props.setNewPartner(!props.newPartner);\n    return;\n  }\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"text-center\">\n          <MDBSpinner>\n            <span className=\"visually-hidden\">Lädt..</span>\n          </MDBSpinner>\n        </div>\n      ) : (\n        // Akkordian automatisch geöffnet wenn min. 1 Partneranfrage:\n        <Accordion defaultActiveKey={openRequests.length !== 0 ? \"0\" : \"1\"}>\n          {/* // Akkordion öffnet nicht automatisch:\n        // <Accordion defaultActiveKey=\"1\"> */}\n          <Accordion.Item eventKey=\"0\">\n            <Accordion.Header>\n              Ausstehende Partneranfragen (<b>{openRequests.length}</b>)\n            </Accordion.Header>\n            <Accordion.Body>\n              {openRequests.length == 0 ? (\n                \"Es liegen keine Anfragen vor.\"\n              ) : (\n                <MDBTable responsive className=\"align-middle\">\n                  <MDBTableHead>\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Unternehmen</th>\n                      <th scope=\"col\">EORI-Nr.</th>\n                      <th scope=\"col\">Anfragedatum</th>\n                      <th scope=\"col\"></th>\n                    </tr>\n                  </MDBTableHead>\n                  <MDBTableBody>\n                    {openRequests.map((openRequests, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">\n                          <div className=\"\">{index + 1}</div>\n                        </th>\n                        <td>\n                          <div className=\"\">{openRequests.partner.name}</div>\n                        </td>\n                        <td>\n                          <div className=\"\">{openRequests.partner.eori_nr}</div>\n                        </td>\n                        <td>\n                          <div className=\"\">{openRequests.date_added}</div>\n                        </td>\n                        <td>\n                          <div className=\"float-end\">\n                            <MDBBtn\n                              color=\"success\"\n                              outline\n                              rounded\n                              onClick={() => handleAccept(openRequests.id)}\n                            >\n                              <MDBIcon size=\"lg\" fas icon=\"check\" />\n                            </MDBBtn>\n                            <MDBBtn\n                              color=\"danger mx-2\"\n                              className=\"\"\n                              outline\n                              rounded\n                              onClick={() => handleDelete(openRequests.id)}\n                            >\n                              <MDBIcon size=\"lg\" fas icon=\"times\" />\n                            </MDBBtn>\n                          </div>\n                        </td>\n                      </tr>\n                    ))}\n                  </MDBTableBody>\n                </MDBTable>\n              )}\n            </Accordion.Body>\n          </Accordion.Item>\n        </Accordion>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./css/LoadingSpinner.css\";\nimport { MDBContainer, MDBCol, MDBRow, MDBSpinner } from \"mdb-react-ui-kit\";\nimport Partner from \"../components/Partners/Partner\";\nimport PartnersModal from \"../components/Partners/PartnersModal\";\nimport axiosInstance from \"../axiosApi\";\nimport PartnerRequests from \"../components/Partners/PartnerRequests\";\n\nimport { Form } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { Snackbar } from \"@mui/material\";\nimport MuiAlert from \"@mui/material/Alert\";\n\n// Snackbar-Alert\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nfunction Partners() {\n  const [partners, setPartners] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Für useEffect Aktualisierung bei neuem Partner\n  const [newPartner, setNewPartner] = useState(false);\n  const [reload, setReload] = useState(false);\n\n  useEffect(async () => {\n    const link = \"/partnership/?is_archived=false&confirmed=true\";\n    await axiosInstance.get(link).then((res) => {\n      //console.log(res.data);\n      setPartners(res.data);\n      setIsLoading(false);\n    });\n  }, [newPartner, reload]);\n\n  // -- Snackbar-Alert Rückmeldung --\n  // State: Geöffnet (true) / Geschlossen (false)\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  // State: Succcess (true) / Error (false)\n  const [snackbarSuccess, setSnackbarSuccess] = useState(true);\n  // State: Snackbar Nachricht\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n\n  //State für Reload\n\n  // Öffnen der Snackbar\n  const handleOpenSnackbar = () => {\n    setOpenSnackbar(true);\n  };\n\n  // Schließen der Snackbar\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenSnackbar(false);\n  };\n\n  // Sortier-Algorithmen\n\n  function sortPartners(event) {\n    if (event.target.value === \"DescriptionAsc\") {\n      sortDescriptionAsc();\n      return;\n    }\n    if (event.target.value === \"DescriptionDesc\") {\n      sortDescriptionDesc();\n      return;\n    }\n    if (event.target.value === \"AddedAsc\") {\n      sortDateAddedAsc();\n      return;\n    }\n    if (event.target.value === \"AddedDesc\") {\n      sortDateAddedDesc();\n      return;\n    }\n  }\n\n  function sortDescriptionAsc() {\n    const myData = []\n      .concat(partners)\n      .sort((a, b) =>\n        a.partner.name.toUpperCase() > b.partner.name.toUpperCase() ? -1 : 1\n      );\n    setPartners(myData);\n  }\n\n  function sortDescriptionDesc() {\n    const myData = []\n      .concat(partners)\n      .sort((a, b) =>\n        a.partner.name.toUpperCase() > b.partner.name.toUpperCase() ? 1 : -1\n      );\n    setPartners(myData);\n  }\n\n  function sortDateAddedAsc() {\n    const myData = []\n      .concat(partners)\n      .sort((a, b) => (a.timestamp_added > b.timestamp_added ? 1 : -1));\n    setPartners(myData);\n  }\n\n  function sortDateAddedDesc() {\n    const myData = []\n      .concat(partners)\n      .sort((a, b) => (a.timestamp_added > b.timestamp_added ? -1 : 1));\n    setPartners(myData);\n  }\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"loadingSpinner\">\n          <MDBSpinner>\n            <span className=\"visually-hidden\">Lädt..</span>\n          </MDBSpinner>\n        </div>\n      ) : (\n        <div>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol>\n                <h3>Handelsbeziehungen</h3>\n              </MDBCol>\n            </MDBRow>\n            <br />\n            <PartnerRequests\n              setSnackbarSuccess={setSnackbarSuccess}\n              setSnackbarMessage={setSnackbarMessage}\n              handleOpenSnackbar={handleOpenSnackbar}\n              handleCloseSnackbar={handleCloseSnackbar}\n              setNewPartner={setNewPartner}\n              newPartner={newPartner}\n              reload={reload}\n              setReload={setReload}\n            />\n\n            <nav className=\"my-3 navbar navbar-expand-lg navbar-light bg-light\">\n              <MDBContainer>\n                <MDBRow>\n                  <MDBCol>\n                    <Form.Select\n                      style={{\n                        width: 270,\n                      }}\n                      className=\"me-3\"\n                      onChange={(event) => sortPartners(event)}\n                    >\n                      <option value={\"AddedDesc\"}>\n                        Hinzugefügt am absteigend &#129047;\n                      </option>\n                      <option value={\"AddedAsc\"}>\n                        Hinzugefügt am aufsteigend &#129045;\n                      </option>\n                      <option value={\"DescriptionDesc\"}>\n                        Beschreibung absteigend &#129047;\n                      </option>\n                      <option value={\"DescriptionAsc\"}>\n                        Beschreibung aufsteigend &#129045;\n                      </option>\n                    </Form.Select>{\" \"}\n                  </MDBCol>\n                  <MDBCol>\n                    <div className=\"mt-2\">\n                      <b>{partners.length} Partner</b>\n                    </div>\n                  </MDBCol>\n                </MDBRow>\n\n                <PartnersModal\n                  partnerships={partners}\n                  handleOpenSnackbar={handleOpenSnackbar}\n                  handleCloseSnackbar={handleCloseSnackbar}\n                  setSnackbarSuccess={setSnackbarSuccess}\n                  setSnackbarMessage={setSnackbarMessage}\n                  newPartner={newPartner}\n                  setNewPartner={setNewPartner}\n                />\n                {/* <TransactionModal setreload={setreload} reload={reload} /> */}\n              </MDBContainer>\n            </nav>\n            {partners.map((partner) => (\n              <React.Fragment>\n                <Partner\n                  key={partner.partner.eori_nr}\n                  id={partner.partner.eori_nr}\n                  id_relation={partner.id}\n                  title={partner.partner.name}\n                  added={partner.date_added}\n                  addressName=\"Bedeutung des Feldes?\"\n                  addressStreet={partner.partner.street}\n                  addressCity={partner.partner.city}\n                  addressCountry={partner.partner.country_code}\n                  email={partner.partner.email}\n                  phone={partner.partner.phone}\n                  eori={partner.partner.eori_nr}\n                  // Snackbar States\n                  setSnackbarSuccess={setSnackbarSuccess}\n                  setSnackbarMessage={setSnackbarMessage}\n                  handleOpenSnackbar={handleOpenSnackbar}\n                  handleCloseSnackbar={handleCloseSnackbar}\n                  // Reload States\n                  reload={reload}\n                  setReload={setReload}\n                />\n                <br />\n              </React.Fragment>\n            ))}\n          </MDBContainer>\n          <Snackbar\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            open={openSnackbar}\n            autoHideDuration={6000}\n            onClose={handleCloseSnackbar}\n            className=\"mt-5\"\n          >\n            {snackbarSuccess == true ? (\n              <Alert\n                onClose={handleCloseSnackbar}\n                severity=\"success\"\n                sx={{ width: \"100%\" }}\n              >\n                {snackbarMessage}\n              </Alert>\n            ) : (\n              <Alert\n                onClose={handleCloseSnackbar}\n                severity=\"error\"\n                sx={{ width: \"100%\" }}\n              >\n                {snackbarMessage}\n              </Alert>\n            )}\n          </Snackbar>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Partners;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  MDBContainer,\n  MDBInput,\n  MDBBtn,\n  MDBRow,\n  MDBCol,\n} from \"mdb-react-ui-kit\";\nimport useAuth from \"../hooks/useAuth\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\n\nfunction Settings() {\n  const [oldPassword, setOldPassword] = useState();\n  const [newPassword, setNewPassword] = useState();\n  const [newPassword2, setNewPassword2] = useState();\n\n  const axiosInstance = useAxiosPrivate();\n\n  //Abfragen der Nutzerdaten aus Authentifizierungscontext\n  const { auth } = useAuth();\n\n  const [passwordError, setPasswordError] = useState(null);\n\n  function handlePasswordSubmit(event) {\n    event.preventDefault();\n\n    // Validierung\n    if (oldPassword == \"\" || oldPassword == null) {\n      setPasswordError(\"Aktuelles Passwort eingeben.\");\n      return;\n    }\n    if (newPassword == \"\" || newPassword == null) {\n      setPasswordError(\"Neues Passwort eingeben.\");\n      return;\n    }\n    if (newPassword == \"\" || newPassword == null) {\n      setPasswordError(\"Neues Passwort wiederholen.\");\n      return;\n    }\n    if (newPassword !== newPassword2) {\n      setPasswordError(\"Neue Passwörter stimmen nicht überein.\");\n      return;\n    }\n\n    // Neues Passwort \"newPassword\" zum Passwort machen:\n    // POST-Request\n    axiosInstance\n      .patch(\"/change_password/\" + auth.userData?.id + \"/\", {\n        password: newPassword,\n        password2: newPassword2,\n        oldPassword: oldPassword,\n      })\n      .then((res) => {\n        setPasswordError(\"Neues Passwort erfolgreich angelegt.\");\n        return;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  return (\n    <div>\n      <MDBContainer>\n        <h3>Benutzer-Account</h3>\n        <br />\n        <MDBRow className=\"mb-2\">\n          <MDBCol sm=\"6\">\n            <h4 className=\"mb-3\">Accountinformationen</h4>\n            <h5>Unternehmen</h5>\n            <p>\n              <b>Name des Unternehmens: </b>\n              <br />\n              {auth.userData?.employee.company.name}\n            </p>\n            <p>\n              <b>EORI-Nr.: </b>\n              <br />\n              {auth.userData?.employee.company.eori_nr}\n            </p>\n            <p>\n              <b>Straße u. Hausnr.: </b>\n              <br />\n              {auth.userData?.employee.company.street}\n            </p>\n            <p>\n              <b>PLZ: </b>\n              <br />\n              {auth.userData?.employee.company.city_code}\n            </p>\n            <p>\n              <b>Stadt: </b>\n              <br />\n              {auth.userData?.employee.company.city}\n            </p>\n            <p>\n              <b>Land: </b>\n              <br />\n              {auth.userData?.employee.company.country_code}\n            </p>\n            <p>\n              <b>E-Mail Adresse: </b>\n              <br />\n              {auth.userData?.employee.company.email}\n            </p>\n            <p>\n              <b>Telefonnr.: </b>\n              <br />\n              {auth.userData?.employee.company.phone}\n            </p>\n            <hr className=\"my-4\" />\n            <h5>Eigenes Mitarbeiter-Konto</h5>\n            <p>\n              <b>Account-Name: </b>\n              <br />\n              {auth.username}\n            </p>\n          </MDBCol>\n          <MDBCol sm=\"6\">\n            <h4 className=\"mb-3\">Passwort aktualisieren</h4>\n            <form onSubmit={handlePasswordSubmit} style={{ width: \"300px\" }}>\n              <MDBInput\n                value={oldPassword}\n                onChange={(e) => setOldPassword(e.target.value)}\n                autocomplete=\"new-password\"\n                className=\"mb-4\"\n                type=\"Password\"\n                id=\"newPassword\"\n                name=\"newPassword\"\n                label=\"Aktuelles Passwort\"\n              />\n              <MDBInput\n                value={newPassword}\n                onChange={(e) => setNewPassword(e.target.value)}\n                autocomplete=\"new-password\"\n                className=\"mb-3\"\n                type=\"Password\"\n                id=\"oldPassword\"\n                name=\"oldPassword\"\n                label=\"Neues Passwort\"\n              />\n              <MDBInput\n                value={newPassword2}\n                onChange={(e) => setNewPassword2(e.target.value)}\n                autocomplete=\"new-password\"\n                className=\"mb-4\"\n                type=\"Password\"\n                id=\"oldPassword2\"\n                name=\"oldPassword2\"\n                label=\"Neues Passwort wiederholen\"\n              />\n\n              <MDBBtn block type=\"submit\" className=\"mb-4\">\n                Passwort aktualisieren\n              </MDBBtn>\n              {passwordError == \"Neues Passwort erfolgreich angelegt.\" ? (\n                <div className=\"alert alert-success\" role=\"alert\">\n                  {passwordError}\n                </div>\n              ) : passwordError !== null ? (\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {passwordError}\n                </div>\n              ) : null}\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </div>\n  );\n}\n\nexport default Settings;\n","import Web3 from 'web3';\nimport Zollsystem from './smartcontracts/zollsystem.json';\n\nlet selectedAccount;\n\nlet zollsystemcontract;\n\nlet isinit;\n\n//initialize the web3 provider\nexport const init = async () => {\n    //get provider (metamask)\n    let provider = window.ethereum;\n\n    if (typeof provider !== 'undefined'){\n      provider\n      .request({ method: 'eth_requestAccounts' })\n      .then((accounts) => {\n          selectedAccount = accounts[0];\n          //returns the Pub Key of selected account in MetaMask\n        console.log(`Selected account is ${selectedAccount}`);\n      })\n      .catch((err) => {\n        console.log(err);\n        return;\n      });\n      window.ethereum.on('accountsChanged', function (accounts) {\n        selectedAccount = accounts[0];\n        console.log(`Selected account changed to ${selectedAccount}`);\n      });\n    }\n    //creates new web3-object based on provider\n    const web3 = new Web3(provider);\n    const networkId = await web3.eth.net.getId();\n\n    //read the deployed contract to web3 contract-object \n    zollsystemcontract = new web3.eth.Contract(\n        Zollsystem.abi, //returned by \"truffle migrate\"\n        Zollsystem.networks[networkId].address); //server/node IP\n    isinit=true;\n}; \n\n//returns the rechnungID\nexport async function createRechnung(_gesamtbetrag, _importeur, _waehrung, _datum, _rechnungsposten, _lieferkosten){\n    if (!isinit) {\n        await init();\n    }\n    await zollsystemcontract.methods.createRechnung(_gesamtbetrag, _importeur, _waehrung, _datum, _rechnungsposten, _lieferkosten).send({from: selectedAccount});\n    return await zollsystemcontract.methods.createRechnung(_gesamtbetrag, _importeur, _waehrung, _datum, _rechnungsposten, _lieferkosten).call({from: selectedAccount});\n}\n\nexport async function uploadDokumentHash(_transaktionsID, _hash){\n  if (!isinit) {\n      await init();\n  }\n  await zollsystemcontract.methods.createDokument(_transaktionsID, _hash).send({from: selectedAccount});\n  return await zollsystemcontract.methods.createDokument(_transaktionsID, _hash).call({from: selectedAccount});\n}\n\n\n//returns zollanmeldungID\n export async function createZollanmeldung(_zoll, _rechnungID, _zollwert, _incoterms){\n     if (!isinit) {\n         await init();\n     }\n     await zollsystemcontract.methods.createZollanmeldung(_zoll, _rechnungID, _zollwert, _incoterms).send({from: selectedAccount});\n     return await zollsystemcontract.methods.createZollanmeldung(_zoll, _rechnungID, _zollwert, _incoterms).call({from: selectedAccount});\n }\n\n //returns Zollanmeldung and Rechnung\n export async function getZollanmeldung(_zollanmeldungID){\n  if (!isinit) {\n      await init();\n  }\n  await zollsystemcontract.methods.getZollanmeldung(_zollanmeldungID).send({from: selectedAccount});\n  return await zollsystemcontract.methods.getZollanmeldung(_zollanmeldungID).call({from: selectedAccount});\n}\n\n//returns Dokumentenhash\nexport async function getDokumentenHash(_transaktionsID){\n  if (!isinit) {\n      await init();\n  }\n  await zollsystemcontract.methods.getDokumentenHash(_transaktionsID).send({from: selectedAccount});\n  return await zollsystemcontract.methods.getDokumentenHash(_transaktionsID).call({from: selectedAccount});\n}","import React from \"react\";\nimport \"./css/NotFound.css\";\n\nclass NotFound extends React.Component {\n  render() {\n    return (\n      <div class=\"text-middle\">\n        <h1>404</h1>\n        <h3>Page Not Found</h3>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { useState, useEffect, isValidElement } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBBadge,\n  MDBIcon,\n} from \"mdb-react-ui-kit\";\nimport { init, createRechnung, createZollanmeldung } from \"../../Web3Client\";\nimport { useParams } from \"react-router-dom\";\nimport {} from \"json2csv\";\nimport LZString from \"lz-string\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nvar crypto = require(\"crypto\");\nvar blockchaintx = \"\";\nfunction InvoiceForm(props) {\n  const axiosInstance = useAxiosPrivate();\n\n  const [invoiceFields, setInvoiceFields] = useState({\n    type: \"Rechnung\",\n    description: \"\",\n    blockchainID: blockchaintx,\n    issue_date: \"\",\n    invoice_text: \"\",\n    currency: \"\",\n    transaction: \"\",\n    invoiceItem: [],\n    priceTotal: \"\",\n    transport_costs: \"\",\n  });\n\n  const [invoiceItemFields, setInvoiceItemFields] = useState([\n    {\n      product: \"\",\n      amount: \"\",\n      unit: \"\",\n      price: \"\",\n    },\n  ]);\n  const { transactionId } = useParams();\n\n  // -- Loading Backdrop --\n  const [openBackdrop, setOpenBackdrop] = React.useState(false);\n  const handleCloseBackdrop = () => {\n    setOpenBackdrop(false);\n  };\n  const handleToggleBackdrop = () => {\n    setOpenBackdrop(!openBackdrop);\n  };\n\n  // Eingabe handlen\n  function handleItemChange(index, event) {\n    const values = [...invoiceItemFields];\n    values[index][event.target.name] = event.target.value;\n    setInvoiceItemFields(values);\n\n    invoiceFields.invoiceItem = invoiceItemFields;\n\n    setInvoiceFields({ ...invoiceFields, transaction: transactionId });\n  }\n\n  // Abschicken\n  async function handleSubmit(e) {\n    // Check Formular Validierung\n    var forms = document.getElementById(\"invoiceForm\");\n    if (forms.checkValidity() == false) {\n      console.log(\"Formular Eingabe inkorrekt.\");\n      return;\n    }\n\n    handleToggleBackdrop();\n    var crypto = require(\"crypto\");\n    let total = calculatePriceTotal();\n\n    //Blockchain Transaktion\n    createRechnung(\n      total.toString(),\n      props.transactionData?.partnership.partner.publickey,\n      invoiceFields.currency,\n      invoiceFields.issue_date,\n      crypto.createHash(\"sha512\").update(invoiceItemFields).digest(\"hex\"),\n      invoiceFields.transport_costs\n    )\n      .then((tx) => {\n        console.log(\"Transaktion erfolgreich: \" + tx);\n        blockchaintx = tx;\n        //Übermittel und anlegen der Rechnung\n        axiosInstance\n          .post(\"/invoice/\", {\n            blockchain_id: tx - 1, //Blockchain RechnungsID wird gespeichert\n            currency: invoiceFields.currency,\n            description: invoiceFields.description,\n            invoiceItem: invoiceFields.invoiceItem,\n            invoice_text: invoiceFields.invoice_text,\n            issue_date: invoiceFields.issue_date,\n            priceTotal: invoiceFields.priceTotal,\n            transaction: invoiceFields.transaction,\n            transport_costs: invoiceFields.transport_costs,\n            type: invoiceFields.type,\n          })\n          .then((res) => {\n            console.log(\"Rechnung erfolgreich hochgeladen.\");\n            props.setNewDocument(!props.newDocument);\n            props.setSnackbarSuccess(true);\n            props.setSnackbarMessage(\"Rechnung erfolgreich hochgeladen.\");\n            handleCloseBackdrop();\n            props.handleOpenSnackbar();\n            props.setNewDocument(!props.newDocument);\n            props.toggleAddDocumentModal();\n          })\n          .catch((error) => {\n            console.error(\"There was an error!\", error);\n            props.setSnackbarSuccess(false);\n            props.setSnackbarMessage(\"Fehler beim hochladen der Rechnung.\");\n            handleCloseBackdrop();\n            props.handleOpenSnackbar();\n            props.toggleAddDocumentModal();\n          });\n      })\n      .catch((err) => {\n        console.log(\"Transaktion fehlgeschlagen: \" + \"  \" + err);\n        props.setSnackbarSuccess(false);\n        props.setSnackbarMessage(\"Fehler bei der Verarbeitung der Rechnung.\");\n        handleCloseBackdrop();\n        props.handleOpenSnackbar();\n        props.toggleAddDocumentModal();\n      });\n  }\n\n  // Rechnungsposten hinzufügen\n  function handleAddFields(event) {\n    event.preventDefault();\n    setInvoiceItemFields([\n      ...invoiceItemFields,\n      {\n        product: \"\",\n        amount: \"\",\n        unit: \"\",\n        price: \"\",\n      },\n    ]);\n  }\n\n  // Rechnungsposten entfernen\n  function handleRemoveFields(event, index) {\n    event.preventDefault();\n    const values = [...invoiceItemFields];\n\n    // ALT:\n    // values.splice(\n    //   values.findIndex((value) => value.index === index),\n    //   1\n    // );\n\n    values.pop();\n    setInvoiceItemFields(values);\n  }\n\n  function calculatePriceTotal() {\n    const items = invoiceItemFields;\n    let total = 0;\n\n    for (let i = 0; i < items.length; i++) {\n      total += items[i].amount * items[i].price;\n    }\n    setInvoiceFields({ ...items, priceTotal: total });\n\n    return total;\n  }\n\n  return (\n    <>\n      <MDBContainer>\n        <form id=\"invoiceForm\" onSubmit={(e) => e.preventDefault()}>\n          <MDBRow>\n            <MDBCol>\n              <MDBInput\n                className=\"mb-4\"\n                name=\"issue_date\"\n                id=\"issue_date\"\n                label=\"Rechnungsdatum\"\n                type=\"date\"\n                required\n                onChange={(e) =>\n                  setInvoiceFields({\n                    ...invoiceFields,\n                    issue_date: e.target.value,\n                  })\n                }\n              />\n            </MDBCol>\n            <MDBCol>\n              <MDBInput\n                className=\"mb-4\"\n                name=\"currency\"\n                value={invoiceFields.currency}\n                id=\"currency\"\n                label=\"Währung\"\n                type=\"text\"\n                required\n                onChange={(e) =>\n                  setInvoiceFields({\n                    ...invoiceFields,\n                    currency: e.target.value,\n                  })\n                }\n              />\n            </MDBCol>\n            <MDBCol>\n              <MDBInput\n                className=\"mb-4\"\n                name=\"transport_costs\"\n                id=\"transport_costs\"\n                label=\"Lieferkosten\"\n                type=\"number\"\n                required\n                onChange={(e) =>\n                  setInvoiceFields({\n                    ...invoiceFields,\n                    transport_costs: e.target.value,\n                  })\n                }\n              />\n            </MDBCol>\n          </MDBRow>\n          <MDBInput\n            wrapperClass=\"mb-4\"\n            textarea\n            name=\"description\"\n            id=\"description\"\n            rows={3}\n            label=\"Beschreibung\"\n            required\n            onChange={(e) =>\n              setInvoiceFields({\n                ...invoiceFields,\n                description: e.target.value,\n              })\n            }\n          />\n          <hr />\n\n          {invoiceItemFields.map((inputField, index) => (\n            <div key={index}>\n              <h6>Rechnungsposten {index + 1}</h6>\n              <MDBInput\n                className=\"mb-4\"\n                name=\"product\"\n                label=\"Produktname\"\n                type=\"text\"\n                value={inputField.product}\n                required\n                onChange={(event) => handleItemChange(index, event)}\n              />\n              <MDBRow>\n                <MDBCol>\n                  <MDBInput\n                    className=\"mb-4\"\n                    name=\"amount\"\n                    label=\"Anzahl\"\n                    type=\"number\"\n                    value={inputField.amount}\n                    required\n                    onChange={(event) => handleItemChange(index, event)}\n                  />\n                </MDBCol>\n                <MDBCol>\n                  <MDBInput\n                    className=\"mb-4\"\n                    name=\"unit\"\n                    label=\"Einheit\"\n                    type=\"text\"\n                    value={inputField.unit}\n                    required\n                    onChange={(event) => handleItemChange(index, event)}\n                  />\n                </MDBCol>\n                <MDBCol>\n                  <MDBInput\n                    className=\"mb-4\"\n                    name=\"price\"\n                    label=\"Preis pro Enheit\"\n                    type=\"number\"\n                    value={inputField.price}\n                    required\n                    onChange={(event) => handleItemChange(index, event)}\n                  />\n                </MDBCol>\n                <MDBCol>\n                  <MDBBadge className=\"mt-2 me-4 float-end\" color=\"primary\">\n                    Betrag : {inputField.amount * inputField.price}{\" \"}\n                    {invoiceFields.invoiceCurrency}\n                  </MDBBadge>\n                </MDBCol>\n              </MDBRow>\n            </div>\n          ))}\n          <br />\n\n          <MDBBtn\n            className=\"me-3 mb-3\"\n            color=\"success\"\n            onClick={handleAddFields}\n          >\n            <MDBIcon size=\"lg\" className=\"me-2\" fas icon=\"plus\" />\n            Rechnungsposten hinzufügen\n          </MDBBtn>\n          {invoiceItemFields.length > 1 && (\n            <MDBBtn\n              className=\"me-3 mb-3\"\n              color=\"danger\"\n              onClick={handleRemoveFields}\n            >\n              <MDBIcon size=\"lg\" className=\"me-2\" fas icon=\"minus\" />\n              Rechnungsposten entfernen\n            </MDBBtn>\n          )}\n\n          <MDBBtn\n            type=\"submit\"\n            className=\"float-end\"\n            color=\"primary\"\n            onClick={handleSubmit}\n          >\n            <MDBIcon size=\"lg\" className=\"me-2\" fas icon=\"paper-plane\" />\n            Abschicken\n          </MDBBtn>\n        </form>\n      </MDBContainer>\n\n      {/* Loading Backdrop bei Meta Mask Dialog*/}\n      <Backdrop\n        sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={openBackdrop}\n        onClick={handleCloseBackdrop}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </>\n  );\n}\n\nexport default InvoiceForm;\n","import React, { useEffect, useState } from \"react\";\nimport { uploadDokumentHash, getDokumentenhash } from \"../../Web3Client\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Alert from \"@mui/material/Alert\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nimport { MDBInput, MDBFile, MDBBtn, MDBContainer } from \"mdb-react-ui-kit\";\nimport { MDBSpinner } from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport { useParams } from \"react-router-dom\";\nimport useAuth from \"../../hooks/useAuth\";\n\nconst steps = [\"Dokument beschreiben\", \"Dokument hochladen\", \"Bestätigen\"];\n\nfunction OtherDocumentsForm(props) {\n  const axiosInstance = useAxiosPrivate();\n\n  const [type, setType] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  const [issueDate, setIssueDate] = React.useState(\"\");\n  const [fileID, setFileID] = React.useState();\n\n  const [fileLink, setFileLink] = React.useState(\"\");\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n\n  const [selectedFile, setSelectedFile] = React.useState();\n  const [uploadLoading, setUploadLoading] = React.useState(false);\n  const [fileUploadSuccess, setFileUploadSuccess] = React.useState(false);\n  const { transactionId } = useParams();\n  const [newDocumentData, setNewDocumentData] = useState();\n  const { auth } = useAuth();\n\n  var newDocumentID;\n\n  const docformData = new FormData();\n\n  // -- Loading Backdrop --\n  const [openBackdrop, setOpenBackdrop] = React.useState(false);\n  const handleCloseBackdrop = () => {\n    setOpenBackdrop(false);\n  };\n  const handleToggleBackdrop = () => {\n    setOpenBackdrop(!openBackdrop);\n  };\n\n  // Funktion für Datei Upload\n  function handleUpload(e) {\n    e.preventDefault();\n    setUploadLoading(true);\n    const fileformData = new FormData();\n    fileformData.append(\"file\", selectedFile);\n\n    axiosInstance\n      .post(\"/file/\", fileformData)\n      .then((res) => {\n        setFileID(res.data.id);\n\n        setFileLink(res.data.file);\n        setFileUploadSuccess(true);\n        setUploadLoading(false);\n      })\n      .catch((err) => console.log(err.response));\n  }\n  async function uDokumentHash(_transaktionID, _file) {\n    var crypto = require(\"crypto\");\n    const fileReader = new FileReader();\n    var hashwert = \"\";\n    fileReader.readAsText(_file);\n    fileReader.onload = function (evt) {\n      hashwert = crypto\n        .createHash(\"sha512\")\n        .update(evt.target.result)\n        .digest(\"hex\");\n\n      uploadDokumentHash(_transaktionID, hashwert) //Blockchain Transaktion\n        .then((tx) => {\n          docformData.append(\"blockchain_id\", tx - 1);\n          uploadToDatabase(docformData);\n          return tx;\n        })\n        .catch((err) => {\n          console.log(\"Hashgenerierung fehlgeschlagen. Fehlermeldung: \" + err);\n          // Error-Snackbar setzen\n          props.setSnackbarSuccess(false);\n          props.setSnackbarMessage(\n            \"Fehler bei der Verarbeitung des Dokuments.\"\n          );\n          // Backdrop Ladeanimation schließen\n          handleCloseBackdrop();\n          // Snackbar öffnen\n          props.handleOpenSnackbar();\n          // Modal schließen\n          props.toggleAddDocumentModal();\n        });\n    };\n  }\n\n  // DB Upload\n  async function uploadToDatabase(docformData) {\n    await axiosInstance\n      .post(\"/documents/\", docformData)\n      .then((res) => {\n        setNewDocumentData(res.data);\n        newDocumentID = res.data.id;\n        console.log(\"Dokument erfolgreich hochgeladen.\");\n        // newDocument -> State aktualisieren\n        props.setNewDocument(!props.newDocument);\n        // Erfolgs-Snackbar setzen\n        props.setSnackbarSuccess(true);\n        props.setSnackbarMessage(\"Dokument erfolgreich hochgeladen.\");\n        // Backdrop Ladeanimation öffnen\n        handleToggleBackdrop();\n        // Snackbar öffnen\n        props.handleOpenSnackbar();\n        // Modal schließen\n        props.toggleAddDocumentModal();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        // Error-Snackbar setzen\n        props.setSnackbarSuccess(false);\n        props.setSnackbarMessage(\"Fehler beim hochladen des Dokuments.\");\n        // Backdrop Ladeanimation öffnen\n        handleToggleBackdrop();\n        // Snackbar öffnen\n        props.handleOpenSnackbar();\n        // Modal schließen\n        props.toggleAddDocumentModal();\n      });\n  }\n\n  // Funktion zum Abschicken des Formulars\n  async function handleSubmit(e) {\n    //Standardverhalten abstellen\n    e.preventDefault();\n    // Backdrop Ladeanimation öffnen\n    handleToggleBackdrop();\n    docformData.append(\"description\", description);\n    docformData.append(\"type\", type);\n    docformData.append(\"file\", fileID);\n    docformData.append(\"issue_date\", \"2022-03-15\");\n    if (transactionId == undefined) {\n      console.log(\"Zollmodus mit Transaction ID: \" + props.transactionID_zoll);\n      docformData.append(\"transaction\", props.transactionID_zoll);\n      const tx = await uDokumentHash(props.transactionID_zoll, selectedFile);\n    } else {\n      docformData.append(\"transaction\", transactionId);\n      const tx = await uDokumentHash(transactionId, selectedFile);\n    }\n  }\n\n  // Alle Funktionen unterhalb: Steuerung des Steppers\n\n  // Kein Step ist optional\n  const isStepOptional = (step) => {\n    return;\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    if (activeStep === 0) {\n      var forms = document.getElementById(\"documentForm\");\n\n      if (forms.checkValidity() == false) {\n        console.log(\"Formular Eingabe inkorrekt.\");\n        return;\n      }\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  // Wenn Nutzer = Zoll Dokumententyp: \"Zollbescheid\"\n  useEffect(() => {\n    if (props?.isZoll == true) {\n      setType(\"Zollbescheid\");\n    }\n  }, []);\n\n  return (\n    <>\n      <Box sx={{ width: \"100%\" }}>\n        <Stepper activeStep={activeStep}>\n          {steps.map((label, index) => {\n            const stepProps = {};\n            const labelProps = {};\n            if (isStepOptional(index)) {\n              labelProps.optional = (\n                <Typography variant=\"caption\">Optional</Typography>\n              );\n            }\n            if (isStepSkipped(index)) {\n              stepProps.completed = false;\n            }\n            return (\n              <Step key={label} {...stepProps}>\n                <StepLabel {...labelProps}>{label}</StepLabel>\n              </Step>\n            );\n          })}\n        </Stepper>\n        <MDBContainer className=\"mt-4\">\n          {activeStep === steps.length ? (\n            <React.Fragment>\n              <Typography sx={{ mt: 2, mb: 1 }}>\n                All steps completed - you&apos;re finished\n              </Typography>\n              <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                <Box sx={{ flex: \"1 1 auto\" }} />\n                <Button onClick={handleReset}>Zurücksetzen</Button>\n              </Box>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              {activeStep === 0 ? (\n                <>\n                  <form id=\"documentForm\" onSubmit={(e) => e.preventDefault()}>\n                    {props?.isZoll == true ? (\n                      <MDBInput\n                        className=\"my-4\"\n                        value={\"Zollbescheid\"}\n                        name=\"type\"\n                        id=\"documentType\"\n                        label=\"Dokumententyp\"\n                        disabled\n                        onChange={(e) => setType(e.target.value)}\n                        type=\"text\"\n                      />\n                    ) : (\n                      <MDBInput\n                        className=\"my-4\"\n                        value={type}\n                        name=\"type\"\n                        id=\"documentType\"\n                        label=\"Dokumententyp\"\n                        required\n                        onChange={(e) => setType(e.target.value)}\n                        type=\"text\"\n                      />\n                    )}\n\n                    <MDBInput\n                      wrapperClass=\"mb-4\"\n                      value={description}\n                      textarea\n                      name=\"description\"\n                      id=\"documentDescription\"\n                      rows={3}\n                      onChange={(e) => setDescription(e.target.value)}\n                      label=\"Beschreibung (optional)\"\n                    />\n                  </form>\n                  {type.toUpperCase() == \"RECHNUNG\" && (\n                    <p className=\"errmsg alert alert-danger\">\n                      Bezeichnung \"Rechnung\" nicht zulässig. Rechnungsformular\n                      verwenden.\n                    </p>\n                  )}\n                </>\n              ) : activeStep === 1 ? (\n                <>\n                  <form onSubmit={handleUpload}>\n                    <MDBFile\n                      className=\"my-4\"\n                      label=\"PDF-Dokument auswählen\"\n                      id=\"customFile\"\n                      onChange={(e) => setSelectedFile(e.target.files[0])}\n                    />\n                    {selectedFile === undefined || selectedFile == \"\" ? (\n                      <MDBBtn disabled type=\"submit\" block>\n                        Hochladen\n                      </MDBBtn>\n                    ) : uploadLoading == false ? (\n                      <MDBBtn type=\"submit\" block>\n                        Hochladen\n                      </MDBBtn>\n                    ) : (\n                      <MDBBtn type=\"submit\" block disabled>\n                        <MDBSpinner\n                          size=\"sm\"\n                          role=\"status\"\n                          tag=\"span\"\n                          className=\"me-2\"\n                        />\n                        Hochladen...\n                      </MDBBtn>\n                    )}\n                  </form>\n                  {fileUploadSuccess && (\n                    <Alert severity=\"success\" className=\"mt-4\">\n                      Dokument wurde verarbeitet. Weiter um Upload\n                      abzuschließen.\n                    </Alert>\n                  )}\n                </>\n              ) : (\n                <>\n                  <h5 className=\"mt-4\">Daten bestätigen:</h5>\n                  <p>\n                    <b>Hochgeladene Dokumentenart: </b>\n                    <br />\n                    {type}\n                  </p>\n                  <p>\n                    <b>Beschreibung: </b>\n                    <br />\n                    {description == \"\" ? (\n                      <i>Keine Beschreibung.</i>\n                    ) : (\n                      description\n                    )}\n                  </p>\n\n                  <p>\n                    <a\n                      href={fileLink}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      Link zur Datei\n                    </a>\n                  </p>\n                </>\n              )}\n              <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                <Button\n                  color=\"inherit\"\n                  disabled={activeStep === 0}\n                  onClick={handleBack}\n                  sx={{ mr: 1 }}\n                >\n                  Zurück\n                </Button>\n                <Box sx={{ flex: \"1 1 auto\" }} />\n                {isStepOptional(activeStep) && (\n                  <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\n                    Überspringen\n                  </Button>\n                )}\n\n                {activeStep === steps.length - 1 ? (\n                  <Button onClick={handleSubmit}>Abschicken</Button>\n                ) : activeStep == 1 && fileUploadSuccess == false ? (\n                  <Button disabled onClick={handleNext}>\n                    Weiter\n                  </Button>\n                ) : activeStep == 1 && fileUploadSuccess == true ? (\n                  <Button onClick={handleNext}>Weiter</Button>\n                ) : (\n                  <Button\n                    type=\"submit\"\n                    form=\"documentForm\"\n                    onClick={handleNext}\n                  >\n                    Weiter\n                  </Button>\n                )}\n              </Box>\n            </React.Fragment>\n          )}\n        </MDBContainer>\n      </Box>\n\n      <Backdrop\n        sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={openBackdrop}\n        onClick={handleCloseBackdrop}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </>\n  );\n}\n\nexport default OtherDocumentsForm;\n","import React, { useState } from \"react\";\nimport {\n  MDBBtn,\n  MDBModal,\n  MDBModalDialog,\n  MDBModalContent,\n  MDBModalHeader,\n  MDBModalTitle,\n  MDBModalBody,\n  MDBTabs,\n  MDBTabsItem,\n  MDBTabsLink,\n  MDBTabsContent,\n  MDBTabsPane,\n} from \"mdb-react-ui-kit\";\nimport InvoiceForm from \"./InvoiceForm\";\nimport OtherDocumentsForm from \"./OtherDocumentsForm\";\n\nfunction DocumentsModal(props) {\n  // Modal-State wird in Documents gehalten und über props manipuliert.\n\n  const [fillActive, setFillActive] = useState(\"tab1\");\n\n  // Tab auswählen\n  function handleFillClick(value) {\n    if (value === fillActive) {\n      return;\n    }\n\n    setFillActive(value);\n  }\n\n  return (\n    <>\n      <MDBModal\n        show={props.addDocumentModal}\n        setShow={props.setAddDocumentModal}\n        tabIndex=\"-1\"\n      >\n        <MDBModalDialog size=\"lg\">\n          <MDBModalContent>\n            <MDBModalHeader>\n              <MDBModalTitle>Dokument hinzufügen</MDBModalTitle>\n              <MDBBtn\n                className=\"btn-close\"\n                color=\"none\"\n                onClick={props.toggleAddDocumentModal}\n              ></MDBBtn>\n            </MDBModalHeader>\n            <MDBModalBody>\n              <MDBTabs pills fill className=\"mb-3\">\n                <MDBTabsItem>\n                  <MDBTabsLink\n                    onClick={() => handleFillClick(\"tab1\")}\n                    active={fillActive === \"tab1\"}\n                  >\n                    Rechnung\n                  </MDBTabsLink>\n                </MDBTabsItem>\n                <MDBTabsItem>\n                  <MDBTabsLink\n                    onClick={() => handleFillClick(\"tab2\")}\n                    active={fillActive === \"tab2\"}\n                  >\n                    Sonstige\n                  </MDBTabsLink>\n                </MDBTabsItem>\n              </MDBTabs>\n\n              <MDBTabsContent>\n                <MDBTabsPane show={fillActive === \"tab1\"}>\n                  <InvoiceForm\n                    transactionData={props.transactionData}\n                    newDocument={props.newDocument}\n                    setNewDocument={props.setNewDocument}\n                    toggleAddDocumentModal={props.toggleAddDocumentModal}\n                    handleOpenSnackbar={props.handleOpenSnackbar}\n                    handleCloseSnackbar={props.handleCloseSnackbar}\n                    setSnackbarSuccess={props.setSnackbarSuccess}\n                    setSnackbarMessage={props.setSnackbarMessage}\n                  />\n                </MDBTabsPane>\n                <MDBTabsPane show={fillActive === \"tab2\"}>\n                  <OtherDocumentsForm\n                    newDocument={props.newDocument}\n                    setNewDocument={props.setNewDocument}\n                    toggleAddDocumentModal={props.toggleAddDocumentModal}\n                    handleOpenSnackbar={props.handleOpenSnackbar}\n                    handleCloseSnackbar={props.handleCloseSnackbar}\n                    setSnackbarSuccess={props.setSnackbarSuccess}\n                    setSnackbarMessage={props.setSnackbarMessage}\n                  />\n                </MDBTabsPane>\n              </MDBTabsContent>\n            </MDBModalBody>\n          </MDBModalContent>\n        </MDBModalDialog>\n      </MDBModal>\n    </>\n  );\n}\n\nexport default DocumentsModal;\n","import React from \"react\";\nimport {\n  MDBBtn,\n  MDBModal,\n  MDBModalDialog,\n  MDBModalContent,\n  MDBModalHeader,\n  MDBModalTitle,\n  MDBModalBody,\n} from \"mdb-react-ui-kit\";\n\nimport OtherDocumentsForm from \"./OtherDocumentsForm\";\n\nfunction ImporteurDocumentsModal(props) {\n  // Modal-State wird in Documents gehalten und über props manipuliert.\n\n  return (\n    <>\n      <MDBModal\n        show={props.addDocumentModal}\n        setShow={props.setAddDocumentModal}\n        tabIndex=\"-1\"\n      >\n        <MDBModalDialog size=\"lg\">\n          <MDBModalContent>\n            <MDBModalHeader>\n              <MDBModalTitle>Dokument hinzufügen</MDBModalTitle>\n              <MDBBtn\n                className=\"btn-close\"\n                color=\"none\"\n                onClick={props.toggleAddDocumentModal}\n              ></MDBBtn>\n            </MDBModalHeader>\n            <MDBModalBody>\n              <OtherDocumentsForm\n                newDocument={props.newDocument}\n                setNewDocument={props.setNewDocument}\n                toggleAddDocumentModal={props.toggleAddDocumentModal}\n                handleOpenSnackbar={props.handleOpenSnackbar}\n                handleCloseSnackbar={props.handleCloseSnackbar}\n                setSnackbarSuccess={props.setSnackbarSuccess}\n                setSnackbarMessage={props.setSnackbarMessage}\n              />\n            </MDBModalBody>\n          </MDBModalContent>\n        </MDBModalDialog>\n      </MDBModal>\n    </>\n  );\n}\n\nexport default ImporteurDocumentsModal;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardFooter,\n  MDBCardText,\n  MDBCol,\n  MDBContainer,\n  MDBRow,\n} from \"mdb-react-ui-kit\";\nimport { Link } from \"react-router-dom\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\n\nimport MuiAlert from \"@mui/material/Alert\";\n\nfunction DocumentTransaction(props) {\n  const axiosInstance = useAxiosPrivate();\n\n  const [declarationData, setDeclarationData] = useState();\n\n  // State: Zollanmeldung vorhanden\n  const [declarationExists, setDeclarationExists] = useState(false);\n  // State: Status Zollanmeldung\n  const [confirmation, setConfirmation] = useState(\"ausstehend\");\n\n  // Zollanmeldungen abrufen\n  useEffect(() => {\n    axiosInstance.get(\"declaration/\").then((res) => {\n      setDeclarationData(res.data);\n      let declaration = res.data;\n      let anmeldungVorhanden = false;\n\n      if (declaration.length !== 0) {\n        for (let i in declaration) {\n          if (declaration[i].transaction == props.id) {\n            // Wenn Anmeldung Transaktion angehört setze auf true\n            setDeclarationExists(true);\n            // Status Zollanmeldung abfragen\n            setConfirmation(declaration[i].status_confirmation);\n          }\n        }\n      }\n    });\n  }, []);\n\n  return (\n    <div>\n      <MDBCard>\n        <MDBCardBody>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol>\n                <MDBCardTitle>\n                  {props.isImporteur ? \"Import: \" : \"Export: \"}\n                  {props.description}\n                </MDBCardTitle>\n              </MDBCol>\n            </MDBRow>\n\n            <br />\n          </MDBContainer>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol>\n                <MDBCardText>\n                  <b>\n                    Handelspartner{\" \"}\n                    {props.isImporteur ? \"(Exporteur)\" : \"(Importeur)\"}\n                  </b>\n                  <br />\n                  {props.name}\n                  <br />\n                  {props.street}\n                  <br />\n                  {props.cityCode} {props.city}, {props.countryCode}\n                </MDBCardText>\n              </MDBCol>\n              <MDBCol>\n                <MDBCardText>\n                  <b>Dokumente insgesamt: </b>\n                  {props.numberInvoiceDocuments + props.numberOtherDocuments}\n                  <br />\n                  <b>Rechnungsdokumente: </b>\n                  {props.numberInvoiceDocuments}\n                  <br />\n                  <b>Zollanmeldung: </b>\n                  {declarationExists ? \"liegt vor\" : \"ausstehend\"}\n                  <br />\n                  <b>Zollbescheid: </b>\n                  {confirmation}\n                </MDBCardText>\n              </MDBCol>\n            </MDBRow>\n            <br />\n            <MDBRow>\n              <MDBCol md=\"8\" lg=\"9\">\n                {props.numberInvoiceDocuments == 0 ? (\n                  <MuiAlert severity=\"info\" sx={{ my: 1 }}>\n                    Transaktion angelegt. Rechnung hochladen um Zollanmeldung\n                    durchführen zu können.\n                  </MuiAlert>\n                ) : props.numberInvoiceDocuments !== 0 &&\n                  declarationExists == false ? (\n                  <MuiAlert severity=\"warning\" sx={{ my: 1 }}>\n                    Rechnung liegt vor. Zollanmeldung ausführen.\n                  </MuiAlert>\n                ) : declarationExists == true &&\n                  confirmation == \"ausstehend\" ? (\n                  <MuiAlert severity=\"info\" sx={{ my: 1 }}>\n                    Zollanmeldung abgeschickt. Warte auf Zollbescheid.\n                  </MuiAlert>\n                ) : confirmation == \"bestätigt\" ? (\n                  <MuiAlert severity=\"success\" sx={{ my: 1 }}>\n                    Zollanmeldung angenommen.\n                  </MuiAlert>\n                ) : confirmation == \"abgelehnt\" ? (\n                  <MuiAlert severity=\"error\" sx={{ my: 1 }}>\n                    Zollanmeldung angenommen.\n                  </MuiAlert>\n                ) : null}\n              </MDBCol>\n              <MDBCol md=\"4\" lg=\"3\">\n                {props.isImporteur == true ? (\n                  <div className=\"float-end\">\n                    {declarationExists == true ||\n                    props.numberInvoiceDocuments == 0 ? (\n                      <MDBBtn\n                        style={{ display: \"block\", margin: \"1rem 0\" }}\n                        disabled\n                        className=\"\"\n                      >\n                        Zollanmeldung\n                      </MDBBtn>\n                    ) : (\n                      <Link\n                        style={{ display: \"block\", margin: \"1rem 0\" }}\n                        to={`declaration`}\n                        params={{ title: \"Hello\" }}\n                      >\n                        <MDBBtn className=\"\">Zollanmeldung</MDBBtn>\n                      </Link>\n                    )}\n                  </div>\n                ) : null}\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n          <MDBCardFooter>\n            <MDBRow>\n              <MDBCol md=\"4\">Hinzugefügt: {props.dateAdded}</MDBCol>\n              <MDBCol md=\"4\">\n                Zuletzt aktualisiert: {props.dateProcessed}\n              </MDBCol>\n            </MDBRow>\n          </MDBCardFooter>\n        </MDBCardBody>\n      </MDBCard>\n    </div>\n  );\n}\n\nexport default DocumentTransaction;\n","import { React } from \"react\";\nimport {\n  MDBBtn,\n  MDBModal,\n  MDBModalDialog,\n  MDBModalContent,\n  MDBModalHeader,\n  MDBModalTitle,\n  MDBModalBody,\n  MDBModalFooter,\n  MDBContainer,\n  MDBCol,\n  MDBRow,\n} from \"mdb-react-ui-kit\";\n\n// ALT - Nicht mehr in Gebrauch\nfunction CardModal(props) {\n  return (\n    <>\n      <MDBModal\n        show={props.basicModal}\n        setShow={props.setBasicModal}\n        tabIndex=\"-1\"\n      >\n        <MDBModalDialog size=\"lg\">\n          <MDBModalContent>\n            <MDBModalHeader>\n              <MDBModalTitle>{props.title}</MDBModalTitle>\n              <MDBBtn\n                className=\"btn-close\"\n                color=\"none\"\n                onClick={props.toggleShow}\n              ></MDBBtn>\n            </MDBModalHeader>\n            <MDBModalBody>\n              <MDBContainer>\n                <MDBRow>\n                  <MDBCol></MDBCol>\n                  <MDBCol>{props.description}</MDBCol>\n                </MDBRow>\n              </MDBContainer>\n            </MDBModalBody>\n\n            <MDBModalFooter>\n              <MDBBtn color=\"danger\" onClick={props.toggleShow}>\n                Schließen\n              </MDBBtn>\n            </MDBModalFooter>\n          </MDBModalContent>\n        </MDBModalDialog>\n      </MDBModal>\n    </>\n  );\n}\n\nexport default CardModal;\n","import { React, useState, useEffect } from \"react\";\nimport {\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardText,\n  MDBCardFooter,\n  MDBBtn,\n  MDBRow,\n  MDBCol,\n  MDBIcon,\n} from \"mdb-react-ui-kit\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport CardModal from \"./CardModal\";\n//Hook für Contextabruf\nimport useAuth from \"../../hooks/useAuth\";\nimport { Link } from \"react-router-dom\";\nimport { getDokumentenHash } from \"../../Web3Client\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nfunction DocumentCard(props) {\n  const axiosInstance = useAxiosPrivate();\n  //Context mit Nutzerdaten abrufen\n  const { auth } = useAuth();\n  const [datei, setDatei] = useState([]);\n  const [fileLink, setFileLink] = useState(\"\");\n  const [ShowConfirmation, setShowConfirmation] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const [isVerified, setIsVerified] = useState(\"ausstehend\");\n\n  const author_company = props.author_company;\n\n  useEffect(() => {\n    //Abruf des Link zur Datei\n\n    if (props.file != null)\n      axiosInstance.get(\"file/\" + props.file).then((res) => {\n        setDatei(res.data);\n        setFileLink(res.data.file);\n      }, []);\n  }, [ShowConfirmation]);\n\n  async function getFileFromUrl(url, defaultType = \"image/jpeg\") {\n    const response = await fetch(url);\n    const data = await response.blob();\n    var name = name;\n    return new File([data], name, {\n      type: data.type || defaultType,\n    });\n  }\n\n  async function verifyDocument(id) {\n    // Backdrop Ladeanimation öffnen\n    handleToggleBackdrop();\n    const file = await getFileFromUrl(fileLink);\n    proofFilehash(id, file, function (hashwert) {\n      getDokumentenHash(props.blockchain_did) //Blockchain Transaktion\n        .then((tx) => {\n          if (hashwert == tx) {\n            setIsVerified(\"Hash korrekt\");\n\n            // Backdrop Ladeanimation schließen\n            handleCloseBackdrop();\n            return true;\n          } else {\n            setIsVerified(\"Hash inkorrekt\");\n\n            // Backdrop Ladeanimation schließen\n            handleCloseBackdrop();\n            return false;\n          }\n        })\n        .catch((err) => {\n          console.log(\"Fehlgeschlagen. Fehlermeldung: \" + err);\n\n          // Backdrop Ladeanimation schließen\n          handleCloseBackdrop();\n        });\n    });\n  }\n\n  async function proofFilehash(_DokumentID, _file, callback) {\n    //Download der Datei\n    var crypto = require(\"crypto\");\n    var hashwert = \"\";\n    const fileReader = new FileReader();\n    fileReader.readAsText(_file);\n    fileReader.onload = function (e) {\n      hashwert = crypto\n        .createHash(\"sha512\")\n        .update(e.target.result)\n        .digest(\"hex\");\n      callback(hashwert);\n    };\n  }\n\n  // State für \"Dokument anzeigen\" Modal\n  const [showDocumentModal, setShowDocumentModal] = useState(false);\n  // Funktion für Manipulation von Modal (als props weitergereicht)\n  function toggleShowDocumentModal() {\n    setShowDocumentModal(!showDocumentModal);\n  }\n\n  // -- Loading Backdrop --\n  const [openBackdrop, setOpenBackdrop] = useState(false);\n  const handleCloseBackdrop = () => {\n    setOpenBackdrop(false);\n  };\n  const handleToggleBackdrop = () => {\n    setOpenBackdrop(!openBackdrop);\n  };\n\n  return (\n    <>\n      <MDBCard className=\"h-100\" style={{ minHeight: \"250px\", width: \"510px\" }}>\n        <MDBCardBody>\n          <MDBRow>\n            <MDBCol sm=\"2\" className=\"d-flex justify-content-center\">\n              {props.type == \"Rechnung\" ? (\n                <MDBIcon\n                  className=\"mt-2\"\n                  fas\n                  size=\"4x\"\n                  icon=\"file-invoice-dollar\"\n                />\n              ) : (\n                <MDBIcon className=\"mt-2\" fas size=\"4x\" icon=\"file-alt\" />\n              )}\n            </MDBCol>\n            <MDBCol sm=\"8\">\n              <MDBCardTitle>\n                {props.type + \" \" + \"(\" + props.documentDate + \")\"}\n              </MDBCardTitle>\n\n              <MDBCardText className=\"mt-2 me-5\">\n                <b>Beschreibung: </b>\n                <br />\n                {props.description == \"\" ? (\n                  <i>Es liegt keine Beschreibung vor.</i>\n                ) : (\n                  props.description\n                )}\n                <br />\n                {(props?.isZoll && props.type !== \"Rechnung\") ||\n                props.type == \"Zollbescheid\" ? (\n                  <>\n                    <b>Verifikation: </b>\n                    {isVerified}\n                  </>\n                ) : null}\n              </MDBCardText>\n            </MDBCol>\n            <MDBCol sm=\"2\">\n              <Link\n                style={{ display: \"block\", margin: \"1rem 0\" }}\n                to={\"document/\" + props.id.toString()}\n                key={props.id}\n                params={{ title: \"Hello\" }}\n              >\n                <MDBBtn\n                  className=\"float-end\"\n                  outline\n                  onClick={toggleShowDocumentModal}\n                >\n                  Anzeigen\n                </MDBBtn>\n              </Link>\n              {(props?.isZoll && props.type !== \"Rechnung\") ||\n              props.type == \"Zollbescheid\" ? (\n                <MDBBtn\n                  className=\"float-end mt-3\"\n                  outline\n                  onClick={verifyDocument}\n                >\n                  Verifizieren\n                </MDBBtn>\n              ) : null}\n            </MDBCol>\n          </MDBRow>\n        </MDBCardBody>\n        <MDBCardFooter className=\"text-muted\">\n          Hochgeladen am: {props.uploadDate}\n          <br />\n          von {props.author_company} ({props.author})\n        </MDBCardFooter>\n      </MDBCard>\n      <CardModal\n        basicModal={showDocumentModal}\n        setBasicModal={setShowDocumentModal}\n        toggleShow={toggleShowDocumentModal}\n        title={props.title}\n        description={props.description}\n      />\n      <Backdrop\n        sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={openBackdrop}\n        onClick={handleCloseBackdrop}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </>\n  );\n}\n\nexport default DocumentCard;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBCardFooter,\n  MDBCol,\n  MDBRow,\n  MDBIcon,\n} from \"mdb-react-ui-kit\";\n\nfunction DeclarationCard(props) {\n  return (\n    <>\n      <MDBCard>\n        <MDBCardBody>\n          <MDBRow>\n            <MDBCol className=\"d-flex justify-content-center\" sm=\"2\">\n              <MDBIcon fas icon=\"file-contract\" size=\"4x\" className=\"mt-4\" />\n            </MDBCol>\n            <MDBCol sm=\"9\">\n              <b>Art der Anmeldung</b>: {props.anmeldeArt}\n              <br />\n              <b>Bearbeitende Dienststelle</b>: {props.bearbeitendeDienststelle}\n              <br />\n              <b>Gesamtbetrag</b>: {Number(props.gesamtbetrag).toFixed(2)}{\" \"}\n              {props.waehrung}\n              <br />\n              <b>Lieferkosten</b>: {Number(props.lieferkosten).toFixed(2)}{\" \"}\n              {props.waehrung}\n              <br />\n              <br />\n              <b>Zollbetrag </b>(Pauschaler 4 % Zollsatz):{\" \"}\n              {Number((props.gesamtbetrag + props.lieferkosten) * 0.04).toFixed(\n                2\n              )}{\" \"}\n              {props.waehrung}\n              <br />\n              <b>EUSt-Betrag </b>(EUSt-Satz 19 %):{\" \"}\n              {Number((props.gesamtbetrag + props.lieferkosten) * 0.19).toFixed(\n                2\n              )}{\" \"}\n              {props.waehrung}\n              <br />\n              <b>Prognostizierte Gesamtabgabe</b>:{\" \"}\n              {Number((props.gesamtbetrag + props.lieferkosten) * 0.25).toFixed(\n                2\n              )}{\" \"}\n              {props.waehrung}\n            </MDBCol>\n            <MDBCol sm=\"1\">\n              <Link\n                style={{ display: \"block\", margin: \"1rem 0\" }}\n                to={\"declarationView\"}\n                key={props.id}\n                params={{ title: \"Hello\" }}\n              >\n                <MDBBtn outline className=\"float-end\" color=\"primary\">\n                  Anzeigen\n                </MDBBtn>\n              </Link>\n            </MDBCol>\n          </MDBRow>\n        </MDBCardBody>\n        <MDBCardFooter>\n          Erstellt am {props.issue_date} von {props.anmelderName}{\" \"}\n        </MDBCardFooter>\n      </MDBCard>\n    </>\n  );\n}\n\nexport default DeclarationCard;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MDBBreadcrumb, MDBBreadcrumbItem } from \"mdb-react-ui-kit\";\n\nfunction DocumentBreadcrump(props) {\n  return (\n    <>\n      <MDBBreadcrumb>\n        <MDBBreadcrumbItem>\n          <Link to=\"/transactions\">Aufträge</Link>\n        </MDBBreadcrumbItem>\n        <MDBBreadcrumbItem active>\n          Auftrags-ID {props.transactionId}\n        </MDBBreadcrumbItem>\n      </MDBBreadcrumb>\n    </>\n  );\n}\n\nexport default DocumentBreadcrump;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport \"./css/LoadingSpinner.css\";\nimport {\n  MDBContainer,\n  MDBBtn,\n  MDBRow,\n  MDBCol,\n  MDBSpinner,\n  MDBBadge,\n  MDBIcon,\n} from \"mdb-react-ui-kit\";\nimport Divider from \"@mui/material/Divider\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\n\nimport DocumentsModal from \"../components/Documents/DocumentsModal\";\nimport ImporteurDocumentsModal from \"../components/Documents/ImporteurDocumentsModal\";\nimport DocumentTransaction from \"../components/Documents/DocumentTransaction\";\nimport DocumentCard from \"../components/Documents/DocumentCard\";\nimport DeclarationCard from \"../components/Documents/DeclarationCard\";\nimport DocumentBreadcrump from \"../components/Documents/DocumentBreadcrumb\";\nimport useAuth from \"../hooks/useAuth\";\n\n// Snackbar-Alert\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nfunction DocumentsNew(props) {\n  // Für Rückkehr von Zollanmeldung\n  let location = useLocation();\n  let declarationLocationState = location.state;\n  console.log(declarationLocationState);\n\n  // Auslösen des Snackbar-Alerts bei Rückerkehr von Zollanmeldung\n  useEffect(() => {\n    console.log(declarationLocationState);\n    if (declarationLocationState !== null) {\n      setSnackbarSuccess(declarationLocationState.success);\n      setSnackbarMessage(declarationLocationState.message);\n      handleOpenSnackbar();\n    }\n  }, [declarationLocationState]);\n\n  // Allgemeine Auftragsinformationen\n  const [transactionData, setTransactionData] = useState([]);\n\n  // Informationen der hochgeladenen Dokumente\n  const [documentsData, setDocumentsData] = useState([]);\n\n  // State für Ladeanimation\n  const [isLoading, setIsLoading] = useState(true);\n\n  const axiosInstance = useAxiosPrivate();\n\n  // Derzeitiger User ist Importeur oder Exporteur\n  const [isImporteur, setIsImporteur] = useState(false);\n\n  // State wird in Document Upload Modal weitergereicht.\n  // Löst useEffect aus, sobald neues Dokument hochgeladen wurde.\n  const [newDocument, setNewDocument] = useState(false);\n\n  const [isDeclaration, setIsDeclaration] = useState(false);\n  const [declarationData, setDeclarationData] = useState();\n  const [totalValue, setTotalValue] = useState(true);\n  const [invoiceData, setInvoiceData] = useState();\n  const [isInvoice, setIsInvoice] = useState();\n\n  // Anzahl Dokumente\n  const [numberInvoiceDocuments, setNumberInvoiceDocuments] = useState(0);\n  const [numberOtherDocuments, setNumberOtherDocuments] = useState(0);\n\n  // State für \"Dokument hinzufügen\" Modal\n  const [addDocumentModal, setAddDocumentModal] = useState(false);\n  // Funktion für Manipulation von Modal (als props weitergereicht)\n  function toggleAddDocumentModal() {\n    setAddDocumentModal(!addDocumentModal);\n  }\n\n  // Speichern der Transaktions-ID aus URL\n  const { transactionId } = useParams();\n  const { auth } = useAuth();\n\n  // DB Call\n  useEffect(async () => {\n    await axiosInstance.get(`transactions/` + transactionId).then((res) => {\n      //console.log(res.data);\n      setTransactionData(res.data);\n      if (auth.eori_nr == res.data.importeur) {\n        setIsImporteur(true);\n      }\n    });\n    console.log(transactionData);\n    await axiosInstance\n      .get(`documents/?transaction=` + transactionId)\n      .then((res) => {\n        //console.log(res.data);\n        setDocumentsData(res.data);\n      });\n\n    await axiosInstance\n      .get(`declaration_auth/?transaction=` + transactionId)\n      .then((res) => {\n        console.log(res.data.length);\n        if (res.data[0]) {\n          axiosInstance\n            .get(\"invoice/\" + res.data[0].invoice.id + \"/\")\n            .then((resInvoice) => {\n              setTotalValue(resInvoice.data.total_value);\n              //console.log(res.data.total_value)\n              setInvoiceData(resInvoice.data);\n              setIsInvoice(true);\n            })\n            .catch((err) => {\n              console.log(\"Keine Rechnung vorhanden\");\n              setIsInvoice(false);\n            });\n        } else {\n          setIsInvoice(false);\n        }\n        if (res.data.length > 0) {\n          console.log(\"Zollanmeldung liegt vor\");\n          setIsDeclaration(true);\n          setDeclarationData(res.data[0]);\n        }\n      });\n\n    setIsLoading(false);\n  }, [newDocument]);\n  // Wenn neues Dokument hinzugefügt wird GET-Request erneut ausgeführt\n\n  // Summiert Anzahl von Dokumenten,\n  // immer wenn sich documentsData verändert\n  useEffect(() => {\n    let invoices = 0;\n    let other = 0;\n    for (let i = 0; i < documentsData.length; i++) {\n      if (documentsData[i].type == \"Rechnung\") {\n        invoices += 1;\n      } else {\n        other += 1;\n      }\n    }\n    setNumberInvoiceDocuments(invoices);\n    setNumberOtherDocuments(other);\n  }, [documentsData]);\n\n  // -- Snackbar-Alert Rückmeldung --\n  // State: Geöffnet (true) / Geschlossen (false)\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  // State: Succcess (true) / Error (false)\n  const [snackbarSuccess, setSnackbarSuccess] = useState(true);\n  // State: Snackbar Nachricht\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n\n  // Öffnen der Snackbar\n  const handleOpenSnackbar = () => {\n    setOpenSnackbar(true);\n  };\n\n  // Schließen der Snackbar\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"loadingSpinner\">\n          <MDBSpinner>\n            <span className=\"visually-hidden\">Lädt..</span>\n          </MDBSpinner>\n        </div>\n      ) : (\n        <>\n          <MDBContainer>\n            <h3>Dokumente</h3>\n            {/* Dokumenten Modal */}\n            {isImporteur == true ? (\n              <ImporteurDocumentsModal\n                // Modal\n                addDocumentModal={addDocumentModal}\n                setAddDocumentModal={setAddDocumentModal}\n                toggleAddDocumentModal={toggleAddDocumentModal}\n                transactionData={transactionData}\n                // Update State bei neuem Dokument\n                newDocument={newDocument}\n                setNewDocument={setNewDocument}\n                // Snackbar\n                handleOpenSnackbar={handleOpenSnackbar}\n                handleCloseSnackbar={handleCloseSnackbar}\n                setSnackbarSuccess={setSnackbarSuccess}\n                setSnackbarMessage={setSnackbarMessage}\n              />\n            ) : (\n              <DocumentsModal\n                // Modal\n                addDocumentModal={addDocumentModal}\n                setAddDocumentModal={setAddDocumentModal}\n                toggleAddDocumentModal={toggleAddDocumentModal}\n                transactionData={transactionData}\n                // Update State bei neuem Dokument\n                newDocument={newDocument}\n                setNewDocument={setNewDocument}\n                // Snackbar\n                handleOpenSnackbar={handleOpenSnackbar}\n                handleCloseSnackbar={handleCloseSnackbar}\n                setSnackbarSuccess={setSnackbarSuccess}\n                setSnackbarMessage={setSnackbarMessage}\n              />\n            )}\n            <DocumentBreadcrump\n              key={transactionId}\n              transactionId={transactionId}\n            />\n            <DocumentTransaction\n              description={transactionData.description}\n              dateAdded={transactionData.date_added}\n              dateProcessed={transactionData.date_processed}\n              status={transactionData.status}\n              street={transactionData.partnership.partner.street}\n              cityCode={transactionData.partnership.partner.city_code}\n              countryCode={transactionData.partnership.partner.country_code}\n              city={transactionData.partnership.partner.city}\n              name={transactionData.partnership.partner.name}\n              id={transactionData.id}\n              blockchain_rid={transactionData.blockchain_id}\n              transactionData={transactionData}\n              isImporteur={isImporteur}\n              numberInvoiceDocuments={numberInvoiceDocuments}\n              numberOtherDocuments={numberOtherDocuments}\n              isDeclaration={isDeclaration}\n            />\n            {/* Navleiste mit Anzahl der Dokumente */}\n            <nav className=\"my-3 navbar navbar-expand-lg navbar-light bg-light\">\n              <MDBContainer>\n                <div>\n                  {isDeclaration ? (\n                    <>\n                      <MDBBadge pill className=\"ms-3\">\n                        {1}\n                      </MDBBadge>{\" \"}\n                      <b>Zollanmeldung</b>\n                    </>\n                  ) : (\n                    <>\n                      <MDBBadge pill className=\"ms-3\">\n                        {0}\n                      </MDBBadge>{\" \"}\n                      <b>Zollanmeldung</b>\n                    </>\n                  )}\n                  <MDBBadge pill className=\"ms-3\">\n                    {numberInvoiceDocuments}\n                  </MDBBadge>{\" \"}\n                  <b>Rechnungsdokumente</b>\n                  <MDBBadge pill className=\"ms-3\">\n                    {numberOtherDocuments}\n                  </MDBBadge>{\" \"}\n                  <b>Sonstige Dokumente</b>\n                </div>\n                <MDBBtn\n                  className=\"float-end\"\n                  color=\"success\"\n                  onClick={toggleAddDocumentModal}\n                >\n                  <MDBIcon size=\"lg\" className=\"me-2\" fas icon=\"plus\" />\n                  Dokument hinzufügen\n                </MDBBtn>\n              </MDBContainer>\n            </nav>\n            {/* Auflistung der Rechnungsdokumente */}\n            {isDeclaration && (\n              <>\n                <Divider textAlign=\"left\" className=\"mb-4\">\n                  <h5>Zollanmeldung</h5>\n                </Divider>\n                <DeclarationCard\n                  anmeldeArt={declarationData.anmeldeArt}\n                  gesamtbetrag={totalValue}\n                  bearbeitendeDienststelle={declarationData.customs_office.name}\n                  lieferkosten={declarationData.invoice.transport_costs}\n                  documentId={documentsData.documentId}\n                  anmelderName={declarationData.importeur.name}\n                  issue_date={declarationData.date_added}\n                />\n              </>\n            )}\n\n            {/* Auflistung der Rechnungsdokumente */}\n            {numberInvoiceDocuments !== 0 && (\n              <>\n                <Divider textAlign=\"left\" className=\"mt-5 mb-4\">\n                  {numberInvoiceDocuments == 1 ? (\n                    <h5>Rechnungsdokument</h5>\n                  ) : (\n                    <h5>Rechnungsdokumente</h5>\n                  )}\n                </Divider>{\" \"}\n                <MDBRow>\n                  {documentsData.map(\n                    (documentData) =>\n                      documentData.type == \"Rechnung\" && (\n                        <React.Fragment>\n                          <MDBCol className=\"mb-4 d-flex justify-content-center\">\n                            <DocumentCard\n                              key={documentData.id}\n                              id={documentData.id}\n                              author_company={\n                                documentData.owner.employee.company.name\n                              }\n                              author={documentData.owner.username}\n                              type={documentData.type}\n                              description={documentData.description}\n                              documentDate={documentData.issue_date}\n                              uploadDate={documentData.upload_date}\n                              blockchain_did={documentData.blockchain_did}\n                              file={documentData.file}\n                              confirmed={documentData.confirmed}\n                            />\n                          </MDBCol>\n                        </React.Fragment>\n                      )\n                  )}\n                </MDBRow>\n              </>\n            )}\n\n            {/* Auflistung der sonstigen Dokumente */}\n            {numberOtherDocuments !== 0 && (\n              <>\n                <Divider textAlign=\"left\" className=\"mt-5 mb-4\">\n                  <h5>Sonstige Dokumente</h5>\n                </Divider>\n                <MDBRow>\n                  {documentsData.map(\n                    (documentData) =>\n                      documentData.type !== \"Rechnung\" && (\n                        <React.Fragment>\n                          <MDBCol className=\"mb-4 d-flex justify-content-center\">\n                            <DocumentCard\n                              key={documentData.id}\n                              id={documentData.id}\n                              author={documentData.author}\n                              type={documentData.type}\n                              description={documentData.description}\n                              documentDate={documentData.issue_date}\n                              uploadDate={documentData.upload_date}\n                              file={documentData.file}\n                              confirmed={documentData.confirmed}\n                              blockchain_did={documentData.blockchain_id}\n                            />\n                          </MDBCol>\n                        </React.Fragment>\n                      )\n                  )}\n                </MDBRow>\n              </>\n            )}\n\n            {/* Fals 0 Dokumente vorliegen */}\n            {isDeclaration == false &&\n            numberInvoiceDocuments == 0 &&\n            numberOtherDocuments == 0 ? (\n              <div\n                className=\"d-flex align-items-center justify-content-center \"\n                style={{\n                  height: \"400px\",\n                }}\n              >\n                <h4\n                  style={{\n                    color: \"grey\",\n                  }}\n                >\n                  Es liegen noch keine Dokumente vor.\n                </h4>\n              </div>\n            ) : null}\n          </MDBContainer>\n          <Snackbar\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            open={openSnackbar}\n            autoHideDuration={6000}\n            onClose={handleCloseSnackbar}\n            className=\"mt-5\"\n          >\n            {snackbarSuccess == true ? (\n              <Alert\n                onClose={handleCloseSnackbar}\n                severity=\"success\"\n                sx={{ width: \"100%\" }}\n              >\n                {snackbarMessage}\n              </Alert>\n            ) : (\n              <Alert\n                onClose={handleCloseSnackbar}\n                severity=\"error\"\n                sx={{ width: \"100%\" }}\n              >\n                {snackbarMessage}\n              </Alert>\n            )}\n          </Snackbar>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default DocumentsNew;\n","export default __webpack_public_path__ + \"static/media/Uni_Logo.f662a23b.png\";","export default __webpack_public_path__ + \"static/media/LUCID.4fee292d.jpg\";","import React from \"react\";\nimport { MDBFooter } from \"mdb-react-ui-kit\";\nimport UniLogo from \"../../Uni_Logo.png\";\nimport Lucid from \"../../LUCID.jpg\";\n\nfunction Footer() {\n  return (\n    <MDBFooter className=\"mt-3 text-center text-lg-left fixed-bottom\">\n      <div\n        className=\"text-center p-3 \"\n        style={{\n          backgroundColor: \"#f1f1f1\",\n        }}\n      >\n        <img src={Lucid} className=\"me-4\" style={{ width: \"2rem\" }} />{\" \"}\n        <img src={UniLogo} className=\"me-4\" style={{ width: \"10rem\" }} />{\" \"}\n        <a\n          className=\"text-dark\"\n          href=\"https://www.uni-goettingen.de/de/43876.html\"\n        >\n          Professur für Anwendungssysteme und E-Business\n        </a>\n      </div>\n    </MDBFooter>\n  );\n}\n\nexport default Footer;\n","import React, { useEffect, useState } from \"react\";\nimport { MDBIcon } from \"mdb-react-ui-kit\";\n\nimport SideNav, { NavItem, NavIcon, NavText } from \"@trendmicro/react-sidenav\";\n\nimport \"../../pages/css/react-sidenav.css\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nfunction SideNavigation(props) {\n  let navigate = useNavigate();\n  let location = useLocation();\n\n  return (\n    <SideNav\n      onToggle={() => props.setExpandedNav(!props.expandedNav)}\n      style={{\n        padding: \"0px 0px 0px 0px\",\n        position: \"fixed\",\n      }}\n    >\n      <SideNav.Toggle />\n\n      <SideNav.Nav defaultSelected=\"dashboard\">\n        <NavItem\n          // eventKey=\"dashboard\"\n          active={location.pathname.includes(\"/dashboard\")}\n          onSelect={() => navigate(\"/dashboard\", { replace: false })}\n        >\n          <NavIcon>\n            <MDBIcon fas icon=\"tachometer-alt\" style={{ fontSize: \"1.75em\" }} />\n          </NavIcon>\n          <NavText>Dashboard</NavText>\n        </NavItem>\n        <NavItem\n          // eventKey=\"transactions\"\n          active={location.pathname.includes(\"/transactions\")}\n          onSelect={() => navigate(\"/transactions\", { replace: false })}\n        >\n          <NavIcon>\n            <MDBIcon fas icon=\"box\" style={{ fontSize: \"1.75em\" }} />\n          </NavIcon>\n          <NavText>Aufträge</NavText>\n        </NavItem>\n        <NavItem\n          // eventKey=\"partners\"\n          active={location.pathname.includes(\"/partners\")}\n          onSelect={() => navigate(\"/partners\", { replace: false })}\n        >\n          <NavIcon>\n            <MDBIcon fas icon=\"address-book\" style={{ fontSize: \"1.75em\" }} />\n          </NavIcon>\n          <NavText>Partner</NavText>\n        </NavItem>\n        <NavItem\n          // eventKey=\"settings\"\n          active={location.pathname.includes(\"/settings\")}\n          onSelect={() => navigate(\"/settings\", { replace: false })}\n        >\n          <NavIcon>\n            <MDBIcon fas icon=\"cog\" style={{ fontSize: \"1.75em\" }} />\n          </NavIcon>\n          <NavText>Einstellungen</NavText>\n        </NavItem>\n      </SideNav.Nav>\n    </SideNav>\n  );\n}\n\nexport default SideNavigation;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  MDBContainer,\n  MDBNavbar,\n  MDBIcon,\n  MDBDropdown,\n  MDBDropdownToggle,\n  MDBDropdownMenu,\n  MDBDropdownItem,\n  MDBDropdownLink,\n  MDBDropdownDivider,\n  MDBDropdownHeader,\n} from \"mdb-react-ui-kit\";\n\nimport { Link } from \"react-router-dom\";\n\nimport useAuth from \"../../hooks/useAuth\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport { useNavigate } from \"react-router-dom\";\nimport NotificationToast from \"../Dashboard/NotifcationToast\";\n\nexport default function TopNavigation() {\n  // Logout\n  const { auth } = useAuth();\n  const username = auth.username;\n  const company = auth.company;\n  const navigate = useNavigate();\n\n  const logout = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"company\");\n    localStorage.removeItem(\"refresh_token\");\n    localStorage.removeItem(\"access_token\");\n    //alert(\"Sie werden ausgeloggt.\");\n    navigate(\"/login\", { replace: true });\n    window.location.reload(false);\n  };\n\n  const [alerts, setAlerts] = useState([]);\n  const [notificationsLoading, setNotificationLoading] = useState(true);\n\n  const axiosInstance = useAxiosPrivate();\n\n  // Suchen State\n  const [searchTerm, setSearchTerm] = useState();\n\n  // Notifications DB Call\n  useEffect(() => {\n    axiosInstance.get(\"/alerts?unread=true\").then((res) => {\n      setAlerts(res.data);\n      setNotificationLoading(false);\n    });\n  }, []);\n\n  // Search Submit\n  const submitHandler = (e) => {\n    e.preventDefault();\n    navigate(`/search?=${searchTerm}`, { replace: false });\n  };\n\n  return (\n    <>\n      <MDBNavbar\n        style={{ marginLeft: 64 }}\n        fixed=\"top\"\n        expand=\"lg\"\n        light\n        bgColor=\"dark\"\n      >\n        <MDBContainer fluid>\n          <div className=\"d-flex flex-row\">\n            <form\n              onSubmit={submitHandler}\n              className=\"d-flex input-group w-auto\"\n            >\n              <input\n                style={{ width: 300 }}\n                type=\"search\"\n                className=\"form-control\"\n                placeholder=\"Suchbegriff eingeben\"\n                aria-label=\"Search\"\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n              <Link to={`/search?=${searchTerm}`} className=\"btn btn-primary\">\n                Suchen\n              </Link>\n            </form>\n          </div>\n          <div className=\"d-flex flex-row\">\n            <MDBDropdown size=\"3\" className=\"mx-2\">\n              {/* Anzahl Benachrichtungen */}\n              <MDBDropdownToggle outline size=\"sm\">\n                <MDBIcon size=\"2x\" className=\"ms-1\" far icon=\"bell\" />\n              </MDBDropdownToggle>\n              <MDBDropdownMenu\n                className=\"p-3 text-muted overflow-scroll\"\n                style={{\n                  width: \"400px\",\n                  minHeight: \"200px\",\n                  maxHeight: \"400px\",\n                }}\n              >\n                <MDBDropdownItem>\n                  <MDBDropdownHeader className=\"mb-2\">\n                    Benachrichtigungen\n                  </MDBDropdownHeader>\n                </MDBDropdownItem>\n                <>\n                  {alerts.length !== 0 && !notificationsLoading ? (\n                    <>\n                      {alerts.map((alert) => (\n                        <MDBDropdownItem key={alert.id}>\n                          <NotificationToast alert={alert} />\n                        </MDBDropdownItem>\n                      ))}\n                    </>\n                  ) : (\n                    <>\n                      <MDBDropdownItem className=\"mt-5 d-flex justify-content-center\">\n                        <p>Keinen neuen Benachrichtungen</p>\n                      </MDBDropdownItem>\n                    </>\n                  )}\n                </>\n              </MDBDropdownMenu>\n            </MDBDropdown>\n            <MDBDropdown>\n              <MDBDropdownToggle outline size=\"sm\">\n                <MDBIcon size=\"2x\" className=\"ms-1\" far icon=\"user-circle\" />\n              </MDBDropdownToggle>\n              <MDBDropdownMenu className=\"text-muted\">\n                <p className=\"mt-3 mx-3\">\n                  <b>Organisation: </b>\n                  {company}\n                </p>\n                <p className=\"mt-3 ms-3\">\n                  <b>Mitarbeiter: </b>\n                  {username}\n                </p>\n                <MDBDropdownItem>\n                  <MDBDropdownItem>\n                    <MDBDropdownDivider />\n                  </MDBDropdownItem>\n                  <MDBDropdownLink onClick={logout}>\n                    <MDBIcon\n                      fas\n                      icon=\"sign-out-alt\"\n                      size=\"lg\"\n                      className=\"me-2\"\n                    />\n                    Logout\n                  </MDBDropdownLink>\n                </MDBDropdownItem>\n                <MDBDropdownItem>\n                  <MDBDropdownLink\n                    onClick={() => {\n                      navigate(\"/settings\");\n                    }}\n                  >\n                    <MDBIcon fas icon=\"cog\" size=\"lg\" className=\"me-2\" />\n                    Account\n                  </MDBDropdownLink>\n                </MDBDropdownItem>\n              </MDBDropdownMenu>\n            </MDBDropdown>\n          </div>\n        </MDBContainer>\n      </MDBNavbar>\n      <br />\n    </>\n  );\n}\n","import { Outlet } from \"react-router-dom\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Footer from \"./UI/Footer\";\nimport SideNavigation from \"./UI/SideNavigation\";\nimport \"./Layout.css\";\n\nimport TopNavigation from \"./UI/TopNavigation\";\nconst Layout = () => {\n  const [expandedNav, setExpandedNav] = useState(false);\n\n  return (\n    <React.Fragment>\n      {/* Anpassung der TopNavigation Position an Sidebar State */}\n      <div\n        class=\"TopNavigation\"\n        style={{\n          marginBottom: 54,\n          marginLeft: expandedNav ? 240 : 64,\n          padding: \"0px 0px 0px 0px\",\n          transition: \"0.2s\",\n        }}\n      >\n        <TopNavigation />\n      </div>\n\n      <SideNavigation\n        expandedNav={expandedNav}\n        setExpandedNav={setExpandedNav}\n      />\n\n      {/* Anpassung de Content Position an Sidebar State \n              (muss alle Routes einschließen) */}\n      <div\n        class=\"content\"\n        style={{\n          marginLeft: expandedNav ? 240 : 64,\n          padding: \"0px 20px 70px 20px\",\n          transition: \"0.2s\",\n          // minHeight: \"90vh\",\n        }}\n      >\n        <main className=\"App\">\n          <Outlet />\n        </main>\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default Layout;\n","import React, { useEffect } from \"react\";\nimport { MDBRow, MDBCol } from \"mdb-react-ui-kit\";\n\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\n\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport { Box } from \"@mui/system\";\nimport { Button } from \"@mui/material\";\n\nfunction AllgemeineAngaben(props) {\n  // Check Status der Validierung bei Eingabe\n  useEffect(() => {\n    var forms = document.getElementById(\"allgemeineAngabenForm\");\n\n    if (forms.checkValidity() == true) {\n      props.setAllgemeineAngabenValidity(true);\n    }\n  }, [props.fieldValue]);\n\n  return (\n    <>\n      <h5 className=\"mb-4\">Allgemeine Angaben</h5>\n      <form id=\"allgemeineAngabenForm\" onSubmit={(e) => e.preventDefault()}>\n        <MDBRow>\n          <MDBCol className=\"col-md-4\">\n            <TextField\n              className=\"mb-3\"\n              // Für automatische Übernahme aus DB:\n              disabled\n              value={props.fieldValue.auftragsnummer}\n              sx={{ minWidth: 300, maxWidth: 600 }}\n              id=\"auftragsnummer\"\n              name=\"auftragsnummer\"\n              label=\"Auftragsnummer*\"\n              variant=\"outlined\"\n              error={\n                props.inputMissingError.auftragsnummer ||\n                props.inputWrongError.auftragsnummer\n              }\n              helperText={\n                props.inputMissingError.auftragsnummer\n                  ? \"Pflichtfeld\"\n                  : props.inputWrongError.auftragsnummer\n                  ? \"Zahl eingeben\"\n                  : null\n              }\n              onChange={(event) => props.handleNumberFieldChange(event)}\n            />\n          </MDBCol>\n          <MDBCol>\n            <Autocomplete\n              className=\"mb-3\"\n              disablePortal\n              id=\"combo-box-customOffices\"\n              options={props.customOffices}\n              //choose name as label for ui\n              getOptionLabel={(option) => option.name}\n              //when changed, save choosen Partner\n              onChange={(event, value) => {\n                props.setFieldValue((prev) => {\n                  return {\n                    ...prev,\n                    bearbeitendeDienststelle: value?.id,\n                  };\n                });\n                props.setPubkeyCO(value?.publickey);\n              }}\n              sx={{ width: 320 }}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  required\n                  label=\"Bearbeitende Dienststelle\"\n                />\n              )}\n            />\n          </MDBCol>\n        </MDBRow>\n        <MDBRow className=\"mb-3\">\n          <MDBCol>\n            <FormControl>\n              <InputLabel id=\"anmeldungArt\">Art der Anmeldung *</InputLabel>\n              <Select\n                sx={{ minWidth: 600, maxWidth: 900 }}\n                name=\"anmeldungArt\"\n                labelId=\"anmeldungArt\"\n                id=\"anmeldungArt\"\n                value={props.fieldValue.anmeldungArt}\n                label=\"Select\"\n                error={props.inputMissingError.anmeldungArt}\n                required\n                onChange={(event) => props.handleFieldChange(event)}\n              >\n                <MenuItem value=\"\">\n                  <em>Nichts</em>\n                </MenuItem>\n                <MenuItem value={\"CO\"}>\n                  CO: Warenverkehr zwischen Mitgliedsstaaten der Gemeinschaft\n                </MenuItem>\n                <MenuItem value={\"EU\"}>\n                  EU: Warenverkehr zwischen der Gemeinschaft und den\n                  EFTA-/Visegrad-Ländern\n                </MenuItem>\n                <MenuItem value={\"IM\"}>\n                  IM: Warenverkehr zwischen der Gemeinschaft und anderen\n                  Drittländern als den EFTA-Ländern\n                </MenuItem>\n              </Select>\n              {props.inputMissingError.anmeldeart ? (\n                <FormHelperText error={true}>Pflichtfeld</FormHelperText>\n              ) : null}\n            </FormControl>\n          </MDBCol>\n        </MDBRow>\n        <MDBRow className=\"mb-3\">\n          <MDBCol>\n            <FormControl>\n              <InputLabel id=\"geschaeftArt\">Art des Geschäfts *</InputLabel>\n              <Select\n                sx={{ minWidth: 600, maxWidth: 900 }}\n                name=\"geschaeftArt\"\n                labelId=\"geschaeftArt\"\n                id=\"geschaeftArt\"\n                value={props.fieldValue.geschaeftArt}\n                label=\"Select\"\n                error={props.inputMissingError.geschaeftArt}\n                required\n                onChange={(event) => props.handleFieldChange(event)}\n              >\n                <MenuItem value=\"\">\n                  <em>Nichts</em>\n                </MenuItem>\n                <MenuItem value={\"Endgültiger Kauf/Verkauf\"}>\n                  Endgültiger Kauf/Verkauf (gewerblich)\n                </MenuItem>\n                <MenuItem value={\"Direkter Handel mit privaten Verbrauchern\"}>\n                  Direkter Handel (mit privaten Verbrauchern)\n                </MenuItem>\n                <MenuItem value={\"Rücksendung von Waren\"}>\n                  Rücksendung von Waren\n                </MenuItem>\n                <MenuItem value={\"Ersatz (z. B. wegen Garantie)\"}>\n                  Ersatz (z. B. wegen Garantie)\n                </MenuItem>\n                <MenuItem value={\"Finanzierungsleasing (Mietkauf)\"}>\n                  Finanzierungsleasing (Mietkauf)\n                </MenuItem>\n                <MenuItem value={\"Warensendung zur Reperatur\"}>\n                  Warensendung zur Reperatur\n                </MenuItem>\n                <MenuItem value={\"Anderweitige Geschäfte\"}>\n                  Anderweitige Geschäfte\n                </MenuItem>\n              </Select>\n              {props.inputMissingError.geschaeftArt ? (\n                <FormHelperText error={true}>Pflichtfeld</FormHelperText>\n              ) : null}\n            </FormControl>\n          </MDBCol>\n        </MDBRow>\n        <MDBRow>\n          <MDBCol>\n            <FormControl>\n              <InputLabel id=\"zahlungArt\">Zahlungsart (optional)</InputLabel>\n              <Select\n                sx={{ minWidth: 600, maxWidth: 900 }}\n                name=\"zahlungArt\"\n                labelId=\"zahlungArt\"\n                id=\"zahlungArt\"\n                value={props.fieldValue.zahlungArt}\n                label=\"Select\"\n                error={props.inputMissingError.zahlungArt}\n                onChange={(event) => props.handleFieldChange(event)}\n              >\n                <MenuItem value=\"\">\n                  <em>Nichts</em>\n                </MenuItem>\n                <MenuItem value={\"Barzahlung\"}>Barzahlung</MenuItem>\n                <MenuItem value={\"Scheck\"}>Scheck</MenuItem>\n                <MenuItem value={\"Überweisung\"}>Überweisung</MenuItem>\n                <MenuItem value={\"Zahlungsaufschub\"}>Zahlungsaufschub</MenuItem>\n              </Select>\n            </FormControl>\n          </MDBCol>\n        </MDBRow>\n        {/* Stepper von Declaration */}\n        <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n          <Button\n            color=\"inherit\"\n            disabled={props.activeStep === 0}\n            onClick={props.handleBack}\n            sx={{ mr: 1 }}\n          >\n            Zurück\n          </Button>\n          <Box sx={{ flex: \"1 1 auto\" }} />\n          {props.isStepOptional(props.activeStep) && (\n            <Button color=\"inherit\" onClick={props.handleSkip} sx={{ mr: 1 }}>\n              Überspringen\n            </Button>\n          )}\n\n          {props.activeStep === props.steps.length - 1 ? (\n            <Button onClick={props.handleSubmit}>Abschicken</Button>\n          ) : (\n            <Button type=\"submit\" onClick={props.handleNext}>\n              Weiter\n            </Button>\n          )}\n        </Box>\n      </form>\n    </>\n  );\n}\n\nexport default AllgemeineAngaben;\n","import React from \"react\";\nimport { MDBRow, MDBCol } from \"mdb-react-ui-kit\";\n\nimport TextField from \"@mui/material/TextField\";\n\nimport { Box } from \"@mui/system\";\nimport { Button } from \"@mui/material\";\n\nfunction Adressdaten(props) {\n  return (\n    <>\n      <h5 className=\"mb-4\">Adressdaten</h5>\n\n      <h6 className=\"mb-3\">Versender</h6>\n      <MDBRow>\n        <MDBCol>\n          <TextField\n            className=\"me-3 mb-3\"\n            sx={{ minWidth: 250, maxWidth: 250 }}\n            id=\"eoriVersender\"\n            name=\"eoriVersender\"\n            label=\"EORI-Nummer*\"\n            variant=\"outlined\"\n            disabled\n            value={props.fieldValue.eoriVersender}\n            error={\n              props.inputMissingError.eoriVersender ||\n              props.inputWrongError.eoriVersender\n            }\n            helperText={\n              props.inputMissingError.eoriVersender\n                ? \"Pflichtfeld\"\n                : props.inputWrongError.eoriVersender\n                ? \"Zahl eingeben\"\n                : null\n            }\n            onChange={(event) => props.handleNumberFieldChange(event)}\n          />\n\n          <TextField\n            className=\"mb-3\"\n            sx={{ minWidth: 550, maxWidth: 550 }}\n            id=\"firmaVersender\"\n            name=\"firmaVersender\"\n            label=\"Firma*\"\n            variant=\"outlined\"\n            disabled\n            value={props.fieldValue.firmaVersender}\n            error={\n              props.inputMissingError.firmaVersender ||\n              props.inputWrongError.firmaVersender\n            }\n            helperText={\n              props.inputMissingError.firmaVersender ? \"Pflichtfeld\" : null\n            }\n            onChange={(event) => props.handleFieldChange(event)}\n          />\n        </MDBCol>\n      </MDBRow>\n\n      <MDBRow>\n        <MDBCol>\n          <TextField\n            className=\"mb-3\"\n            sx={{ minWidth: 600, maxWidth: 600 }}\n            id=\"strasseVersender\"\n            name=\"strasseVersender\"\n            label=\"Straße u. Hausnummer*\"\n            value={props.fieldValue.strasseVersender}\n            disabled\n            variant=\"outlined\"\n            error={\n              props.inputMissingError.strasseVersender ||\n              props.inputWrongError.strasseVersender\n            }\n            helperText={\n              props.inputMissingError.strasseVersender ? \"Pflichtfeld\" : null\n            }\n            onChange={(event) => props.handleFieldChange(event)}\n          />\n        </MDBCol>\n      </MDBRow>\n      <MDBRow>\n        <MDBCol>\n          <TextField\n            className=\"mb-3 me-3\"\n            sx={{ minWidth: 200, maxWidth: 200 }}\n            id=\"plzVersender\"\n            name=\"plzVersender\"\n            label=\"Postleitzahl*\"\n            variant=\"outlined\"\n            value={props.fieldValue.plzVersender}\n            disabled\n            error={\n              props.inputMissingError.plzVersender ||\n              props.inputWrongError.plzVersender\n            }\n            helperText={\n              props.inputMissingError.plzVersender\n                ? \"Pflichtfeld\"\n                : props.inputWrongError.plzVersender\n                ? \"Zahl eingeben\"\n                : null\n            }\n            onChange={(event) => props.handleNumberFieldChange(event)}\n          />\n\n          <TextField\n            className=\"mb-3\"\n            sx={{ minWidth: 600, maxWidth: 900 }}\n            id=\"ortVersender\"\n            name=\"ortVersender\"\n            label=\"Ort*\"\n            variant=\"outlined\"\n            disabled\n            value={props.fieldValue.ortVersender}\n            error={\n              props.inputMissingError.ortVersender ||\n              props.inputWrongError.ortVersender\n            }\n            helperText={\n              props.inputMissingError.ortVersender ? \"Pflichtfeld\" : null\n            }\n            onChange={(event) => props.handleFieldChange(event)}\n          />\n        </MDBCol>\n      </MDBRow>\n      <MDBRow>\n        <MDBCol>\n          <TextField\n            className=\"mb-3\"\n            sx={{ minWidth: 600, maxWidth: 900 }}\n            id=\"staatVersender\"\n            name=\"staatVersender\"\n            label=\"Staatsangehörigkeit*\"\n            variant=\"outlined\"\n            disabled\n            value={props.fieldValue.staatVersender}\n            error={\n              props.inputMissingError.staatVersender ||\n              props.inputWrongError.staatVersender\n            }\n            helperText={\n              props.inputMissingError.staatVersender ? \"Pflichtfeld\" : null\n            }\n            onChange={(event) => props.handleFieldChange(event)}\n          />\n        </MDBCol>\n      </MDBRow>\n      <MDBRow>\n        <MDBCol>\n          <TextField\n            className=\"mb-3 me-3\"\n            sx={{ minWidth: 400, maxWidth: 600 }}\n            id=\"telefonVersender\"\n            name=\"telefonVersender\"\n            label=\"Telefonnummer*\"\n            variant=\"outlined\"\n            value={props.fieldValue.telefonVersender}\n            disabled\n            error={\n              props.inputMissingError.telefonVersender ||\n              props.inputWrongError.telefonVersender\n            }\n            helperText={\n              props.inputMissingError.telefonVersender ? \"Pflichtfeld\" : null\n            }\n            onChange={(event) => props.handleFieldChange(event)}\n          />\n\n          <TextField\n            className=\"mb-3\"\n            sx={{ minWidth: 400, maxWidth: 600 }}\n            id=\"emailVersender\"\n            name=\"emailVersender\"\n            label=\"E-Mail-Adresse*\"\n            variant=\"outlined\"\n            disabled\n            value={props.fieldValue.emailVersender}\n            error={\n              props.inputMissingError.emailVersender ||\n              props.inputWrongError.emailVersender\n            }\n            helperText={\n              props.inputMissingError.emailVersender ? \"Pflichtfeld\" : null\n            }\n            onChange={(event) => props.handleFieldChange(event)}\n          />\n        </MDBCol>\n      </MDBRow>\n\n      <hr className=\"my-4\" />\n\n      <h6 className=\"mb-3\">Empfänger / Anmelder</h6>\n      <MDBRow>\n        <MDBCol>\n          <TextField\n            className=\"me-3 mb-3\"\n            sx={{ minWidth: 250, maxWidth: 250 }}\n            id=\"eoriAnmelder\"\n            name=\"eoriAnmelder\"\n            label=\"EORI-Nummer*\"\n            variant=\"outlined\"\n            value={props.fieldValue.eoriAnmelder}\n            disabled\n            error={\n              props.inputMissingError.eoriAnmelder ||\n              props.inputWrongError.eoriAnmelder\n            }\n            helperText={\n              props.inputMissingError.eoriAnmelder\n                ? \"Pflichtfeld\"\n                : props.inputWrongError.eoriAnmelder\n                ? \"Zahl eingeben\"\n                : null\n            }\n            onChange={(event) => props.handleNumberFieldChange(event)}\n          />\n\n          <TextField\n            className=\"mb-3\"\n            sx={{ minWidth: 550, maxWidth: 550 }}\n            id=\"firmaAnmelder\"\n            name=\"firmaAnmelder\"\n            label=\"Firma*\"\n            variant=\"outlined\"\n            value={props.fieldValue.firmaAnmelder}\n            disabled\n            error={\n              props.inputMissingError.firmaAnmelder ||\n              props.inputWrongError.firmaAnmelder\n            }\n            helperText={\n              props.inputMissingError.firmaAnmelder ? \"Pflichtfeld\" : null\n            }\n            onChange={(event) => props.handleFieldChange(event)}\n          />\n        </MDBCol>\n      </MDBRow>\n\n      <MDBRow>\n        <MDBCol>\n          <TextField\n            className=\"mb-3\"\n            sx={{ minWidth: 600, maxWidth: 600 }}\n            id=\"strasseAnmelder\"\n            name=\"strasseAnmelder\"\n            label=\"Straße u. Hausnummer*\"\n            variant=\"outlined\"\n            value={props.fieldValue.strasseAnmelder}\n            disabled\n            error={\n              props.inputMissingError.strasseAnmelder ||\n              props.inputWrongError.strasseAnmelder\n            }\n            helperText={\n              props.inputMissingError.strasseAnmelder ? \"Pflichtfeld\" : null\n            }\n            onChange={(event) => props.handleFieldChange(event)}\n          />\n        </MDBCol>\n      </MDBRow>\n      <MDBRow>\n        <MDBCol>\n          <TextField\n            className=\"mb-3 me-3\"\n            sx={{ minWidth: 200, maxWidth: 200 }}\n            id=\"plzAnmelder\"\n            name=\"plzAnmelder\"\n            label=\"Postleitzahl*\"\n            variant=\"outlined\"\n            value={props.fieldValue.plzAnmelder}\n            disabled\n            error={\n              props.inputMissingError.plzAnmelder ||\n              props.inputWrongError.plzAnmelder\n            }\n            helperText={\n              props.inputMissingError.plzAnmelder\n                ? \"Pflichtfeld\"\n                : props.inputWrongError.plzAnmelder\n                ? \"Zahl eingeben\"\n                : null\n            }\n            onChange={(event) => props.handleNumberFieldChange(event)}\n          />\n\n          <TextField\n            className=\"mb-3\"\n            sx={{ minWidth: 600, maxWidth: 900 }}\n            id=\"ortAnmelder\"\n            name=\"ortAnmelder\"\n            label=\"Ort*\"\n            variant=\"outlined\"\n            value={props.fieldValue.ortAnmelder}\n            disabled\n            error={\n              props.inputMissingError.ortAnmelder ||\n              props.inputWrongError.ortAnmelder\n            }\n            helperText={\n              props.inputMissingError.ortAnmelder ? \"Pflichtfeld\" : null\n            }\n            onChange={(event) => props.handleFieldChange(event)}\n          />\n        </MDBCol>\n      </MDBRow>\n      <MDBRow>\n        <MDBCol>\n          <TextField\n            className=\"mb-3\"\n            sx={{ minWidth: 600, maxWidth: 900 }}\n            id=\"staatAnmelder\"\n            name=\"staatAnmelder\"\n            label=\"Staatsangehörigkeit*\"\n            variant=\"outlined\"\n            value={props.fieldValue.staatAnmelder}\n            disabled\n            error={\n              props.inputMissingError.staatAnmelder ||\n              props.inputWrongError.staatAnmelder\n            }\n            helperText={\n              props.inputMissingError.staatAnmelder ? \"Pflichtfeld\" : null\n            }\n            onChange={(event) => props.handleFieldChange(event)}\n          />\n        </MDBCol>\n      </MDBRow>\n      <MDBRow>\n        <MDBCol>\n          <TextField\n            className=\"mb-3 me-3\"\n            sx={{ minWidth: 400, maxWidth: 600 }}\n            id=\"telefonAnmelder\"\n            name=\"telefonAnmelder\"\n            label=\"Telefonnummer*\"\n            variant=\"outlined\"\n            value={props.fieldValue.telefonAnmelder}\n            disabled\n            error={\n              props.inputMissingError.telefonAnmelder ||\n              props.inputWrongError.telefonAnmelder\n            }\n            helperText={\n              props.inputMissingError.telefonAnmelder ? \"Pflichtfeld\" : null\n            }\n            onChange={(event) => props.handleFieldChange(event)}\n          />\n\n          <TextField\n            className=\"mb-3\"\n            sx={{ minWidth: 400, maxWidth: 600 }}\n            id=\"emailAnmelder\"\n            name=\"emailAnmelder\"\n            label=\"E-Mail-Adresse*\"\n            variant=\"outlined\"\n            value={props.fieldValue.emailAnmelder}\n            disabled\n            error={\n              props.inputMissingError.emailAnmelder ||\n              props.inputWrongError.emailAnmelder\n            }\n            helperText={\n              props.inputMissingError.emailAnmelder ? \"Pflichtfeld\" : null\n            }\n            onChange={(event) => props.handleFieldChange(event)}\n          />\n        </MDBCol>\n      </MDBRow>\n      {/* Stepper von Declaration*/}\n      <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n        <Button\n          color=\"inherit\"\n          disabled={props.activeStep === 0}\n          onClick={props.handleBack}\n          sx={{ mr: 1 }}\n        >\n          Zurück\n        </Button>\n        <Box sx={{ flex: \"1 1 auto\" }} />\n        {props.isStepOptional(props.activeStep) && (\n          <Button color=\"inherit\" onClick={props.handleSkip} sx={{ mr: 1 }}>\n            Überspringen\n          </Button>\n        )}\n\n        {props.activeStep === props.steps.length - 1 ? (\n          <Button onClick={props.handleSubmit}>Abschicken</Button>\n        ) : (\n          <Button type=\"submit\" onClick={props.handleNext}>\n            Weiter\n          </Button>\n        )}\n      </Box>\n    </>\n  );\n}\n\nexport default Adressdaten;\n","import React, { useEffect } from \"react\";\nimport { MDBRow, MDBCol } from \"mdb-react-ui-kit\";\n\nimport TextField from \"@mui/material/TextField\";\n\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport { Box } from \"@mui/system\";\nimport { Button } from \"@mui/material\";\n\nfunction Lieferdaten(props) {\n  // Check Status der Validierung bei Eingabe\n  useEffect(() => {\n    var forms = document.getElementById(\"lieferdatenForm\");\n\n    if (forms.checkValidity() == true) {\n      props.setLieferdatenValidity(true);\n    }\n  }, [props.fieldValue]);\n\n  return (\n    <>\n      <h5 className=\"mb-4\">Lieferdaten</h5>\n      <form id=\"lieferdatenForm\" onSubmit={(e) => e.preventDefault()}>\n        <MDBRow>\n          <MDBCol>\n            <TextField\n              className=\"mb-3 me-3\"\n              sx={{ minWidth: 400, maxWidth: 600 }}\n              id=\"ausfuhrland\"\n              name=\"ausfuhrland\"\n              label=\"Ausfuhrland\"\n              variant=\"outlined\"\n              error={\n                props.inputMissingError.ausfuhrland ||\n                props.inputWrongError.ausfuhrland\n              }\n              helperText={\n                props.inputMissingError.ausfuhrland ? \"Pflichtfeld\" : null\n              }\n              type=\"text\"\n              required\n              onChange={(event) => props.handleFieldChange(event)}\n            />\n\n            <TextField\n              className=\"mb-3\"\n              sx={{ minWidth: 400, maxWidth: 600 }}\n              id=\"bestimmungsland\"\n              name=\"bestimmungsland\"\n              label=\"Bestimmungsland\"\n              variant=\"outlined\"\n              error={\n                props.inputMissingError.bestimmungsland ||\n                props.inputWrongError.bestimmungsland\n              }\n              helperText={\n                props.inputMissingError.bestimmungsland ? \"Pflichtfeld\" : null\n              }\n              type=\"text\"\n              required\n              onChange={(event) => props.handleFieldChange(event)}\n            />\n          </MDBCol>\n        </MDBRow>\n        <MDBRow className=\"mb-3\">\n          <MDBCol>\n            <FormControl>\n              <InputLabel id=\"bestimmungsbundesland\">\n                Bestimmungsbundesland *\n              </InputLabel>\n              <Select\n                sx={{ minWidth: 300, maxWidth: 900 }}\n                name=\"bestimmungsbundesland\"\n                labelId=\"bestimmungsbundesland\"\n                id=\"bestimmungsbundesland\"\n                value={props.fieldValue.bestimmungsbundesland}\n                label=\"Select\"\n                error={props.inputMissingError.bestimmungsbundesland}\n                required\n                onChange={(event) => props.handleFieldChange(event)}\n              >\n                <MenuItem value=\"\">\n                  <em>Nichts</em>\n                </MenuItem>\n                <MenuItem value={\"Baden-Württemberg\"}>\n                  Baden-Württemberg\n                </MenuItem>\n                <MenuItem value={\"Bayern\"}>Bayern</MenuItem>\n                <MenuItem value={\"Berlin\"}>Berlin</MenuItem>\n                <MenuItem value={\"Brandenburg\"}>Brandenburg</MenuItem>\n                <MenuItem value={\"Bremen\"}>Bremen</MenuItem>\n                <MenuItem value={\"Hamburg\"}>Hamburg</MenuItem>\n                <MenuItem value={\"Hessen\"}>Hessen</MenuItem>\n                <MenuItem value={\"Mecklenburg-Vorpommern\"}>\n                  Mecklenburg-Vorpommern\n                </MenuItem>\n                <MenuItem value={\"Niedersachsen\"}>Niedersachsen</MenuItem>\n                <MenuItem value={\"Nordrhein-Westfalen\"}>\n                  Nordrhein-Westfalen\n                </MenuItem>\n                <MenuItem value={\"Rheinland-Pfalz\"}>Rheinland-Pfalz</MenuItem>\n                <MenuItem value={\"Saarland\"}>Saarland</MenuItem>\n                <MenuItem value={\"Sachsen\"}>Sachsen</MenuItem>\n                <MenuItem value={\"Sachsen-Anhalt\"}>Sachsen-Anhalt</MenuItem>\n                <MenuItem value={\"Schleswig-Holstein\"}>\n                  Schleswig-Holstein\n                </MenuItem>\n                <MenuItem value={\"Thüringen\"}>Thüringen</MenuItem>\n                <MenuItem value={\"Ausland\"}>Für das Ausland bestimmt</MenuItem>\n              </Select>\n              {props.inputMissingError.bestimmungsbundesland ? (\n                <FormHelperText error={true}>Pflichtfeld</FormHelperText>\n              ) : null}\n            </FormControl>\n          </MDBCol>\n        </MDBRow>\n        <hr className=\"my-4\" />\n        <MDBRow className=\"mb-3\">\n          <MDBCol>\n            <FormControl>\n              <InputLabel id=\"befoerderungsmittel\">\n                Art des grenzüberschreitenden Beförderungsmittel *\n              </InputLabel>\n              <Select\n                sx={{ minWidth: 500, maxWidth: 600 }}\n                name=\"befoerderungsmittel\"\n                labelId=\"befoerderungsmittel\"\n                id=\"befoerderungsmittel\"\n                value={props.fieldValue.befoerderungsmittel}\n                label=\"Select\"\n                error={props.inputMissingError.befoerderungsmittel}\n                required\n                onChange={(event) => props.handleFieldChange(event)}\n              >\n                <MenuItem value=\"\">\n                  <em>Nichts</em>\n                </MenuItem>\n                <MenuItem value={\"Lastkraftwagen\"}>Lastkraftwagen</MenuItem>\n                <MenuItem value={\"Schiff\"}>Schiff</MenuItem>\n                <MenuItem value={\"Waggon\"}>Waggon</MenuItem>\n                <MenuItem value={\"Flugzeug\"}>Flugzeug</MenuItem>\n                <MenuItem value={\"PKW\"}>PKW</MenuItem>\n                <MenuItem value={\"Ohne\"}>Ohne</MenuItem>\n                <MenuItem value={\"Andere\"}>Andere</MenuItem>\n              </Select>\n              {props.inputMissingError.befoerderungsmittel ? (\n                <FormHelperText error={true}>Pflichtfeld</FormHelperText>\n              ) : null}\n            </FormControl>\n          </MDBCol>\n        </MDBRow>\n        <MDBRow className=\"mb-3\">\n          <MDBCol>\n            <FormControl>\n              <InputLabel id=\"lieferbedingung\">Lieferbedingung *</InputLabel>\n              <Select\n                sx={{ minWidth: 600, maxWidth: 900 }}\n                name=\"lieferbedingung\"\n                labelId=\"lieferbedingung\"\n                id=\"lieferbedingung\"\n                value={props.fieldValue.lieferbedingung}\n                label=\"Select\"\n                error={props.inputMissingError.lieferbedingung}\n                required\n                onChange={(event) => props.handleFieldChange(event)}\n              >\n                <MenuItem value=\"\">\n                  <em>Nichts</em>\n                </MenuItem>\n                <MenuItem value={\"CFR\"}>Kosten und Fracht</MenuItem>\n                <MenuItem value={\"CIF\"}>\n                  Kosten, Versicherung und Fracht\n                </MenuItem>\n                <MenuItem value={\"DAP\"}>Geliefert benannter Ort</MenuItem>\n                <MenuItem value={\"DAT\"}>Geliefert Terminal</MenuItem>\n                <MenuItem value={\"DDP\"}>Geliefert verzollt</MenuItem>\n                <MenuItem value={\"FOB\"}>Frei an Bord</MenuItem>\n              </Select>\n            </FormControl>\n          </MDBCol>\n        </MDBRow>\n        <MDBRow>\n          <MDBCol>\n            <TextField\n              className=\"mb-3 me-3\"\n              sx={{ minWidth: 400, maxWidth: 600 }}\n              id=\"lieferort\"\n              name=\"lieferort\"\n              label=\"Lieferort\"\n              variant=\"outlined\"\n              error={\n                props.inputMissingError.lieferort ||\n                props.inputWrongError.lieferort\n              }\n              helperText={\n                props.inputMissingError.lieferort ? \"Pflichtfeld\" : null\n              }\n              type=\"text\"\n              required\n              onChange={(event) => props.handleFieldChange(event)}\n            />\n\n            <TextField\n              className=\"mb-3\"\n              sx={{ minWidth: 400, maxWidth: 600 }}\n              id=\"warenort\"\n              name=\"warenort\"\n              label=\"Warenort (optional)\"\n              variant=\"outlined\"\n              onChange={(event) => props.handleFieldChange(event)}\n            />\n          </MDBCol>\n        </MDBRow>\n\n        {/* Stepper von Declaration */}\n        <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n          <Button\n            color=\"inherit\"\n            disabled={props.activeStep === 0}\n            onClick={props.handleBack}\n            sx={{ mr: 1 }}\n          >\n            Zurück\n          </Button>\n          <Box sx={{ flex: \"1 1 auto\" }} />\n          {props.isStepOptional(props.activeStep) && (\n            <Button color=\"inherit\" onClick={props.handleSkip} sx={{ mr: 1 }}>\n              Überspringen\n            </Button>\n          )}\n\n          {props.activeStep === props.steps.length - 1 ? (\n            <Button onClick={props.handleSubmit}>Abschicken</Button>\n          ) : (\n            <Button type=\"submit\" onClick={props.handleNext}>\n              Weiter\n            </Button>\n          )}\n        </Box>\n      </form>\n    </>\n  );\n}\n\nexport default Lieferdaten;\n","import React, { useEffect } from \"react\";\nimport { MDBRow, MDBCol } from \"mdb-react-ui-kit\";\n\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\n\nimport { Box } from \"@mui/system\";\nimport { Button } from \"@mui/material\";\n\nfunction Rechnungsdaten(props) {\n  // Check Status der Validierung bei Eingabe\n  useEffect(() => {\n    var forms = document.getElementById(\"rechnungsdatenForm\");\n\n    if (forms.checkValidity() == true) {\n      props.setRechnungsdatenValidity(true);\n    }\n  }, [props.usedInvoice]);\n\n  return (\n    <>\n      <h5 className=\"mb-4\">Rechnungsdaten</h5>\n      <form id=\"rechnungsdatenForm\" onSubmit={(e) => e.preventDefault()}>\n        <MDBRow>\n          <MDBCol>\n            <Autocomplete\n              className=\"mb-3\"\n              disablePortal\n              id=\"combo-box-transactioninvoices\"\n              options={props.transactionInvoices}\n              //choose name as label for ui\n              getOptionLabel={(option) => option.description}\n              //when changed, save choosen Partner\n              onChange={(event, value) => {\n                props.setUsedInvoice(value.id);\n              }}\n              sx={{ width: 320 }}\n              renderInput={(params) => (\n                <TextField {...params} required label=\"Rechnungsdokument\" />\n              )}\n            />\n          </MDBCol>\n        </MDBRow>\n        <MDBRow>\n          <MDBCol>\n            <TextField\n              className=\"mb-3\"\n              sx={{ minWidth: 250, maxWidth: 250 }}\n              type=\"date\"\n              id=\"datumRechnung\"\n              name=\"datumRechnung\"\n              label=\"Rechnungsdatum*\"\n              variant=\"outlined\"\n              disabled\n              value={props.fieldValue.datumRechnung}\n              error={\n                props.inputMissingError.datumRechnung ||\n                props.inputWrongError.datumRechnung\n              }\n              helperText={\n                props.inputMissingError.datumRechnung ? \"Pflichtfeld\" : null\n              }\n              onChange={(event) => props.handleFieldChange(event)}\n            />\n          </MDBCol>\n        </MDBRow>\n        <MDBRow>\n          <MDBCol>\n            <TextField\n              sx={{ minWidth: 250, maxWidth: 250 }}\n              className=\"mb-3 me-3\"\n              id=\"gesamtbetrag\"\n              name=\"gesamtbetrag\"\n              label=\"Gesamtbetrag*\"\n              variant=\"outlined\"\n              disabled\n              value={props.fieldValue.gesamtbetrag}\n              error={\n                props.inputMissingError.gesamtbetrag ||\n                props.inputWrongError.gesamtbetrag\n              }\n              helperText={\n                props.inputMissingError.eoriVersender\n                  ? \"Pflichtfeld\"\n                  : props.inputWrongError.eoriVersender\n                  ? \"Zahl eingeben\"\n                  : null\n              }\n              onChange={(event) => props.handleNumberFieldChange(event)}\n            />\n\n            <TextField\n              className=\"mb-3\"\n              id=\"waehrung\"\n              name=\"waehrung\"\n              label=\"Währung*\"\n              variant=\"outlined\"\n              disabled\n              value={props.fieldValue.waehrung}\n              error={\n                props.inputMissingError.waehrung ||\n                props.inputWrongError.waehrung\n              }\n              helperText={\n                props.inputMissingError.waehrung ? \"Pflichtfeld\" : null\n              }\n              onChange={(event) => props.handleFieldChange(event)}\n            />\n          </MDBCol>\n        </MDBRow>\n        <MDBRow>\n          <MDBCol>\n            <TextField\n              className=\"mb-3 me-3\"\n              sx={{ minWidth: 250, maxWidth: 250 }}\n              id=\"lieferkosten\"\n              name=\"lieferkosten\"\n              label=\"Lieferkosten*\"\n              variant=\"outlined\"\n              disabled\n              value={props.fieldValue.lieferkosten}\n              error={\n                props.inputMissingError.lieferkosten ||\n                props.inputWrongError.lieferkosten\n              }\n              helperText={\n                props.inputMissingError.lieferkosten ? \"Pflichtfeld\" : null\n              }\n              onChange={(event) => props.handleNumberFieldChange(event)}\n            />\n          </MDBCol>\n        </MDBRow>\n        <hr className=\"my-4\" />\n        {/* Rechnungsposten müssen gemapt werden: */}\n        {props.rechnungsposten.map((posten) => (\n          <>\n            <MDBRow className=\"mb-3\">\n              <MDBCol>\n                <b>Rechnungsposten:</b>\n              </MDBCol>\n            </MDBRow>\n            <MDBRow>\n              <MDBCol>\n                <TextField\n                  sx={{ minWidth: 400, maxWidth: 400 }}\n                  className=\"mb-3\"\n                  disabled\n                  value={posten.product}\n                  id=\"rechnungspostenProdukt\"\n                  name=\"rechnungspostenProdukt\"\n                  label=\"Produkt*\"\n                  variant=\"outlined\"\n                />\n              </MDBCol>\n            </MDBRow>\n            <MDBRow>\n              <MDBCol>\n                <TextField\n                  sx={{ minWidth: 200, maxWidth: 200 }}\n                  className=\"mb-3 me-3\"\n                  disabled\n                  value={posten.amount}\n                  id=\"rechnungspostenAnzahl\"\n                  name=\"rechnungspostenAnzahl\"\n                  label=\"Anzahl*\"\n                  variant=\"outlined\"\n                />\n                <TextField\n                  className=\"mb-3 me-3\"\n                  disabled\n                  sx={{ minWidth: 200, maxWidth: 200 }}\n                  value={posten.unit}\n                  id=\"rechnungspostenEinheit\"\n                  name=\"rechnungspostenEinheit\"\n                  label=\"Einheit*\"\n                  variant=\"outlined\"\n                />\n                <TextField\n                  className=\"mb-3 me-3\"\n                  sx={{ minWidth: 200, maxWidth: 200 }}\n                  value={posten.price}\n                  disabled\n                  id=\"rechnungspostenPreisEinheit\"\n                  name=\"rechnungspostenPreisEinheit\"\n                  label=\"Preis pro Einheit*\"\n                  variant=\"outlined\"\n                />\n              </MDBCol>\n            </MDBRow>\n          </>\n        ))}\n        <hr className=\"my-4\" />\n\n        {/* Abgaben Berechnung: */}\n        <MDBRow>\n          <p className=\"ms-4\">\n            <b>Zollwert</b> (Geamtbetrag + Lieferkosten) ={\" \"}\n            {(\n              Number(props.fieldValue.gesamtbetrag) +\n              Number(props.fieldValue.lieferkosten)\n            ).toFixed(2)}{\" \"}\n            {props.fieldValue.waehrung}\n          </p>\n          <p className=\"ms-4\">\n            <b>Zollbetrag</b> (Pauschaler Zollsatz 4 %) ={\" \"}\n            {(\n              (Number(props.fieldValue.gesamtbetrag) +\n                Number(props.fieldValue.lieferkosten)) *\n              Number(0.04)\n            ).toFixed(2)}{\" \"}\n            {props.fieldValue.waehrung}\n          </p>\n          <p className=\"ms-4\">\n            <b>Einfuhrumsatzsteuer(EUSt)-Wert</b> (Zollwert + Zollbetrag) ={\" \"}\n            {(\n              (Number(props.fieldValue.gesamtbetrag) +\n                Number(props.fieldValue.lieferkosten)) *\n              Number(1.04)\n            ).toFixed(2)}{\" \"}\n            {props.fieldValue.waehrung}\n          </p>\n          <p className=\"ms-4\">\n            <b>EUSt-Betrag</b> (EUSt-Wert * EUSt-Satz 19 %) ={\" \"}\n            {(\n              (Number(props.fieldValue.gesamtbetrag) +\n                Number(props.fieldValue.lieferkosten)) *\n              Number(1.04) *\n              Number(0.19)\n            ).toFixed(2)}{\" \"}\n            {props.fieldValue.waehrung}\n          </p>\n          <p className=\"ms-4\">\n            <b>Prognostizierte Gesamtabgabe</b> (Zollbetrag + EUSt-Betrag) ={\" \"}\n            <u>\n              {(\n                (Number(props.fieldValue.gesamtbetrag) +\n                  Number(props.fieldValue.lieferkosten)) *\n                  Number(0.04) +\n                (Number(props.fieldValue.gesamtbetrag) +\n                  Number(props.fieldValue.lieferkosten)) *\n                  Number(1.04) *\n                  Number(0.19)\n              ).toFixed(2)}{\" \"}\n              {props.fieldValue.waehrung}\n            </u>\n          </p>\n        </MDBRow>\n        {/* Stepper von Declaration */}\n        <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n          <Button\n            color=\"inherit\"\n            disabled={props.activeStep === 0}\n            onClick={props.handleBack}\n            sx={{ mr: 1 }}\n          >\n            Zurück\n          </Button>\n          <Box sx={{ flex: \"1 1 auto\" }} />\n          {props.isStepOptional(props.activeStep) && (\n            <Button color=\"inherit\" onClick={props.handleSkip} sx={{ mr: 1 }}>\n              Überspringen\n            </Button>\n          )}\n\n          {props.activeStep === props.steps.length - 1 ? (\n            <Button onClick={props.handleSubmit}>Abschicken</Button>\n          ) : (\n            <Button type=\"submit\" onClick={props.handleNext}>\n              Weiter\n            </Button>\n          )}\n        </Box>\n      </form>\n    </>\n  );\n}\n\nexport default Rechnungsdaten;\n","import React, { useEffect, useState } from \"react\";\nimport { MDBRow, MDBCol } from \"mdb-react-ui-kit\";\n\nimport { Button, FormGroup } from \"@mui/material\";\nimport { Checkbox } from \"@mui/material\";\n\nimport { FormControlLabel } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nfunction AnmeldungDokumente(props) {\n  const handleChange = (documentID) => {\n    if (props.usedDocuments.includes(documentID)) {\n      console.log(`${documentID} bereits enthalten - wird entfernt`);\n      const index = props.usedDocuments.indexOf(documentID);\n      if (index > -1) {\n        props.usedDocuments.splice(index, 1); // 2nd parameter means remove one item only\n      }\n      return;\n    }\n    props.usedDocuments.push(documentID);\n  };\n\n  return (\n    <>\n      <h5 className=\"mb-4\">Weitere Dokumente</h5>\n      <MDBRow>\n        <MDBCol>Sonstige Dokumente auswählen (optional):</MDBCol>\n      </MDBRow>\n      <MDBRow>\n        <FormGroup>\n          {/* Dokumente werden aufgelistet, Rechnungen werden rausgefiltert */}\n          {props.documents\n            .filter((document) => document.type !== \"Rechnung\")\n            .map((document) => (\n              <FormControlLabel\n                control={\n                  <Checkbox onChange={() => handleChange(document.id)} />\n                }\n                label={document.representation}\n              />\n            ))}\n        </FormGroup>\n      </MDBRow>\n      {/* Stepper */}\n      <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n        <Button\n          color=\"inherit\"\n          disabled={props.activeStep === 0}\n          onClick={props.handleBack}\n          sx={{ mr: 1 }}\n        >\n          Zurück\n        </Button>\n        <Box sx={{ flex: \"1 1 auto\" }} />\n        {props.isStepOptional(props.activeStep) && (\n          <Button color=\"inherit\" onClick={props.handleSkip} sx={{ mr: 1 }}>\n            Überspringen\n          </Button>\n        )}\n\n        {props.activeStep === props.steps.length - 1 ? (\n          <Button onClick={props.handleSubmit}>Abschicken</Button>\n        ) : (\n          <Button type=\"submit\" onClick={props.handleNext}>\n            Weiter\n          </Button>\n        )}\n      </Box>\n    </>\n  );\n}\n\nexport default AnmeldungDokumente;\n","import React, { useState, useEffect } from \"react\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport \"./css/LoadingSpinner.css\";\n\n// Unterformulare\nimport AllgemeineAngaben from \"../components/Declaration/AllgemeineAngaben\";\nimport Adressdaten from \"../components/Declaration/Adressdaten\";\nimport Lieferdaten from \"../components/Declaration/Lieferdaten\";\nimport Rechnungsdaten from \"../components/Declaration/Rechnungsdaten\";\nimport AnmeldungDokumente from \"../components/Declaration/AnmeldungDokumente\";\n\nimport {\n  MDBContainer,\n  MDBSpinner,\n  MDBBreadcrumb,\n  MDBBreadcrumbItem,\n} from \"mdb-react-ui-kit\";\n\n//Smart Contract\nimport { createZollanmeldung } from \"../Web3Client\";\n\n// Stepper\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\n\n// Loading Backdrop\nimport Backdrop from \"@mui/material/Backdrop\";\n\n//Nutzerdaten Abruf\nimport useAuth from \"../hooks/useAuth\";\nimport { CircularProgress } from \"@mui/material\";\n\nfunction Declaration(props) {\n  const [usedInvoice, setUsedInvoice] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const [pubkeyCO, setPubkeyCO] = useState();\n  const [transactionInvoices, setTransactionInvoices] = useState();\n\n  //state für dokumente\n\n  const usedDocuments = [];\n  const [documents, setDocuments] = useState();\n\n  //auswahl für Zollämter\n\n  const [customOffices, setCustomOffices] = useState({});\n\n  //funktion für Nutzerdaten\n  const { auth } = useAuth();\n\n  //Abfrage der TransaktionsID\n\n  const { transactionId } = useParams();\n\n  // Stepper-Logik\n  const steps = [\n    \"Allgemeine Angaben\",\n    \"Adressdaten\",\n    \"Lieferdaten\",\n    \"Rechnungsdaten\",\n    \"Dokumente\",\n  ];\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n\n  // (Kein Step ist optional)\n  const isStepOptional = (step) => {\n    return;\n  };\n\n  //Abfrage der voreingestellten Daten\n  const axiosInstance = useAxiosPrivate();\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = (e) => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n    // Check Validierung\n    if (activeStep === 0 && allgemeineAngabenValidity == false) {\n      return;\n    }\n    if (activeStep === 2 && lieferdatenValidity == false) {\n      return;\n    }\n    if (activeStep === 3 && rechnungsdatenValidity == false) {\n      return;\n    }\n    e.preventDefault();\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  //Übertragen der Daten\n  async function handleSubmit() {\n    // Backdrop Ladeanimation öffnen\n    handleToggleBackdrop();\n    const zollwert = (await fieldValue.gesamtbetrag) + fieldValue.lieferkosten;\n    await blockchainZollanmeldungTransaction(\n      pubkeyCO,\n      fieldValue.blockchainRID,\n      zollwert.toString(),\n      fieldValue.lieferbedingung\n    );\n\n    return;\n  }\n\n  // -- DATENFELDER --\n  // State des Inhalts der Felder\n  const [fieldValue, setFieldValue] = React.useState({\n    // Allgemeine Angaben\n    auftragsnummer: \"\",\n    bearbeitendeDienststelle: \"\",\n    anmeldungArt: \"\",\n    geschaeftArt: \"\",\n    zahlungArt: \"\",\n    // Adressdaten Versender\n    eoriVersender: \"\",\n    nameVersender: \"\",\n    vornameVersender: \"\",\n    firmaVersender: \"\",\n    strasseVersender: \"\",\n    plzVersender: \"\",\n    ortVersender: \"\",\n    staatVersender: \"\",\n    telefonVersender: \"\",\n    emailVersender: \"\",\n    // Adressdaten Anmelder\n    eoriAnmelder: \"\",\n    nameAnmelder: \"\",\n    vornameAnmelder: \"\",\n    firmaAnmelder: \"\",\n    strasseAnmelder: \"\",\n    plzAnmelder: \"\",\n    ortAnmelder: \"\",\n    staatAnmelder: \"\",\n    telefonAnmelder: \"\",\n    emailAnmelder: \"\",\n    // Lieferdaten\n    ausfuhrland: \"\",\n    bestimmungsland: \"\",\n    bestimmungsbundesland: \"\",\n    befoerderungsmittel: \"\",\n    lieferbedingung: \"\",\n    lieferort: \"\",\n    warenort: \"\",\n    lieferkosten: \"\",\n    //Rechnungsdaten\n    datumRechnung: \"\",\n    gesamtbetrag: \"\",\n    waehrung: \"\",\n  });\n\n  const [rechnungsposten, setRechnungsposten] = React.useState([{}]);\n\n  // Legacy State über fehlende Eingaben\n  // -> Keine manuelle Validierung mehr, sondern HTML5 Required-Validierung\n  const [inputMissingError, setInputMissingError] = React.useState({\n    // Allgemeine Angaben\n    auftragsnummer: false,\n    bearbeitendeDienststelle: false,\n    anmeldungArt: false,\n    geschaeftArt: false,\n    zahlungArt: false,\n    // Adressdaten Versender\n    eoriVersender: false,\n    nameVersender: false,\n    vornameVersender: false,\n    firmaVersender: false,\n    strasseVersender: false,\n    plzVersender: false,\n    ortVersender: false,\n    staatVersender: false,\n    telefonVersender: false,\n    emailVersender: false,\n    // Adressdaten Anmelder\n    eoriAnmelder: false,\n    nameAnmelder: false,\n    vornameAnmelder: false,\n    firmaAnmelder: false,\n    strasseAnmelder: false,\n    plzAnmelder: false,\n    ortAnmelder: false,\n    staatAnmelder: false,\n    telefonAnmelder: false,\n    emailAnmelder: false,\n    // Lieferdaten\n    ausfuhrland: false,\n    bestimmungsland: false,\n    bestimmungsbundesland: false,\n    befoerderungsmittel: false,\n    lieferbedingung: false,\n    lieferort: false,\n    warenort: false,\n    lieferkosten: false,\n    //Rechnungsdaten\n    datumRechnung: false,\n    gesamtbetrag: false,\n    waehrung: false,\n  });\n\n  // Legacy State über falsche Inputs (müssen Zahlen sein)\n  // -> Keine manuelle Validierung mehr, sondern HTML5 Required-Validierung\n  const [inputWrongError, setInputWrongError] = React.useState({\n    auftragsnummer: false,\n    eoriVersender: false,\n    plzVersender: false,\n    eoriAnmelder: false,\n    plsAnmelder: false,\n    lieferkosten: false,\n  });\n\n  // Neue Validierung-States\n  const [allgemeineAngabenValidity, setAllgemeineAngabenValidity] =\n    useState(false);\n  const [lieferdatenValidity, setLieferdatenValidity] = useState(false);\n  const [rechnungsdatenValidity, setRechnungsdatenValidity] = useState(false);\n\n  // FieldChange für Select und String-Felder\n  function handleFieldChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    setFieldValue({ ...fieldValue, [name]: value });\n    setInputMissingError({ ...inputMissingError, [name]: false });\n  }\n\n  // FieldChange für Zahlen-Inputfelder\n  function handleNumberFieldChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    // Validierung: nur Zahlen\n    if (isNaN(value)) {\n      setInputWrongError({ ...inputWrongError, [name]: true });\n    } else {\n      setInputWrongError({ ...inputWrongError, [name]: false });\n    }\n\n    setFieldValue({ ...fieldValue, [name]: value });\n    setInputMissingError({ ...inputMissingError, [name]: false });\n  }\n\n  // Abfragen der Bestandsdaten\n\n  useEffect(async () => {\n    await axiosInstance.get(`transactions/` + transactionId).then((res) => {\n      setFieldValue((prev) => {\n        return {\n          ...prev,\n          auftragsnummer: res.data.id,\n          eoriVersender: res.data.partnership.partner.eori_nr,\n          //nameVersender: .partnership.partner.name,\n          firmaVersender: res.data.partnership.partner.name,\n          strasseVersender: res.data.partnership.partner.street,\n          plzVersender: res.data.partnership.partner.city_code,\n          ortVersender: res.data.partnership.partner.city,\n          staatVersender: res.data.partnership.partner.country_code,\n          telefonVersender: res.data.partnership.partner.phone,\n          emailVersender: res.data.partnership.partner.email,\n          exporteur_pubkey: res.data.partnership.partner.publickey,\n        };\n      });\n      setIsLoading(false);\n    });\n\n    //Abfrage der eigenen Nutzerdaten\n\n    await axiosInstance.get(`user/`).then((response) => {\n      setFieldValue((prev) => {\n        return {\n          ...prev,\n          eoriAnmelder: response.data[0].employee?.company.eori_nr,\n          //nameVersender: .partnership.partner.name,\n          firmaAnmelder: response.data[0].employee.company.name,\n          strasseAnmelder: response.data[0].employee.company.street,\n          plzAnmelder: response.data[0].employee.company.city_code,\n          ortAnmelder: response.data[0].employee.company.city,\n          staatAnmelder: response.data[0].employee.company.country_code,\n          telefonAnmelder: response.data[0].employee.company.phone,\n          emailAnmelder: response.data[0].employee.company.email,\n        };\n      });\n    });\n\n    //Abfrage der Rechnungen für Auswahl\n\n    await axiosInstance\n      .get(`invoice/?transaction=${transactionId}`)\n      .then((response) => {\n        setTransactionInvoices(response.data);\n      });\n\n    //Abfrage der Zollstationen\n    await axiosInstance.get(\"customoffices/\").then((res) => {\n      setCustomOffices(res.data);\n      //setCompanies(res.data);\n    });\n    //Abfrage der Documente\n    await axiosInstance\n      .get(\"documents/?transaction=\" + transactionId)\n      .then((res) => {\n        setDocuments(res.data);\n        //setCompanies(res.data);\n      });\n  }, [transactionId]);\n\n  //Abfrage der Rechnungsdaten\n  useEffect(async () => {\n    if (typeof usedInvoice !== \"undefined\") {\n      await axiosInstance.get(`invoice/${usedInvoice}/`).then((response) => {\n        setFieldValue((prev) => {\n          return {\n            ...prev,\n            waehrung: response.data?.currency,\n            datumRechnung: response.data?.issue_date,\n            gesamtbetrag: response.data?.total_value,\n            lieferkosten: response.data?.transport_costs,\n            gesamtbetrag: response.data?.total_value,\n            blockchainRID: response.data?.blockchain_id,\n            rechnungID: response.data?.id,\n          };\n        });\n        setRechnungsposten(response.data?.invoiceItem);\n      });\n    }\n  }, [usedInvoice]);\n\n  // Blockchain Transaktion\n  async function blockchainZollanmeldungTransaction(\n    _zoll,\n    _rechnungID,\n    _zollwert,\n    _incoterms\n  ) {\n    var erfolgreich = false;\n    await createZollanmeldung(_zoll, _rechnungID, _zollwert, _incoterms)\n      .then((tx) => {\n        console.log(tx);\n        erfolgreich = true;\n        axiosInstance\n          .post(\"/declaration/\", {\n            anmeldeArt: fieldValue.anmeldungArt,\n            geschaeftArt: fieldValue.geschaeftArt,\n            zahlungsart: fieldValue?.zahlungArt,\n            ausfuhrland: fieldValue.ausfuhrland,\n            bestimmungsland: fieldValue.bestimmungsland,\n            befoerderungsmittel: fieldValue.befoerderungsmittel,\n            lieferbedingung: fieldValue.lieferbedingung,\n            lieferort: fieldValue.lieferort,\n            warenort: fieldValue?.warenort,\n            invoice: usedInvoice,\n            transaction: transactionId,\n            customs_office: fieldValue.bearbeitendeDienststelle,\n            blockchain_zid: tx - 1,\n            document: usedDocuments,\n          })\n          .then((res) => {\n            // Backdrop Ladeanimation schließen\n            handleCloseBackdrop();\n            handleNavigate(true, \"Zollanmeldung angelegt und übermittelt.\");\n          })\n          .catch(function (error) {\n            if (error.response) {\n              // The request was made and the server responded with a status code\n              // that falls out of the range of 2xx\n              console.log(error.response.data);\n              console.log(error.response.status);\n              console.log(error.response.headers);\n              // Backdrop Ladeanimation schließen\n              handleCloseBackdrop();\n              handleNavigate(false, \"Fehler bei Erstellung der Zollanmeldung.\");\n            } else if (error.request) {\n              // The request was made but no response was received\n              // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n              // http.ClientRequest in node.js\n              console.log(error.request);\n              handleNavigate(false, \"Fehler bei Erstellung der Zollanmeldung.\");\n            } else {\n              // Something happened in setting up the request that triggered an Error\n              console.log(\"Error\", error.message);\n              handleNavigate(false, \"Fehler bei Erstellung der Zollanmeldung.\");\n            }\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    return erfolgreich;\n  }\n\n  // Navigation an DocumentsNew\n  //+ State: Informationen für Snackbar Alert\n\n  let navigate = useNavigate();\n\n  function handleNavigate(snackSuccess, snackMessage) {\n    let urladdress = \"/transactions/\" + fieldValue.auftragsnummer;\n    navigate(urladdress, {\n      replace: true,\n      state: { success: snackSuccess, message: snackMessage },\n    });\n  }\n\n  // -- Loading Backdrop --\n  const [openBackdrop, setOpenBackdrop] = React.useState(false);\n  const handleCloseBackdrop = () => {\n    setOpenBackdrop(false);\n  };\n  const handleToggleBackdrop = () => {\n    setOpenBackdrop(!openBackdrop);\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"loadingSpinner\">\n          <MDBSpinner>\n            <span className=\"visually-hidden\">Lädt..</span>\n          </MDBSpinner>\n        </div>\n      ) : (\n        <>\n          <h3>Zollanmeldung erstellen</h3>\n          <MDBBreadcrumb>\n            <MDBBreadcrumbItem>\n              <Link to=\"/transactions\">Aufträge</Link>\n            </MDBBreadcrumbItem>\n            <MDBBreadcrumbItem>\n              <Link to={\"/transactions/\" + transactionId}>\n                Auftrags-ID {transactionId}\n              </Link>\n            </MDBBreadcrumbItem>\n            <MDBBreadcrumbItem active>Formular Zollanmeldung</MDBBreadcrumbItem>\n          </MDBBreadcrumb>\n          <br />\n          <div>\n            <Box sx={{ width: \"100%\" }}>\n              <Stepper className=\"mb-3\" activeStep={activeStep}>\n                {steps.map((label, index) => {\n                  const stepProps = {};\n                  const labelProps = {};\n                  if (isStepOptional(index)) {\n                    labelProps.optional = (\n                      <Typography variant=\"caption\">Optional</Typography>\n                    );\n                  }\n                  if (isStepSkipped(index)) {\n                    stepProps.completed = false;\n                  }\n                  return (\n                    <Step key={label} {...stepProps}>\n                      <StepLabel {...labelProps}>{label}</StepLabel>\n                    </Step>\n                  );\n                })}\n              </Stepper>\n              {activeStep === steps.length ? (\n                <React.Fragment>\n                  <Typography sx={{ mt: 2, mb: 1 }}>\n                    All steps completed - you&apos;re finished\n                  </Typography>\n                  <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                    <Box sx={{ flex: \"1 1 auto\" }} />\n                    <Button onClick={handleReset}>Zurücksetzen</Button>\n                  </Box>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  {activeStep === 0 ? (\n                    <>\n                      <MDBContainer>\n                        <AllgemeineAngaben\n                          fieldValue={fieldValue}\n                          customOffices={customOffices}\n                          setPubkeyCO={setPubkeyCO}\n                          setFieldValue={setFieldValue}\n                          inputMissingError={inputMissingError}\n                          setInputMissingError={setInputMissingError}\n                          inputWrongError={inputWrongError}\n                          setInputWrongError={setInputWrongError}\n                          handleFieldChange={handleFieldChange}\n                          handleNumberFieldChange={handleNumberFieldChange}\n                          // Validierung State\n                          allgemeineAngabenValidity={allgemeineAngabenValidity}\n                          setAllgemeineAngabenValidity={\n                            setAllgemeineAngabenValidity\n                          }\n                          // Stepper Funktionen\n                          handleBack={handleBack}\n                          isStepOptional={isStepOptional}\n                          activeStep={activeStep}\n                          handleSkip={handleSkip}\n                          activeStep={activeStep}\n                          steps={steps}\n                          handleSubmit={handleSubmit}\n                          handleNext={handleNext}\n                        />\n                      </MDBContainer>\n                    </>\n                  ) : activeStep === 1 ? (\n                    <>\n                      <MDBContainer>\n                        <Adressdaten\n                          fieldValue={fieldValue}\n                          setFieldValue={setFieldValue}\n                          inputMissingError={inputMissingError}\n                          setInputMissingError={setInputMissingError}\n                          inputWrongError={inputWrongError}\n                          setInputWrongError={setInputWrongError}\n                          handleFieldChange={handleFieldChange}\n                          handleNumberFieldChange={handleNumberFieldChange}\n                          // Stepper Funktionen\n                          handleBack={handleBack}\n                          isStepOptional={isStepOptional}\n                          activeStep={activeStep}\n                          handleSkip={handleSkip}\n                          activeStep={activeStep}\n                          steps={steps}\n                          handleSubmit={handleSubmit}\n                          handleNext={handleNext}\n                        />\n                      </MDBContainer>\n                    </>\n                  ) : activeStep === 2 ? (\n                    <>\n                      <MDBContainer>\n                        <Lieferdaten\n                          fieldValue={fieldValue}\n                          setFieldValue={setFieldValue}\n                          inputMissingError={inputMissingError}\n                          setInputMissingError={setInputMissingError}\n                          inputWrongError={inputWrongError}\n                          setInputWrongError={setInputWrongError}\n                          handleFieldChange={handleFieldChange}\n                          handleNumberFieldChange={handleNumberFieldChange}\n                          // Validierung State\n                          lieferdatenValidity={lieferdatenValidity}\n                          setLieferdatenValidity={setLieferdatenValidity}\n                          // Stepper Funktionen\n                          handleBack={handleBack}\n                          isStepOptional={isStepOptional}\n                          activeStep={activeStep}\n                          handleSkip={handleSkip}\n                          activeStep={activeStep}\n                          steps={steps}\n                          handleSubmit={handleSubmit}\n                          handleNext={handleNext}\n                        />\n                      </MDBContainer>\n                    </>\n                  ) : activeStep === 3 ? (\n                    <>\n                      <MDBContainer>\n                        <Rechnungsdaten\n                          fieldValue={fieldValue}\n                          setFieldValue={setFieldValue}\n                          inputMissingError={inputMissingError}\n                          setInputMissingError={setInputMissingError}\n                          inputWrongError={inputWrongError}\n                          setInputWrongError={setInputWrongError}\n                          handleFieldChange={handleFieldChange}\n                          handleNumberFieldChange={handleNumberFieldChange}\n                          rechnungsposten={rechnungsposten}\n                          setRechnungsposten={setRechnungsposten}\n                          transactionInvoices={transactionInvoices}\n                          usedInvoice={usedInvoice}\n                          setUsedInvoice={setUsedInvoice}\n                          // Validierung State\n                          rechnungsdatenValidity={rechnungsdatenValidity}\n                          setRechnungsdatenValidity={setRechnungsdatenValidity}\n                          // Stepper Funktionen\n                          handleBack={handleBack}\n                          isStepOptional={isStepOptional}\n                          activeStep={activeStep}\n                          handleSkip={handleSkip}\n                          activeStep={activeStep}\n                          steps={steps}\n                          handleSubmit={handleSubmit}\n                          handleNext={handleNext}\n                        />\n                      </MDBContainer>\n                    </>\n                  ) : (\n                    <>\n                      <MDBContainer>\n                        <AnmeldungDokumente\n                          usedDocuments={usedDocuments}\n                          documents={documents}\n                          // Stepper Funktionen\n                          handleBack={handleBack}\n                          isStepOptional={isStepOptional}\n                          activeStep={activeStep}\n                          handleSkip={handleSkip}\n                          activeStep={activeStep}\n                          steps={steps}\n                          handleSubmit={handleSubmit}\n                          handleNext={handleNext}\n                        />\n                      </MDBContainer>\n                    </>\n                  )}\n                </React.Fragment>\n              )}\n            </Box>\n          </div>\n          <Backdrop\n            sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n            open={openBackdrop}\n            onClick={handleCloseBackdrop}\n          >\n            <CircularProgress color=\"inherit\" />\n          </Backdrop>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default Declaration;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBBtn,\n  MDBCol,\n  MDBBadge,\n} from \"mdb-react-ui-kit\";\nimport { TextField } from \"@mui/material\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport Partner from \"../components/Partners/Partner\";\nimport Transaction from \"../components/Transactions/Transaction\";\nimport { Divider } from \"@mui/material\";\nimport { useSearchParams } from \"react-router-dom\";\n\nfunction Search(props) {\n  const axiosInstance = useAxiosPrivate();\n\n  const [query, setQuery] = useState(\"\");\n\n  const [resultsTransaction, setResultsTransactions] = useState([]);\n\n  const [resultsPartnerships, setResultsPartnerships] = useState([]);\n  const [documentsData, setDocumentsData] = useState([]);\n  const [declarationData, setDeclarationData] = useState([]);\n\n  const [activeSearch, setActiveSearch] = useState(false);\n\n  const { search } = window.location;\n  let [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    setQuery(suchbegriff);\n  }, []);\n\n  let suchbegriff = searchParams.get(\"\");\n\n  useEffect(async () => {\n    if (suchbegriff) {\n      let queryFix = suchbegriff;\n      setQuery(suchbegriff);\n      handleSearch(queryFix);\n    }\n  }, [suchbegriff]);\n\n  //Bisher Suche nur nach Transaktionen\n  function handleSearch(queryset) {\n    axiosInstance.get(\"transactions/?search=\" + queryset).then((res) => {\n      console.log(res);\n      setResultsTransactions(res.data);\n    });\n    axiosInstance.get(\"partnership/?search=\" + queryset).then((res) => {\n      console.log(res);\n      setResultsPartnerships(res.data);\n    });\n    console.log(\"hier steht eine suche mit dem suchwort\" + queryset);\n    // Dokumente abrufen\n\n    axiosInstance.get(\"documents/\").then((res) => {\n      setDocumentsData(res.data);\n    });\n    // Zollanmeldungen abrufen\n\n    axiosInstance.get(\"declaration/\").then((res) => {\n      setDeclarationData(res.data);\n      console.log(res.data);\n    });\n\n    setActiveSearch(true);\n  }\n\n  return (\n    <div>\n      <MDBContainer>\n        <MDBRow>\n          <h3>Suche</h3>\n        </MDBRow>\n        <MDBRow>\n          <MDBCol>\n            <TextField\n              className=\"my-3\"\n              sx={{ width: 550 }}\n              id=\"suchbegriff\"\n              name=\"suchbegriff\"\n              label=\"Suchbegriff\"\n              variant=\"outlined\"\n              value={query}\n              onChange={(event) => {\n                setActiveSearch(false);\n                setQuery(event.target.value);\n              }}\n            />\n          </MDBCol>\n          <MDBCol>\n            <MDBBtn\n              className=\"mt-4 float-start\"\n              onClick={() => handleSearch(query)}\n            >\n              {\" \"}\n              Abschicken\n            </MDBBtn>\n          </MDBCol>\n        </MDBRow>\n\n        {activeSearch && (\n          <>\n            <MDBRow>\n              <h5 className=\"mt-3\">\n                Suche nach Aufträgen/Partnern, die folgenden Begriff enthalten:{\" \"}\n                <i>{query}</i>\n              </h5>\n            </MDBRow>\n            <Divider textAlign=\"left\" className=\"mt-5 mb-4\">\n              <h5>Überblick über die Ergebnisse</h5>\n            </Divider>\n            <MDBBadge pill className=\"ms-3\">\n              {resultsPartnerships.length}\n            </MDBBadge>\n            <b> Partnerschaften</b>\n            <MDBBadge pill className=\"ms-3\">\n              {resultsTransaction.length}\n            </MDBBadge>\n            <b> Aufträge</b>\n            <Divider textAlign=\"left\" className=\"mt-5 mb-4\">\n              <h5>Ergebnisse für Aufträge</h5>\n            </Divider>\n            <MDBRow>\n              {resultsTransaction.map((transactionData) => (\n                <React.Fragment>\n                  <Transaction\n                    key={transactionData.id}\n                    id={transactionData.id}\n                    title={transactionData.description}\n                    added={transactionData.date_added}\n                    exportAddress={transactionData.partnership.partner.name}\n                    exportStreet={transactionData.partnership.partner.street}\n                    exportCity={transactionData.partnership.partner.city}\n                    exportCountry={\n                      transactionData.partnership.partner.country_code\n                    }\n                    importAddress={transactionData.importAddress}\n                    importStreet={transactionData.importStreet}\n                    importCity={transactionData.importCity}\n                    importCountry={transactionData.importCountry}\n                    stakeholderCount={transactionData.stakeholderCount}\n                    lastChange={transactionData.date_processed}\n                    status={transactionData.status}\n                    timestamp_added={transactionData.timestamp_added}\n                    timestamp_processed={transactionData.timestamp_processed}\n                    documentsData={documentsData}\n                    declarationData={declarationData}\n                  />\n                  <br />\n                </React.Fragment>\n              ))}\n              <Divider textAlign=\"left\" className=\"mt-5 mb-4\">\n                <h5>Ergebnisse für Partnerschaften</h5>\n              </Divider>\n              {resultsPartnerships.map((partner) => (\n                <React.Fragment>\n                  <Partner\n                    key={partner.partner.eori_nr}\n                    id={partner.partner.eori_nr}\n                    id_relation={partner.id}\n                    title={partner.partner.name}\n                    added={partner.date_added}\n                    addressStreet={partner.partner.street}\n                    addressCity={partner.partner.city}\n                    addressCountry={partner.partner.country_code}\n                    email={partner.partner.email}\n                    phone={partner.partner.phone}\n                    eori={partner.partner.eori_nr}\n                  />\n                  <br />\n                </React.Fragment>\n              ))}\n              ;\n            </MDBRow>\n          </>\n        )}\n      </MDBContainer>\n    </div>\n  );\n}\n\nexport default Search;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  MDBCard,\n  MDBCardBody,\n  MDBCardText,\n  MDBCardHeader,\n  MDBRow,\n  MDBCol,\n  MDBBreadcrumb,\n  MDBBreadcrumbItem,\n} from \"mdb-react-ui-kit\";\nimport { Link } from \"react-router-dom\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function PreviewInvoice(props) {\n  const [isZoll, setIsZoll] = useState(false);\n  const { auth } = useAuth();\n  const { transactionId, declarationID } = useParams();\n\n  useEffect(() => {\n    if (auth.role == \"custom_officer\") {\n      setIsZoll(true);\n    }\n  }, [auth.role]);\n  // Auftrag Metadaten\n  const [auftragMetadaten, setAuftragMetadaten] = React.useState({\n    documentId: props.invoiceData.id,\n    transactionId: props.invoiceData.transaction,\n    documentType: \"Rechnung\",\n    dateAdded: props.transactionData.upload_date,\n    description: props.invoiceData.description,\n  });\n\n  // State des Inhalts der Felder\n  const [fieldValue, setFieldValue] = React.useState({\n    //Rechnungsdaten\n    datumRechnung: props.invoiceData.issue_date,\n    gesamtbetrag: props.invoiceData.total_value,\n    waehrung: props.invoiceData.currency,\n    lieferkosten: props.invoiceData.transport_costs,\n    beschreibung: props.invoiceData.description,\n  });\n  //Durch dieses Array von Objekten mappen\n  const Rechnungsposten = props.invoiceData.invoiceItem;\n\n  return (\n    <>\n      <h3>Dokument: Rechnung</h3>\n      {isZoll ? (\n        <MDBBreadcrumb>\n          <MDBBreadcrumbItem>\n            <Link to=\"/zoll/declarations/\">Zollanmeldungen</Link>\n          </MDBBreadcrumbItem>\n          <MDBBreadcrumbItem>\n            <Link to={\"/zoll/declarations/\" + declarationID}>\n              Zollanmeldungs-ID {declarationID}\n            </Link>\n          </MDBBreadcrumbItem>\n          <MDBBreadcrumbItem active>\n            Dokumenten-ID {auftragMetadaten.documentId}\n          </MDBBreadcrumbItem>\n        </MDBBreadcrumb>\n      ) : (\n        <MDBBreadcrumb>\n          <MDBBreadcrumbItem>\n            <Link to=\"/transactions\">Aufträge</Link>\n          </MDBBreadcrumbItem>\n          <MDBBreadcrumbItem>\n            <Link to={\"/transactions/\" + auftragMetadaten.transactionId}>\n              Auftrags-ID {auftragMetadaten.transactionId}\n            </Link>\n          </MDBBreadcrumbItem>\n          <MDBBreadcrumbItem active>\n            Dokumenten-ID {auftragMetadaten.documentId}\n          </MDBBreadcrumbItem>\n        </MDBBreadcrumb>\n      )}\n      <MDBCard style={{ minHeight: 600 }}>\n        <MDBCardHeader>\n          <h5>Rechnung für Auftrags-ID {auftragMetadaten.transactionId}</h5>\n        </MDBCardHeader>\n        <MDBCardBody>\n          <MDBRow>\n            <MDBCol className=\"col-md-8\">\n              <MDBCardText>\n                <p>\n                  <b>Rechnungsdatum: </b>\n                  {fieldValue.datumRechnung}\n                </p>\n                <p>\n                  <b>Gesamtbetrag: </b>\n                  {fieldValue.gesamtbetrag} {fieldValue.waehrung}\n                </p>\n                <p>\n                  <b>Lieferkosten: </b>\n                  {fieldValue.lieferkosten} {fieldValue.waehrung}\n                </p>\n\n                {Rechnungsposten.map((posten) => (\n                  <>\n                    <hr className=\"my-4\" />\n                    <h6>\n                      <u>Rechnungsposten 1</u>\n                    </h6>\n                    <p>\n                      <b>Produkt: </b>\n                      {posten.product}\n                    </p>\n                    <p>\n                      <b>Anzahl: </b>\n                      {posten.amount}\n                    </p>\n                    <p>\n                      <b>Einheit: </b>\n                      {posten.unit}\n                    </p>\n                    <p>\n                      <b>Preis pro Einheit: </b>\n                      {posten.price.toFixed(2)} {fieldValue.waehrung}\n                    </p>\n                  </>\n                ))}\n              </MDBCardText>\n            </MDBCol>\n            <MDBCol\n              className=\"col-md-4\"\n              style={{ border: \"3px solid #cccccc\", height: 500 }}\n            >\n              <p className=\"mt-4 ms-3\">\n                <b>Auftrags-ID: </b>\n                {auftragMetadaten.transactionId}\n              </p>\n              <p className=\"ms-3\">\n                <b>Dokumenten-ID: </b>\n                {auftragMetadaten.documentId}\n              </p>\n              <p className=\"ms-3\">\n                <b>Dokumententyp: </b>\n                {auftragMetadaten.documentType}\n              </p>\n              <p className=\"ms-3\">\n                <b>Hochgeladen am: </b>\n                {auftragMetadaten.dateAdded}\n              </p>\n              <p className=\"ms-3\">\n                <b>Hochgeladen von: </b>\n                {auftragMetadaten.author}\n              </p>\n              <p className=\"ms-3 mb-5\">\n                <b>Beschreibung: </b>\n                {auftragMetadaten.description == \"\" ? (\n                  <i>Es liegt keine Beschreibung vor.</i>\n                ) : (\n                  auftragMetadaten.description\n                )}\n              </p>\n            </MDBCol>\n          </MDBRow>\n        </MDBCardBody>\n      </MDBCard>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  MDBCard,\n  MDBCardBody,\n  MDBCardHeader,\n  MDBBtn,\n  MDBRow,\n  MDBCol,\n  MDBIcon,\n  MDBBreadcrumb,\n  MDBBreadcrumbItem,\n} from \"mdb-react-ui-kit\";\nimport { Link } from \"react-router-dom\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { useParams } from \"react-router-dom\";\n\n// PDF-Reader\nimport { Document, Page } from \"react-pdf\";\nimport { pdfjs } from \"react-pdf\";\npdfjs.GlobalWorkerOptions.workerSrc = `//unpkg.com/pdfjs-dist@${pdfjs.version}/legacy/build/pdf.worker.min.js`;\n\nconst url =\n  \"https://cors-anywhere.herokuapp.com/http://www.pdf995.com/samples/pdf.pdf\";\n\nexport default function PreviewOther(props) {\n  // -- DATENFELDER --\n\n  // Auftrag Metadaten\n  const [documentMetadata, setDocumentMetadata] = React.useState({\n    documentId: props.documentData.id,\n    transactionId: props.documentData.transaction,\n    documentType: props.documentData.type,\n    dateAdded: props.documentData.upload_date,\n    description: props.documentData.description,\n  });\n\n  const [isZoll, setIsZoll] = useState(false);\n  const { auth } = useAuth();\n  const { transactionId, declarationID } = useParams();\n\n  //Prüfen ob Betrachter Zoll ist\n  useEffect(() => {\n    if (auth.role == \"custom_officer\") {\n      setIsZoll(true);\n    }\n  }, [auth.role]);\n\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n  }\n\n  function changePage(offSet) {\n    setPageNumber((prevPageNumber) => prevPageNumber + offSet);\n  }\n\n  function changePageBack() {\n    changePage(-1);\n  }\n\n  function changePageNext() {\n    changePage(+1);\n  }\n\n  return (\n    <>\n      <h3>Dokument: Sonstige</h3>\n      {isZoll ? (\n        <MDBBreadcrumb>\n          <MDBBreadcrumbItem>\n            <Link to=\"/zoll/declarations/\">Zollanmeldungen</Link>\n          </MDBBreadcrumbItem>\n          <MDBBreadcrumbItem>\n            <Link to={\"/zoll/declarations/\" + declarationID}>\n              Zollanmeldungs-ID {declarationID}\n            </Link>\n          </MDBBreadcrumbItem>\n          <MDBBreadcrumbItem active>\n            Dokumenten-ID {documentMetadata.documentId}\n          </MDBBreadcrumbItem>\n        </MDBBreadcrumb>\n      ) : (\n        <MDBBreadcrumb>\n          <MDBBreadcrumbItem>\n            <Link to=\"/transactions\">Aufträge</Link>\n          </MDBBreadcrumbItem>\n          <MDBBreadcrumbItem>\n            <Link to={\"/transactions/\" + documentMetadata.transactionId}>\n              Auftrags-ID {documentMetadata.transactionId}\n            </Link>\n          </MDBBreadcrumbItem>\n          <MDBBreadcrumbItem active>\n            Dokumenten-ID {documentMetadata.documentId}\n          </MDBBreadcrumbItem>\n        </MDBBreadcrumb>\n      )}\n      <MDBCard style={{ minHeight: \"1000px\" }}>\n        <MDBCardHeader>\n          <h5>\n            {documentMetadata.documentType} für Auftrags-ID{\" \"}\n            {documentMetadata.transactionId}\n          </h5>\n        </MDBCardHeader>\n        <MDBCardBody>\n          <MDBRow>\n            <MDBCol className=\"col-md-8\">\n              <div\n                className=\"d-flex justify-content-center\"\n                style={{ minHeight: \"800px\" }}\n              >\n                <Document\n                  // PDF muss Objekt sein\n                  file={{\n                    url: props.fileLink,\n                  }}\n                  onLoadSuccess={onDocumentLoadSuccess}\n                >\n                  <Page pageNumber={pageNumber} />\n                </Document>\n              </div>\n              <div className=\"d-flex justify-content-center\">\n                <p>\n                  Seite {pageNumber} von {numPages}\n                </p>\n              </div>\n              {pageNumber > 1 ? (\n                <MDBBtn\n                  outline\n                  className=\"float-start me-3\"\n                  onClick={changePageBack}\n                >\n                  <MDBIcon className=\"me-1\" size=\"lg\" fas icon=\"chevron-left\" />\n                  Letzte Seite\n                </MDBBtn>\n              ) : (\n                <MDBBtn\n                  outline\n                  className=\"float-start me-3\"\n                  disabled\n                  onClick={changePageBack}\n                >\n                  <MDBIcon className=\"me-1\" size=\"lg\" fas icon=\"chevron-left\" />\n                  Letzte Seite\n                </MDBBtn>\n              )}\n              {pageNumber < numPages ? (\n                <MDBBtn outline className=\"float-end\" onClick={changePageNext}>\n                  Nächste Seite\n                  <MDBIcon\n                    className=\"ms-1\"\n                    size=\"lg\"\n                    fas\n                    icon=\"chevron-right\"\n                  />\n                </MDBBtn>\n              ) : (\n                <MDBBtn\n                  outline\n                  className=\"float-end\"\n                  disabled\n                  onClick={changePageNext}\n                >\n                  Nächste Seite\n                  <MDBIcon\n                    className=\"ms-1\"\n                    size=\"lg\"\n                    fas\n                    icon=\"chevron-right\"\n                  />\n                </MDBBtn>\n              )}\n            </MDBCol>\n            <MDBCol\n              className=\"col-md-4\"\n              style={{ border: \"3px solid #cccccc\", height: 500 }}\n            >\n              <p className=\"mt-4 ms-3\">\n                <b>Auftrags-ID: </b>\n                {documentMetadata.transactionId}\n              </p>\n              <p className=\"ms-3\">\n                <b>Dokumenten-ID: </b>\n                {documentMetadata.documentId}\n              </p>\n              <p className=\"ms-3\">\n                <b>Dokumententyp: </b>\n                {documentMetadata.documentType}\n              </p>\n              <p className=\"ms-3\">\n                <b>Hochgeladen am: </b>\n                {documentMetadata.dateAdded}\n              </p>\n\n              <p className=\"ms-3 mb-5\">\n                <b>Beschreibung: </b>\n                {documentMetadata.description == \"\" ? (\n                  <i>Es liegt keine Beschreibung vor.</i>\n                ) : (\n                  documentMetadata.description\n                )}\n              </p>\n\n              <MDBBtn download href={props.fileLink} className=\"ms-3 mt-2\">\n                <MDBIcon fas icon=\"download\" size=\"lg\" className=\"me-1\" />\n                Download\n              </MDBBtn>\n            </MDBCol>\n          </MDBRow>\n        </MDBCardBody>\n      </MDBCard>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport PreviewInvoice from \"../components/Documents/PreviewInvoice\";\nimport PreviewOther from \"../components/Documents/PreviewOther\";\nimport { MDBSpinner } from \"mdb-react-ui-kit\";\nimport \"./css/LoadingSpinner.css\";\n\nfunction DocumentDetail() {\n  //URL Parameter abfragen\n  const { documentID } = useParams();\n  const axiosInstance = useAxiosPrivate();\n  const [documentData, setDocumentData] = useState();\n  const [invoiceData, setInvoiceData] = useState();\n  const [transactionData, setTransactionData] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const [fileLink, setFileLink] = useState();\n\n  const [isInvoice, setIsInvoice] = useState(false);\n\n  useEffect(() => {\n    axiosInstance.get(`/documents/${documentID}/`).then((res) => {\n      setDocumentData(res.data);\n      axiosInstance\n        .get(`/transactions/${res.data.transaction}/`)\n        .then((resT) => {\n          setTransactionData(resT.data);\n          if (res.data.type == \"Rechnung\") {\n            axiosInstance.get(`/invoice/${documentID}/`).then((res) => {\n              setInvoiceData(res.data);\n              if (res.data.type == \"Rechnung\") {\n                setIsInvoice(true);\n                setIsLoading(false);\n              }\n            });\n          } else {\n            axiosInstance.get(`/file/${res.data.file}/`).then((resF) => {\n              setFileLink(resF.data.file);\n              setIsLoading(false);\n            });\n          }\n        });\n    });\n  }, []);\n\n  useEffect(() => {}, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"loadingSpinner\">\n          <MDBSpinner>\n            <span className=\"visually-hidden\">Lädt..</span>\n          </MDBSpinner>\n        </div>\n      ) : isInvoice ? (\n        <PreviewInvoice\n          invoiceData={invoiceData}\n          transactionData={transactionData}\n        ></PreviewInvoice>\n      ) : (\n        <PreviewOther\n          documentData={documentData}\n          transactionData={transactionData}\n          fileLink={fileLink}\n        ></PreviewOther>\n      )}\n    </>\n  );\n}\n\nexport default DocumentDetail;\n","import React from \"react\";\nimport \"./css/NotFound.css\";\n\nimport useAuth from \"../hooks/useAuth\";\n\nfunction Unauthorized() {\n  //Debugging\n  const { auth } = useAuth();\n\n  return (\n    <div class=\"text-middle\">\n      <h1>Keine Berechtigung</h1>\n      <h3>\n        Dieser Bereich ist für den aktuell angemeldeten Nutzertyp \"{auth.role}\"\n        nicht verfügbar\n      </h3>\n    </div>\n  );\n}\n\nexport default Unauthorized;\n","import React, { useState, useEffect } from \"react\";\nimport axiosInstance from \"../axiosApi\";\nimport useAuth from \"../hooks/useAuth\";\nimport {\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBTabs,\n  MDBTabsItem,\n  MDBTabsLink,\n  MDBTabsContent,\n  MDBTabsPane,\n} from \"mdb-react-ui-kit\";\n\nimport \"./css/NotFound.css\";\nimport UniLogo from \"../Uni_Logo.png\";\nimport Lucid from \"../LUCID.jpg\";\n\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nconst LOGIN_URL = \"/api/token/\";\n\nexport default function Login() {\n  // -- Login --\n  const { setAuth } = useAuth();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from?.pathname || \"/\";\n\n  const [user, setUser] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [sucess, setSucess] = useState(false);\n\n  // --- Komponenten für Registrierung --//\n\n  const [eori_nr, setEoriNr] = useState(\"\");\n  const [street, setStreet] = useState(\"\");\n  const [city_code, setZipCode] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  const [country_code, setCountry] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [publickey, setPubkey] = useState(\"\");\n\n  useEffect(() => {\n    setErrMsg(\"\");\n  }, [user, pwd]);\n\n  // Login\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await axiosInstance.post(\n        LOGIN_URL,\n        JSON.stringify({ username: user, password: pwd }),\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      );\n\n      const accessToken = response?.data?.access;\n      const roles = response?.data?.roles;\n      const company = response?.data?.company;\n\n      //Speichern der Daten für künftige Anfragen\n\n      localStorage.setItem(\"access_token\", accessToken);\n      localStorage.setItem(\"refresh_token\", response?.data?.refresh);\n      //speichern von Nutzernamen und Firma im lokalen Speicher\n      localStorage.setItem(\"username\", response?.data?.user);\n      localStorage.setItem(\"company\", company);\n      setAuth({ user, pwd, roles, company, accessToken });\n      setUser(\"\");\n      setPwd(\"\");\n      setSucess(true);\n      navigate(\"/\", { replace: true });\n      //navigate(from, { replace: true });\n    } catch (err) {\n      if (!err?.response) {\n        setErrMsg(\"Der Server antwortet nicht\");\n      } else if (err.response?.status === 400) {\n        setErrMsg(\"Bitte alle Felder befüllen\");\n      } else if (err.response?.status === 401) {\n        setErrMsg(\"Falsche Login-Daten\");\n      } else {\n        setErrMsg(\"Allgemeiner Fehler\");\n      }\n    }\n  };\n\n  //Funktion zum registrieren eines Mitarbeiters\n\n  const registerEmployee = (e) => {\n    // Check Formular Validierung\n    var forms = document.getElementById(\"registerEmployeeForm\");\n    if (forms.checkValidity() == false) {\n      console.log(\"Formular Eingabe inkorrekt.\");\n      return;\n    }\n\n    e.preventDefault();\n    try {\n      const response = axiosInstance.post(\"/registration/\", {\n        username: username,\n        password: password,\n        password2: password,\n        company_id: eori_nr,\n      });\n      setRegisterEmployeeCorrect(true);\n    } catch (err) {\n      console.log(err);\n      if (!err?.response) {\n        setErrMsg(\"Der Server antwortet nicht\");\n      } else if (err.response?.status === 400) {\n        setErrMsg(\"Bitte alle Felder befüllen\");\n      } else if (err.response?.status === 401) {\n        setErrMsg(\"Sie sind nicht berechtigt\");\n      } else {\n        setErrMsg(\"Allgemeiner Fehler\");\n      }\n    }\n  };\n\n  // Registrierung eines Unternehmens\n\n  function registerCompany(e) {\n    // Check Formular Validierung\n    var forms = document.getElementById(\"registerForm\");\n    if (forms.checkValidity() == false) {\n      console.log(\"Formular Eingabe inkorrekt.\");\n      return;\n    }\n\n    e.preventDefault();\n    const newCompany = {\n      eori_nr,\n      street,\n      city_code,\n      city,\n      email,\n      name,\n      country_code,\n      phone,\n      publickey,\n    };\n\n    //firma hinzufügen\n    axiosInstance\n      .post(\"/companies/\", newCompany)\n      .then((res) => {\n        console.log(res.data);\n        setRegisterCorrect(true);\n      })\n      .catch((error) => {\n        setErrMsg(error.message);\n        //this.setState({ errorMessage: error.message });\n        console.error(\"There was an error!\", error);\n      })\n      .then(registerEmployee(e));\n    //firma als partner hinterlegen\n  }\n\n  // Validierung\n  const [registerCorrect, setRegisterCorrect] = useState(false);\n  const [registerEmployeeCorrect, setRegisterEmployeeCorrect] = useState(false);\n\n  // -- Tab-Steuerung --\n  // State über aktiven Tab\n  const [fillActive, setFillActive] = useState(\"login\");\n\n  // Funktion zum wechseln des Tabs\n  function handleFillClick(value) {\n    if (value === fillActive) {\n      return;\n    }\n\n    setFillActive(value);\n  }\n\n  return (\n    <>\n      <div style={{ width: \"26rem\" }} className=\"text-middle\">\n        <img src={Lucid} style={{ width: \"6rem\" }} className=\"mb-5\" />\n        <img src={UniLogo} style={{ width: \"26rem\" }} className=\"mb-5\" />\n        {sucess ? (\n          <section>\n            <h1> Du bist eingeloggt</h1>\n            <br />\n            <p>\n              <a href=\"#\">Zur Startseite</a>\n            </p>\n          </section>\n        ) : (\n          <section>\n            <MDBTabs pills justify className=\"mb-3\">\n              <MDBTabsItem>\n                <MDBTabsLink\n                  onClick={() => handleFillClick(\"login\")}\n                  active={fillActive === \"login\"}\n                >\n                  Login\n                </MDBTabsLink>\n              </MDBTabsItem>\n              <MDBTabsItem>\n                <MDBTabsLink\n                  onClick={() => handleFillClick(\"register_company\")}\n                  active={\n                    fillActive === \"register_employee\" ||\n                    fillActive === \"register_company\"\n                  }\n                >\n                  Registrieren\n                </MDBTabsLink>\n              </MDBTabsItem>\n            </MDBTabs>\n\n            <MDBTabsContent>\n              <MDBTabsPane show={fillActive === \"login\"}>\n                <form onSubmit={handleLogin}>\n                  <br />\n                  <MDBInput\n                    className=\"mb-4\"\n                    type=\"username\"\n                    id=\"username\"\n                    name=\"username\"\n                    label=\"Nutzername\"\n                    onChange={(e) => setUser(e.target.value)}\n                  />\n                  <MDBInput\n                    className=\"mb-4\"\n                    type=\"password\"\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"Passwort\"\n                    onChange={(e) => setPwd(e.target.value)}\n                  />\n\n                  <br />\n\n                  <MDBBtn type=\"submit\" className=\"mb-4\" block>\n                    Einloggen\n                  </MDBBtn>\n\n                  <div className=\"text-center\">\n                    <p>\n                      Noch nicht Mitglied?{\" \"}\n                      <a\n                        href=\"javascript:;\"\n                        onClick={() => handleFillClick(\"register_company\")}\n                      >\n                        Registrieren\n                      </a>\n                    </p>\n                  </div>\n                </form>\n                <p\n                  className={errMsg ? \"errmsg alert alert-danger\" : \"offscreen\"}\n                  aria-live=\"assertive\"\n                >\n                  {errMsg}\n                </p>\n              </MDBTabsPane>\n              <MDBTabsPane show={fillActive === \"register_company\"}>\n                <form id=\"registerForm\" onSubmit={(e) => e.preventDefault()}>\n                  <MDBInput\n                    className=\"mb-4\"\n                    id=\"name_firma\"\n                    label=\"Name des Unternehmens\"\n                    type=\"text\"\n                    required\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                  <MDBInput\n                    className=\"mb-4\"\n                    id=\"eori\"\n                    type=\"number\"\n                    label=\"EORI-Nr.\"\n                    required\n                    onChange={(e) => setEoriNr(e.target.value)}\n                  />\n                  <MDBInput\n                    className=\"mb-4\"\n                    id=\"strasse\"\n                    label=\"Straße u. Nr.\"\n                    type=\"text\"\n                    required\n                    onChange={(e) => setStreet(e.target.value)}\n                  />\n                  <MDBRow>\n                    <MDBCol className=\"col-4\">\n                      <MDBInput\n                        className=\"mb-4\"\n                        type=\"number\"\n                        id=\"plz\"\n                        label=\"PLZ\"\n                        required\n                        onChange={(e) => setZipCode(e.target.value)}\n                      />\n                    </MDBCol>\n                    <MDBCol>\n                      <MDBInput\n                        className=\"mb-4\"\n                        id=\"stadt\"\n                        label=\"Stadt\"\n                        type=\"text\"\n                        required\n                        onChange={(e) => setCity(e.target.value)}\n                      />\n                    </MDBCol>\n                  </MDBRow>\n                  <MDBInput\n                    className=\"mb-5\"\n                    id=\"land\"\n                    label=\"Land\"\n                    type=\"text\"\n                    required\n                    onChange={(e) => setCountry(e.target.value)}\n                  />\n                  <MDBInput\n                    className=\"mb-4\"\n                    autocomplete=\"off\"\n                    id=\"email\"\n                    label=\"E-Mail Adresse\"\n                    type=\"email\"\n                    required\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                  <MDBInput\n                    className=\"mb-5\"\n                    id=\"telefon\"\n                    label=\"Telefonnr.\"\n                    type=\"text\"\n                    required\n                    onChange={(e) => setPhone(e.target.value)}\n                  />\n                  <MDBInput\n                    className=\"mb-5\"\n                    id=\"publickey\"\n                    label=\"Blockchain Publickey\"\n                    type=\"number\"\n                    required\n                    onChange={(e) => setPubkey(e.target.value)}\n                  />\n\n                  <hr className=\"mb-5\" />\n                  <MDBInput\n                    className=\"mb-4\"\n                    id=\"mitarbeiter\"\n                    label=\"Name des Mitarbeiters\"\n                    type=\"text\"\n                    required\n                    onChange={(e) => setUsername(e.target.value)}\n                  />\n                  <MDBInput\n                    className=\"mb-4\"\n                    id=\"passwort\"\n                    type=\"password\"\n                    label=\"Passwort\"\n                    required\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                  <MDBBtn\n                    type=\"submit\"\n                    onClick={registerCompany}\n                    className=\"mb-4\"\n                    block\n                  >\n                    Registrieren\n                  </MDBBtn>\n                  {registerCorrect && (\n                    <p\n                      className=\"errmsg alert alert-success\"\n                      aria-live=\"assertive\"\n                    >\n                      Registrierung erfolgreich. Sie können sich jetzt\n                      einloggen.\n                    </p>\n                  )}\n\n                  <div className=\"text-center\">\n                    <p>\n                      Unternehmen ist bereits im System?{\" \"}\n                      <a\n                        href=\"javascript:;\"\n                        onClick={() => handleFillClick(\"register_employee\")}\n                      >\n                        <br />\n                        Mitarbeiter registrieren\n                      </a>\n                    </p>\n                  </div>\n                </form>\n              </MDBTabsPane>\n              <MDBTabsPane show={fillActive === \"register_employee\"}>\n                <form\n                  id=\"registerEmployeeForm\"\n                  onSubmit={(e) => e.preventDefault()}\n                >\n                  <MDBInput\n                    className=\"mb-4\"\n                    id=\"eori\"\n                    type=\"number\"\n                    label=\"EORI-Nr. des Unternehmens\"\n                    required\n                    onChange={(e) => setEoriNr(e.target.value)}\n                  />\n                  <MDBInput\n                    className=\"mb-5\"\n                    id=\"name_firma\"\n                    label=\"Name des Mitarbeiters\"\n                    type=\"text\"\n                    required\n                    onChange={(e) => setUsername(e.target.value)}\n                  />\n\n                  <MDBInput\n                    className=\"mb-4\"\n                    id=\"passwort\"\n                    type=\"password\"\n                    label=\"Passwort\"\n                    required\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                  <MDBBtn\n                    type=\"submit\"\n                    onClick={registerEmployee}\n                    className=\"mb-4\"\n                    block\n                  >\n                    Registrieren\n                  </MDBBtn>\n                  {registerEmployeeCorrect && (\n                    <p\n                      className=\"errmsg alert alert-success\"\n                      aria-live=\"assertive\"\n                    >\n                      Registrierung erfolgreich. Sie können sich jetzt\n                      einloggen.\n                    </p>\n                  )}\n                  <div className=\"text-center\">\n                    <p>\n                      Unternehmen ist noch nicht im System?{\" \"}\n                      <a\n                        href=\"javascript:;\"\n                        onClick={() => handleFillClick(\"register_company\")}\n                      >\n                        <br />\n                        Unternehmen registrieren\n                      </a>\n                    </p>\n                  </div>\n                </form>\n              </MDBTabsPane>\n            </MDBTabsContent>\n          </section>\n        )}\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardSubTitle,\n  MDBCardText,\n  MDBCol,\n  MDBContainer,\n  MDBRow,\n  MDBIcon,\n  MDBCardFooter,\n} from \"mdb-react-ui-kit\";\nimport { Link } from \"react-router-dom\";\n\nfunction ZollTransaction(props) {\n  return (\n    <div>\n      <MDBCard>\n        <MDBCardBody>\n          <MDBContainer>\n            <MDBCardTitle>{props.title}</MDBCardTitle>\n\n            <MDBCardSubTitle>Hinzugefügt am: {props.added}</MDBCardSubTitle>\n            <br />\n          </MDBContainer>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol sm=\"2\">\n                <MDBIcon fas icon=\"file-contract\" size=\"4x\" className=\"mt-3\" />\n              </MDBCol>\n              <MDBCol sm=\"5\">\n                <MDBCardText className=\"mb-3\">\n                  <b>Versender</b>\n                  <br />\n                  {props.exportAddress}\n                  <br />\n                  {props.exportStreet}\n                  <br />\n                  {props.exportCity}, {props.exportCountry}\n                </MDBCardText>\n              </MDBCol>\n              <MDBCol sm=\"5\">\n                <MDBCardText className=\"mb-2\">\n                  <b>Anmelder/Importeur</b>\n                  <br />\n                  {props.importName}\n                  <br />\n                  {props.importStreet}\n                  <br />\n                  {props.importCity}, {props.importCountry}\n                </MDBCardText>\n              </MDBCol>\n            </MDBRow>\n            <br />\n            <MDBRow>\n              <MDBCol md=\"8\" lg=\"8\"></MDBCol>\n              <MDBCol md=\"4\" lg=\"4\">\n                <Link\n                  style={{ display: \"block\" }}\n                  to={\"/zoll/declarations/\" + props.id.toString()}\n                  key={props.id}\n                  params={{ title: \"Hello\" }}\n                >\n                  <MDBBtn className=\"float-end mb-2\">Anmeldung anzeigen</MDBBtn>\n                </Link>\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n          <MDBCardFooter>\n            Zuletzt aktualisiert: {props.lastChange}\n          </MDBCardFooter>\n        </MDBCardBody>\n      </MDBCard>\n    </div>\n  );\n}\n\nexport default ZollTransaction;\n","import React, { useState, useEffect } from \"react\";\nimport { MDBContainer, MDBSpinner } from \"mdb-react-ui-kit\";\nimport \"../css/LoadingSpinner.css\";\n\nimport ZollTransaction from \"../../components/ZollTransactions/ZollTransaction\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\n\nimport useAuth from \"../../hooks/useAuth\";\n\nfunction ZollTransactions() {\n  const [transactionsData, setTransactionsData] = useState([]);\n  const [reload, setreload] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { auth } = useAuth();\n\n  const axiosInstance = useAxiosPrivate();\n\n  // DB Call\n  useEffect(async () => {\n    await axiosInstance\n      .get(\"declaration_auth/?customs_office=\" + auth.eori_nr)\n      .then((res) => {\n        setTransactionsData(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    setIsLoading(false);\n  }, [reload]);\n\n  // Sortieralgorithmen\n  function sortDescriptionAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.description > b.description ? -1 : 1));\n\n    setTransactionsData(myData);\n  }\n\n  function sortDescriptionDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.description > b.description ? 1 : -1));\n\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.date_added > b.date_added ? 1 : -1));\n\n    setTransactionsData(myData);\n  }\n\n  function sortDateAddedDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.date_added > b.date_added ? -1 : 1));\n\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedAsc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.date_processed > b.date_processed ? 1 : -1));\n\n    setTransactionsData(myData);\n  }\n\n  function sortDateUpdatedDesc() {\n    const myData = []\n      .concat(transactionsData)\n      .sort((a, b) => (a.date_processed > b.date_processed ? -1 : 1));\n\n    setTransactionsData(myData);\n  }\n\n  function sortTransactions(event) {\n    if (event.target.value === \"DescriptionAsc\") {\n      sortDescriptionAsc();\n      return;\n    }\n    if (event.target.value === \"DescriptionDesc\") {\n      sortDescriptionDesc();\n      return;\n    }\n    if (event.target.value === \"UpdatedAsc\") {\n      sortDateUpdatedAsc();\n      return;\n    }\n    if (event.target.value === \"UpdatedDesc\") {\n      sortDateUpdatedDesc();\n      return;\n    }\n    if (event.target.value === \"AddedAsc\") {\n      sortDateAddedAsc();\n      return;\n    }\n    if (event.target.value === \"AddedDesc\") {\n      sortDateAddedDesc();\n      return;\n    }\n  }\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"loadingSpinner\">\n          <MDBSpinner>\n            <span className=\"visually-hidden\">Lädt..</span>\n          </MDBSpinner>\n        </div>\n      ) : (\n        <div>\n          <MDBContainer>\n            <h3>Zollanmeldungen</h3>\n\n            <nav className=\"my-3 navbar navbar-expand-lg navbar-light bg-light\">\n              <MDBContainer>\n                <Form.Select\n                  style={{\n                    minWidth: 250,\n                    maxWidth: 250,\n                  }}\n                  onChange={(event) => sortTransactions(event)}\n                >\n                  <option value={\"UpdatedDesc\"}>Zuletzt geändert 🠗</option>\n                  <option value={\"UpdatedAsc\"}>\n                    Zuletzt geändert aufsteigend 🠕\n                  </option>\n                  <option value={\"DescriptionDesc\"}>\n                    Beschreibung absteigend 🠗\n                  </option>\n                  <option value={\"DescriptionAsc\"}>\n                    Beschreibung aufsteigend 🠕\n                  </option>\n                  <option value={\"AddedDesc\"}>\n                    Hinzugefügt am absteigend 🠗\n                  </option>\n                  <option value={\"AddedAsc\"}>\n                    Hinzugefügt am aufsteigend 🠕\n                  </option>\n                </Form.Select>{\" \"}\n                <div className=\"me-3\">\n                  <b>{transactionsData.length} Anmeldungen</b>\n                </div>\n              </MDBContainer>\n            </nav>\n            {transactionsData.map((transactionData) => (\n              <React.Fragment>\n                <ZollTransaction\n                  key={transactionData.id}\n                  id={transactionData.id}\n                  title={transactionData?.transaction.description}\n                  added={transactionData?.transaction.date_added}\n                  exportAddress={transactionData?.exporteur.name}\n                  exportStreet={transactionData?.exporteur.street}\n                  exportCity={transactionData?.exporteur.city}\n                  exportCountry={transactionData?.exporteur.country_code}\n                  importName={transactionData?.importeur.name}\n                  importStreet={transactionData?.importeur.street}\n                  importCity={transactionData?.importeur.city}\n                  importCountry={transactionData?.importeur.country_code}\n                  declarationData={transactionData}\n                  stakeholderCount={transactionData?.stakeholderCount}\n                  lastChange={transactionData?.transaction.date_processed}\n                />\n                <br />\n              </React.Fragment>\n            ))}\n          </MDBContainer>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default ZollTransactions;\n","import React, { useState, useEffect} from \"react\";\nimport {\n  MDBBtn,\n  MDBModal,\n  MDBModalDialog,\n  MDBModalContent,\n  MDBModalHeader,\n  MDBModalTitle,\n  MDBModalBody,\n} from \"mdb-react-ui-kit\";\n\nimport OtherDocumentsForm from \"../Documents/OtherDocumentsForm\";\n\nfunction ZollDocumentsModal(props) {\n  // Modal-State wird in Documents gehalten und über props manipuliert.\n\n  //Debug Element\n/*   useEffect(() => {\n    console.log(props.transactionID_zoll)\n  }, []) */\n  return (\n    <>\n      <MDBModal\n        show={props.basicModal}\n        setShow={props.setBasicModal}\n        tabIndex=\"-1\"\n      >\n        <MDBModalDialog size=\"lg\">\n          <MDBModalContent>\n            <MDBModalHeader>\n              <MDBModalTitle>Dokument hinzufügen</MDBModalTitle>\n              <MDBBtn\n                className=\"btn-close\"\n                color=\"none\"\n                onClick={props.toggleShow}\n              ></MDBBtn>\n            </MDBModalHeader>\n            <MDBModalBody>\n              <OtherDocumentsForm\n                isZoll={true}\n                setSnackbarSuccess={props.setSnackbarSuccess}\n                setSnackbarMessage={props.setSnackbarMessage}\n                handleOpenSnackbar={props.handleOpenSnackbar}\n                handleCloseSnackbar={props.handleCloseSnackbar}\n                toggleAddDocumentModal={props.toggleShow}\n                transactionId={props.transactionId}\n                newDocument={props.reload}\n                setNewDocument={props.setReload}\n                transactionID_zoll={props.transactionID_zoll}\n\n              />\n            </MDBModalBody>\n          </MDBModalContent>\n        </MDBModalDialog>\n      </MDBModal>\n    </>\n  );\n}\n\nexport default ZollDocumentsModal;\n","import React, { useState } from \"react\";\nimport {\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardFooter,\n  MDBCardText,\n  MDBCol,\n  MDBContainer,\n  MDBRow,\n  MDBModal,\n  MDBModalDialog,\n  MDBModalContent,\n  MDBModalHeader,\n  MDBModalTitle,\n  MDBModalBody,\n  MDBModalFooter,\n  MDBIcon,\n} from \"mdb-react-ui-kit\";\nimport { getZollanmeldung } from \"../../Web3Client.js\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate.js\";\n\nimport MuiAlert from \"@mui/material/Alert\";\n// Snackbar Alert\n\nfunction ZollDocumentTransaction(props) {\n  const axiosInstance = useAxiosPrivate();\n\n  const [verified, setVerified] = useState(\n    props.declarationData.status_verificiation\n  );\n\n  const [confirmation, setConfirmation] = useState(\n    props.declarationData.status_confirmation\n  );\n\n  async function abgleichBlockchain(_blockchain_zid) {\n    var crypto = require(\"crypto\");\n    console.log(\"Zollanmeldung ID:\" + _blockchain_zid);\n\n    await getZollanmeldung(_blockchain_zid) //blockchain Transaktion\n      .then((tx) => {\n        console.log(\n          \"Zollwert: \" +\n            tx[0].zollwert +\n            \", \" +\n            (props.invoiceData.transport_costs + props.invoiceData.total_value)\n        );\n        //Abgleich Blockchain-Anwender\n        if (\n          tx[0].gesamtbetrag == props.invoiceData.total_value &&\n          tx[0].zollwert ==\n            props.invoiceData.transport_costs + props.invoiceData.total_value &&\n          tx[0].lieferkosten == props.declarationData.invoice.transport_costs &&\n          tx[0].incoterms == props.declarationData.lieferbedingung &&\n          tx[0].exporteur == props.declarationData.exporteur.publickey &&\n          tx[0].importeur == props.declarationData.importeur.publickey &&\n          tx[0].zoll == props.declarationData.customs_office.publickey &&\n          tx[0].anmelder == props.declarationData.importeur.publickey &&\n          tx[1].gesamtbetrag == props.invoiceData.total_value &&\n          tx[1].waehrung == props.declarationData.invoice.currency &&\n          tx[1].exporteur == props.declarationData.exporteur.publickey &&\n          tx[1].importeur == props.declarationData.importeur.publickey &&\n          tx[1].datum == props.declarationData.invoice.issue_date &&\n          tx[1].rechnungsposten ==\n            crypto\n              .createHash(\"sha512\")\n              .update(props.invoiceData.invoiceItem)\n              .digest(\"hex\") &&\n          tx[1].lieferkosten == props.declarationData.invoice.transport_costs\n        ) {\n          console.log(\"Verifikation: Daten sind korrekt\");\n          // props.setIsVerified(true);\n          axiosInstance.patch(\n            \"declaration_auth/\" + props.declarationData.id + \"/\",\n            { status_verificiation: \"korrekt\" }\n          );\n          props.handleCloseBackdrop();\n          props.setSnackbarSuccess(true);\n          props.setSnackbarMessage(\"Korrektheit der Daten wurde verifiziert.\");\n          props.handleOpenSnackbar();\n          setVerified(\"korrekt\");\n\n          props.setReload(!props.reload);\n          return true;\n        } else {\n          console.log(\"Verifikation: Fehler liegt vor\");\n          axiosInstance.patch(\n            \"declaration_auth/\" + props.declarationData.id + \"/\",\n            { status_verificiation: \"inkorrekt\" }\n          );\n          props.handleCloseBackdrop();\n          props.setSnackbarSuccess(false);\n          props.setSnackbarMessage(\n            \"Warnung: Daten stimmen nicht mit Blockchain überein.\"\n          );\n          props.handleOpenSnackbar();\n          setVerified(\"inkorrekt\");\n\n          props.setReload(!props.reload);\n          return false;\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        props.handleCloseBackdrop();\n        props.setSnackbarSuccess(false);\n        props.setSnackbarMessage(\"Fehler bei Verifikation der Daten.\");\n        return false;\n      });\n  }\n\n  async function handleVerification() {\n    //setIsVerified(true)\n    props.handleToggleBackdrop();\n    abgleichBlockchain(props.declarationData.blockchain_zid).then((res) => {\n      console.log(res);\n    });\n  }\n\n  function handleConfirmation() {\n    axiosInstance\n      .patch(\"declaration_auth/\" + props.declarationData.id + \"/\", {\n        status_confirmation: \"bestätigt\",\n      })\n      .then((res) => {\n        console.log(\"Zollanmeldung bestätigt\");\n        toggleShowConfirmModal();\n        props.setReload(!props.reload);\n        // Snackbar\n        props.setSnackbarSuccess(true);\n        props.setSnackbarMessage(\"Zollanmeldung bestätigt.\");\n        props.handleOpenSnackbar();\n        setConfirmation(\"bestätigt\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleReject() {\n    axiosInstance\n      .patch(\"declaration_auth/\" + props.declarationData.id + \"/\", {\n        status_confirmation: \"abgelehnt\",\n      })\n      .then((res) => {\n        console.log(\"Zollanmeldung abgelehnt\");\n        toggleShowRejectModal();\n        props.setReload(!props.reload);\n        // Snackbar\n        props.setSnackbarSuccess(false);\n        props.setSnackbarMessage(\"Zollanmeldung abgelehnt.\");\n        props.handleOpenSnackbar();\n        setConfirmation(\"abgelehnt\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // Reject Modal State\n  const [rejectModal, setRejectModal] = useState(false);\n\n  function toggleShowRejectModal() {\n    setRejectModal(!rejectModal);\n  }\n\n  // Confirm Modal State\n  const [confirmModal, setConfirmModal] = useState(false);\n\n  function toggleShowConfirmModal() {\n    setConfirmModal(!confirmModal);\n  }\n\n  return (\n    <div>\n      <MDBCard>\n        <MDBCardBody>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol>\n                <MDBCardTitle>\n                  {props.declarationData.transaction.description}\n                </MDBCardTitle>\n              </MDBCol>\n            </MDBRow>\n            <br />\n          </MDBContainer>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol>\n                <MDBCardText>\n                  <b>Versender</b>\n                  <br />\n                  {props.declarationData.exporteur.name}\n                  <br />\n                  {props.declarationData.exporteur.street}\n                  <br />\n                  {props.declarationData.exporteur.city_code}{\" \"}\n                  {props.declarationData.exporteur.city},{\" \"}\n                  {props.declarationData.exporteur.country_code}\n                </MDBCardText>\n              </MDBCol>\n              <MDBCol>\n                <MDBCardText>\n                  <b>Empfänger / Anmelder</b>\n                  <br />\n                  {props.declarationData.importeur.name}\n                  <br />\n                  {props.declarationData.importeur.street}\n                  <br />\n                  {props.declarationData.importeur.city_code}{\" \"}\n                  {props.declarationData.importeur.city},{\" \"}\n                  {props.declarationData.importeur.country_code}\n                </MDBCardText>\n              </MDBCol>\n              <MDBCol>\n                <b>Anzahl Dokumente: </b>\n                {/* +2 wegen Zollanmeldungs u. Rechnung */}\n                {props.numberDocuments + 2}\n                <br />\n                <br />\n                <b>Verifikation: </b>\n                {/* {props.declarationData.status_verificiation} */}\n                {verified}\n                <br />\n                <b>Status der Annmeldung: </b>\n                {props.declarationData.status_confirmation}\n              </MDBCol>\n            </MDBRow>\n            <br />\n            <MDBRow>\n              <MDBCol md=\"8\" lg=\"9\">\n                {verified == \"ausstehend\" && confirmation == \"ausstehend\" ? (\n                  <MuiAlert severity=\"info\" sx={{ my: 1 }}>\n                    Neue Anmeldung liegt vor. Verifikation durchführen um\n                    Zollanmeldung zu prüfen und zu bestätigen.\n                  </MuiAlert>\n                ) : null}\n                {verified == \"korrekt\" && confirmation == \"ausstehend\" ? (\n                  <MuiAlert severity=\"success\" sx={{ my: 2 }}>\n                    Korrektheit der Zollanmeldung wurde durch Blockchain\n                    verifiziert. Annahme der Zollanmeldung ist möglich.\n                  </MuiAlert>\n                ) : null}\n                {verified == \"inkorrekt\" && confirmation == \"ausstehend\" ? (\n                  <MuiAlert severity=\"error\" sx={{ my: 2 }}>\n                    Daten stimmen nicht mit Blockchain überein und wurden\n                    möglicherweise manipuliert. Prüfung erforderlich!\n                  </MuiAlert>\n                ) : null}\n                {confirmation == \"bestätigt\" ? (\n                  <MuiAlert severity=\"success\" sx={{ my: 1 }}>\n                    Zollanmeldung angenommen.\n                  </MuiAlert>\n                ) : null}\n                {confirmation == \"abgelehnt\" ? (\n                  <MuiAlert severity=\"error\" sx={{ my: 1 }}>\n                    Zollanmeldung abgelehnt.\n                  </MuiAlert>\n                ) : null}\n              </MDBCol>\n              <MDBCol md=\"4\" lg=\"3\">\n                <div className=\"float-end\">\n                  {/* {props.isVerified ? (\n                    <MDBBtn className=\"my-3\">Daten sind verifiziert</MDBBtn>\n                  ) : ( */}\n                  <MDBBtn onClick={() => handleVerification()} className=\"my-3\">\n                    <MDBIcon\n                      size=\"lg\"\n                      className=\"me-2\"\n                      fas\n                      icon=\"fingerprint\"\n                    />\n                    Daten verifizieren\n                  </MDBBtn>\n                  {/* )} */}\n                </div>\n              </MDBCol>\n            </MDBRow>\n            {confirmation == \"ausstehend\" && (\n              <>\n                {verified !== \"ausstehend\" ? (\n                  <MDBRow>\n                    <MDBBtn\n                      className=\"mx-3 mb-3\"\n                      color=\"success\"\n                      style={{ width: 300 }}\n                      onClick={toggleShowConfirmModal}\n                    >\n                      Anmeldung Bestätigen\n                    </MDBBtn>\n                    <MDBBtn\n                      color=\"danger\"\n                      className=\"mx-3 mb-3\"\n                      style={{ width: 300 }}\n                      onClick={toggleShowRejectModal}\n                    >\n                      Anmeldung Ablehnen\n                    </MDBBtn>\n                  </MDBRow>\n                ) : (\n                  <MDBRow>\n                    <MDBBtn\n                      disabled\n                      className=\"mx-3 mb-3\"\n                      color=\"success\"\n                      style={{ width: 300 }}\n                      onClick={toggleShowConfirmModal}\n                    >\n                      Anmeldung Bestätigen\n                    </MDBBtn>\n                    <MDBBtn\n                      disabled\n                      color=\"danger\"\n                      className=\"mx-3 mb-3\"\n                      style={{ width: 300 }}\n                      onClick={toggleShowRejectModal}\n                    >\n                      Anmeldung Ablehnen\n                    </MDBBtn>\n                  </MDBRow>\n                )}\n              </>\n            )}\n          </MDBContainer>\n          <MDBCardFooter>\n            <MDBRow>\n              <MDBCol md=\"4\">\n                Hinzugefügt: {props.declarationData.transaction.date_added}\n              </MDBCol>\n              <MDBCol md=\"4\">\n                Zuletzt aktualisiert:{\" \"}\n                {props.declarationData.transaction.date_processed}\n              </MDBCol>\n            </MDBRow>\n          </MDBCardFooter>\n        </MDBCardBody>\n      </MDBCard>\n\n      {/* Modal Anmeldung ablehnen */}\n      <MDBModal show={rejectModal} setShow={setRejectModal} tabIndex=\"-1\">\n        <MDBModalDialog>\n          <MDBModalContent>\n            <MDBModalHeader>\n              <MDBModalTitle>Anmeldung ablehnen</MDBModalTitle>\n              <MDBBtn\n                className=\"btn-close\"\n                color=\"none\"\n                onClick={toggleShowRejectModal}\n              ></MDBBtn>\n            </MDBModalHeader>\n            <MDBModalBody>\n              Wollen Sie die Zollanmeldung{\" \"}\n              <i>{props.declarationData.transaction.description}</i> wirklich\n              ablehnen? <br />\n              Diese Auswahl lässt sich nicht rückgängig machen.\n            </MDBModalBody>\n\n            <MDBModalFooter>\n              <MDBBtn color=\"danger\" onClick={handleReject}>\n                Ablehnen\n              </MDBBtn>\n              <MDBBtn outline color=\"danger\" onClick={toggleShowRejectModal}>\n                Abbrechen\n              </MDBBtn>\n            </MDBModalFooter>\n          </MDBModalContent>\n        </MDBModalDialog>\n      </MDBModal>\n\n      {/* Modal Anmeldung annehmen */}\n      <MDBModal show={confirmModal} setShow={setConfirmModal} tabIndex=\"-1\">\n        <MDBModalDialog>\n          <MDBModalContent>\n            <MDBModalHeader>\n              <MDBModalTitle>Anmeldung annehmen</MDBModalTitle>\n              <MDBBtn\n                className=\"btn-close\"\n                color=\"none\"\n                onClick={toggleShowConfirmModal}\n              ></MDBBtn>\n            </MDBModalHeader>\n            <MDBModalBody>\n              Wollen Sie die Zollanmeldung{\" \"}\n              <i>{props.declarationData.transaction.description}</i> wirklich\n              annehmen? <br />\n              Diese Auswahl lässt sich nicht rückgängig machen.\n            </MDBModalBody>\n\n            <MDBModalFooter>\n              <MDBBtn color=\"success\" onClick={handleConfirmation}>\n                Annehmen\n              </MDBBtn>\n              <MDBBtn outline color=\"danger\" onClick={toggleShowConfirmModal}>\n                Abbrechen\n              </MDBBtn>\n            </MDBModalFooter>\n          </MDBModalContent>\n        </MDBModalDialog>\n      </MDBModal>\n    </div>\n  );\n}\n\nexport default ZollDocumentTransaction;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\nimport { Link } from \"react-router-dom\";\nimport \"../css/LoadingSpinner.css\";\nimport {\n  MDBContainer,\n  MDBBtn,\n  MDBRow,\n  MDBCol,\n  MDBSpinner,\n  MDBBadge,\n} from \"mdb-react-ui-kit\";\nimport { MDBBreadcrumb, MDBBreadcrumbItem } from \"mdb-react-ui-kit\";\n\nimport Divider from \"@mui/material/Divider\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { Snackbar } from \"@mui/material\";\nimport MuiAlert from \"@mui/material/Alert\";\n\nimport ZollDocumentsModal from \"../../components/ZollDocuments/ZollDocumentsModal\";\nimport ZollDocumentTransaction from \"../../components/ZollDocuments/ZollDocumentTransaction\";\nimport DocumentCard from \"../../components/Documents/DocumentCard\";\nimport DeclarationCard from \"../../components/Documents/DeclarationCard\";\n\n// Snackbar Alert\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nfunction ZollDocuments(props) {\n  // Allgemeine Auftragsinformationen\n  const [transactionData, setTransactionData] = useState([]);\n\n  // Informationen der hochgeladenen Dokumente\n  const [documentsData, setDocumentsData] = useState([]);\n  const [declarationData, setDeclarationData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [totalValue, setTotalValue] = useState(true);\n  const [invoiceData, setInvoiceData] = useState();\n  const [isVerified, setIsVerified] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const [reload, setReload] = useState(false);\n\n  const axiosInstance = useAxiosPrivate();\n\n  // Speichern der Transaktions-ID aus URL\n  const { declarationID } = useParams();\n\n  useEffect(async () => {\n    await axiosInstance\n      .get(`declaration_auth/` + declarationID)\n      .then((res) => {\n        setDeclarationData(res.data);\n        setDocumentsData(res.data.document);\n        setTransactionData(res.data.transaction);\n        axiosInstance\n          .get(\"invoice/\" + res.data.invoice.id + \"/\")\n          .then((res) => {\n            setTotalValue(res.data.total_value);\n\n            setInvoiceData(res.data);\n          });\n      })\n      .catch((err) => {\n        console.log(\"Keine Zollanmeldung liegt vor\" + err);\n      });\n\n    setIsLoading(false);\n  }, [reload]);\n\n  // State für \"Dokument hinzufügen\" Modal\n  const [addDocumentModal, setAddDocumentModal] = useState(false);\n  // Funktion für Manipulation von Modal (als props weitergereicht)\n  function toggleAddDocumentModal() {\n    setAddDocumentModal(!addDocumentModal);\n  }\n\n  // Anzahl Rechnungs+Zolldokumente call(a) und sonstige Dokumente call(b)\n  function numberInvoiceDocuments(alternative) {\n    let invoiceAndCustoms = 0;\n    let other = 0;\n    for (let i = 0; i < documentsData.length; i++) {\n      if (documentsData[i].type == \"Rechnung\") {\n        invoiceAndCustoms += 1;\n      } else {\n        other += 1;\n      }\n    }\n    if (alternative == \"a\") {\n      return invoiceAndCustoms;\n    }\n    if (alternative == \"b\") {\n      return other;\n    }\n    return;\n  }\n\n  // -- Loading Backdrop --\n  const [openBackdrop, setOpenBackdrop] = React.useState(false);\n  const handleCloseBackdrop = () => {\n    setOpenBackdrop(false);\n  };\n  const handleToggleBackdrop = () => {\n    setOpenBackdrop(!openBackdrop);\n  };\n\n  // -- Snackbar-Alert Rückmeldung --\n  // State: Geöffnet (true) / Geschlossen (false)\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  // State: Succcess (true) / Error (false)\n  const [snackbarSuccess, setSnackbarSuccess] = useState(true);\n  // State: Snackbar Nachricht\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n\n  // Öffnen der Snackbar\n  const handleOpenSnackbar = () => {\n    setOpenSnackbar(true);\n  };\n\n  // Schließen der Snackbar\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"loadingSpinner\">\n          <MDBSpinner>\n            <span className=\"visually-hidden\">Lädt..</span>\n          </MDBSpinner>\n        </div>\n      ) : (\n        <MDBContainer>\n          <h3>Zollanmeldung Dokumente</h3>\n          <ZollDocumentsModal\n            basicModal={addDocumentModal}\n            setBasicModal={setAddDocumentModal}\n            toggleShow={toggleAddDocumentModal}\n            transactionData={transactionData}\n            setSnackbarSuccess={setSnackbarSuccess}\n            setSnackbarMessage={setSnackbarMessage}\n            handleOpenSnackbar={handleOpenSnackbar}\n            handleCloseSnackbar={handleCloseSnackbar}\n            transactionID_zoll={declarationData.transaction.id}\n            reload={reload}\n            setReload={setReload}\n          />\n          <MDBBreadcrumb>\n            <MDBBreadcrumbItem>\n              <Link to=\"/zoll/declarations\">Aufträge</Link>\n            </MDBBreadcrumbItem>\n            <MDBBreadcrumbItem active>\n              Zollanmeldung-ID {declarationData.id}\n            </MDBBreadcrumbItem>\n          </MDBBreadcrumb>\n          <ZollDocumentTransaction\n            declarationData={declarationData}\n            numberDocuments={documentsData?.length}\n            gesamtbetrag={totalValue}\n            invoiceData={invoiceData}\n            setIsVerified={setIsVerified}\n            isVerified={isVerified}\n            setOpen={setOpen}\n            handleToggleBackdrop={handleToggleBackdrop}\n            handleCloseBackdrop={handleCloseBackdrop}\n            handleOpenSnackbar={handleOpenSnackbar}\n            handleCloseSnackbar={handleCloseSnackbar}\n            setSnackbarSuccess={setSnackbarSuccess}\n            setSnackbarMessage={setSnackbarMessage}\n            reload={reload}\n            setReload={setReload}\n          />\n\n          {/* Navleiste mit Anzahl der Dokumente */}\n          <nav className=\"my-3 navbar navbar-expand-lg navbar-light bg-light\">\n            <MDBContainer>\n              <div>\n                <MDBBadge pill className=\"ms-3\">\n                  {1}\n                </MDBBadge>{\" \"}\n                <b>Zollanmeldung</b>\n                <MDBBadge pill className=\"ms-3\">\n                  {1}\n                </MDBBadge>{\" \"}\n                <b>Rechnungsdokument</b>\n                <MDBBadge pill className=\"ms-3\">\n                  {numberInvoiceDocuments(\"b\")}\n                </MDBBadge>{\" \"}\n                <b>Sonstige Dokumente</b>\n              </div>\n              <MDBBtn\n                className=\"float-end\"\n                color=\"success\"\n                onClick={toggleAddDocumentModal}\n              >\n                Zollbescheid hochladen\n              </MDBBtn>\n            </MDBContainer>\n          </nav>\n          {/* Auflistung der Rechnungsdokumente */}\n          <Divider textAlign=\"left\" className=\"my-4\">\n            <h5>Zollanmeldung</h5>\n          </Divider>\n          <MDBRow>\n            <DeclarationCard\n              anmeldeArt={declarationData.anmeldeArt}\n              gesamtbetrag={totalValue}\n              waehrung={declarationData.invoice.currency}\n              bearbeitendeDienststelle={declarationData.customs_office.name}\n              lieferkosten={declarationData.invoice.transport_costs}\n              documentId={documentsData.documentId}\n              anmelderName={declarationData.importeur.name}\n              issue_date={declarationData.date_added}\n            />\n          </MDBRow>\n          <Divider textAlign=\"left\" className=\"my-4\">\n            <h5>Rechnungsdokument</h5>\n          </Divider>\n          <MDBRow>\n            <MDBCol className=\"mb-4 d-flex justify-content-center\">\n              <DocumentCard\n                key={declarationData.invoice.id}\n                id={declarationData.invoice.id}\n                author_company={declarationData.exporteur.name}\n                author=\"Karl Company\"\n                type=\"Rechnung\"\n                description={declarationData.invoice.description}\n                documentDate={declarationData.invoice.issue_date}\n                uploadDate={declarationData.invoice.upload_date}\n                file={declarationData.invoice.file}\n                isZoll={true}\n              />\n            </MDBCol>\n          </MDBRow>\n\n          {/* Auflistung der sonstigen Dokumente */}\n          {numberInvoiceDocuments(\"b\") !== 0 && (\n            <>\n              <Divider textAlign=\"left\" className=\"mt-5 mb-4\">\n                <h5>Sonstige Dokumente</h5>\n              </Divider>\n              <MDBRow>\n                {documentsData.map(\n                  (documentData) =>\n                    documentData.type !== \"Rechnung\" && (\n                      <React.Fragment>\n                        <MDBCol className=\"mb-4 d-flex justify-content-center\">\n                          <DocumentCard\n                            key={documentData.id}\n                            id={documentData.id}\n                            author={documentData.author}\n                            type={documentData.type}\n                            description={documentData.description}\n                            documentDate={documentData.issue_date}\n                            uploadDate={documentData.upload_date}\n                            file={documentData.file}\n                            confirmed={documentData.confirmed}\n                            isZoll={true}\n                            blockchain_did={documentData.blockchain_id}\n                          />\n                        </MDBCol>\n                      </React.Fragment>\n                    )\n                )}\n              </MDBRow>\n            </>\n          )}\n\n          {/* Loading Backddrop */}\n          <Backdrop\n            sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n            open={openBackdrop}\n            onClick={handleCloseBackdrop}\n          >\n            <CircularProgress color=\"inherit\" />\n          </Backdrop>\n          {/* Snackbar */}\n          <Snackbar\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            open={openSnackbar}\n            autoHideDuration={6000}\n            onClose={handleCloseSnackbar}\n            className=\"mt-5\"\n          >\n            {snackbarSuccess == true ? (\n              <Alert\n                onClose={handleCloseSnackbar}\n                severity=\"success\"\n                sx={{ width: \"100%\" }}\n              >\n                {snackbarMessage}\n              </Alert>\n            ) : (\n              <Alert\n                onClose={handleCloseSnackbar}\n                severity=\"error\"\n                sx={{ width: \"100%\" }}\n              >\n                {snackbarMessage}\n              </Alert>\n            )}\n          </Snackbar>\n        </MDBContainer>\n      )}\n    </>\n  );\n}\n\nexport default ZollDocuments;\n","import React from \"react\";\nimport {\n  MDBContainer,\n  MDBNavbar,\n  MDBIcon,\n  MDBDropdown,\n  MDBDropdownToggle,\n  MDBDropdownMenu,\n  MDBDropdownItem,\n  MDBDropdownLink,\n  MDBDropdownDivider,\n  MDBNavbarBrand,\n} from \"mdb-react-ui-kit\";\n\nimport Lucid from \"../../LUCID.jpg\";\n\nimport useAuth from \"../../hooks/useAuth\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function TopNavigation() {\n  // Logout Funktion\n  const { auth } = useAuth();\n  const username = auth.username;\n  const company = auth.company;\n  const navigate = useNavigate();\n\n  const logout = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"company\");\n    localStorage.removeItem(\"refresh_token\");\n    localStorage.removeItem(\"access_token\");\n    navigate(\"/login\", { replace: true });\n    window.location.reload(false);\n  };\n\n  return (\n    <>\n      <MDBNavbar\n        style={{ marginLeft: 0 }}\n        fixed=\"top\"\n        expand=\"lg\"\n        light\n        bgColor=\"dark\"\n      >\n        <MDBContainer fluid>\n          <div className=\"d-flex flex-row\">\n            <MDBNavbarBrand\n              light\n              href=\"/zoll/declarations\"\n              style={{ color: \"#ffffff\" }}\n            >\n              <img\n                className=\"me-3\"\n                src={Lucid}\n                height=\"40\"\n                alt=\"\"\n                loading=\"lazy\"\n              />\n              LUCID - {company}\n            </MDBNavbarBrand>\n          </div>\n          <div className=\"d-flex flex-row\">\n            <MDBDropdown>\n              <MDBDropdownToggle outline size=\"sm\">\n                <MDBIcon size=\"2x\" className=\"ms-1\" far icon=\"user-circle\" />\n              </MDBDropdownToggle>\n              <MDBDropdownMenu className=\"text-muted\">\n                <p className=\"mt-3 mx-3\">\n                  <b>Organisation: </b>\n                  {company}\n                </p>\n                <p className=\"mt-3 ms-3\">\n                  <b>Mitarbeiter: </b>\n                  {username}\n                </p>\n                <MDBDropdownItem>\n                  <MDBDropdownItem>\n                    <MDBDropdownDivider />\n                  </MDBDropdownItem>\n                  <MDBDropdownLink onClick={logout}>\n                    <MDBIcon\n                      fas\n                      icon=\"sign-out-alt\"\n                      size=\"lg\"\n                      className=\"me-2\"\n                    />\n                    Logout\n                  </MDBDropdownLink>\n                </MDBDropdownItem>\n              </MDBDropdownMenu>\n            </MDBDropdown>\n          </div>\n        </MDBContainer>\n      </MDBNavbar>\n      <br />\n    </>\n  );\n}\n","import { Outlet } from \"react-router-dom\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Footer from \"./UI/Footer\";\nimport SideNavigation from \"./UI/SideNavigation\";\nimport ZollSideNavigation from \"./ZollUI/ZollSideNavigation\";\nimport ZollTopNavigation from \"./ZollUI/ZollTopNavigation.jsx\";\n\nconst Layout = () => {\n  const [expandedNav, setExpandedNav] = useState(false);\n\n  return (\n    <React.Fragment>\n      {/* Anpassung der TopNavigation Position an Sidebar State */}\n      <div\n        class=\"TopNavigation\"\n        style={{\n          marginBottom: 54,\n          // marginLeft: expandedNav ? 240 : 64,\n          padding: \"0px 0px 0px 0px\",\n          // transition: \"0.2s\",\n        }}\n      >\n        <ZollTopNavigation />\n      </div>\n\n      {/* Anpassung de Content Position an Sidebar State \n              (muss alle Routes einschließen) */}\n      <div\n        class=\"Content\"\n        style={{\n          // marginLeft: expandedNav ? 240 : 64,\n          padding: \"0px 20px 70px 20px\",\n          transition: \"0.2s\",\n        }}\n      >\n        <main className=\"App\">\n          <Outlet />\n        </main>\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default Layout;\n","import axiosInstance from \"../axiosApi\"\nimport useAuth from \"./useAuth\"\nimport useAxiosPrivate from \"./useAxiosPrivate\";\n\n\nconst useDataUpdate = () => {\n    const { setAuth } = useAuth();\n    const axiosInstance = useAxiosPrivate();\n\n    //Globale Nutzerdaten abfragen, die dann anwendungsweit zur Verfügung gestellt werden\n\n    const dataUpdate = async() => {\n        //console.log(`Neue Nutzerdaten werden angefordert`);\n        const response = await axiosInstance.get('user')\n        //console.log(response.data[0])\n        //Unterscheiden wird Rollenbezogen für Zoll und Unternehmensmitarbeiter \n        if (response.data[0].role==\"company_employee\") {\n            setAuth(prev => {\n                return {\n                    ...prev,\n                    username: response.data[0].username,\n                    company: response.data[0].employee?.company.name,\n                    pubkey: response.data[0].employee?.company.publickey,\n                    eori_nr: response.data[0].employee?.company.eori_nr,\n                    role: response.data[0].role,\n                    userData: response.data[0]\n                }\n            });\n            return; \n        }\n        setAuth(prev => {\n            //console.log(`New Username received : ${response.data[0].username}`);\n            return {\n                ...prev,\n                username: response.data[0].username,\n                company: response.data[0].employee?.custom_office.name,\n                pubkey: response.data[0].employee?.custom_office.publickey,\n                eori_nr: response.data[0].employee?.custom_office.id,\n                role: response.data[0].role\n            }\n        });\n        return; \n\n\n\n    }\n  return dataUpdate\n\n}\n\nexport default useDataUpdate","import  { useLocation, Navigate,Outlet} from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nimport { MDBSpinner } from \"mdb-react-ui-kit\";\n\nimport useAuth from \"../hooks/useAuth\";\nimport useDataUpdate from \"../hooks/useDataUpdate\";\n\n\n//Management der gesperrten Nutzerbereiche und zur Verfügung stellen einer Komponente die die Berechtigungen prüfen \n\nconst RequireAuth =  ({allowedRoles}) => {\n    const {auth} = useAuth();\n    const location = useLocation();\n    const dataUpdate = useDataUpdate(); \n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n\n        let isMounted = true; \n        //Nutzerdaten müssen beim erstmaligen Login abgefragt werden bzw. aktualisiert werden, damit Rollen zur Verfügung stehen\n\n        const getfirstDataSet = async () => {\n            try {\n                await dataUpdate();\n            }        \n            catch (err) {\n                console.error(err);\n            }\n            finally{\n                isMounted && setIsLoading(false);\n            }\n        }\n\n        !auth?.role?  getfirstDataSet() : setIsLoading(false);\n\n        return () => isMounted = false;\n    }, [])\n\n\n/*     console.log(auth?.user);\n    console.log(`Die aktuelle Rolle ist ${auth?.role}`)\n    console.log(allowedRoles) */\n    \n    return (\n        \n        isLoading\n            ?   <MDBSpinner grow>\n                    <span className='visually-hidden'>Loading...</span>\n                </MDBSpinner>\n                : \n        //wenn AccessToken vorhanden Seite anzeigen, ansonsten login\n                allowedRoles?.includes( auth?.role)\n                        ? <Outlet/> \n                        : auth?.username \n                            ? <Navigate to=\"/unauthorized\" state={{from:location}} replace />\n                            : <Navigate to = \"/login\" state={{from:location}} replace />\n        \n    )\n\n}\n\nexport default RequireAuth;","import { Outlet } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport useRefreshToken from \"../hooks/useRefreshToken\";\nimport useAuth from \"../hooks/useAuth\";\nimport { MDBSpinner } from \"mdb-react-ui-kit\";\nimport useDataUpdate from \"../hooks/useDataUpdate\";\nimport \"../pages/css/LoadingSpinner.css\";\n\n//Nutzer bleibt eingeloggt, sofern er sich nicht auslogt oder den Refresh Token im lokalen Speicher löscht \n\nconst PersistLogin = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const refresh = useRefreshToken();\n  const { auth, setAuth } = useAuth();\n  const dataUpdate = useDataUpdate();\n\n  useEffect(() => {\n    let isMounted = true;\n\n    //Sofern Nutzer zurückgekehrt werden Daten neu abgerufen \n\n    const verifyRefreshToken = async () => {\n      //console.log(\"Verify Refresh token called\");\n      try {\n        await dataUpdate();\n        await refresh();\n      } catch (err) {\n        //console.error(err);\n      } finally {\n        isMounted && setIsLoading(false);\n      }\n    };\n\n    !auth?.accessToken ? verifyRefreshToken() : setIsLoading(false);\n\n    return () => (isMounted = false);\n  }, []);\n\n  //Nur für Debugging und die Anzeige der aktuellen Status:\n\n  /*     useEffect(() => {\n        console.log(`isLoading: ${isLoading}`)\n        console.log(`aT: ${JSON.stringify(auth?.accessToken)}`)\n    }, [isLoading]) */\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"loadingSpinner\">\n          <MDBSpinner>\n            <span className=\"visually-hidden\">Lädt..</span>\n          </MDBSpinner>\n        </div>\n      ) : (\n        <Outlet />\n      )}\n    </>\n  );\n};\n\nexport default PersistLogin;\n","import React, { useEffect, useState } from \"react\";\nimport \"../../pages/css/LoadingSpinner.css\";\nimport {\n  MDBCard,\n  MDBCardBody,\n  MDBCardTitle,\n  MDBCardText,\n  MDBCardHeader,\n  MDBTabs,\n  MDBTabsItem,\n  MDBTabsLink,\n  MDBBtn,\n  MDBRow,\n  MDBCol,\n  MDBTabsPane,\n  MDBTabsContent,\n  MDBIcon,\n  MDBSpinner,\n  MDBBreadcrumb,\n  MDBBreadcrumbItem,\n} from \"mdb-react-ui-kit\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport axiosInstance from \"../../axiosApi\";\nimport useAuth from \"../../hooks/useAuth\";\n\nexport default function PreviewDelacration() {\n  const { transactionId, declarationID } = useParams();\n  const [customDeclaration, setCustomDeclaration] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [rechnungsposten, setRechnungsposten] = React.useState([]);\n  const [fieldValue, setFieldValue] = React.useState({});\n  const [invoiceData, setInvoiceData] = useState();\n\n  const [auftragMetadaten, setAuftragMetadaten] = React.useState({});\n\n  const [isZoll, setIsZoll] = useState(false);\n  const { auth } = useAuth();\n\n  //Prüfen ob Betrachter Zoll ist\n  useEffect(() => {\n    if (auth.role == \"custom_officer\") {\n      setIsZoll(true);\n    }\n  }, [auth.role]);\n\n  // DB Call\n  useEffect(async () => {\n    var link;\n    if (transactionId == undefined) {\n      link = \"/declaration_auth/\" + declarationID + \"/\";\n    } else {\n      link = \"/declaration_auth/?transaction=\" + transactionId;\n    }\n    await axiosInstance.get(link).then((res) => {\n      if (res.data[0] != undefined) {\n        res.data = res.data[0];\n      }\n      setCustomDeclaration(res.data);\n      setRechnungsposten(res.data.invoice.invoiceItem);\n      axiosInstance\n        .get(\"/invoice/\" + res.data.invoice.id + \"/\")\n        .then((resI) => {\n          setInvoiceData(resI.data);\n        });\n    });\n    setIsLoading(false);\n  }, []);\n\n  //Werte im Timing richtig einspeichern und ggf. neu rendern wenn sie nicht vorliegen\n\n  useEffect(async () => {\n    await setFieldValue({\n      auftragsnummer: customDeclaration?.transaction?.id,\n      bearbeitendeDienststelle: customDeclaration?.customs_office?.name,\n      anmeldungArt: customDeclaration?.anmeldeArt,\n      geschaeftArt: customDeclaration?.geschaeftArt,\n      zahlungArt: customDeclaration?.zahlungsart,\n      // Adressdaten Versender\n      eoriVersender: customDeclaration?.exporteur?.eori_nr,\n      // nameVersender: \"\",\n      // vornameVersender: \"\",\n      firmaVersender: customDeclaration?.exporteur?.name,\n      strasseVersender: customDeclaration?.exporteur?.street,\n      plzVersender: customDeclaration?.exporteur?.city_code,\n      ortVersender: customDeclaration?.exporteur?.city,\n      staatVersender: customDeclaration?.exporteur?.country_code,\n      telefonVersender: customDeclaration?.exporteur?.phone,\n      emailVersender: customDeclaration?.exporteur?.email,\n      // Adressdaten Anmelder\n      eoriAnmelder: customDeclaration?.importeur?.eori_nr,\n      // nameAnmelder: \"\",\n      // vornameAnmelder: \"\",\n      firmaAnmelder: customDeclaration?.importeur?.name,\n      strasseAnmelder: customDeclaration?.importeur?.street,\n      plzAnmelder: customDeclaration?.importeur?.city_code,\n      ortAnmelder: customDeclaration?.importeur?.city,\n      staatAnmelder: customDeclaration?.importeur?.country_code,\n      telefonAnmelder: customDeclaration?.importeur?.phone,\n      emailAnmelder: customDeclaration?.importeur?.email,\n      // Lieferdaten\n      ausfuhrland: customDeclaration?.ausfuhrland,\n      bestimmungsland: customDeclaration?.bestimmungsland,\n      //bestimmungsbundesland: \"Niedersachsen\",\n      befoerderungsmittel: customDeclaration?.befoerderungsmittel,\n      lieferbedingung: customDeclaration?.lieferbedingung,\n      lieferort: customDeclaration?.lieferort,\n      warenort: customDeclaration?.warenort,\n\n      //Rechnungsdaten\n      datumRechnung: customDeclaration?.invoice?.issue_date,\n      gesamtbetrag: invoiceData?.total_value,\n      waehrung: customDeclaration?.invoice?.currency,\n      lieferkosten: customDeclaration?.invoice?.transport_costs,\n    });\n    setAuftragMetadaten({\n      documentId: customDeclaration?.id,\n      transactionId: customDeclaration?.transaction?.id,\n      documentType: \"Zollanmeldung\",\n      dateAdded: customDeclaration?.date_added,\n      author: customDeclaration?.importeur?.name,\n      freigabeStatus: true,\n      description: \"\",\n      statusAnmeldung: customDeclaration?.status,\n      statusAuftrag: customDeclaration?.transaction?.status,\n    });\n  }, [customDeclaration, invoiceData]);\n\n  // -- Tab-Steuerung --\n  // State über aktiven Tab\n  const [fillActive, setFillActive] = useState(\"tab1\");\n\n  // Funktion zum wechseln des Tabs\n  function handleFillClick(value) {\n    if (value === fillActive) {\n      return;\n    }\n\n    setFillActive(value);\n  }\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"loadingSpinner\">\n          <MDBSpinner>\n            <span className=\"visually-hidden\">Lädt..</span>\n          </MDBSpinner>\n        </div>\n      ) : (\n        <>\n          <h3>Dokument: Zollanmeldung</h3>\n\n          {isZoll ? (\n            <MDBBreadcrumb>\n              <MDBBreadcrumbItem>\n                <Link to=\"/zoll/declarations/\">Zollanmeldungen</Link>\n              </MDBBreadcrumbItem>\n              <MDBBreadcrumbItem>\n                <Link to={\"/zoll/declarations/\" + declarationID}>\n                  Zollanmeldungs-ID {declarationID}\n                </Link>\n              </MDBBreadcrumbItem>\n              <MDBBreadcrumbItem active>\n                Dokumenten-ID {auftragMetadaten.documentId}\n              </MDBBreadcrumbItem>\n            </MDBBreadcrumb>\n          ) : (\n            <MDBBreadcrumb>\n              <MDBBreadcrumbItem>\n                <Link to=\"/transactions\">Aufträge</Link>\n              </MDBBreadcrumbItem>\n              <MDBBreadcrumbItem>\n                <Link to={\"/transactions/\" + auftragMetadaten.transactionId}>\n                  Auftrags-ID {auftragMetadaten.transactionId}\n                </Link>\n              </MDBBreadcrumbItem>\n              <MDBBreadcrumbItem active>\n                Dokumenten-ID {auftragMetadaten.documentId}\n              </MDBBreadcrumbItem>\n            </MDBBreadcrumb>\n          )}\n\n          <MDBCard style={{ minHeight: 600 }}>\n            <MDBCardHeader>\n              <MDBTabs pills className=\"card-header-tabs\">\n                <MDBTabsItem>\n                  <MDBTabsLink\n                    onClick={() => handleFillClick(\"tab1\")}\n                    active={fillActive === \"tab1\"}\n                  >\n                    Allgemeine Angaben\n                  </MDBTabsLink>\n                </MDBTabsItem>\n                <MDBTabsItem>\n                  <MDBTabsLink\n                    onClick={() => handleFillClick(\"tab2\")}\n                    active={fillActive === \"tab2\"}\n                  >\n                    Adressdaten\n                  </MDBTabsLink>\n                </MDBTabsItem>\n                <MDBTabsItem>\n                  <MDBTabsLink\n                    onClick={() => handleFillClick(\"tab3\")}\n                    active={fillActive === \"tab3\"}\n                  >\n                    Lieferdaten\n                  </MDBTabsLink>\n                </MDBTabsItem>\n                <MDBTabsItem>\n                  <MDBTabsLink\n                    onClick={() => handleFillClick(\"tab4\")}\n                    active={fillActive === \"tab4\"}\n                  >\n                    Rechnungsdaten\n                  </MDBTabsLink>\n                </MDBTabsItem>\n              </MDBTabs>\n            </MDBCardHeader>\n            <MDBCardBody>\n              <MDBRow>\n                <MDBCol className=\"col-md-8\">\n                  {fillActive === \"tab1\" ? (\n                    <MDBCardTitle className=\"mb-4\">\n                      Allgemeine Angaben\n                    </MDBCardTitle>\n                  ) : fillActive === \"tab2\" ? (\n                    <MDBCardTitle className=\"mb-4\">Adressdaten</MDBCardTitle>\n                  ) : fillActive === \"tab3\" ? (\n                    <MDBCardTitle className=\"mb-4\">Lieferdaten</MDBCardTitle>\n                  ) : (\n                    <MDBCardTitle className=\"mb-4\">Rechnungsdaten</MDBCardTitle>\n                  )}\n                  <MDBCardText>\n                    <MDBTabsContent>\n                      <MDBTabsPane show={fillActive === \"tab1\"}>\n                        <p>\n                          <b>Auftragsnummer: </b>\n                          {fieldValue.auftragsnummer}\n                        </p>\n                        <p>\n                          <b>Bearbeitende Dienststelle: </b>\n                          {fieldValue.bearbeitendeDienststelle}\n                        </p>\n                        <p>\n                          <b>Art der Anmeldung: </b>\n                          {fieldValue.anmeldungArt}\n                        </p>\n                        <p>\n                          <b>Art des Geschäfts: </b>\n                          {fieldValue.geschaeftArt}\n                        </p>\n                        <p>\n                          <b>Zahlungsart: </b>\n                          {fieldValue.zahlungArt}\n                        </p>\n                      </MDBTabsPane>\n                      <MDBTabsPane show={fillActive === \"tab2\"}>\n                        {/* Versender Daten */}\n                        <h6>\n                          <u>Versender</u>\n                        </h6>\n                        <p>\n                          <b>EORI-Nummer: </b>\n                          {fieldValue.eoriVersender}\n                        </p>\n                        <p>\n                          <b>Firma: </b>\n                          {fieldValue.firmaVersender}\n                        </p>\n                        <p>\n                          <b>Straße u.Hausnummer: </b>\n                          {fieldValue.strasseVersender}\n                        </p>\n                        <p>\n                          <b>Postleitzahl: </b>\n                          {fieldValue.plzVersender}\n                        </p>\n                        <p>\n                          <b>Postleitzahl: </b>\n                          {fieldValue.ortVersender}\n                        </p>\n                        <p>\n                          <b>Staatsangehörigkeit: </b>\n                          {fieldValue.staatVersender}\n                        </p>\n                        <p>\n                          <b>Telefonnummer: </b>\n                          {fieldValue.telefonVersender}\n                        </p>\n                        <p>\n                          <b>Telefonnummer: </b>\n                          {fieldValue.emailVersender}\n                        </p>\n                        <br />\n                        {/* Anmelder Daten */}\n                        <h6>\n                          <u>Empfänger / Anmelder</u>\n                        </h6>\n                        <p>\n                          <b>EORI-Nummer: </b>\n                          {fieldValue.eoriAnmelder}\n                        </p>\n                        <p>\n                          <b>Firma: </b>\n                          {fieldValue.firmaAnmelder}\n                        </p>\n                        <p>\n                          <b>Straße u.Hausnummer: </b>\n                          {fieldValue.strasseAnmelder}\n                        </p>\n                        <p>\n                          <b>Postleitzahl: </b>\n                          {fieldValue.plzAnmelder}\n                        </p>\n                        <p>\n                          <b>Postleitzahl: </b>\n                          {fieldValue.ortAnmelder}\n                        </p>\n                        <p>\n                          <b>Staatsangehörigkeit: </b>\n                          {fieldValue.staatAnmelder}\n                        </p>\n                        <p>\n                          <b>Telefonnummer: </b>\n                          {fieldValue.telefonAnmelder}\n                        </p>\n                        <p>\n                          <b>Telefonnummer: </b>\n                          {fieldValue.emailAnmelder}\n                        </p>\n                      </MDBTabsPane>\n                      <MDBTabsPane show={fillActive === \"tab3\"}>\n                        <p>\n                          <b>Ausfuhrland: </b>\n                          {fieldValue.ausfuhrland}\n                        </p>\n                        <p>\n                          <b>Bestimmungsland: </b>\n                          {fieldValue.bestimmungsland}\n                        </p>\n                        <p>\n                          <b>Bestimmungsbundesland: </b>\n                          {fieldValue.bestimmungsbundesland}\n                        </p>\n                        <p>\n                          <b>\n                            Art des grenzüberschreitenden Beförderungsmittels:{\" \"}\n                          </b>\n                          {fieldValue.befoerderungsmittel}\n                        </p>\n                        <p>\n                          <b>Lieferbedingungen: </b>\n                          {fieldValue.lieferbedingung}\n                        </p>\n                        <p>\n                          <b>Lieferort: </b>\n                          {fieldValue.lieferort}\n                        </p>\n                        <p>\n                          <b>Lieferort: </b>\n                          {fieldValue.warenort}\n                        </p>\n                      </MDBTabsPane>\n                      <MDBTabsPane show={fillActive === \"tab4\"}>\n                        <p>\n                          <b>Rechnungsdatum: </b>\n                          {fieldValue.datumRechnung}\n                        </p>\n                        <p>\n                          <b>Gesamtbetrag: </b>\n                          {fieldValue.gesamtbetrag} {fieldValue.waehrung}\n                        </p>\n                        <p>\n                          <b>Lieferkosten: </b>\n                          {fieldValue.lieferkosten} {fieldValue.waehrung}\n                        </p>\n                        <hr className=\"my-4\" />\n                        {rechnungsposten.map((posten) => (\n                          <>\n                            <hr className=\"my-4\" />\n                            <h6>\n                              <u>Rechnungsposten 1</u>\n                            </h6>\n                            <p>\n                              <b>Produkt: </b>\n                              {posten.product}\n                            </p>\n                            <p>\n                              <b>Anzahl: </b>\n                              {posten.amount}\n                            </p>\n                            <p>\n                              <b>Einheit: </b>\n                              {posten.unit}\n                            </p>\n                            <p>\n                              <b>Preis pro Einheit: </b>\n                              {posten.price.toFixed(2)} {fieldValue.waehrung}\n                            </p>\n                          </>\n                        ))}\n                        <hr className=\"my-4\" />\n\n                        {/* Berechnung Zollabgabe */}\n                        <p className=\"ms-4\">\n                          <b>Zollwert</b> (Geamtbetrag + Lieferkosten) ={\" \"}\n                          {(\n                            Number(fieldValue.gesamtbetrag) +\n                            Number(fieldValue.lieferkosten)\n                          ).toFixed(2)}{\" \"}\n                          {fieldValue.waehrung}\n                        </p>\n                        <p className=\"ms-4\">\n                          <b>Zollbetrag</b> (Pauschaler Zollsatz 4 %) ={\" \"}\n                          {(\n                            (Number(fieldValue.gesamtbetrag) +\n                              Number(fieldValue.lieferkosten)) *\n                            Number(0.04)\n                          ).toFixed(2)}{\" \"}\n                          {fieldValue.waehrung}\n                        </p>\n                        <p className=\"ms-4\">\n                          <b>Einfuhrumsatzsteuer(EUSt)-Wert</b> (Zollwert +\n                          Zollbetrag) ={\" \"}\n                          {(\n                            (Number(fieldValue.gesamtbetrag) +\n                              Number(fieldValue.lieferkosten)) *\n                            Number(1.04)\n                          ).toFixed(2)}{\" \"}\n                          {fieldValue.waehrung}\n                        </p>\n                        <p className=\"ms-4\">\n                          <b>EUSt-Betrag</b> (EUSt-Wert * EUSt-Satz 19 %) ={\" \"}\n                          {(\n                            (Number(fieldValue.gesamtbetrag) +\n                              Number(fieldValue.lieferkosten)) *\n                            Number(1.04) *\n                            Number(0.19)\n                          ).toFixed(2)}{\" \"}\n                          {fieldValue.waehrung}\n                        </p>\n                        <p className=\"ms-4\">\n                          <b>Prognostizierte Gesamtabgabe</b> (Zollbetrag +\n                          EUSt-Betrag) ={\" \"}\n                          <u>\n                            {(\n                              (Number(fieldValue.gesamtbetrag) +\n                                Number(fieldValue.lieferkosten)) *\n                                Number(0.04) +\n                              (Number(fieldValue.gesamtbetrag) +\n                                Number(fieldValue.lieferkosten)) *\n                                Number(1.04) *\n                                Number(0.19)\n                            ).toFixed(2)}{\" \"}\n                            {fieldValue.waehrung}\n                          </u>\n                        </p>\n                      </MDBTabsPane>\n                    </MDBTabsContent>\n                  </MDBCardText>\n                </MDBCol>\n                <MDBCol\n                  className=\"col-md-4\"\n                  style={{ border: \"3px solid #cccccc\", height: 500 }}\n                >\n                  <p className=\"mt-4 ms-3\">\n                    <b>Auftrags-ID: </b>\n                    {auftragMetadaten.transactionId}\n                  </p>\n                  <p className=\"ms-3\">\n                    <b>Dokumenten-ID: </b>\n                    {auftragMetadaten.documentId}\n                  </p>\n                  <p className=\"ms-3\">\n                    <b>Dokumententyp: </b>\n                    {auftragMetadaten.documentType}\n                  </p>\n                  <p className=\"ms-3\">\n                    <b>Hochgeladen am: </b>\n                    {auftragMetadaten.dateAdded}\n                  </p>\n                  <p className=\"ms-3\">\n                    <b>Hochgeladen von: </b>\n                    {auftragMetadaten.author}\n                  </p>\n\n                  <p className=\"ms-3\">\n                    <b>Freigabe: </b>\n                    {auftragMetadaten.freigabeStatus\n                      ? \"Für Zoll freigegeben\"\n                      : \"Nicht für Zoll freigegeben\"}\n                  </p>\n                  <p className=\"ms-3 mb-5\">\n                    <b>Status der Anmeldung: </b>\n                    {auftragMetadaten.statusAnmeldung == \"\" ? (\n                      <i>Es liegt keine Beschreibung vor.</i>\n                    ) : (\n                      auftragMetadaten.statusAnmeldung\n                    )}\n                  </p>\n                </MDBCol>\n              </MDBRow>\n            </MDBCardBody>\n          </MDBCard>\n        </>\n      )}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport Dashboard from \"./pages/Dashboard\";\nimport Transactions from \"./pages/Transactions\";\nimport Partners from \"./pages/Partners\";\nimport Settings from \"./pages/Settings\";\nimport NotFound from \"./pages/NotFound\";\nimport DocumentsNew from \"./pages/DocumentsNew\";\nimport Layout from \"./components/Layout\";\nimport Declaration from \"./pages/Declaration\";\nimport Search from \"./pages/Search\";\n\nimport DocumentDetail from \"./pages/DocumentDetail\";\nimport PreviewOther from \"./components/Documents/PreviewOther\";\nimport Unauthorized from \"./pages/Unauthorized\";\nimport Login from \"./pages/Login\";\n\n// Zoll Pages\nimport ZollTransactions from \"./pages/Zoll/ZollTransactions\";\nimport ZollDocuments from \"./pages/Zoll/ZollDocuments\";\nimport ZollLayout from \"./components/ZollLayout\";\n\nimport RequireAuth from \"./components/requireAuth\";\nimport PersistLogin from \"./components/PersistLogin\";\n\nimport { Routes, Route } from \"react-router-dom\";\nimport PreviewDelacration from \"./components/Documents/PreviewDeclaration\";\n\nimport useAuth from \"./hooks/useAuth\";\n\nfunction App() {\n  const { auth } = useAuth();\n  return (\n    <Routes>\n      {/*public routes*/}\n\n      {/* Layout Komponente ist gerade ein Outlet (alles andere erbt davon für alles), ich würde vorschlagen zwei Anzulegen einmal für zoll und normale Mitarbeiter. Das können wir auch nach Farben utnescheiden*/}\n      <Route path=\"login\" element={<Login />} />\n\n      {/*allgemeine Klasse für persistent Login*/}\n      <Route element={<PersistLogin />}>\n        <Route\n          path=\"/\"\n          element={\n            auth.role == \"company_employee\" ? <Layout /> : <ZollLayout />\n          }\n        >\n          <Route\n            element={\n              <RequireAuth\n                allowedRoles={[\"company_employee\", \"custom_officer\"]}\n              />\n            }\n          >\n            <Route\n              path=\"/\"\n              element={\n                auth.role == \"company_employee\" ? (\n                  <Dashboard />\n                ) : (\n                  <ZollTransactions />\n                )\n              }\n            />\n          </Route>\n\n          {/* private for company */}\n          <Route element={<RequireAuth allowedRoles={[\"company_employee\"]} />}>\n            <Route path=\"search\" element={<Search />} />\n\n            <Route path=\"dashboard\" element={<Dashboard />} />\n            <Route path=\"transactions\" key={3} element={<Transactions />} />\n            <Route path=\"partners\" element={<Partners />} />\n            <Route path=\"/partners/:partnershipID\" element={<Transactions />} />\n            <Route path=\"settings\" element={<Settings />} />\n            <Route\n              path=\"/transactions/:transactionId\"\n              element={<DocumentsNew />}\n            ></Route>\n            <Route\n              path=\"/transactions/:transactionId/declarationView\"\n              element={<PreviewDelacration />}\n            />\n            <Route\n              path=\"/transactions/:transactionId/declaration\"\n              element={<Declaration />}\n            />\n            <Route\n              path=\"/transactions/:transactionId/document/:documentID\"\n              element={<DocumentDetail />}\n            />\n          </Route>\n          {/*private routes für den zoll*/}\n          <Route element={<RequireAuth allowedRoles={[\"custom_officer\"]} />}>\n            <Route\n              path=\"zoll/declarations/:declarationID\"\n              element={<ZollDocuments />}\n            />\n            <Route path=\"zoll/declarations\" element={<ZollTransactions />} />\n            <Route\n              path=\"zoll/declarations/:declarationID/declarationView\"\n              element={<PreviewDelacration />}\n            />\n            <Route\n              path=\"zoll/declarations/:declarationID/document/:documentID\"\n              element={<DocumentDetail />}\n            />\n          </Route>\n        </Route>\n      </Route>\n\n      <Route path=\"*\" element={<NotFound />} />\n      <Route path=\"/unauthorized\" element={<Unauthorized />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport \"mdb-react-ui-kit/dist/css/mdb.min.css\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AuthProvider } from \"./context/AuthProvider\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <AuthProvider>\n        <Routes>\n          <Route path=\"/*\" element={<App />} />\n        </Routes>\n      </AuthProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}